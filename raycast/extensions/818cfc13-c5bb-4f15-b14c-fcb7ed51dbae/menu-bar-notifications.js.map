{
  "version": 3,
  "sources": ["../node_modules/zod/lib/helpers/util.js", "../node_modules/zod/lib/ZodError.js", "../node_modules/zod/lib/locales/en.js", "../node_modules/zod/lib/errors.js", "../node_modules/zod/lib/helpers/parseUtil.js", "../node_modules/zod/lib/helpers/typeAliases.js", "../node_modules/zod/lib/helpers/errorUtil.js", "../node_modules/zod/lib/types.js", "../node_modules/zod/lib/external.js", "../node_modules/zod/lib/index.js", "../node_modules/@atproto/syntax/src/handle.ts", "../node_modules/@atproto/syntax/src/did.ts", "../node_modules/@atproto/syntax/src/nsid.ts", "../node_modules/@atproto/syntax/src/aturi_validation.ts", "../node_modules/@atproto/syntax/src/aturi.ts", "../node_modules/@atproto/syntax/src/tid.ts", "../node_modules/@atproto/syntax/src/recordkey.ts", "../node_modules/@atproto/syntax/src/datetime.ts", "../node_modules/@atproto/syntax/src/index.ts", "../node_modules/@atproto/lexicon/src/util.ts", "../node_modules/@atproto/lexicon/src/types.ts", "../node_modules/multiformats/cjs/vendor/varint.js", "../node_modules/multiformats/cjs/src/varint.js", "../node_modules/multiformats/cjs/src/bytes.js", "../node_modules/multiformats/cjs/src/hashes/digest.js", "../node_modules/multiformats/cjs/vendor/base-x.js", "../node_modules/multiformats/cjs/src/bases/base.js", "../node_modules/multiformats/cjs/src/bases/base58.js", "../node_modules/multiformats/cjs/src/bases/base32.js", "../node_modules/multiformats/cjs/src/cid.js", "../node_modules/@atproto/common-web/src/check.ts", "../node_modules/@atproto/common-web/src/util.ts", "../node_modules/@atproto/common-web/src/arrays.ts", "../node_modules/@atproto/common-web/src/async.ts", "../node_modules/@atproto/common-web/src/tid.ts", "../node_modules/uint8arrays/cjs/src/compare.js", "../node_modules/uint8arrays/cjs/src/concat.js", "../node_modules/uint8arrays/cjs/src/equals.js", "../node_modules/multiformats/cjs/src/bases/identity.js", "../node_modules/multiformats/cjs/src/bases/base2.js", "../node_modules/multiformats/cjs/src/bases/base8.js", "../node_modules/multiformats/cjs/src/bases/base10.js", "../node_modules/multiformats/cjs/src/bases/base16.js", "../node_modules/multiformats/cjs/src/bases/base36.js", "../node_modules/multiformats/cjs/src/bases/base64.js", "../node_modules/multiformats/cjs/src/bases/base256emoji.js", "../node_modules/multiformats/cjs/src/hashes/hasher.js", "../node_modules/multiformats/cjs/src/hashes/sha2.js", "../node_modules/multiformats/cjs/src/hashes/identity.js", "../node_modules/multiformats/cjs/src/codecs/raw.js", "../node_modules/multiformats/cjs/src/codecs/json.js", "../node_modules/multiformats/cjs/src/index.js", "../node_modules/multiformats/cjs/src/basics.js", "../node_modules/uint8arrays/cjs/src/util/bases.js", "../node_modules/uint8arrays/cjs/src/from-string.js", "../node_modules/uint8arrays/cjs/src/to-string.js", "../node_modules/uint8arrays/cjs/src/xor.js", "../node_modules/uint8arrays/cjs/src/index.js", "../node_modules/@atproto/common-web/src/ipld.ts", "../node_modules/@atproto/common-web/src/retry.ts", "../node_modules/@atproto/common-web/src/types.ts", "../node_modules/@atproto/common-web/src/times.ts", "../node_modules/graphemer/lib/boundaries.js", "../node_modules/graphemer/lib/GraphemerHelper.js", "../node_modules/graphemer/lib/GraphemerIterator.js", "../node_modules/graphemer/lib/Graphemer.js", "../node_modules/graphemer/lib/index.js", "../node_modules/@atproto/common-web/src/strings.ts", "../node_modules/@atproto/common-web/src/did-doc.ts", "../node_modules/@atproto/common-web/src/index.ts", "../node_modules/@atproto/lexicon/src/blob-refs.ts", "../node_modules/@atproto/lexicon/src/validators/blob.ts", "../node_modules/iso-datestring-validator/dist/index.js", "../node_modules/@atproto/lexicon/src/validators/formats.ts", "../node_modules/@atproto/lexicon/src/validators/primitives.ts", "../node_modules/@atproto/lexicon/src/validators/complex.ts", "../node_modules/@atproto/lexicon/src/validators/xrpc.ts", "../node_modules/@atproto/lexicon/src/validation.ts", "../node_modules/@atproto/lexicon/src/lexicons.ts", "../node_modules/@atproto/lexicon/src/serialize.ts", "../node_modules/@atproto/lexicon/src/index.ts", "../node_modules/@atproto/api/src/client/util.ts", "../node_modules/@atproto/api/src/client/lexicons.ts", "../node_modules/@atproto/api/dist/types.js", "../node_modules/@atproto/api/src/const.ts", "../node_modules/@atproto/api/src/util.ts", "../node_modules/@atproto/xrpc/src/types.ts", "../node_modules/@atproto/xrpc/src/util.ts", "../node_modules/@atproto/xrpc/src/fetch-handler.ts", "../node_modules/@atproto/xrpc/src/xrpc-client.ts", "../node_modules/@atproto/xrpc/src/client.ts", "../node_modules/@atproto/xrpc/src/index.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/applyWrites.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/createRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/deleteRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/getRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/putRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/confirmEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createAccount.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createAppPassword.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/deleteAccount.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/getAccountInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/getServiceAuth.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/listAppPasswords.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/refreshSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/resetPassword.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/updateEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getBlob.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getBlocks.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getHead.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getLatestCommit.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getRepo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getRepoStatus.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/listBlobs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getActorLikes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getAuthorFeed.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeed.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedSkeleton.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getListFeed.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getPostThread.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/searchPosts.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getRelationships.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/searchActorsSkeleton.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/searchPostsSkeleton.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/searchStarterPacksSkeleton.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/communication/createTemplate.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/communication/updateTemplate.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/moderation/emitEvent.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/moderation/getRecord.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/moderation/getRepo.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/set/deleteSet.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/set/deleteValues.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/set/getValues.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/team/addMember.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/team/deleteMember.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/team/updateMember.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/deleteAccount.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/disableAccountInvites.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/disableInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/enableAccountInvites.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getAccountInfo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getAccountInfos.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getSubjectStatus.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/searchAccounts.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/sendEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/updateAccountEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/updateAccountHandle.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/updateAccountPassword.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/updateSubjectStatus.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/identity/getRecommendedDidCredentials.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/identity/requestPlcOperationSignature.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/identity/resolveHandle.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/identity/signPlcOperation.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/identity/submitPlcOperation.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/identity/updateHandle.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/label/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/label/queryLabels.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/label/subscribeLabels.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/lexicon/schema.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/moderation/createReport.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/moderation/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/describeRepo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/importRepo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/listMissingBlobs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/listRecords.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/strongRef.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/uploadBlob.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/activateAccount.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/checkAccountStatus.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createInviteCode.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/deactivateAccount.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/deleteSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/describeServer.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/getSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestAccountDelete.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestEmailConfirmation.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestEmailUpdate.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestPasswordReset.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/reserveSigningKey.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/revokeAppPassword.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getCheckout.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/listRepos.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/listReposByCollection.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/notifyOfUpdate.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/requestCrawl.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/subscribeRepos.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/temp/addReservedHandle.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/temp/checkSignupQueue.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/temp/fetchLabels.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/temp/requestPhoneVerification.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getPreferences.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getProfile.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getProfiles.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getSuggestions.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/profile.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/putPreferences.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/searchActors.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/searchActorsTypeahead.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/external.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/images.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/record.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/recordWithMedia.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/video.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/describeFeedGenerator.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/generator.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getActorFeeds.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedGenerator.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedGenerators.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getLikes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getPosts.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getQuotes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getRepostedBy.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getSuggestedFeeds.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getTimeline.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/like.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/post.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/postgate.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/repost.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/sendInteractions.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/threadgate.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/block.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/follow.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getActorStarterPacks.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getBlocks.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getFollowers.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getFollows.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getKnownFollowers.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getList.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getListBlocks.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getListMutes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getLists.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getMutes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getStarterPack.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getStarterPacks.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getSuggestedFollowsByActor.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/list.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/listblock.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/listitem.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/muteActor.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/muteActorList.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/muteThread.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/searchStarterPacks.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/starterpack.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/unmuteActor.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/unmuteActorList.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/unmuteThread.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/labeler/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/labeler/getServices.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/labeler/service.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/getUnreadCount.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/listNotifications.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/putPreferences.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/registerPush.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/updateSeen.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/richtext/facet.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getConfig.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getPopularFeedGenerators.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getSuggestionsSkeleton.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getTaggedSuggestions.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getTrendingTopics.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/video/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/video/getJobStatus.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/video/getUploadLimits.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/video/uploadVideo.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/actor/declaration.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/actor/defs.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/actor/deleteAccount.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/actor/exportAccountData.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/acceptConvo.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/defs.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/deleteMessageForSelf.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/getConvo.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/getConvoAvailability.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/getConvoForMembers.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/getLog.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/getMessages.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/leaveConvo.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/listConvos.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/muteConvo.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/sendMessage.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/sendMessageBatch.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/unmuteConvo.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/updateAllRead.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/convo/updateRead.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/moderation/getActorMetadata.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/moderation/getMessageContext.ts", "../node_modules/@atproto/api/src/client/types/chat/bsky/moderation/updateActorAccess.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/communication/defs.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/communication/deleteTemplate.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/communication/listTemplates.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/moderation/defs.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/moderation/getEvent.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/moderation/getRecords.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/moderation/getReporterStats.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/moderation/getRepos.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/moderation/queryEvents.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/moderation/queryStatuses.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/moderation/searchRepos.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/server/getConfig.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/set/addValues.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/set/defs.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/set/querySets.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/set/upsertSet.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/setting/defs.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/setting/listOptions.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/setting/removeOptions.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/setting/upsertOption.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/signature/defs.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/signature/findCorrelation.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/signature/findRelatedAccounts.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/signature/searchAccounts.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/team/defs.ts", "../node_modules/@atproto/api/src/client/types/tools/ozone/team/listMembers.ts", "../node_modules/@atproto/api/src/client/index.ts", "../node_modules/tlds/index.json", "../node_modules/@atproto/api/src/rich-text/util.ts", "../node_modules/@atproto/api/src/rich-text/detection.ts", "../node_modules/@atproto/api/src/rich-text/unicode.ts", "../node_modules/@atproto/api/src/rich-text/sanitization.ts", "../node_modules/@atproto/api/src/rich-text/rich-text.ts", "../node_modules/@atproto/api/src/moderation/const/labels.ts", "../node_modules/@atproto/api/src/moderation/types.ts", "../node_modules/@atproto/api/src/moderation/ui.ts", "../node_modules/@atproto/api/src/moderation/decision.ts", "../node_modules/@atproto/api/src/moderation/subjects/account.ts", "../node_modules/@atproto/api/src/moderation/subjects/profile.ts", "../node_modules/@atproto/api/src/moderation/subjects/feed-generator.ts", "../node_modules/@atproto/api/src/moderation/subjects/notification.ts", "../node_modules/@atproto/api/src/moderation/mutewords.ts", "../node_modules/@atproto/api/src/moderation/subjects/post.ts", "../node_modules/@atproto/api/src/moderation/subjects/user-list.ts", "../node_modules/@atproto/api/src/moderation/util.ts", "../node_modules/@atproto/api/src/moderation/index.ts", "../node_modules/@atproto/api/src/mocker.ts", "../node_modules/await-lock/src/AwaitLock.ts", "../node_modules/@atproto/api/src/predicate.ts", "../node_modules/@atproto/api/src/agent.ts", "../node_modules/@atproto/api/src/atp-agent.ts", "../node_modules/@atproto/api/src/bsky-agent.ts", "../node_modules/@atproto/api/src/index.ts", "../node_modules/@atproto/uri/src/index.ts", "../node_modules/@atproto/syntax/src/handle.ts", "../node_modules/@atproto/syntax/src/did.ts", "../node_modules/@atproto/syntax/src/nsid.ts", "../node_modules/@atproto/syntax/src/aturi_validation.ts", "../node_modules/@atproto/syntax/src/aturi.ts", "../node_modules/webidl-conversions/lib/index.js", "../node_modules/whatwg-url/lib/utils.js", "../node_modules/tr46/lib/mappingTable.json", "../node_modules/tr46/index.js", "../node_modules/whatwg-url/lib/url-state-machine.js", "../node_modules/whatwg-url/lib/URL-impl.js", "../node_modules/whatwg-url/lib/URL.js", "../node_modules/whatwg-url/lib/public-api.js", "../node_modules/node-fetch/lib/index.js", "../node_modules/cross-fetch/dist/node-ponyfill.js", "../node_modules/dequal/lite/index.js", "../node_modules/@raycast/utils/dist/useDeepMemo.js", "../node_modules/@raycast/utils/dist/useLatest.js", "../node_modules/@raycast/utils/dist/showFailureToast.js", "../node_modules/@raycast/utils/dist/usePromise.js", "../node_modules/object-hash/index.js", "../node_modules/@raycast/utils/dist/helpers.js", "../node_modules/@raycast/utils/dist/useCachedState.js", "../node_modules/@raycast/utils/dist/useCachedPromise.js", "../node_modules/@raycast/utils/dist/fetch-utils.js", "../node_modules/@raycast/utils/dist/useFetch.js", "../node_modules/signal-exit/src/signals.ts", "../node_modules/signal-exit/src/index.ts", "../node_modules/@raycast/utils/dist/exec-utils.js", "../node_modules/@raycast/utils/dist/useExec.js", "../node_modules/stream-chain/index.js", "../node_modules/stream-json/utils/Utf8Stream.js", "../node_modules/stream-json/Parser.js", "../node_modules/stream-json/utils/emit.js", "../node_modules/stream-json/index.js", "../node_modules/stream-json/filters/FilterBase.js", "../node_modules/stream-json/utils/withParser.js", "../node_modules/stream-json/filters/Pick.js", "../node_modules/stream-json/Assembler.js", "../node_modules/stream-json/streamers/StreamBase.js", "../node_modules/stream-json/streamers/StreamArray.js", "../node_modules/@raycast/utils/dist/useStreamJSON.js", "../node_modules/@raycast/utils/dist/sql-utils.js", "../node_modules/@raycast/utils/dist/useSQL.js", "../node_modules/@raycast/utils/dist/useForm.js", "../node_modules/@raycast/utils/dist/useAI.js", "../node_modules/@raycast/utils/dist/useFrecencySorting.js", "../node_modules/@raycast/utils/dist/useLocalStorage.js", "../node_modules/@raycast/utils/dist/icon/color.js", "../node_modules/@raycast/utils/dist/icon/avatar.js", "../node_modules/@raycast/utils/dist/icon/favicon.js", "../node_modules/@raycast/utils/dist/icon/progress.js", "../node_modules/@raycast/utils/dist/icon/index.js", "../node_modules/@raycast/utils/dist/oauth/providers.js", "../node_modules/@raycast/utils/dist/oauth/OAuthService.js", "../node_modules/@raycast/utils/dist/oauth/withAccessToken.js", "../node_modules/@raycast/utils/dist/oauth/index.js", "../node_modules/@raycast/utils/dist/createDeeplink.js", "../node_modules/@raycast/utils/dist/executeSQL.js", "../node_modules/@raycast/utils/dist/run-applescript.js", "../node_modules/@raycast/utils/dist/index.js", "../src/menu-bar-notifications.tsx", "../src/utils/constants.ts", "../src/utils/common.ts", "../src/config/actionMap.ts", "../src/libs/atp.ts", "../src/utils/localStore.ts", "../src/config/config.ts", "../src/utils/cacheStore.ts", "../node_modules/cross-fetch/dist/node-polyfill.js", "../src/utils/preference.ts", "../src/components/actions/CustomAction.tsx", "../src/utils/parser.ts", "../src/config/notificationReasonMapping.ts", "../src/hooks/useStartATSession.ts"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParsedType = exports.ZodParsedType = exports.objectUtil = exports.util = void 0;\nvar util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util = exports.util || (exports.util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil = exports.objectUtil || (exports.objectUtil = {}));\nexports.ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return exports.ZodParsedType.undefined;\n        case \"string\":\n            return exports.ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\n        case \"boolean\":\n            return exports.ZodParsedType.boolean;\n        case \"function\":\n            return exports.ZodParsedType.function;\n        case \"bigint\":\n            return exports.ZodParsedType.bigint;\n        case \"symbol\":\n            return exports.ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return exports.ZodParsedType.array;\n            }\n            if (data === null) {\n                return exports.ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return exports.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return exports.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return exports.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return exports.ZodParsedType.date;\n            }\n            return exports.ZodParsedType.object;\n        default:\n            return exports.ZodParsedType.unknown;\n    }\n};\nexports.getParsedType = getParsedType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_1 = require(\"./helpers/util\");\nexports.ZodIssueCode = util_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util_1.util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../helpers/util\");\nconst ZodError_1 = require(\"../ZodError\");\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodError_1.ZodIssueCode.invalid_type:\n            if (issue.received === util_1.ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodError_1.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util_1.util.jsonStringifyReplacer)}`;\n            break;\n        case ZodError_1.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_1.util.joinValues(issue.options)}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util_1.util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodError_1.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodError_1.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodError_1.ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util_1.util.assertNever(issue);\n    }\n    return { message };\n};\nexports.default = errorMap;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorMap = exports.setErrorMap = exports.defaultErrorMap = void 0;\nconst en_1 = __importDefault(require(\"./locales/en\"));\nexports.defaultErrorMap = en_1.default;\nlet overrideErrorMap = en_1.default;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexports.setErrorMap = setErrorMap;\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\nexports.getErrorMap = getErrorMap;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\nconst errors_1 = require(\"../errors\");\nconst en_1 = __importDefault(require(\"../locales/en\"));\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexports.makeIssue = makeIssue;\nexports.EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = (0, errors_1.getErrorMap)();\n    const issue = (0, exports.makeIssue)({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            overrideMap,\n            overrideMap === en_1.default ? undefined : en_1.default, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexports.addIssueToContext = addIssueToContext;\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return exports.INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return exports.INVALID;\n            if (value.status === \"aborted\")\n                return exports.INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexports.ParseStatus = ParseStatus;\nexports.INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nexports.DIRTY = DIRTY;\nconst OK = (value) => ({ status: \"valid\", value });\nexports.OK = OK;\nconst isAborted = (x) => x.status === \"aborted\";\nexports.isAborted = isAborted;\nconst isDirty = (x) => x.status === \"dirty\";\nexports.isDirty = isDirty;\nconst isValid = (x) => x.status === \"valid\";\nexports.isValid = isValid;\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\nexports.isAsync = isAsync;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorUtil = void 0;\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil = exports.errorUtil || (exports.errorUtil = {}));\n", "\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boolean = exports.bigint = exports.array = exports.any = exports.coerce = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.custom = exports.ZodReadonly = exports.ZodPipeline = exports.ZodBranded = exports.BRAND = exports.ZodNaN = exports.ZodCatch = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodSymbol = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.datetimeRegex = exports.ZodType = void 0;\nexports.NEVER = exports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.symbol = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.pipeline = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = exports.intersection = exports.instanceof = exports.function = exports.enum = exports.effect = exports.discriminatedUnion = exports.date = void 0;\nconst errors_1 = require(\"./errors\");\nconst errorUtil_1 = require(\"./helpers/errorUtil\");\nconst parseUtil_1 = require(\"./helpers/parseUtil\");\nconst util_1 = require(\"./helpers/util\");\nconst ZodError_1 = require(\"./ZodError\");\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if ((0, parseUtil_1.isValid)(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError_1.ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return (0, util_1.getParsedType)(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: (0, util_1.getParsedType)(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new parseUtil_1.ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: (0, util_1.getParsedType)(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if ((0, parseUtil_1.isAsync)(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await ((0, parseUtil_1.isAsync)(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodError_1.ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nexports.ZodType = ZodType;\nexports.Schema = ZodType;\nexports.ZodSchema = ZodType;\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nexports.datetimeRegex = datetimeRegex;\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"email\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"emoji\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"uuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ulid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"url\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"regex\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"duration\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ip\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"base64\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_1.ZodIssueCode.invalid_string,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil_1.errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * @deprecated Use z.string().min(1) instead.\n     * @see {@link ZodString.min}\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil_1.errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodString = ZodString;\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util_1.util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util_1.util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nexports.ZodNumber = ZodNumber;\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodBigInt = ZodBigInt;\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodBoolean = ZodBoolean;\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_date,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nexports.ZodDate = ZodDate;\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodSymbol = ZodSymbol;\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUndefined = ZodUndefined;\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodNull = ZodNull;\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodAny = ZodAny;\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUnknown = ZodUnknown;\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        (0, parseUtil_1.addIssueToContext)(ctx, {\n            code: ZodError_1.ZodIssueCode.invalid_type,\n            expected: util_1.ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return parseUtil_1.INVALID;\n    }\n}\nexports.ZodNever = ZodNever;\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodVoid = ZodVoid;\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: tooBig ? ZodError_1.ZodIssueCode.too_big : ZodError_1.ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return parseUtil_1.ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodArray = ZodArray;\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util_1.util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return parseUtil_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil_1.errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil_1.errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util_1.util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util_1.util.objectKeys(this.shape));\n    }\n}\nexports.ZodObject = ZodObject;\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError_1.ZodError(result.ctx.common.issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError_1.ZodError(issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nexports.ZodUnion = ZodUnion;\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util_1.util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\nfunction mergeValues(a, b) {\n    const aType = (0, util_1.getParsedType)(a);\n    const bType = (0, util_1.getParsedType)(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === util_1.ZodParsedType.object && bType === util_1.ZodParsedType.object) {\n        const bKeys = util_1.util.objectKeys(b);\n        const sharedKeys = util_1.util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === util_1.ZodParsedType.array && bType === util_1.ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === util_1.ZodParsedType.date &&\n        bType === util_1.ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if ((0, parseUtil_1.isAborted)(parsedLeft) || (0, parseUtil_1.isAborted)(parsedRight)) {\n                return parseUtil_1.INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.invalid_intersection_types,\n                });\n                return parseUtil_1.INVALID;\n            }\n            if ((0, parseUtil_1.isDirty)(parsedLeft) || (0, parseUtil_1.isDirty)(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nexports.ZodIntersection = ZodIntersection;\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return parseUtil_1.INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nexports.ZodTuple = ZodTuple;\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return parseUtil_1.ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexports.ZodRecord = ZodRecord;\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.map) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return parseUtil_1.INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return parseUtil_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nexports.ZodMap = ZodMap;\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.set) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodSet = ZodSet;\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.function) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return (0, parseUtil_1.OK)(async function (...args) {\n                const error = new ZodError_1.ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return (0, parseUtil_1.OK)(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodFunction = ZodFunction;\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nexports.ZodLazy = ZodLazy;\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nexports.ZodLiteral = ZodLiteral;\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nexports.ZodEnum = ZodEnum;\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util_1.util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.string &&\n            ctx.parsedType !== util_1.ZodParsedType.number) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util_1.util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nexports.ZodNativeEnum = ZodNativeEnum;\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.promise &&\n            ctx.common.async === false) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const promisified = ctx.parsedType === util_1.ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return (0, parseUtil_1.OK)(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nexports.ZodPromise = ZodPromise;\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                (0, parseUtil_1.addIssueToContext)(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (result.status === \"dirty\")\n                        return (0, parseUtil_1.DIRTY)(result.value);\n                    if (status.value === \"dirty\")\n                        return (0, parseUtil_1.DIRTY)(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return parseUtil_1.INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (result.status === \"dirty\")\n                    return (0, parseUtil_1.DIRTY)(result.value);\n                if (status.value === \"dirty\")\n                    return (0, parseUtil_1.DIRTY)(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!(0, parseUtil_1.isValid)(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!(0, parseUtil_1.isValid)(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util_1.util.assertNever(effect);\n    }\n}\nexports.ZodEffects = ZodEffects;\nexports.ZodTransformer = ZodEffects;\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.undefined) {\n            return (0, parseUtil_1.OK)(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodOptional = ZodOptional;\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.null) {\n            return (0, parseUtil_1.OK)(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodNullable = ZodNullable;\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === util_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nexports.ZodDefault = ZodDefault;\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if ((0, parseUtil_1.isAsync)(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError_1.ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError_1.ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nexports.ZodCatch = ZodCatch;\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nexports.ZodNaN = ZodNaN;\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexports.BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexports.ZodBranded = ZodBranded;\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return (0, parseUtil_1.DIRTY)(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return parseUtil_1.INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexports.ZodPipeline = ZodPipeline;\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if ((0, parseUtil_1.isValid)(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return (0, parseUtil_1.isAsync)(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodReadonly = ZodReadonly;\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nfunction custom(check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n}\nexports.custom = custom;\nexports.late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind = exports.ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nexports.instanceof = instanceOfType;\nconst stringType = ZodString.create;\nexports.string = stringType;\nconst numberType = ZodNumber.create;\nexports.number = numberType;\nconst nanType = ZodNaN.create;\nexports.nan = nanType;\nconst bigIntType = ZodBigInt.create;\nexports.bigint = bigIntType;\nconst booleanType = ZodBoolean.create;\nexports.boolean = booleanType;\nconst dateType = ZodDate.create;\nexports.date = dateType;\nconst symbolType = ZodSymbol.create;\nexports.symbol = symbolType;\nconst undefinedType = ZodUndefined.create;\nexports.undefined = undefinedType;\nconst nullType = ZodNull.create;\nexports.null = nullType;\nconst anyType = ZodAny.create;\nexports.any = anyType;\nconst unknownType = ZodUnknown.create;\nexports.unknown = unknownType;\nconst neverType = ZodNever.create;\nexports.never = neverType;\nconst voidType = ZodVoid.create;\nexports.void = voidType;\nconst arrayType = ZodArray.create;\nexports.array = arrayType;\nconst objectType = ZodObject.create;\nexports.object = objectType;\nconst strictObjectType = ZodObject.strictCreate;\nexports.strictObject = strictObjectType;\nconst unionType = ZodUnion.create;\nexports.union = unionType;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nexports.discriminatedUnion = discriminatedUnionType;\nconst intersectionType = ZodIntersection.create;\nexports.intersection = intersectionType;\nconst tupleType = ZodTuple.create;\nexports.tuple = tupleType;\nconst recordType = ZodRecord.create;\nexports.record = recordType;\nconst mapType = ZodMap.create;\nexports.map = mapType;\nconst setType = ZodSet.create;\nexports.set = setType;\nconst functionType = ZodFunction.create;\nexports.function = functionType;\nconst lazyType = ZodLazy.create;\nexports.lazy = lazyType;\nconst literalType = ZodLiteral.create;\nexports.literal = literalType;\nconst enumType = ZodEnum.create;\nexports.enum = enumType;\nconst nativeEnumType = ZodNativeEnum.create;\nexports.nativeEnum = nativeEnumType;\nconst promiseType = ZodPromise.create;\nexports.promise = promiseType;\nconst effectsType = ZodEffects.create;\nexports.effect = effectsType;\nexports.transformer = effectsType;\nconst optionalType = ZodOptional.create;\nexports.optional = optionalType;\nconst nullableType = ZodNullable.create;\nexports.nullable = nullableType;\nconst preprocessType = ZodEffects.createWithPreprocess;\nexports.preprocess = preprocessType;\nconst pipelineType = ZodPipeline.create;\nexports.pipeline = pipelineType;\nconst ostring = () => stringType().optional();\nexports.ostring = ostring;\nconst onumber = () => numberType().optional();\nexports.onumber = onumber;\nconst oboolean = () => booleanType().optional();\nexports.oboolean = oboolean;\nexports.coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexports.NEVER = parseUtil_1.INVALID;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./helpers/parseUtil\"), exports);\n__exportStar(require(\"./helpers/typeAliases\"), exports);\n__exportStar(require(\"./helpers/util\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./ZodError\"), exports);\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.z = void 0;\nconst z = __importStar(require(\"./external\"));\nexports.z = z;\n__exportStar(require(\"./external\"), exports);\nexports.default = z;\n", "export const INVALID_HANDLE = 'handle.invalid'\n\n// Currently these are registration-time restrictions, not protocol-level\n// restrictions. We have a couple accounts in the wild that we need to clean up\n// before hard-disallow.\n// See also: https://en.wikipedia.org/wiki/Top-level_domain#Reserved_domains\nexport const DISALLOWED_TLDS = [\n  '.local',\n  '.arpa',\n  '.invalid',\n  '.localhost',\n  '.internal',\n  '.example',\n  '.alt',\n  // policy could concievably change on \".onion\" some day\n  '.onion',\n  // NOTE: .test is allowed in testing and devopment. In practical terms\n  // \"should\" \"never\" actually resolve and get registered in production\n]\n\n// Handle constraints, in English:\n//  - must be a possible domain name\n//    - RFC-1035 is commonly referenced, but has been updated. eg, RFC-3696,\n//      section 2. and RFC-3986, section 3. can now have leading numbers (eg,\n//      4chan.org)\n//    - \"labels\" (sub-names) are made of ASCII letters, digits, hyphens\n//    - can not start or end with a hyphen\n//    - TLD (last component) should not start with a digit\n//    - can't end with a hyphen (can end with digit)\n//    - each segment must be between 1 and 63 characters (not including any periods)\n//    - overall length can't be more than 253 characters\n//    - separated by (ASCII) periods; does not start or end with period\n//    - case insensitive\n//    - domains (handles) are equal if they are the same lower-case\n//    - punycode allowed for internationalization\n//  - no whitespace, null bytes, joining chars, etc\n//  - does not validate whether domain or TLD exists, or is a reserved or\n//    special TLD (eg, .onion or .local)\n//  - does not validate punycode\nexport const ensureValidHandle = (handle: string): void => {\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9.-]*$/.test(handle)) {\n    throw new InvalidHandleError(\n      'Disallowed characters in handle (ASCII letters, digits, dashes, periods only)',\n    )\n  }\n\n  if (handle.length > 253) {\n    throw new InvalidHandleError('Handle is too long (253 chars max)')\n  }\n  const labels = handle.split('.')\n  if (labels.length < 2) {\n    throw new InvalidHandleError('Handle domain needs at least two parts')\n  }\n  for (let i = 0; i < labels.length; i++) {\n    const l = labels[i]\n    if (l.length < 1) {\n      throw new InvalidHandleError('Handle parts can not be empty')\n    }\n    if (l.length > 63) {\n      throw new InvalidHandleError('Handle part too long (max 63 chars)')\n    }\n    if (l.endsWith('-') || l.startsWith('-')) {\n      throw new InvalidHandleError(\n        'Handle parts can not start or end with hyphens',\n      )\n    }\n    if (i + 1 === labels.length && !/^[a-zA-Z]/.test(l)) {\n      throw new InvalidHandleError(\n        'Handle final component (TLD) must start with ASCII letter',\n      )\n    }\n  }\n}\n\n// simple regex translation of above constraints\nexport const ensureValidHandleRegex = (handle: string): void => {\n  if (\n    !/^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$/.test(\n      handle,\n    )\n  ) {\n    throw new InvalidHandleError(\"Handle didn't validate via regex\")\n  }\n  if (handle.length > 253) {\n    throw new InvalidHandleError('Handle is too long (253 chars max)')\n  }\n}\n\nexport const normalizeHandle = (handle: string): string => {\n  return handle.toLowerCase()\n}\n\nexport const normalizeAndEnsureValidHandle = (handle: string): string => {\n  const normalized = normalizeHandle(handle)\n  ensureValidHandle(normalized)\n  return normalized\n}\n\nexport const isValidHandle = (handle: string): boolean => {\n  try {\n    ensureValidHandle(handle)\n  } catch (err) {\n    if (err instanceof InvalidHandleError) {\n      return false\n    }\n    throw err\n  }\n\n  return true\n}\n\nexport const isValidTld = (handle: string): boolean => {\n  return !DISALLOWED_TLDS.some((domain) => handle.endsWith(domain))\n}\n\nexport class InvalidHandleError extends Error {}\nexport class ReservedHandleError extends Error {}\nexport class UnsupportedDomainError extends Error {}\nexport class DisallowedDomainError extends Error {}\n", "// Human-readable constraints:\n//   - valid W3C DID (https://www.w3.org/TR/did-core/#did-syntax)\n//      - entire URI is ASCII: [a-zA-Z0-9._:%-]\n//      - always starts \"did:\" (lower-case)\n//      - method name is one or more lower-case letters, followed by \":\"\n//      - remaining identifier can have any of the above chars, but can not end in \":\"\n//      - it seems that a bunch of \":\" can be included, and don't need spaces between\n//      - \"%\" is used only for \"percent encoding\" and must be followed by two hex characters (and thus can't end in \"%\")\n//      - query (\"?\") and fragment (\"#\") stuff is defined for \"DID URIs\", but not as part of identifier itself\n//      - \"The current specification does not take a position on the maximum length of a DID\"\n//   - in current atproto, only allowing did:plc and did:web. But not *forcing* this at lexicon layer\n//   - hard length limit of 8KBytes\n//   - not going to validate \"percent encoding\" here\nexport const ensureValidDid = (did: string): void => {\n  if (!did.startsWith('did:')) {\n    throw new InvalidDidError('DID requires \"did:\" prefix')\n  }\n\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9._:%-]*$/.test(did)) {\n    throw new InvalidDidError(\n      'Disallowed characters in DID (ASCII letters, digits, and a couple other characters only)',\n    )\n  }\n\n  const { length, 1: method } = did.split(':')\n  if (length < 3) {\n    throw new InvalidDidError(\n      'DID requires prefix, method, and method-specific content',\n    )\n  }\n\n  if (!/^[a-z]+$/.test(method)) {\n    throw new InvalidDidError('DID method must be lower-case letters')\n  }\n\n  if (did.endsWith(':') || did.endsWith('%')) {\n    throw new InvalidDidError('DID can not end with \":\" or \"%\"')\n  }\n\n  if (did.length > 2 * 1024) {\n    throw new InvalidDidError('DID is too long (2048 chars max)')\n  }\n}\n\nexport const ensureValidDidRegex = (did: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints\n  if (!/^did:[a-z]+:[a-zA-Z0-9._:%-]*[a-zA-Z0-9._-]$/.test(did)) {\n    throw new InvalidDidError(\"DID didn't validate via regex\")\n  }\n\n  if (did.length > 2 * 1024) {\n    throw new InvalidDidError('DID is too long (2048 chars max)')\n  }\n}\n\nexport class InvalidDidError extends Error {}\n", "/*\nGrammar:\n\nalpha     = \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\" / \"g\" / \"h\" / \"i\" / \"j\" / \"k\" / \"l\" / \"m\" / \"n\" / \"o\" / \"p\" / \"q\" / \"r\" / \"s\" / \"t\" / \"u\" / \"v\" / \"w\" / \"x\" / \"y\" / \"z\" / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\" / \"G\" / \"H\" / \"I\" / \"J\" / \"K\" / \"L\" / \"M\" / \"N\" / \"O\" / \"P\" / \"Q\" / \"R\" / \"S\" / \"T\" / \"U\" / \"V\" / \"W\" / \"X\" / \"Y\" / \"Z\"\nnumber    = \"1\" / \"2\" / \"3\" / \"4\" / \"5\" / \"6\" / \"7\" / \"8\" / \"9\" / \"0\"\ndelim     = \".\"\nsegment   = alpha *( alpha / number / \"-\" )\nauthority = segment *( delim segment )\nname      = alpha *( alpha )\nnsid      = authority delim name\n\n*/\n\nexport class NSID {\n  segments: string[] = []\n\n  static parse(nsid: string): NSID {\n    return new NSID(nsid)\n  }\n\n  static create(authority: string, name: string): NSID {\n    const segments = [...authority.split('.').reverse(), name].join('.')\n    return new NSID(segments)\n  }\n\n  static isValid(nsid: string): boolean {\n    try {\n      NSID.parse(nsid)\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  constructor(nsid: string) {\n    ensureValidNsid(nsid)\n    this.segments = nsid.split('.')\n  }\n\n  get authority() {\n    return this.segments\n      .slice(0, this.segments.length - 1)\n      .reverse()\n      .join('.')\n  }\n\n  get name() {\n    return this.segments.at(this.segments.length - 1)\n  }\n\n  toString() {\n    return this.segments.join('.')\n  }\n}\n\n// Human readable constraints on NSID:\n// - a valid domain in reversed notation\n// - followed by an additional period-separated name, which is camel-case letters\nexport const ensureValidNsid = (nsid: string): void => {\n  const toCheck = nsid\n\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9.-]*$/.test(toCheck)) {\n    throw new InvalidNsidError(\n      'Disallowed characters in NSID (ASCII letters, digits, dashes, periods only)',\n    )\n  }\n\n  if (toCheck.length > 253 + 1 + 63) {\n    throw new InvalidNsidError('NSID is too long (317 chars max)')\n  }\n  const labels = toCheck.split('.')\n  if (labels.length < 3) {\n    throw new InvalidNsidError('NSID needs at least three parts')\n  }\n  for (let i = 0; i < labels.length; i++) {\n    const l = labels[i]\n    if (l.length < 1) {\n      throw new InvalidNsidError('NSID parts can not be empty')\n    }\n    if (l.length > 63) {\n      throw new InvalidNsidError('NSID part too long (max 63 chars)')\n    }\n    if (l.endsWith('-') || l.startsWith('-')) {\n      throw new InvalidNsidError('NSID parts can not start or end with hyphen')\n    }\n    if (/^[0-9]/.test(l) && i === 0) {\n      throw new InvalidNsidError('NSID first part may not start with a digit')\n    }\n    if (!/^[a-zA-Z]+$/.test(l) && i + 1 === labels.length) {\n      throw new InvalidNsidError('NSID name part must be only letters')\n    }\n  }\n}\n\nexport const ensureValidNsidRegex = (nsid: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints\n  if (\n    !/^[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(\\.[a-zA-Z]([a-zA-Z]{0,61}[a-zA-Z])?)$/.test(\n      nsid,\n    )\n  ) {\n    throw new InvalidNsidError(\"NSID didn't validate via regex\")\n  }\n  if (nsid.length > 253 + 1 + 63) {\n    throw new InvalidNsidError('NSID is too long (317 chars max)')\n  }\n}\n\nexport class InvalidNsidError extends Error {}\n", "import { ensureValidDid, ensureValidDidRegex } from './did'\nimport { ensureValidHandle, ensureValidHandleRegex } from './handle'\nimport { ensureValidNsid, ensureValidNsidRegex } from './nsid'\n\n// Human-readable constraints on ATURI:\n//   - following regular URLs, a 8KByte hard total length limit\n//   - follows ATURI docs on website\n//      - all ASCII characters, no whitespace. non-ASCII could be URL-encoded\n//      - starts \"at://\"\n//      - \"authority\" is a valid DID or a valid handle\n//      - optionally, follow \"authority\" with \"/\" and valid NSID as start of path\n//      - optionally, if NSID given, follow that with \"/\" and rkey\n//      - rkey path component can include URL-encoded (\"percent encoded\"), or:\n//          ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \":\" / \"@\" / \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n//          [a-zA-Z0-9._~:@!$&'\\(\\)*+,;=-]\n//      - rkey must have at least one char\n//      - regardless of path component, a fragment can follow  as \"#\" and then a JSON pointer (RFC-6901)\nexport const ensureValidAtUri = (uri: string) => {\n  // JSON pointer is pretty different from rest of URI, so split that out first\n  const uriParts = uri.split('#')\n  if (uriParts.length > 2) {\n    throw new Error('ATURI can have at most one \"#\", separating fragment out')\n  }\n  const fragmentPart = uriParts[1] || null\n  uri = uriParts[0]\n\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9._~:@!$&')(*+,;=%/-]*$/.test(uri)) {\n    throw new Error('Disallowed characters in ATURI (ASCII)')\n  }\n\n  const parts = uri.split('/')\n  if (parts.length >= 3 && (parts[0] !== 'at:' || parts[1].length !== 0)) {\n    throw new Error('ATURI must start with \"at://\"')\n  }\n  if (parts.length < 3) {\n    throw new Error('ATURI requires at least method and authority sections')\n  }\n\n  try {\n    if (parts[2].startsWith('did:')) {\n      ensureValidDid(parts[2])\n    } else {\n      ensureValidHandle(parts[2])\n    }\n  } catch {\n    throw new Error('ATURI authority must be a valid handle or DID')\n  }\n\n  if (parts.length >= 4) {\n    if (parts[3].length === 0) {\n      throw new Error(\n        'ATURI can not have a slash after authority without a path segment',\n      )\n    }\n    try {\n      ensureValidNsid(parts[3])\n    } catch {\n      throw new Error(\n        'ATURI requires first path segment (if supplied) to be valid NSID',\n      )\n    }\n  }\n\n  if (parts.length >= 5) {\n    if (parts[4].length === 0) {\n      throw new Error(\n        'ATURI can not have a slash after collection, unless record key is provided',\n      )\n    }\n    // would validate rkey here, but there are basically no constraints!\n  }\n\n  if (parts.length >= 6) {\n    throw new Error(\n      'ATURI path can have at most two parts, and no trailing slash',\n    )\n  }\n\n  if (uriParts.length >= 2 && fragmentPart == null) {\n    throw new Error('ATURI fragment must be non-empty and start with slash')\n  }\n\n  if (fragmentPart != null) {\n    if (fragmentPart.length === 0 || fragmentPart[0] !== '/') {\n      throw new Error('ATURI fragment must be non-empty and start with slash')\n    }\n    // NOTE: enforcing *some* checks here for sanity. Eg, at least no whitespace\n    if (!/^\\/[a-zA-Z0-9._~:@!$&')(*+,;=%[\\]/-]*$/.test(fragmentPart)) {\n      throw new Error('Disallowed characters in ATURI fragment (ASCII)')\n    }\n  }\n\n  if (uri.length > 8 * 1024) {\n    throw new Error('ATURI is far too long')\n  }\n}\n\nexport const ensureValidAtUriRegex = (uri: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints. whew!\n  const aturiRegex =\n    /^at:\\/\\/(?<authority>[a-zA-Z0-9._:%-]+)(\\/(?<collection>[a-zA-Z0-9-.]+)(\\/(?<rkey>[a-zA-Z0-9._~:@!$&%')(*+,;=-]+))?)?(#(?<fragment>\\/[a-zA-Z0-9._~:@!$&%')(*+,;=\\-[\\]/\\\\]*))?$/\n  const rm = uri.match(aturiRegex)\n  if (!rm || !rm.groups) {\n    throw new Error(\"ATURI didn't validate via regex\")\n  }\n  const groups = rm.groups\n\n  try {\n    ensureValidHandleRegex(groups.authority)\n  } catch {\n    try {\n      ensureValidDidRegex(groups.authority)\n    } catch {\n      throw new Error('ATURI authority must be a valid handle or DID')\n    }\n  }\n\n  if (groups.collection) {\n    try {\n      ensureValidNsidRegex(groups.collection)\n    } catch {\n      throw new Error('ATURI collection path segment must be a valid NSID')\n    }\n  }\n\n  if (uri.length > 8 * 1024) {\n    throw new Error('ATURI is far too long')\n  }\n}\n", "export * from './aturi_validation'\n\nexport const ATP_URI_REGEX =\n  // proto-    --did--------------   --name----------------   --path----   --query--   --hash--\n  /^(at:\\/\\/)?((?:did:[a-z0-9:%-]+)|(?:[a-z0-9][a-z0-9.:-]*))(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i\n//                       --path-----   --query--  --hash--\nconst RELATIVE_REGEX = /^(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i\n\nexport class AtUri {\n  hash: string\n  host: string\n  pathname: string\n  searchParams: URLSearchParams\n\n  constructor(uri: string, base?: string) {\n    let parsed\n    if (base) {\n      parsed = parse(base)\n      if (!parsed) {\n        throw new Error(`Invalid at uri: ${base}`)\n      }\n      const relativep = parseRelative(uri)\n      if (!relativep) {\n        throw new Error(`Invalid path: ${uri}`)\n      }\n      Object.assign(parsed, relativep)\n    } else {\n      parsed = parse(uri)\n      if (!parsed) {\n        throw new Error(`Invalid at uri: ${uri}`)\n      }\n    }\n\n    this.hash = parsed.hash\n    this.host = parsed.host\n    this.pathname = parsed.pathname\n    this.searchParams = parsed.searchParams\n  }\n\n  static make(handleOrDid: string, collection?: string, rkey?: string) {\n    let str = handleOrDid\n    if (collection) str += '/' + collection\n    if (rkey) str += '/' + rkey\n    return new AtUri(str)\n  }\n\n  get protocol() {\n    return 'at:'\n  }\n\n  get origin() {\n    return `at://${this.host}`\n  }\n\n  get hostname() {\n    return this.host\n  }\n\n  set hostname(v: string) {\n    this.host = v\n  }\n\n  get search() {\n    return this.searchParams.toString()\n  }\n\n  set search(v: string) {\n    this.searchParams = new URLSearchParams(v)\n  }\n\n  get collection() {\n    return this.pathname.split('/').filter(Boolean)[0] || ''\n  }\n\n  set collection(v: string) {\n    const parts = this.pathname.split('/').filter(Boolean)\n    parts[0] = v\n    this.pathname = parts.join('/')\n  }\n\n  get rkey() {\n    return this.pathname.split('/').filter(Boolean)[1] || ''\n  }\n\n  set rkey(v: string) {\n    const parts = this.pathname.split('/').filter(Boolean)\n    if (!parts[0]) parts[0] = 'undefined'\n    parts[1] = v\n    this.pathname = parts.join('/')\n  }\n\n  get href() {\n    return this.toString()\n  }\n\n  toString() {\n    let path = this.pathname || '/'\n    if (!path.startsWith('/')) {\n      path = `/${path}`\n    }\n    let qs = this.searchParams.toString()\n    if (qs && !qs.startsWith('?')) {\n      qs = `?${qs}`\n    }\n    let hash = this.hash\n    if (hash && !hash.startsWith('#')) {\n      hash = `#${hash}`\n    }\n    return `at://${this.host}${path}${qs}${hash}`\n  }\n}\n\nfunction parse(str: string) {\n  const match = ATP_URI_REGEX.exec(str)\n  if (match) {\n    return {\n      hash: match[5] || '',\n      host: match[2] || '',\n      pathname: match[3] || '',\n      searchParams: new URLSearchParams(match[4] || ''),\n    }\n  }\n  return undefined\n}\n\nfunction parseRelative(str: string) {\n  const match = RELATIVE_REGEX.exec(str)\n  if (match) {\n    return {\n      hash: match[3] || '',\n      pathname: match[1] || '',\n      searchParams: new URLSearchParams(match[2] || ''),\n    }\n  }\n  return undefined\n}\n", "const TID_LENGTH = 13\nconst TID_REGEX = /^[234567abcdefghij][234567abcdefghijklmnopqrstuvwxyz]{12}$/\n\nexport const ensureValidTid = (tid: string): void => {\n  if (tid.length !== TID_LENGTH) {\n    throw new InvalidTidError(`TID must be ${TID_LENGTH} characters`)\n  }\n  // simple regex to enforce most constraints via just regex and length.\n  if (!TID_REGEX.test(tid)) {\n    throw new InvalidTidError('TID syntax not valid (regex)')\n  }\n}\n\nexport const isValidTid = (tid: string): boolean => {\n  return tid.length === TID_LENGTH && TID_REGEX.test(tid)\n}\n\nexport class InvalidTidError extends Error {}\n", "export const ensureValidRecordKey = (rkey: string): void => {\n  if (rkey.length > 512 || rkey.length < 1) {\n    throw new InvalidRecordKeyError('record key must be 1 to 512 characters')\n  }\n  // simple regex to enforce most constraints via just regex and length.\n  if (!/^[a-zA-Z0-9_~.:-]{1,512}$/.test(rkey)) {\n    throw new InvalidRecordKeyError('record key syntax not valid (regex)')\n  }\n  if (rkey === '.' || rkey === '..')\n    throw new InvalidRecordKeyError('record key can not be \".\" or \"..\"')\n}\n\nexport const isValidRecordKey = (rkey: string): boolean => {\n  try {\n    ensureValidRecordKey(rkey)\n  } catch (err) {\n    if (err instanceof InvalidRecordKeyError) {\n      return false\n    }\n    throw err\n  }\n\n  return true\n}\n\nexport class InvalidRecordKeyError extends Error {}\n", "/* Validates datetime string against atproto Lexicon 'datetime' format.\n * Syntax is described at: https://atproto.com/specs/lexicon#datetime\n */\nexport const ensureValidDatetime = (dtStr: string): void => {\n  const date = new Date(dtStr)\n  // must parse as ISO 8601; this also verifies semantics like month is not 13 or 00\n  if (isNaN(date.getTime())) {\n    throw new InvalidDatetimeError('datetime did not parse as ISO 8601')\n  }\n  if (date.toISOString().startsWith('-')) {\n    throw new InvalidDatetimeError('datetime normalized to a negative time')\n  }\n  // regex and other checks for RFC-3339\n  if (\n    !/^[0-9]{4}-[01][0-9]-[0-3][0-9]T[0-2][0-9]:[0-6][0-9]:[0-6][0-9](.[0-9]{1,20})?(Z|([+-][0-2][0-9]:[0-5][0-9]))$/.test(\n      dtStr,\n    )\n  ) {\n    throw new InvalidDatetimeError(\"datetime didn't validate via regex\")\n  }\n  if (dtStr.length > 64) {\n    throw new InvalidDatetimeError('datetime is too long (64 chars max)')\n  }\n  if (dtStr.endsWith('-00:00')) {\n    throw new InvalidDatetimeError(\n      'datetime can not use \"-00:00\" for UTC timezone',\n    )\n  }\n  if (dtStr.startsWith('000')) {\n    throw new InvalidDatetimeError('datetime so close to year zero not allowed')\n  }\n}\n\n/* Same logic as ensureValidDatetime(), but returns a boolean instead of throwing an exception.\n */\nexport const isValidDatetime = (dtStr: string): boolean => {\n  try {\n    ensureValidDatetime(dtStr)\n  } catch (err) {\n    if (err instanceof InvalidDatetimeError) {\n      return false\n    }\n    throw err\n  }\n\n  return true\n}\n\n/* Takes a flexible datetime string and normalizes representation.\n *\n * This function will work with any valid atproto datetime (eg, anything which isValidDatetime() is true for). It *additionally* is more flexible about accepting datetimes that don't comply to RFC 3339, or are missing timezone information, and normalizing them to a valid datetime.\n *\n * One use-case is a consistent, sortable string. Another is to work with older invalid createdAt datetimes.\n *\n * Successful output will be a valid atproto datetime with millisecond precision (3 sub-second digits) and UTC timezone with trailing 'Z' syntax. Throws `InvalidDatetimeError` if the input string could not be parsed as a datetime, even with permissive parsing.\n *\n * Expected output format: YYYY-MM-DDTHH:mm:ss.sssZ\n */\nexport const normalizeDatetime = (dtStr: string): string => {\n  if (isValidDatetime(dtStr)) {\n    const outStr = new Date(dtStr).toISOString()\n    if (isValidDatetime(outStr)) {\n      return outStr\n    }\n  }\n\n  // check if this permissive datetime is missing a timezone\n  if (!/.*(([+-]\\d\\d:?\\d\\d)|[a-zA-Z])$/.test(dtStr)) {\n    const date = new Date(dtStr + 'Z')\n    if (!isNaN(date.getTime())) {\n      const tzStr = date.toISOString()\n      if (isValidDatetime(tzStr)) {\n        return tzStr\n      }\n    }\n  }\n\n  // finally try parsing as simple datetime\n  const date = new Date(dtStr)\n  if (isNaN(date.getTime())) {\n    throw new InvalidDatetimeError(\n      'datetime did not parse as any timestamp format',\n    )\n  }\n  const isoStr = date.toISOString()\n  if (isValidDatetime(isoStr)) {\n    return isoStr\n  } else {\n    throw new InvalidDatetimeError(\n      'datetime normalized to invalid timestamp string',\n    )\n  }\n}\n\n/* Variant of normalizeDatetime() which always returns a valid datetime strings.\n *\n * If a InvalidDatetimeError is encountered, returns the UNIX epoch time as a UTC datetime (1970-01-01T00:00:00.000Z).\n */\nexport const normalizeDatetimeAlways = (dtStr: string): string => {\n  try {\n    return normalizeDatetime(dtStr)\n  } catch (err) {\n    if (err instanceof InvalidDatetimeError) {\n      return new Date(0).toISOString()\n    }\n    throw err\n  }\n}\n\n/* Indicates a datetime string did not pass full atproto Lexicon datetime string format checks.\n */\nexport class InvalidDatetimeError extends Error {}\n", "export * from './handle'\nexport * from './did'\nexport * from './nsid'\nexport * from './aturi'\nexport * from './tid'\nexport * from './recordkey'\nexport * from './datetime'\n", "import { z } from 'zod'\n\nexport function toLexUri(str: string, baseUri?: string): string {\n  if (str.split('#').length > 2) {\n    throw new Error('Uri can only have one hash segment')\n  }\n\n  if (str.startsWith('lex:')) {\n    return str\n  }\n  if (str.startsWith('#')) {\n    if (!baseUri) {\n      throw new Error(`Unable to resolve uri without anchor: ${str}`)\n    }\n    return `${baseUri}${str}`\n  }\n  return `lex:${str}`\n}\n\nexport function requiredPropertiesRefinement<\n  ObjectType extends {\n    required?: string[]\n    properties?: Record<string, unknown>\n  },\n>(object: ObjectType, ctx: z.RefinementCtx) {\n  // Required fields check\n  if (object.required === undefined) {\n    return\n  }\n\n  if (!Array.isArray(object.required)) {\n    ctx.addIssue({\n      code: z.ZodIssueCode.invalid_type,\n      received: typeof object.required,\n      expected: 'array',\n    })\n    return\n  }\n\n  if (object.properties === undefined) {\n    if (object.required.length > 0) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `Required fields defined but no properties defined`,\n      })\n    }\n    return\n  }\n\n  for (const field of object.required) {\n    if (object.properties[field] === undefined) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `Required field \"${field}\" not defined`,\n      })\n    }\n  }\n}\n", "import { z } from 'zod'\nimport { NSID } from '@atproto/syntax'\nimport { requiredPropertiesRefinement } from './util'\n\n// primitives\n// =\n\nexport const lexBoolean = z\n  .object({\n    type: z.literal('boolean'),\n    description: z.string().optional(),\n    default: z.boolean().optional(),\n    const: z.boolean().optional(),\n  })\n  .strict()\nexport type LexBoolean = z.infer<typeof lexBoolean>\n\nexport const lexInteger = z\n  .object({\n    type: z.literal('integer'),\n    description: z.string().optional(),\n    default: z.number().int().optional(),\n    minimum: z.number().int().optional(),\n    maximum: z.number().int().optional(),\n    enum: z.number().int().array().optional(),\n    const: z.number().int().optional(),\n  })\n  .strict()\nexport type LexInteger = z.infer<typeof lexInteger>\n\nexport const lexStringFormat = z.enum([\n  'datetime',\n  'uri',\n  'at-uri',\n  'did',\n  'handle',\n  'at-identifier',\n  'nsid',\n  'cid',\n  'language',\n  'tid',\n  'record-key',\n])\nexport type LexStringFormat = z.infer<typeof lexStringFormat>\n\nexport const lexString = z\n  .object({\n    type: z.literal('string'),\n    format: lexStringFormat.optional(),\n    description: z.string().optional(),\n    default: z.string().optional(),\n    minLength: z.number().int().optional(),\n    maxLength: z.number().int().optional(),\n    minGraphemes: z.number().int().optional(),\n    maxGraphemes: z.number().int().optional(),\n    enum: z.string().array().optional(),\n    const: z.string().optional(),\n    knownValues: z.string().array().optional(),\n  })\n  .strict()\nexport type LexString = z.infer<typeof lexString>\n\nexport const lexUnknown = z\n  .object({\n    type: z.literal('unknown'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexUnknown = z.infer<typeof lexUnknown>\n\nexport const lexPrimitive = z.discriminatedUnion('type', [\n  lexBoolean,\n  lexInteger,\n  lexString,\n  lexUnknown,\n])\nexport type LexPrimitive = z.infer<typeof lexPrimitive>\n\n// ipld types\n// =\n\nexport const lexBytes = z\n  .object({\n    type: z.literal('bytes'),\n    description: z.string().optional(),\n    maxLength: z.number().optional(),\n    minLength: z.number().optional(),\n  })\n  .strict()\nexport type LexBytes = z.infer<typeof lexBytes>\n\nexport const lexCidLink = z\n  .object({\n    type: z.literal('cid-link'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexCidLink = z.infer<typeof lexCidLink>\n\nexport const lexIpldType = z.discriminatedUnion('type', [lexBytes, lexCidLink])\nexport type LexIpldType = z.infer<typeof lexIpldType>\n\n// references\n// =\n\nexport const lexRef = z\n  .object({\n    type: z.literal('ref'),\n    description: z.string().optional(),\n    ref: z.string(),\n  })\n  .strict()\nexport type LexRef = z.infer<typeof lexRef>\n\nexport const lexRefUnion = z\n  .object({\n    type: z.literal('union'),\n    description: z.string().optional(),\n    refs: z.string().array(),\n    closed: z.boolean().optional(),\n  })\n  .strict()\nexport type LexRefUnion = z.infer<typeof lexRefUnion>\n\nexport const lexRefVariant = z.discriminatedUnion('type', [lexRef, lexRefUnion])\nexport type LexRefVariant = z.infer<typeof lexRefVariant>\n\n// blobs\n// =\n\nexport const lexBlob = z\n  .object({\n    type: z.literal('blob'),\n    description: z.string().optional(),\n    accept: z.string().array().optional(),\n    maxSize: z.number().optional(),\n  })\n  .strict()\nexport type LexBlob = z.infer<typeof lexBlob>\n\n// complex types\n// =\n\nexport const lexArray = z\n  .object({\n    type: z.literal('array'),\n    description: z.string().optional(),\n    items: z.discriminatedUnion('type', [\n      // lexPrimitive\n      lexBoolean,\n      lexInteger,\n      lexString,\n      lexUnknown,\n      // lexIpldType\n      lexBytes,\n      lexCidLink,\n      // lexRefVariant\n      lexRef,\n      lexRefUnion,\n      // other\n      lexBlob,\n    ]),\n    minLength: z.number().int().optional(),\n    maxLength: z.number().int().optional(),\n  })\n  .strict()\nexport type LexArray = z.infer<typeof lexArray>\n\nexport const lexPrimitiveArray = lexArray.merge(\n  z\n    .object({\n      items: lexPrimitive,\n    })\n    .strict(),\n)\nexport type LexPrimitiveArray = z.infer<typeof lexPrimitiveArray>\n\nexport const lexToken = z\n  .object({\n    type: z.literal('token'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexToken = z.infer<typeof lexToken>\n\nexport const lexObject = z\n  .object({\n    type: z.literal('object'),\n    description: z.string().optional(),\n    required: z.string().array().optional(),\n    nullable: z.string().array().optional(),\n    properties: z.record(\n      z.discriminatedUnion('type', [\n        lexArray,\n\n        // lexPrimitive\n        lexBoolean,\n        lexInteger,\n        lexString,\n        lexUnknown,\n        // lexIpldType\n        lexBytes,\n        lexCidLink,\n        // lexRefVariant\n        lexRef,\n        lexRefUnion,\n        // other\n        lexBlob,\n      ]),\n    ),\n  })\n  .strict()\n  .superRefine(requiredPropertiesRefinement)\nexport type LexObject = z.infer<typeof lexObject>\n\n// xrpc\n// =\n\nexport const lexXrpcParameters = z\n  .object({\n    type: z.literal('params'),\n    description: z.string().optional(),\n    required: z.string().array().optional(),\n    properties: z.record(\n      z.discriminatedUnion('type', [\n        lexPrimitiveArray,\n\n        // lexPrimitive\n        lexBoolean,\n        lexInteger,\n        lexString,\n        lexUnknown,\n      ]),\n    ),\n  })\n  .strict()\n  .superRefine(requiredPropertiesRefinement)\nexport type LexXrpcParameters = z.infer<typeof lexXrpcParameters>\n\nexport const lexXrpcBody = z\n  .object({\n    description: z.string().optional(),\n    encoding: z.string(),\n    // @NOTE using discriminatedUnion with a refined schema requires zod >= 4\n    schema: z.union([lexRefVariant, lexObject]).optional(),\n  })\n  .strict()\nexport type LexXrpcBody = z.infer<typeof lexXrpcBody>\n\nexport const lexXrpcSubscriptionMessage = z\n  .object({\n    description: z.string().optional(),\n    // @NOTE using discriminatedUnion with a refined schema requires zod >= 4\n    schema: z.union([lexRefVariant, lexObject]).optional(),\n  })\n  .strict()\nexport type LexXrpcSubscriptionMessage = z.infer<\n  typeof lexXrpcSubscriptionMessage\n>\n\nexport const lexXrpcError = z\n  .object({\n    name: z.string(),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexXrpcError = z.infer<typeof lexXrpcError>\n\nexport const lexXrpcQuery = z\n  .object({\n    type: z.literal('query'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    output: lexXrpcBody.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcQuery = z.infer<typeof lexXrpcQuery>\n\nexport const lexXrpcProcedure = z\n  .object({\n    type: z.literal('procedure'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    input: lexXrpcBody.optional(),\n    output: lexXrpcBody.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcProcedure = z.infer<typeof lexXrpcProcedure>\n\nexport const lexXrpcSubscription = z\n  .object({\n    type: z.literal('subscription'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    message: lexXrpcSubscriptionMessage.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcSubscription = z.infer<typeof lexXrpcSubscription>\n\n// database\n// =\n\nexport const lexRecord = z\n  .object({\n    type: z.literal('record'),\n    description: z.string().optional(),\n    key: z.string().optional(),\n    record: lexObject,\n  })\n  .strict()\nexport type LexRecord = z.infer<typeof lexRecord>\n\n// core\n// =\n\n// We need to use `z.custom` here because\n// lexXrpcProperty and lexObject are refined\n// `z.union` would work, but it's too slow\n// see #915 for details\nexport const lexUserType = z.custom<\n  | LexRecord\n  | LexXrpcQuery\n  | LexXrpcProcedure\n  | LexXrpcSubscription\n  | LexBlob\n  | LexArray\n  | LexToken\n  | LexObject\n  | LexBoolean\n  | LexInteger\n  | LexString\n  | LexBytes\n  | LexCidLink\n  | LexUnknown\n>(\n  (val) => {\n    if (!val || typeof val !== 'object') {\n      return\n    }\n\n    if (val['type'] === undefined) {\n      return\n    }\n\n    switch (val['type']) {\n      case 'record':\n        return lexRecord.parse(val)\n\n      case 'query':\n        return lexXrpcQuery.parse(val)\n      case 'procedure':\n        return lexXrpcProcedure.parse(val)\n      case 'subscription':\n        return lexXrpcSubscription.parse(val)\n\n      case 'blob':\n        return lexBlob.parse(val)\n\n      case 'array':\n        return lexArray.parse(val)\n      case 'token':\n        return lexToken.parse(val)\n      case 'object':\n        return lexObject.parse(val)\n\n      case 'boolean':\n        return lexBoolean.parse(val)\n      case 'integer':\n        return lexInteger.parse(val)\n      case 'string':\n        return lexString.parse(val)\n      case 'bytes':\n        return lexBytes.parse(val)\n      case 'cid-link':\n        return lexCidLink.parse(val)\n      case 'unknown':\n        return lexUnknown.parse(val)\n    }\n  },\n  (val) => {\n    if (!val || typeof val !== 'object') {\n      return {\n        message: 'Must be an object',\n        fatal: true,\n      }\n    }\n\n    if (val['type'] === undefined) {\n      return {\n        message: 'Must have a type',\n        fatal: true,\n      }\n    }\n\n    if (typeof val['type'] !== 'string') {\n      return {\n        message: 'Type property must be a string',\n        fatal: true,\n      }\n    }\n\n    return {\n      message: `Invalid type: ${val['type']} must be one of: record, query, procedure, subscription, blob, array, token, object, boolean, integer, string, bytes, cid-link, unknown`,\n      fatal: true,\n    }\n  },\n)\nexport type LexUserType = z.infer<typeof lexUserType>\n\nexport const lexiconDoc = z\n  .object({\n    lexicon: z.literal(1),\n    id: z.string().refine((v: string) => NSID.isValid(v), {\n      message: 'Must be a valid NSID',\n    }),\n    revision: z.number().optional(),\n    description: z.string().optional(),\n    defs: z.record(lexUserType),\n  })\n  .strict()\n  .superRefine((doc, ctx) => {\n    for (const defId in doc.defs) {\n      const def = doc.defs[defId]\n      if (\n        defId !== 'main' &&\n        (def.type === 'record' ||\n          def.type === 'procedure' ||\n          def.type === 'query' ||\n          def.type === 'subscription')\n      ) {\n        ctx.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: `Records, procedures, queries, and subscriptions must be the main definition.`,\n        })\n      }\n    }\n  })\nexport type LexiconDoc = z.infer<typeof lexiconDoc>\n\n// helpers\n// =\n\nexport function isValidLexiconDoc(v: unknown): v is LexiconDoc {\n  return lexiconDoc.safeParse(v).success\n}\n\nexport function isObj<V>(v: V): v is V & object {\n  return v != null && typeof v === 'object'\n}\n\nexport type DiscriminatedObject = { $type: string }\nexport function isDiscriminatedObject(v: unknown): v is DiscriminatedObject {\n  return isObj(v) && '$type' in v && typeof v.$type === 'string'\n}\n\nexport function parseLexiconDoc(v: unknown): LexiconDoc {\n  lexiconDoc.parse(v)\n  return v as LexiconDoc\n}\n\nexport type ValidationResult<V = unknown> =\n  | {\n      success: true\n      value: V\n    }\n  | {\n      success: false\n      error: ValidationError\n    }\n\nexport class ValidationError extends Error {}\nexport class InvalidLexiconError extends Error {}\nexport class LexiconDefNotFoundError extends Error {}\n", "'use strict';\n\nvar encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nvar varint$1 = _brrp_varint;\n\nmodule.exports = varint$1;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint$1 = require('../vendor/varint.js');\n\nconst decode = (data, offset = 0) => {\n  const code = varint$1.decode(data, offset);\n  return [\n    code,\n    varint$1.decode.bytes\n  ];\n};\nconst encodeTo = (int, target, offset = 0) => {\n  varint$1.encode(int, target, offset);\n  return target;\n};\nconst encodingLength = int => {\n  return varint$1.encodingLength(int);\n};\n\nexports.decode = decode;\nexports.encodeTo = encodeTo;\nexports.encodingLength = encodingLength;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\n\nexports.coerce = coerce;\nexports.empty = empty;\nexports.equals = equals;\nexports.fromHex = fromHex;\nexports.fromString = fromString;\nexports.isBinary = isBinary;\nexports.toHex = toHex;\nexports.toString = toString;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\nvar varint = require('../varint.js');\n\nconst create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nconst decode = multihash => {\n  const bytes$1 = bytes.coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes$1);\n  const [size, digestOffset] = varint.decode(bytes$1.subarray(sizeOffset));\n  const digest = bytes$1.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes$1);\n};\nconst equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && bytes.equals(a.bytes, b.bytes);\n  }\n};\nclass Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}\n\nexports.Digest = Digest;\nexports.create = create;\nexports.decode = decode;\nexports.equals = equals;\n", "'use strict';\n\nfunction base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n\nmodule.exports = _brrp__multiformats_scope_baseX;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar baseX$1 = require('../../vendor/base-x.js');\nvar bytes = require('../bytes.js');\n\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nconst or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nclass Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nconst from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nconst baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = baseX$1(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => bytes.coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nconst rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};\n\nexports.Codec = Codec;\nexports.baseX = baseX;\nexports.from = from;\nexports.or = or;\nexports.rfc4648 = rfc4648;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base58btc = base.baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = base.baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n\nexports.base58btc = base58btc;\nexports.base58flickr = base58flickr;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base32 = base.rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nconst base32upper = base.rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nconst base32pad = base.rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nconst base32padupper = base.rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nconst base32hex = base.rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nconst base32hexupper = base.rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nconst base32hexpad = base.rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nconst base32hexpadupper = base.rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nconst base32z = base.rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});\n\nexports.base32 = base32;\nexports.base32hex = base32hex;\nexports.base32hexpad = base32hexpad;\nexports.base32hexpadupper = base32hexpadupper;\nexports.base32hexupper = base32hexupper;\nexports.base32pad = base32pad;\nexports.base32padupper = base32padupper;\nexports.base32upper = base32upper;\nexports.base32z = base32z;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint = require('./varint.js');\nvar digest = require('./hashes/digest.js');\nvar base58 = require('./bases/base58.js');\nvar base32 = require('./bases/base32.js');\nvar bytes = require('./bytes.js');\n\nclass CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest: digest$1} = this.multihash;\n        const multihash = digest.create(code, digest$1);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58.base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest$1 = digest.decode(multihash);\n      return CID.create(version, code, digest$1);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes$1) {\n    const specs = CID.inspectBytes(bytes$1);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = bytes.coerce(bytes$1.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest$1 = new digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest$1) : CID.createV1(specs.codec, digest$1);\n    return [\n      cid,\n      bytes$1.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(`${ base58.base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58.base58btc.prefix: {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.base32.prefix: {\n      const decoder = base || base32.base32;\n      return [\n        base32.base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58.base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;\n\nexports.CID = CID;\n", "// Explicitly not using \"zod\" types here to avoid mismatching types due to\n// version differences.\n\nexport interface Checkable<T> {\n  parse: (obj: unknown) => T\n  safeParse: (\n    obj: unknown,\n  ) => { success: true; data: T } | { success: false; error: Error }\n}\n\nexport interface Def<T> {\n  name: string\n  schema: Checkable<T>\n}\n\nexport const is = <T>(obj: unknown, def: Checkable<T>): obj is T => {\n  return def.safeParse(obj).success\n}\n\nexport const create =\n  <T>(def: Checkable<T>) =>\n  (v: unknown): v is T =>\n    def.safeParse(v).success\n\nexport const assure = <T>(def: Checkable<T>, obj: unknown): T => {\n  return def.parse(obj)\n}\n\nexport const isObject = (obj: unknown): obj is Record<string, unknown> => {\n  return typeof obj === 'object' && obj !== null\n}\n", "export const noUndefinedVals = <T>(\n  obj: Record<string, T | undefined>,\n): Record<string, T> => {\n  Object.keys(obj).forEach((k) => {\n    if (obj[k] === undefined) {\n      delete obj[k]\n    }\n  })\n  return obj as Record<string, T>\n}\n\n/**\n * Returns a shallow copy of the object without the specified keys. If the input\n * is nullish, it returns the input.\n */\nexport function omit<\n  T extends undefined | null | Record<string, unknown>,\n  K extends keyof NonNullable<T>,\n>(\n  object: T,\n  rejectedKeys: readonly K[],\n): T extends undefined ? undefined : T extends null ? null : Omit<T, K>\nexport function omit(\n  src: undefined | null | Record<string, unknown>,\n  rejectedKeys: readonly string[],\n): undefined | null | Record<string, unknown> {\n  // Hot path\n\n  if (!src) return src\n\n  const dst = {}\n  const srcKeys = Object.keys(src)\n  for (let i = 0; i < srcKeys.length; i++) {\n    const key = srcKeys[i]\n    if (!rejectedKeys.includes(key)) {\n      dst[key] = src[key]\n    }\n  }\n  return dst\n}\n\nexport const jitter = (maxMs: number) => {\n  return Math.round((Math.random() - 0.5) * maxMs * 2)\n}\n\nexport const wait = (ms: number) => {\n  return new Promise((res) => setTimeout(res, ms))\n}\n\nexport type BailableWait = {\n  bail: () => void\n  wait: () => Promise<void>\n}\n\nexport const bailableWait = (ms: number): BailableWait => {\n  let bail\n  const waitPromise = new Promise<void>((res) => {\n    const timeout = setTimeout(res, ms)\n    bail = () => {\n      clearTimeout(timeout)\n      res()\n    }\n  })\n  return { bail, wait: () => waitPromise }\n}\n\nexport const flattenUint8Arrays = (arrs: Uint8Array[]): Uint8Array => {\n  const length = arrs.reduce((acc, cur) => {\n    return acc + cur.length\n  }, 0)\n  const flattened = new Uint8Array(length)\n  let offset = 0\n  arrs.forEach((arr) => {\n    flattened.set(arr, offset)\n    offset += arr.length\n  })\n  return flattened\n}\n\nexport const streamToBuffer = async (\n  stream: AsyncIterable<Uint8Array>,\n): Promise<Uint8Array> => {\n  const arrays: Uint8Array[] = []\n  for await (const chunk of stream) {\n    arrays.push(chunk)\n  }\n  return flattenUint8Arrays(arrays)\n}\n\nconst S32_CHAR = '234567abcdefghijklmnopqrstuvwxyz'\n\nexport const s32encode = (i: number): string => {\n  let s = ''\n  while (i) {\n    const c = i % 32\n    i = Math.floor(i / 32)\n    s = S32_CHAR.charAt(c) + s\n  }\n  return s\n}\n\nexport const s32decode = (s: string): number => {\n  let i = 0\n  for (const c of s) {\n    i = i * 32 + S32_CHAR.indexOf(c)\n  }\n  return i\n}\n\nexport const asyncFilter = async <T>(\n  arr: T[],\n  fn: (t: T) => Promise<boolean>,\n) => {\n  const results = await Promise.all(arr.map((t) => fn(t)))\n  return arr.filter((_, i) => results[i])\n}\n\nexport const isErrnoException = (\n  err: unknown,\n): err is NodeJS.ErrnoException => {\n  return !!err && err['code']\n}\n\nexport const errHasMsg = (err: unknown, msg: string): boolean => {\n  return !!err && typeof err === 'object' && err['message'] === msg\n}\n\nexport const chunkArray = <T>(arr: T[], chunkSize: number): T[][] => {\n  return arr.reduce((acc, cur, i) => {\n    const chunkI = Math.floor(i / chunkSize)\n    if (!acc[chunkI]) {\n      acc[chunkI] = []\n    }\n    acc[chunkI].push(cur)\n    return acc\n  }, [] as T[][])\n}\n\nexport const range = (num: number): number[] => {\n  const nums: number[] = []\n  for (let i = 0; i < num; i++) {\n    nums.push(i)\n  }\n  return nums\n}\n\nexport const dedupeStrs = (strs: string[]): string[] => {\n  return [...new Set(strs)]\n}\n\nexport const parseIntWithFallback = <T>(\n  value: string | undefined,\n  fallback: T,\n): number | T => {\n  const parsed = parseInt(value || '', 10)\n  return isNaN(parsed) ? fallback : parsed\n}\n", "export function keyBy<T, K extends keyof T>(\n  arr: readonly T[],\n  key: K,\n): Map<T[K], T> {\n  return arr.reduce((acc, cur) => {\n    acc.set(cur[key], cur)\n    return acc\n  }, new Map<T[K], T>())\n}\n\nexport const mapDefined = <T, S>(\n  arr: T[],\n  fn: (obj: T) => S | undefined,\n): S[] => {\n  const output: S[] = []\n  for (const item of arr) {\n    const val = fn(item)\n    if (val !== undefined) {\n      output.push(val)\n    }\n  }\n  return output\n}\n", "import { bailableWait } from './util'\n\n// reads values from a generator into a list\n// breaks when isDone signals `true` AND `waitFor` completes OR when a max length is reached\n// NOTE: does not signal generator to close. it *will* continue to produce values\nexport const readFromGenerator = async <T>(\n  gen: AsyncGenerator<T>,\n  isDone: (last?: T) => Promise<boolean> | boolean,\n  waitFor: Promise<unknown> = Promise.resolve(),\n  maxLength = Number.MAX_SAFE_INTEGER,\n): Promise<T[]> => {\n  const evts: T[] = []\n  let bail: undefined | (() => void)\n  let hasBroke = false\n  const awaitDone = async () => {\n    if (await isDone(evts.at(-1))) {\n      return true\n    }\n    const bailable = bailableWait(20)\n    await bailable.wait()\n    bail = bailable.bail\n    if (hasBroke) return false\n    return await awaitDone()\n  }\n  const breakOn: Promise<void> = new Promise((resolve) => {\n    waitFor.then(() => {\n      awaitDone().then(() => resolve())\n    })\n  })\n\n  try {\n    while (evts.length < maxLength) {\n      const maybeEvt = await Promise.race([gen.next(), breakOn])\n      if (!maybeEvt) break\n      const evt = maybeEvt as IteratorResult<T>\n      if (evt.done) break\n      evts.push(evt.value)\n    }\n  } finally {\n    hasBroke = true\n    bail && bail()\n  }\n  return evts\n}\n\nexport type Deferrable = {\n  resolve: () => void\n  complete: Promise<void>\n}\n\nexport const createDeferrable = (): Deferrable => {\n  let resolve\n  const promise: Promise<void> = new Promise((res) => {\n    resolve = () => res()\n  })\n  return { resolve, complete: promise }\n}\n\nexport const createDeferrables = (count: number): Deferrable[] => {\n  const list: Deferrable[] = []\n  for (let i = 0; i < count; i++) {\n    list.push(createDeferrable())\n  }\n  return list\n}\n\nexport const allComplete = async (deferrables: Deferrable[]): Promise<void> => {\n  await Promise.all(deferrables.map((d) => d.complete))\n}\n\nexport class AsyncBuffer<T> {\n  private buffer: T[] = []\n  private promise: Promise<void>\n  private resolve: () => void\n  private closed = false\n  private toThrow: unknown | undefined\n\n  constructor(public maxSize?: number) {\n    // Initializing to satisfy types/build, immediately reset by resetPromise()\n    this.promise = Promise.resolve()\n    this.resolve = () => null\n    this.resetPromise()\n  }\n\n  get curr(): T[] {\n    return this.buffer\n  }\n\n  get size(): number {\n    return this.buffer.length\n  }\n\n  get isClosed(): boolean {\n    return this.closed\n  }\n\n  resetPromise() {\n    this.promise = new Promise<void>((r) => (this.resolve = r))\n  }\n\n  push(item: T) {\n    this.buffer.push(item)\n    this.resolve()\n  }\n\n  pushMany(items: T[]) {\n    items.forEach((i) => this.buffer.push(i))\n    this.resolve()\n  }\n\n  async *events(): AsyncGenerator<T> {\n    while (true) {\n      if (this.closed && this.buffer.length === 0) {\n        if (this.toThrow) {\n          throw this.toThrow\n        } else {\n          return\n        }\n      }\n      await this.promise\n      if (this.toThrow) {\n        throw this.toThrow\n      }\n      if (this.maxSize && this.size > this.maxSize) {\n        throw new AsyncBufferFullError(this.maxSize)\n      }\n      const [first, ...rest] = this.buffer\n      if (first) {\n        this.buffer = rest\n        yield first\n      } else {\n        this.resetPromise()\n      }\n    }\n  }\n\n  throw(err: unknown) {\n    this.toThrow = err\n    this.closed = true\n    this.resolve()\n  }\n\n  close() {\n    this.closed = true\n    this.resolve()\n  }\n}\n\nexport class AsyncBufferFullError extends Error {\n  constructor(maxSize: number) {\n    super(`ReachedMaxBufferSize: ${maxSize}`)\n  }\n}\n\n/**\n * Utility function that behaves like {@link Promise.allSettled} but returns the\n * same result as {@link Promise.all} in case every promise is fulfilled, and\n * throws an {@link AggregateError} if there are more than one errors.\n */\nexport function allFulfilled<T extends readonly unknown[] | []>(\n  promises: T,\n): Promise<{ -readonly [P in keyof T]: Awaited<T[P]> }>\nexport function allFulfilled<T>(\n  promises: Iterable<T | PromiseLike<T>>,\n): Promise<Awaited<T>[]>\nexport function allFulfilled(\n  promises: Iterable<Promise<unknown>>,\n): Promise<unknown[]> {\n  return Promise.allSettled(promises).then(handleAllSettledErrors)\n}\n\nexport function handleAllSettledErrors<\n  T extends readonly PromiseSettledResult<unknown>[] | [],\n>(\n  results: T,\n): {\n  -readonly [P in keyof T]: T[P] extends PromiseSettledResult<infer U>\n    ? U\n    : never\n}\nexport function handleAllSettledErrors<T>(\n  results: PromiseSettledResult<T>[],\n): T[]\nexport function handleAllSettledErrors(\n  results: PromiseSettledResult<unknown>[],\n): unknown[] {\n  const errors = results.filter(isRejectedResult).map(extractReason)\n  if (errors.length === 0) {\n    // No need to filter here, it is safe to assume that all promises are fulfilled\n    return (results as PromiseFulfilledResult<unknown>[]).map(extractValue)\n  }\n  if (errors.length === 1) {\n    throw errors[0]\n  }\n  throw new AggregateError(\n    errors,\n    `Multiple errors: ${errors.map(stringifyReason).join('\\n')}`,\n  )\n}\n\nexport function isRejectedResult(\n  result: PromiseSettledResult<unknown>,\n): result is PromiseRejectedResult {\n  return result.status === 'rejected'\n}\n\nfunction extractReason(result: PromiseRejectedResult): unknown {\n  return result.reason\n}\n\nexport function isFulfilledResult<T>(\n  result: PromiseSettledResult<T>,\n): result is PromiseFulfilledResult<T> {\n  return result.status === 'fulfilled'\n}\n\nfunction extractValue<T>(result: PromiseFulfilledResult<T>): T {\n  return result.value\n}\n\nfunction stringifyReason(reason: unknown): string {\n  if (reason instanceof Error) {\n    return reason.message\n  }\n  return String(reason)\n}\n", "import { s32decode, s32encode } from './util'\n\nconst TID_LEN = 13\n\nlet lastTimestamp = 0\nlet timestampCount = 0\nlet clockid: number | null = null\n\nfunction dedash(str: string): string {\n  return str.replaceAll('-', '')\n}\n\nexport class TID {\n  str: string\n\n  constructor(str: string) {\n    const noDashes = dedash(str)\n    if (noDashes.length !== TID_LEN) {\n      throw new Error(`Poorly formatted TID: ${noDashes.length} length`)\n    }\n    this.str = noDashes\n  }\n\n  static next(prev?: TID): TID {\n    // javascript does not have microsecond precision\n    // instead, we append a counter to the timestamp to indicate if multiple timestamps were created within the same millisecond\n    // take max of current time & last timestamp to prevent tids moving backwards if system clock drifts backwards\n    const time = Math.max(Date.now(), lastTimestamp)\n    if (time === lastTimestamp) {\n      timestampCount++\n    }\n    lastTimestamp = time\n    const timestamp = time * 1000 + timestampCount\n    // the bottom 32 clock ids can be randomized & are not guaranteed to be collision resistant\n    // we use the same clockid for all tids coming from this machine\n    if (clockid === null) {\n      clockid = Math.floor(Math.random() * 32)\n    }\n    const tid = TID.fromTime(timestamp, clockid)\n    if (!prev || tid.newerThan(prev)) {\n      return tid\n    }\n    return TID.fromTime(prev.timestamp() + 1, clockid)\n  }\n\n  static nextStr(prev?: string): string {\n    return TID.next(prev ? new TID(prev) : undefined).toString()\n  }\n\n  static fromTime(timestamp: number, clockid: number): TID {\n    // base32 encode with encoding variant sort (s32)\n    const str = `${s32encode(timestamp)}${s32encode(clockid).padStart(2, '2')}`\n    return new TID(str)\n  }\n\n  static fromStr(str: string): TID {\n    return new TID(str)\n  }\n\n  static oldestFirst(a: TID, b: TID): number {\n    return a.compareTo(b)\n  }\n\n  static newestFirst(a: TID, b: TID): number {\n    return b.compareTo(a)\n  }\n\n  static is(str: string): boolean {\n    return dedash(str).length === TID_LEN\n  }\n\n  timestamp(): number {\n    return s32decode(this.str.slice(0, 11))\n  }\n\n  clockid(): number {\n    return s32decode(this.str.slice(11, 13))\n  }\n\n  formatted(): string {\n    const str = this.toString()\n    return `${str.slice(0, 4)}-${str.slice(4, 7)}-${str.slice(\n      7,\n      11,\n    )}-${str.slice(11, 13)}`\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  // newer > older\n  compareTo(other: TID): number {\n    if (this.str > other.str) return 1\n    if (this.str < other.str) return -1\n    return 0\n  }\n\n  equals(other: TID): boolean {\n    return this.str === other.str\n  }\n\n  newerThan(other: TID): boolean {\n    return this.compareTo(other) > 0\n  }\n\n  olderThan(other: TID): boolean {\n    return this.compareTo(other) < 0\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction compare(a, b) {\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] < b[i]) {\n      return -1;\n    }\n    if (a[i] > b[i]) {\n      return 1;\n    }\n  }\n  if (a.byteLength > b.byteLength) {\n    return 1;\n  }\n  if (a.byteLength < b.byteLength) {\n    return -1;\n  }\n  return 0;\n}\n\nexports.compare = compare;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = new Uint8Array(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}\n\nexports.concat = concat;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.equals = equals;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\nvar bytes = require('../bytes.js');\n\nconst identity = base.from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => bytes.toString(buf),\n  decode: str => bytes.fromString(str)\n});\n\nexports.identity = identity;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base2 = base.rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});\n\nexports.base2 = base2;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base8 = base.rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});\n\nexports.base8 = base8;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base10 = base.baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});\n\nexports.base10 = base10;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base16 = base.rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nconst base16upper = base.rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});\n\nexports.base16 = base16;\nexports.base16upper = base16upper;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base36 = base.baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = base.baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n\nexports.base36 = base36;\nexports.base36upper = base36upper;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base64 = base.rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nconst base64pad = base.rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nconst base64url = base.rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nconst base64urlpad = base.rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});\n\nexports.base64 = base64;\nexports.base64pad = base64pad;\nexports.base64url = base64url;\nexports.base64urlpad = base64urlpad;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nconst base256emoji = base.from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});\n\nexports.base256emoji = base256emoji;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar digest = require('./digest.js');\n\nconst from = ({name, code, encode}) => new Hasher(name, code, encode);\nclass Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? digest.create(this.code, result) : result.then(digest$1 => digest.create(this.code, digest$1));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\n\nexports.Hasher = Hasher;\nexports.from = from;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar crypto = require('crypto');\nvar hasher = require('./hasher.js');\nvar bytes = require('../bytes.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar crypto__default = /*#__PURE__*/_interopDefaultLegacy(crypto);\n\nconst sha256 = hasher.from({\n  name: 'sha2-256',\n  code: 18,\n  encode: input => bytes.coerce(crypto__default[\"default\"].createHash('sha256').update(input).digest())\n});\nconst sha512 = hasher.from({\n  name: 'sha2-512',\n  code: 19,\n  encode: input => bytes.coerce(crypto__default[\"default\"].createHash('sha512').update(input).digest())\n});\n\nexports.sha256 = sha256;\nexports.sha512 = sha512;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\nvar digest$1 = require('./digest.js');\n\nconst code = 0;\nconst name = 'identity';\nconst encode = bytes.coerce;\nconst digest = input => digest$1.create(code, encode(input));\nconst identity = {\n  code,\n  name,\n  encode,\n  digest\n};\n\nexports.identity = identity;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\n\nconst name = 'raw';\nconst code = 85;\nconst encode = node => bytes.coerce(node);\nconst decode = data => bytes.coerce(data);\n\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst name = 'json';\nconst code = 512;\nconst encode = node => textEncoder.encode(JSON.stringify(node));\nconst decode = data => JSON.parse(textDecoder.decode(data));\n\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('./cid.js');\nvar varint = require('./varint.js');\nvar bytes = require('./bytes.js');\nvar hasher = require('./hashes/hasher.js');\nvar digest = require('./hashes/digest.js');\n\n\n\nexports.CID = cid.CID;\nexports.varint = varint;\nexports.bytes = bytes;\nexports.hasher = hasher;\nexports.digest = digest;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar identity = require('./bases/identity.js');\nvar base2 = require('./bases/base2.js');\nvar base8 = require('./bases/base8.js');\nvar base10 = require('./bases/base10.js');\nvar base16 = require('./bases/base16.js');\nvar base32 = require('./bases/base32.js');\nvar base36 = require('./bases/base36.js');\nvar base58 = require('./bases/base58.js');\nvar base64 = require('./bases/base64.js');\nvar base256emoji = require('./bases/base256emoji.js');\nvar sha2 = require('./hashes/sha2.js');\nvar identity$1 = require('./hashes/identity.js');\nvar raw = require('./codecs/raw.js');\nvar json = require('./codecs/json.js');\nrequire('./index.js');\nvar cid = require('./cid.js');\nvar hasher = require('./hashes/hasher.js');\nvar digest = require('./hashes/digest.js');\nvar varint = require('./varint.js');\nvar bytes = require('./bytes.js');\n\nconst bases = {\n  ...identity,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity$1\n};\nconst codecs = {\n  raw,\n  json\n};\n\nexports.CID = cid.CID;\nexports.hasher = hasher;\nexports.digest = digest;\nexports.varint = varint;\nexports.bytes = bytes;\nexports.bases = bases;\nexports.codecs = codecs;\nexports.hashes = hashes;\n", "'use strict';\n\nvar basics = require('multiformats/basics');\n\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: basics.bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...basics.bases\n};\n\nmodule.exports = BASES;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bases = require('./util/bases.js');\n\nfunction fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}\n\nexports.fromString = fromString;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bases = require('./util/bases.js');\n\nfunction toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.encoder.encode(array).substring(1);\n}\n\nexports.toString = toString;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n  const result = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return result;\n}\n\nexports.xor = xor;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compare = require('./compare.js');\nvar concat = require('./concat.js');\nvar equals = require('./equals.js');\nvar fromString = require('./from-string.js');\nvar toString = require('./to-string.js');\nvar xor = require('./xor.js');\n\n\n\nexports.compare = compare.compare;\nexports.concat = concat.concat;\nexports.equals = equals.equals;\nexports.fromString = fromString.fromString;\nexports.toString = toString.toString;\nexports.xor = xor.xor;\n", "import { CID } from 'multiformats/cid'\nimport * as ui8 from 'uint8arrays'\n\nexport type JsonValue =\n  | boolean\n  | number\n  | string\n  | null\n  | undefined\n  | unknown\n  | Array<JsonValue>\n  | { [key: string]: JsonValue }\n\nexport type IpldValue =\n  | JsonValue\n  | CID\n  | Uint8Array\n  | Array<IpldValue>\n  | { [key: string]: IpldValue }\n\n// @NOTE avoiding use of check.is() here only because it makes\n// these implementations slow, and they often live in hot paths.\n\nexport const jsonToIpld = (val: JsonValue): IpldValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => jsonToIpld(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // check for dag json values\n    if (typeof val['$link'] === 'string' && Object.keys(val).length === 1) {\n      return CID.parse(val['$link'])\n    }\n    if (typeof val['$bytes'] === 'string' && Object.keys(val).length === 1) {\n      return ui8.fromString(val['$bytes'], 'base64')\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = jsonToIpld(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const ipldToJson = (val: IpldValue): JsonValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => ipldToJson(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert bytes\n    if (val instanceof Uint8Array) {\n      return {\n        $bytes: ui8.toString(val, 'base64'),\n      }\n    }\n    // convert cids\n    if (CID.asCID(val)) {\n      return {\n        $link: (val as CID).toString(),\n      }\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = ipldToJson(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val as JsonValue\n}\n\nexport const ipldEquals = (a: IpldValue, b: IpldValue): boolean => {\n  // walk arrays\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false\n    for (let i = 0; i < a.length; i++) {\n      if (!ipldEquals(a[i], b[i])) return false\n    }\n    return true\n  }\n  // objects\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    // check bytes\n    if (a instanceof Uint8Array && b instanceof Uint8Array) {\n      return ui8.equals(a, b)\n    }\n    // check cids\n    if (CID.asCID(a) && CID.asCID(b)) {\n      return CID.asCID(a)?.equals(CID.asCID(b))\n    }\n    // walk plain objects\n    if (Object.keys(a).length !== Object.keys(b).length) return false\n    for (const key of Object.keys(a)) {\n      if (!ipldEquals(a[key], b[key])) return false\n    }\n    return true\n  }\n  return a === b\n}\n", "import { wait } from './util'\n\nexport type RetryOptions = {\n  maxRetries?: number\n  getWaitMs?: (n: number) => number | null\n}\n\nexport async function retry<T>(\n  fn: () => Promise<T>,\n  opts: RetryOptions & {\n    retryable?: (err: unknown) => boolean\n  } = {},\n): Promise<T> {\n  const { maxRetries = 3, retryable = () => true, getWaitMs = backoffMs } = opts\n  let retries = 0\n  let doneError: unknown\n  while (!doneError) {\n    try {\n      return await fn()\n    } catch (err) {\n      const waitMs = getWaitMs(retries)\n      const willRetry =\n        retries < maxRetries && waitMs !== null && retryable(err)\n      if (willRetry) {\n        retries += 1\n        if (waitMs !== 0) {\n          await wait(waitMs)\n        }\n      } else {\n        doneError = err\n      }\n    }\n  }\n  throw doneError\n}\n\nexport function createRetryable(retryable: (err: unknown) => boolean) {\n  return async <T>(fn: () => Promise<T>, opts?: RetryOptions) =>\n    retry(fn, { ...opts, retryable })\n}\n\n// Waits exponential backoff with max and jitter: ~100, ~200, ~400, ~800, ~1000, ~1000, ...\nexport function backoffMs(n: number, multiplier = 100, max = 1000) {\n  const exponentialMs = Math.pow(2, n) * multiplier\n  const ms = Math.min(exponentialMs, max)\n  return jitter(ms)\n}\n\n// Adds randomness +/-15% of value\nfunction jitter(value: number) {\n  const delta = value * 0.15\n  return value + randomRange(-delta, delta)\n}\n\nfunction randomRange(from: number, to: number) {\n  const rand = Math.random() * (to - from)\n  return rand + from\n}\n", "import { CID } from 'multiformats/cid'\nimport { z } from 'zod'\nimport { Def } from './check'\n\nconst cidSchema = z\n  .any()\n  .refine((obj: unknown) => CID.asCID(obj) !== null, {\n    message: 'Not a CID',\n  })\n  .transform((obj: unknown) => CID.asCID(obj) as CID)\n\nexport const schema = {\n  cid: cidSchema,\n  bytes: z.instanceof(Uint8Array),\n  string: z.string(),\n  array: z.array(z.unknown()),\n  map: z.record(z.string(), z.unknown()),\n  unknown: z.unknown(),\n}\n\nexport const def = {\n  cid: {\n    name: 'cid',\n    schema: schema.cid,\n  } as Def<CID>,\n  bytes: {\n    name: 'bytes',\n    schema: schema.bytes,\n  } as Def<Uint8Array>,\n  string: {\n    name: 'string',\n    schema: schema.string,\n  } as Def<string>,\n  map: {\n    name: 'map',\n    schema: schema.map,\n  } as Def<Record<string, unknown>>,\n  unknown: {\n    name: 'unknown',\n    schema: schema.unknown,\n  } as Def<unknown>,\n}\n\nexport type ArrayEl<A> = A extends readonly (infer T)[] ? T : never\n\nexport type NotEmptyArray<T> = [T, ...T[]]\n", "export const SECOND = 1000\nexport const MINUTE = SECOND * 60\nexport const HOUR = MINUTE * 60\nexport const DAY = HOUR * 24\n\nexport const lessThanAgoMs = (time: Date, range: number) => {\n  return Date.now() < time.getTime() + range\n}\n\nexport const addHoursToDate = (hours: number, startingDate?: Date): Date => {\n  // When date is passed, clone before calling `setHours()` so that we are not mutating the original date\n  const currentDate = startingDate ? new Date(startingDate) : new Date()\n  currentDate.setHours(currentDate.getHours() + hours)\n  return currentDate\n}\n", "\"use strict\";\n/**\n * The Grapheme_Cluster_Break property value\n * @see https://www.unicode.org/reports/tr29/#Default_Grapheme_Cluster_Table\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EXTENDED_PICTOGRAPHIC = exports.CLUSTER_BREAK = void 0;\nvar CLUSTER_BREAK;\n(function (CLUSTER_BREAK) {\n    CLUSTER_BREAK[CLUSTER_BREAK[\"CR\"] = 0] = \"CR\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LF\"] = 1] = \"LF\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"CONTROL\"] = 2] = \"CONTROL\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"EXTEND\"] = 3] = \"EXTEND\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"REGIONAL_INDICATOR\"] = 4] = \"REGIONAL_INDICATOR\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"SPACINGMARK\"] = 5] = \"SPACINGMARK\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"L\"] = 6] = \"L\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"V\"] = 7] = \"V\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"T\"] = 8] = \"T\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LV\"] = 9] = \"LV\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LVT\"] = 10] = \"LVT\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"OTHER\"] = 11] = \"OTHER\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"PREPEND\"] = 12] = \"PREPEND\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_BASE\"] = 13] = \"E_BASE\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_MODIFIER\"] = 14] = \"E_MODIFIER\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"ZWJ\"] = 15] = \"ZWJ\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"GLUE_AFTER_ZWJ\"] = 16] = \"GLUE_AFTER_ZWJ\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_BASE_GAZ\"] = 17] = \"E_BASE_GAZ\";\n})(CLUSTER_BREAK = exports.CLUSTER_BREAK || (exports.CLUSTER_BREAK = {}));\n/**\n * The Emoji character property is an extension of UCD but shares the same namespace and structure\n * @see http://www.unicode.org/reports/tr51/tr51-14.html#Emoji_Properties_and_Data_Files\n *\n * Here we model Extended_Pictograhpic only to implement UAX #29 GB11\n * \\p{Extended_Pictographic} Extend* ZWJ\t\u00D7\t\\p{Extended_Pictographic}\n *\n * The Emoji character property should not be mixed with Grapheme_Cluster_Break since they are not exclusive\n */\nexports.EXTENDED_PICTOGRAPHIC = 101;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boundaries_1 = require(\"./boundaries\");\n// BreakTypes\n// @type {BreakType}\nconst NotBreak = 0;\nconst BreakStart = 1;\nconst Break = 2;\nconst BreakLastRegional = 3;\nconst BreakPenultimateRegional = 4;\nclass GraphemerHelper {\n    /**\n     * Check if the the character at the position {pos} of the string is surrogate\n     * @param str {string}\n     * @param pos {number}\n     * @returns {boolean}\n     */\n    static isSurrogate(str, pos) {\n        return (0xd800 <= str.charCodeAt(pos) &&\n            str.charCodeAt(pos) <= 0xdbff &&\n            0xdc00 <= str.charCodeAt(pos + 1) &&\n            str.charCodeAt(pos + 1) <= 0xdfff);\n    }\n    /**\n     * The String.prototype.codePointAt polyfill\n     * Private function, gets a Unicode code point from a JavaScript UTF-16 string\n     * handling surrogate pairs appropriately\n     * @param str {string}\n     * @param idx {number}\n     * @returns {number}\n     */\n    static codePointAt(str, idx) {\n        if (idx === undefined) {\n            idx = 0;\n        }\n        const code = str.charCodeAt(idx);\n        // if a high surrogate\n        if (0xd800 <= code && code <= 0xdbff && idx < str.length - 1) {\n            const hi = code;\n            const low = str.charCodeAt(idx + 1);\n            if (0xdc00 <= low && low <= 0xdfff) {\n                return (hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000;\n            }\n            return hi;\n        }\n        // if a low surrogate\n        if (0xdc00 <= code && code <= 0xdfff && idx >= 1) {\n            const hi = str.charCodeAt(idx - 1);\n            const low = code;\n            if (0xd800 <= hi && hi <= 0xdbff) {\n                return (hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000;\n            }\n            return low;\n        }\n        // just return the char if an unmatched surrogate half or a\n        // single-char codepoint\n        return code;\n    }\n    //\n    /**\n     * Private function, returns whether a break is allowed between the two given grapheme breaking classes\n     * Implemented the UAX #29 3.1.1 Grapheme Cluster Boundary Rules on extended grapheme clusters\n     * @param start {number}\n     * @param mid {Array<number>}\n     * @param end {number}\n     * @param startEmoji {number}\n     * @param midEmoji {Array<number>}\n     * @param endEmoji {number}\n     * @returns {number}\n     */\n    static shouldBreak(start, mid, end, startEmoji, midEmoji, endEmoji) {\n        const all = [start].concat(mid).concat([end]);\n        const allEmoji = [startEmoji].concat(midEmoji).concat([endEmoji]);\n        const previous = all[all.length - 2];\n        const next = end;\n        const nextEmoji = endEmoji;\n        // Lookahead terminator for:\n        // GB12. ^ (RI RI)* RI ? RI\n        // GB13. [^RI] (RI RI)* RI ? RI\n        const rIIndex = all.lastIndexOf(boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR);\n        if (rIIndex > 0 &&\n            all.slice(1, rIIndex).every(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n            }) &&\n            [boundaries_1.CLUSTER_BREAK.PREPEND, boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR].indexOf(previous) === -1) {\n            if (all.filter(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n            }).length %\n                2 ===\n                1) {\n                return BreakLastRegional;\n            }\n            else {\n                return BreakPenultimateRegional;\n            }\n        }\n        // GB3. CR \u00D7 LF\n        if (previous === boundaries_1.CLUSTER_BREAK.CR && next === boundaries_1.CLUSTER_BREAK.LF) {\n            return NotBreak;\n        }\n        // GB4. (Control|CR|LF) \u00F7\n        else if (previous === boundaries_1.CLUSTER_BREAK.CONTROL ||\n            previous === boundaries_1.CLUSTER_BREAK.CR ||\n            previous === boundaries_1.CLUSTER_BREAK.LF) {\n            return BreakStart;\n        }\n        // GB5. \u00F7 (Control|CR|LF)\n        else if (next === boundaries_1.CLUSTER_BREAK.CONTROL ||\n            next === boundaries_1.CLUSTER_BREAK.CR ||\n            next === boundaries_1.CLUSTER_BREAK.LF) {\n            return BreakStart;\n        }\n        // GB6. L \u00D7 (L|V|LV|LVT)\n        else if (previous === boundaries_1.CLUSTER_BREAK.L &&\n            (next === boundaries_1.CLUSTER_BREAK.L ||\n                next === boundaries_1.CLUSTER_BREAK.V ||\n                next === boundaries_1.CLUSTER_BREAK.LV ||\n                next === boundaries_1.CLUSTER_BREAK.LVT)) {\n            return NotBreak;\n        }\n        // GB7. (LV|V) \u00D7 (V|T)\n        else if ((previous === boundaries_1.CLUSTER_BREAK.LV || previous === boundaries_1.CLUSTER_BREAK.V) &&\n            (next === boundaries_1.CLUSTER_BREAK.V || next === boundaries_1.CLUSTER_BREAK.T)) {\n            return NotBreak;\n        }\n        // GB8. (LVT|T) \u00D7 (T)\n        else if ((previous === boundaries_1.CLUSTER_BREAK.LVT || previous === boundaries_1.CLUSTER_BREAK.T) &&\n            next === boundaries_1.CLUSTER_BREAK.T) {\n            return NotBreak;\n        }\n        // GB9. \u00D7 (Extend|ZWJ)\n        else if (next === boundaries_1.CLUSTER_BREAK.EXTEND || next === boundaries_1.CLUSTER_BREAK.ZWJ) {\n            return NotBreak;\n        }\n        // GB9a. \u00D7 SpacingMark\n        else if (next === boundaries_1.CLUSTER_BREAK.SPACINGMARK) {\n            return NotBreak;\n        }\n        // GB9b. Prepend \u00D7\n        else if (previous === boundaries_1.CLUSTER_BREAK.PREPEND) {\n            return NotBreak;\n        }\n        // GB11. \\p{Extended_Pictographic} Extend* ZWJ \u00D7 \\p{Extended_Pictographic}\n        const previousNonExtendIndex = allEmoji\n            .slice(0, -1)\n            .lastIndexOf(boundaries_1.EXTENDED_PICTOGRAPHIC);\n        if (previousNonExtendIndex !== -1 &&\n            allEmoji[previousNonExtendIndex] === boundaries_1.EXTENDED_PICTOGRAPHIC &&\n            all.slice(previousNonExtendIndex + 1, -2).every(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.EXTEND;\n            }) &&\n            previous === boundaries_1.CLUSTER_BREAK.ZWJ &&\n            nextEmoji === boundaries_1.EXTENDED_PICTOGRAPHIC) {\n            return NotBreak;\n        }\n        // GB12. ^ (RI RI)* RI \u00D7 RI\n        // GB13. [^RI] (RI RI)* RI \u00D7 RI\n        if (mid.indexOf(boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR) !== -1) {\n            return Break;\n        }\n        if (previous === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR &&\n            next === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR) {\n            return NotBreak;\n        }\n        // GB999. Any ? Any\n        return BreakStart;\n    }\n}\nexports.default = GraphemerHelper;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * GraphemerIterator\n *\n * Takes a string and a \"BreakHandler\" method during initialisation\n * and creates an iterable object that returns individual graphemes.\n *\n * @param str {string}\n * @return GraphemerIterator\n */\nclass GraphemerIterator {\n    constructor(str, nextBreak) {\n        this._index = 0;\n        this._str = str;\n        this._nextBreak = nextBreak;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next() {\n        let brk;\n        if ((brk = this._nextBreak(this._str, this._index)) < this._str.length) {\n            const value = this._str.slice(this._index, brk);\n            this._index = brk;\n            return { value: value, done: false };\n        }\n        if (this._index < this._str.length) {\n            const value = this._str.slice(this._index);\n            this._index = this._str.length;\n            return { value: value, done: false };\n        }\n        return { value: undefined, done: true };\n    }\n}\nexports.default = GraphemerIterator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boundaries_1 = require(\"./boundaries\");\nconst GraphemerHelper_1 = __importDefault(require(\"./GraphemerHelper\"));\nconst GraphemerIterator_1 = __importDefault(require(\"./GraphemerIterator\"));\nclass Graphemer {\n    /**\n     * Returns the next grapheme break in the string after the given index\n     * @param string {string}\n     * @param index {number}\n     * @returns {number}\n     */\n    static nextBreak(string, index) {\n        if (index === undefined) {\n            index = 0;\n        }\n        if (index < 0) {\n            return 0;\n        }\n        if (index >= string.length - 1) {\n            return string.length;\n        }\n        const prevCP = GraphemerHelper_1.default.codePointAt(string, index);\n        const prev = Graphemer.getGraphemeBreakProperty(prevCP);\n        const prevEmoji = Graphemer.getEmojiProperty(prevCP);\n        const mid = [];\n        const midEmoji = [];\n        for (let i = index + 1; i < string.length; i++) {\n            // check for already processed low surrogates\n            if (GraphemerHelper_1.default.isSurrogate(string, i - 1)) {\n                continue;\n            }\n            const nextCP = GraphemerHelper_1.default.codePointAt(string, i);\n            const next = Graphemer.getGraphemeBreakProperty(nextCP);\n            const nextEmoji = Graphemer.getEmojiProperty(nextCP);\n            if (GraphemerHelper_1.default.shouldBreak(prev, mid, next, prevEmoji, midEmoji, nextEmoji)) {\n                return i;\n            }\n            mid.push(next);\n            midEmoji.push(nextEmoji);\n        }\n        return string.length;\n    }\n    /**\n     * Breaks the given string into an array of grapheme clusters\n     * @param str {string}\n     * @returns {string[]}\n     */\n    splitGraphemes(str) {\n        const res = [];\n        let index = 0;\n        let brk;\n        while ((brk = Graphemer.nextBreak(str, index)) < str.length) {\n            res.push(str.slice(index, brk));\n            index = brk;\n        }\n        if (index < str.length) {\n            res.push(str.slice(index));\n        }\n        return res;\n    }\n    /**\n     * Returns an iterator of grapheme clusters in the given string\n     * @param str {string}\n     * @returns {GraphemerIterator}\n     */\n    iterateGraphemes(str) {\n        return new GraphemerIterator_1.default(str, Graphemer.nextBreak);\n    }\n    /**\n     * Returns the number of grapheme clusters in the given string\n     * @param str {string}\n     * @returns {number}\n     */\n    countGraphemes(str) {\n        let count = 0;\n        let index = 0;\n        let brk;\n        while ((brk = Graphemer.nextBreak(str, index)) < str.length) {\n            index = brk;\n            count++;\n        }\n        if (index < str.length) {\n            count++;\n        }\n        return count;\n    }\n    /**\n     * Given a Unicode code point, determines this symbol's grapheme break property\n     * @param code {number} Unicode code point\n     * @returns {number}\n     */\n    static getGraphemeBreakProperty(code) {\n        // Grapheme break property taken from:\n        // https://www.unicode.org/Public/UCD/latest/ucd/auxiliary/GraphemeBreakProperty.txt\n        // and generated by\n        // node ./scripts/generate-grapheme-break.js\n        if (code < 0xbf09) {\n            if (code < 0xac54) {\n                if (code < 0x102d) {\n                    if (code < 0xb02) {\n                        if (code < 0x93b) {\n                            if (code < 0x6df) {\n                                if (code < 0x5bf) {\n                                    if (code < 0x7f) {\n                                        if (code < 0xb) {\n                                            if (code < 0xa) {\n                                                // Cc  [10] <control-0000>..<control-0009>\n                                                if (0x0 <= code && code <= 0x9) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Cc       <control-000A>\n                                                if (0xa === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LF;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd) {\n                                                // Cc   [2] <control-000B>..<control-000C>\n                                                if (0xb <= code && code <= 0xc) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe) {\n                                                    // Cc       <control-000D>\n                                                    if (0xd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.CR;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cc  [18] <control-000E>..<control-001F>\n                                                    if (0xe <= code && code <= 0x1f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x300) {\n                                            if (code < 0xad) {\n                                                // Cc  [33] <control-007F>..<control-009F>\n                                                if (0x7f <= code && code <= 0x9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       SOFT HYPHEN\n                                                if (0xad === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x483) {\n                                                // Mn [112] COMBINING GRAVE ACCENT..COMBINING LATIN SMALL LETTER X\n                                                if (0x300 <= code && code <= 0x36f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x591) {\n                                                    // Mn   [5] COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\n                                                    // Me   [2] COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..COMBINING CYRILLIC MILLIONS SIGN\n                                                    if (0x483 <= code && code <= 0x489) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [45] HEBREW ACCENT ETNAHTA..HEBREW POINT METEG\n                                                    if (0x591 <= code && code <= 0x5bd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x610) {\n                                        if (code < 0x5c4) {\n                                            if (code < 0x5c1) {\n                                                // Mn       HEBREW POINT RAFE\n                                                if (0x5bf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] HEBREW POINT SHIN DOT..HEBREW POINT SIN DOT\n                                                if (0x5c1 <= code && code <= 0x5c2) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x5c7) {\n                                                // Mn   [2] HEBREW MARK UPPER DOT..HEBREW MARK LOWER DOT\n                                                if (0x5c4 <= code && code <= 0x5c5) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x600) {\n                                                    // Mn       HEBREW POINT QAMATS QATAN\n                                                    if (0x5c7 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf   [6] ARABIC NUMBER SIGN..ARABIC NUMBER MARK ABOVE\n                                                    if (0x600 <= code && code <= 0x605) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x670) {\n                                            if (code < 0x61c) {\n                                                // Mn  [11] ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM..ARABIC SMALL KASRA\n                                                if (0x610 <= code && code <= 0x61a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x64b) {\n                                                    // Cf       ARABIC LETTER MARK\n                                                    if (0x61c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [21] ARABIC FATHATAN..ARABIC WAVY HAMZA BELOW\n                                                    if (0x64b <= code && code <= 0x65f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x6d6) {\n                                                // Mn       ARABIC LETTER SUPERSCRIPT ALEF\n                                                if (0x670 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x6dd) {\n                                                    // Mn   [7] ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA..ARABIC SMALL HIGH SEEN\n                                                    if (0x6d6 <= code && code <= 0x6dc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf       ARABIC END OF AYAH\n                                                    if (0x6dd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x81b) {\n                                    if (code < 0x730) {\n                                        if (code < 0x6ea) {\n                                            if (code < 0x6e7) {\n                                                // Mn   [6] ARABIC SMALL HIGH ROUNDED ZERO..ARABIC SMALL HIGH MADDA\n                                                if (0x6df <= code && code <= 0x6e4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] ARABIC SMALL HIGH YEH..ARABIC SMALL HIGH NOON\n                                                if (0x6e7 <= code && code <= 0x6e8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x70f) {\n                                                // Mn   [4] ARABIC EMPTY CENTRE LOW STOP..ARABIC SMALL LOW MEEM\n                                                if (0x6ea <= code && code <= 0x6ed) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       SYRIAC ABBREVIATION MARK\n                                                if (0x70f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                                // Mn       SYRIAC LETTER SUPERSCRIPT ALAPH\n                                                if (0x711 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x7eb) {\n                                            if (code < 0x7a6) {\n                                                // Mn  [27] SYRIAC PTHAHA ABOVE..SYRIAC BARREKH\n                                                if (0x730 <= code && code <= 0x74a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [11] THAANA ABAFILI..THAANA SUKUN\n                                                if (0x7a6 <= code && code <= 0x7b0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x7fd) {\n                                                // Mn   [9] NKO COMBINING SHORT HIGH TONE..NKO COMBINING DOUBLE DOT ABOVE\n                                                if (0x7eb <= code && code <= 0x7f3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x816) {\n                                                    // Mn       NKO DANTAYALAN\n                                                    if (0x7fd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] SAMARITAN MARK IN..SAMARITAN MARK DAGESH\n                                                    if (0x816 <= code && code <= 0x819) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x898) {\n                                        if (code < 0x829) {\n                                            if (code < 0x825) {\n                                                // Mn   [9] SAMARITAN MARK EPENTHETIC YUT..SAMARITAN VOWEL SIGN A\n                                                if (0x81b <= code && code <= 0x823) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [3] SAMARITAN VOWEL SIGN SHORT A..SAMARITAN VOWEL SIGN U\n                                                if (0x825 <= code && code <= 0x827) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x859) {\n                                                // Mn   [5] SAMARITAN VOWEL SIGN LONG I..SAMARITAN MARK NEQUDAA\n                                                if (0x829 <= code && code <= 0x82d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x890) {\n                                                    // Mn   [3] MANDAIC AFFRICATION MARK..MANDAIC GEMINATION MARK\n                                                    if (0x859 <= code && code <= 0x85b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf   [2] ARABIC POUND MARK ABOVE..ARABIC PIASTRE MARK ABOVE\n                                                    if (0x890 <= code && code <= 0x891) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x8e3) {\n                                            if (code < 0x8ca) {\n                                                // Mn   [8] ARABIC SMALL HIGH WORD AL-JUZ..ARABIC HALF MADDA OVER MADDA\n                                                if (0x898 <= code && code <= 0x89f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x8e2) {\n                                                    // Mn  [24] ARABIC SMALL HIGH FARSI YEH..ARABIC SMALL HIGH SIGN SAFHA\n                                                    if (0x8ca <= code && code <= 0x8e1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf       ARABIC DISPUTED END OF AYAH\n                                                    if (0x8e2 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x903) {\n                                                // Mn  [32] ARABIC TURNED DAMMA BELOW..DEVANAGARI SIGN ANUSVARA\n                                                if (0x8e3 <= code && code <= 0x902) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DEVANAGARI SIGN VISARGA\n                                                if (0x903 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DEVANAGARI VOWEL SIGN OE\n                                                if (0x93a === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xa01) {\n                                if (code < 0x982) {\n                                    if (code < 0x94d) {\n                                        if (code < 0x93e) {\n                                            // Mc       DEVANAGARI VOWEL SIGN OOE\n                                            if (0x93b === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       DEVANAGARI SIGN NUKTA\n                                            if (0x93c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x941) {\n                                                // Mc   [3] DEVANAGARI VOWEL SIGN AA..DEVANAGARI VOWEL SIGN II\n                                                if (0x93e <= code && code <= 0x940) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x949) {\n                                                    // Mn   [8] DEVANAGARI VOWEL SIGN U..DEVANAGARI VOWEL SIGN AI\n                                                    if (0x941 <= code && code <= 0x948) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [4] DEVANAGARI VOWEL SIGN CANDRA O..DEVANAGARI VOWEL SIGN AU\n                                                    if (0x949 <= code && code <= 0x94c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x951) {\n                                            if (code < 0x94e) {\n                                                // Mn       DEVANAGARI SIGN VIRAMA\n                                                if (0x94d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] DEVANAGARI VOWEL SIGN PRISHTHAMATRA E..DEVANAGARI VOWEL SIGN AW\n                                                if (0x94e <= code && code <= 0x94f) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x962) {\n                                                // Mn   [7] DEVANAGARI STRESS SIGN UDATTA..DEVANAGARI VOWEL SIGN UUE\n                                                if (0x951 <= code && code <= 0x957) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x981) {\n                                                    // Mn   [2] DEVANAGARI VOWEL SIGN VOCALIC L..DEVANAGARI VOWEL SIGN VOCALIC LL\n                                                    if (0x962 <= code && code <= 0x963) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SIGN CANDRABINDU\n                                                    if (0x981 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x9c7) {\n                                        if (code < 0x9be) {\n                                            if (code < 0x9bc) {\n                                                // Mc   [2] BENGALI SIGN ANUSVARA..BENGALI SIGN VISARGA\n                                                if (0x982 <= code && code <= 0x983) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BENGALI SIGN NUKTA\n                                                if (0x9bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x9bf) {\n                                                // Mc       BENGALI VOWEL SIGN AA\n                                                if (0x9be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9c1) {\n                                                    // Mc   [2] BENGALI VOWEL SIGN I..BENGALI VOWEL SIGN II\n                                                    if (0x9bf <= code && code <= 0x9c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] BENGALI VOWEL SIGN U..BENGALI VOWEL SIGN VOCALIC RR\n                                                    if (0x9c1 <= code && code <= 0x9c4) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x9d7) {\n                                            if (code < 0x9cb) {\n                                                // Mc   [2] BENGALI VOWEL SIGN E..BENGALI VOWEL SIGN AI\n                                                if (0x9c7 <= code && code <= 0x9c8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9cd) {\n                                                    // Mc   [2] BENGALI VOWEL SIGN O..BENGALI VOWEL SIGN AU\n                                                    if (0x9cb <= code && code <= 0x9cc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SIGN VIRAMA\n                                                    if (0x9cd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x9e2) {\n                                                // Mc       BENGALI AU LENGTH MARK\n                                                if (0x9d7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9fe) {\n                                                    // Mn   [2] BENGALI VOWEL SIGN VOCALIC L..BENGALI VOWEL SIGN VOCALIC LL\n                                                    if (0x9e2 <= code && code <= 0x9e3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SANDHI MARK\n                                                    if (0x9fe === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xa83) {\n                                    if (code < 0xa47) {\n                                        if (code < 0xa3c) {\n                                            if (code < 0xa03) {\n                                                // Mn   [2] GURMUKHI SIGN ADAK BINDI..GURMUKHI SIGN BINDI\n                                                if (0xa01 <= code && code <= 0xa02) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GURMUKHI SIGN VISARGA\n                                                if (0xa03 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa3e) {\n                                                // Mn       GURMUKHI SIGN NUKTA\n                                                if (0xa3c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa41) {\n                                                    // Mc   [3] GURMUKHI VOWEL SIGN AA..GURMUKHI VOWEL SIGN II\n                                                    if (0xa3e <= code && code <= 0xa40) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GURMUKHI VOWEL SIGN U..GURMUKHI VOWEL SIGN UU\n                                                    if (0xa41 <= code && code <= 0xa42) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa70) {\n                                            if (code < 0xa4b) {\n                                                // Mn   [2] GURMUKHI VOWEL SIGN EE..GURMUKHI VOWEL SIGN AI\n                                                if (0xa47 <= code && code <= 0xa48) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa51) {\n                                                    // Mn   [3] GURMUKHI VOWEL SIGN OO..GURMUKHI SIGN VIRAMA\n                                                    if (0xa4b <= code && code <= 0xa4d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       GURMUKHI SIGN UDAAT\n                                                    if (0xa51 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa75) {\n                                                // Mn   [2] GURMUKHI TIPPI..GURMUKHI ADDAK\n                                                if (0xa70 <= code && code <= 0xa71) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa81) {\n                                                    // Mn       GURMUKHI SIGN YAKASH\n                                                    if (0xa75 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GUJARATI SIGN CANDRABINDU..GUJARATI SIGN ANUSVARA\n                                                    if (0xa81 <= code && code <= 0xa82) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xac9) {\n                                        if (code < 0xabe) {\n                                            // Mc       GUJARATI SIGN VISARGA\n                                            if (0xa83 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       GUJARATI SIGN NUKTA\n                                            if (0xabc === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac1) {\n                                                // Mc   [3] GUJARATI VOWEL SIGN AA..GUJARATI VOWEL SIGN II\n                                                if (0xabe <= code && code <= 0xac0) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac7) {\n                                                    // Mn   [5] GUJARATI VOWEL SIGN U..GUJARATI VOWEL SIGN CANDRA E\n                                                    if (0xac1 <= code && code <= 0xac5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GUJARATI VOWEL SIGN E..GUJARATI VOWEL SIGN AI\n                                                    if (0xac7 <= code && code <= 0xac8) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xae2) {\n                                            if (code < 0xacb) {\n                                                // Mc       GUJARATI VOWEL SIGN CANDRA O\n                                                if (0xac9 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xacd) {\n                                                    // Mc   [2] GUJARATI VOWEL SIGN O..GUJARATI VOWEL SIGN AU\n                                                    if (0xacb <= code && code <= 0xacc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       GUJARATI SIGN VIRAMA\n                                                    if (0xacd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xafa) {\n                                                // Mn   [2] GUJARATI VOWEL SIGN VOCALIC L..GUJARATI VOWEL SIGN VOCALIC LL\n                                                if (0xae2 <= code && code <= 0xae3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb01) {\n                                                    // Mn   [6] GUJARATI SIGN SUKUN..GUJARATI SIGN TWO-CIRCLE NUKTA ABOVE\n                                                    if (0xafa <= code && code <= 0xaff) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       ORIYA SIGN CANDRABINDU\n                                                    if (0xb01 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xcf3) {\n                            if (code < 0xc04) {\n                                if (code < 0xb82) {\n                                    if (code < 0xb47) {\n                                        if (code < 0xb3e) {\n                                            if (code < 0xb3c) {\n                                                // Mc   [2] ORIYA SIGN ANUSVARA..ORIYA SIGN VISARGA\n                                                if (0xb02 <= code && code <= 0xb03) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       ORIYA SIGN NUKTA\n                                                if (0xb3c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb40) {\n                                                // Mc       ORIYA VOWEL SIGN AA\n                                                // Mn       ORIYA VOWEL SIGN I\n                                                if (0xb3e <= code && code <= 0xb3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb41) {\n                                                    // Mc       ORIYA VOWEL SIGN II\n                                                    if (0xb40 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] ORIYA VOWEL SIGN U..ORIYA VOWEL SIGN VOCALIC RR\n                                                    if (0xb41 <= code && code <= 0xb44) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb4d) {\n                                            if (code < 0xb4b) {\n                                                // Mc   [2] ORIYA VOWEL SIGN E..ORIYA VOWEL SIGN AI\n                                                if (0xb47 <= code && code <= 0xb48) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] ORIYA VOWEL SIGN O..ORIYA VOWEL SIGN AU\n                                                if (0xb4b <= code && code <= 0xb4c) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb55) {\n                                                // Mn       ORIYA SIGN VIRAMA\n                                                if (0xb4d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb62) {\n                                                    // Mn   [2] ORIYA SIGN OVERLINE..ORIYA AI LENGTH MARK\n                                                    // Mc       ORIYA AU LENGTH MARK\n                                                    if (0xb55 <= code && code <= 0xb57) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] ORIYA VOWEL SIGN VOCALIC L..ORIYA VOWEL SIGN VOCALIC LL\n                                                    if (0xb62 <= code && code <= 0xb63) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbc6) {\n                                        if (code < 0xbbf) {\n                                            // Mn       TAMIL SIGN ANUSVARA\n                                            if (0xb82 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       TAMIL VOWEL SIGN AA\n                                            if (0xbbe === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbc0) {\n                                                // Mc       TAMIL VOWEL SIGN I\n                                                if (0xbbf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc1) {\n                                                    // Mn       TAMIL VOWEL SIGN II\n                                                    if (0xbc0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] TAMIL VOWEL SIGN U..TAMIL VOWEL SIGN UU\n                                                    if (0xbc1 <= code && code <= 0xbc2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbd7) {\n                                            if (code < 0xbca) {\n                                                // Mc   [3] TAMIL VOWEL SIGN E..TAMIL VOWEL SIGN AI\n                                                if (0xbc6 <= code && code <= 0xbc8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbcd) {\n                                                    // Mc   [3] TAMIL VOWEL SIGN O..TAMIL VOWEL SIGN AU\n                                                    if (0xbca <= code && code <= 0xbcc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TAMIL SIGN VIRAMA\n                                                    if (0xbcd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc00) {\n                                                // Mc       TAMIL AU LENGTH MARK\n                                                if (0xbd7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc01) {\n                                                    // Mn       TELUGU SIGN COMBINING CANDRABINDU ABOVE\n                                                    if (0xc00 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] TELUGU SIGN CANDRABINDU..TELUGU SIGN VISARGA\n                                                    if (0xc01 <= code && code <= 0xc03) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcbe) {\n                                    if (code < 0xc4a) {\n                                        if (code < 0xc3e) {\n                                            // Mn       TELUGU SIGN COMBINING ANUSVARA ABOVE\n                                            if (0xc04 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mn       TELUGU SIGN NUKTA\n                                            if (0xc3c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc41) {\n                                                // Mn   [3] TELUGU VOWEL SIGN AA..TELUGU VOWEL SIGN II\n                                                if (0xc3e <= code && code <= 0xc40) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc46) {\n                                                    // Mc   [4] TELUGU VOWEL SIGN U..TELUGU VOWEL SIGN VOCALIC RR\n                                                    if (0xc41 <= code && code <= 0xc44) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] TELUGU VOWEL SIGN E..TELUGU VOWEL SIGN AI\n                                                    if (0xc46 <= code && code <= 0xc48) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc81) {\n                                            if (code < 0xc55) {\n                                                // Mn   [4] TELUGU VOWEL SIGN O..TELUGU SIGN VIRAMA\n                                                if (0xc4a <= code && code <= 0xc4d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc62) {\n                                                    // Mn   [2] TELUGU LENGTH MARK..TELUGU AI LENGTH MARK\n                                                    if (0xc55 <= code && code <= 0xc56) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TELUGU VOWEL SIGN VOCALIC L..TELUGU VOWEL SIGN VOCALIC LL\n                                                    if (0xc62 <= code && code <= 0xc63) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc82) {\n                                                // Mn       KANNADA SIGN CANDRABINDU\n                                                if (0xc81 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbc) {\n                                                    // Mc   [2] KANNADA SIGN ANUSVARA..KANNADA SIGN VISARGA\n                                                    if (0xc82 <= code && code <= 0xc83) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KANNADA SIGN NUKTA\n                                                    if (0xcbc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcc6) {\n                                        if (code < 0xcc0) {\n                                            // Mc       KANNADA VOWEL SIGN AA\n                                            if (0xcbe === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       KANNADA VOWEL SIGN I\n                                            if (0xcbf === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc2) {\n                                                // Mc   [2] KANNADA VOWEL SIGN II..KANNADA VOWEL SIGN U\n                                                if (0xcc0 <= code && code <= 0xcc1) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc3) {\n                                                    // Mc       KANNADA VOWEL SIGN UU\n                                                    if (0xcc2 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KANNADA VOWEL SIGN VOCALIC R..KANNADA VOWEL SIGN VOCALIC RR\n                                                    if (0xcc3 <= code && code <= 0xcc4) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xccc) {\n                                            if (code < 0xcc7) {\n                                                // Mn       KANNADA VOWEL SIGN E\n                                                if (0xcc6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcca) {\n                                                    // Mc   [2] KANNADA VOWEL SIGN EE..KANNADA VOWEL SIGN AI\n                                                    if (0xcc7 <= code && code <= 0xcc8) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KANNADA VOWEL SIGN O..KANNADA VOWEL SIGN OO\n                                                    if (0xcca <= code && code <= 0xccb) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd5) {\n                                                // Mn   [2] KANNADA VOWEL SIGN AU..KANNADA SIGN VIRAMA\n                                                if (0xccc <= code && code <= 0xccd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce2) {\n                                                    // Mc   [2] KANNADA LENGTH MARK..KANNADA AI LENGTH MARK\n                                                    if (0xcd5 <= code && code <= 0xcd6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\n                                                    if (0xce2 <= code && code <= 0xce3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xddf) {\n                                if (code < 0xd4e) {\n                                    if (code < 0xd3f) {\n                                        if (code < 0xd02) {\n                                            if (code < 0xd00) {\n                                                // Mc       KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT\n                                                if (0xcf3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\n                                                if (0xd00 <= code && code <= 0xd01) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd3b) {\n                                                // Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n                                                if (0xd02 <= code && code <= 0xd03) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3e) {\n                                                    // Mn   [2] MALAYALAM SIGN VERTICAL BAR VIRAMA..MALAYALAM SIGN CIRCULAR VIRAMA\n                                                    if (0xd3b <= code && code <= 0xd3c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       MALAYALAM VOWEL SIGN AA\n                                                    if (0xd3e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd46) {\n                                            if (code < 0xd41) {\n                                                // Mc   [2] MALAYALAM VOWEL SIGN I..MALAYALAM VOWEL SIGN II\n                                                if (0xd3f <= code && code <= 0xd40) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] MALAYALAM VOWEL SIGN U..MALAYALAM VOWEL SIGN VOCALIC RR\n                                                if (0xd41 <= code && code <= 0xd44) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd4a) {\n                                                // Mc   [3] MALAYALAM VOWEL SIGN E..MALAYALAM VOWEL SIGN AI\n                                                if (0xd46 <= code && code <= 0xd48) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd4d) {\n                                                    // Mc   [3] MALAYALAM VOWEL SIGN O..MALAYALAM VOWEL SIGN AU\n                                                    if (0xd4a <= code && code <= 0xd4c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MALAYALAM SIGN VIRAMA\n                                                    if (0xd4d === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xdca) {\n                                        if (code < 0xd62) {\n                                            // Lo       MALAYALAM LETTER DOT REPH\n                                            if (0xd4e === code) {\n                                                return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                            }\n                                            // Mc       MALAYALAM AU LENGTH MARK\n                                            if (0xd57 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd81) {\n                                                // Mn   [2] MALAYALAM VOWEL SIGN VOCALIC L..MALAYALAM VOWEL SIGN VOCALIC LL\n                                                if (0xd62 <= code && code <= 0xd63) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd82) {\n                                                    // Mn       SINHALA SIGN CANDRABINDU\n                                                    if (0xd81 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SINHALA SIGN ANUSVARAYA..SINHALA SIGN VISARGAYA\n                                                    if (0xd82 <= code && code <= 0xd83) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xdd2) {\n                                            if (code < 0xdcf) {\n                                                // Mn       SINHALA SIGN AL-LAKUNA\n                                                if (0xdca === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xdd0) {\n                                                    // Mc       SINHALA VOWEL SIGN AELA-PILLA\n                                                    if (0xdcf === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SINHALA VOWEL SIGN KETTI AEDA-PILLA..SINHALA VOWEL SIGN DIGA AEDA-PILLA\n                                                    if (0xdd0 <= code && code <= 0xdd1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xdd6) {\n                                                // Mn   [3] SINHALA VOWEL SIGN KETTI IS-PILLA..SINHALA VOWEL SIGN KETTI PAA-PILLA\n                                                if (0xdd2 <= code && code <= 0xdd4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xdd8) {\n                                                    // Mn       SINHALA VOWEL SIGN DIGA PAA-PILLA\n                                                    if (0xdd6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [7] SINHALA VOWEL SIGN GAETTA-PILLA..SINHALA VOWEL SIGN KOMBUVA HAA GAYANUKITTA\n                                                    if (0xdd8 <= code && code <= 0xdde) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xf35) {\n                                    if (code < 0xe47) {\n                                        if (code < 0xe31) {\n                                            if (code < 0xdf2) {\n                                                // Mc       SINHALA VOWEL SIGN GAYANUKITTA\n                                                if (0xddf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] SINHALA VOWEL SIGN DIGA GAETTA-PILLA..SINHALA VOWEL SIGN DIGA GAYANUKITTA\n                                                if (0xdf2 <= code && code <= 0xdf3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xe33) {\n                                                // Mn       THAI CHARACTER MAI HAN-AKAT\n                                                if (0xe31 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe34) {\n                                                    // Lo       THAI CHARACTER SARA AM\n                                                    if (0xe33 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] THAI CHARACTER SARA I..THAI CHARACTER PHINTHU\n                                                    if (0xe34 <= code && code <= 0xe3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xeb4) {\n                                            if (code < 0xeb1) {\n                                                // Mn   [8] THAI CHARACTER MAITAIKHU..THAI CHARACTER YAMAKKAN\n                                                if (0xe47 <= code && code <= 0xe4e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       LAO VOWEL SIGN MAI KAN\n                                                if (0xeb1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Lo       LAO VOWEL SIGN AM\n                                                if (0xeb3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xec8) {\n                                                // Mn   [9] LAO VOWEL SIGN I..LAO SEMIVOWEL SIGN LO\n                                                if (0xeb4 <= code && code <= 0xebc) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf18) {\n                                                    // Mn   [7] LAO TONE MAI EK..LAO YAMAKKAN\n                                                    if (0xec8 <= code && code <= 0xece) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIBETAN ASTROLOGICAL SIGN -KHYUD PA..TIBETAN ASTROLOGICAL SIGN SDONG TSHUGS\n                                                    if (0xf18 <= code && code <= 0xf19) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xf7f) {\n                                        if (code < 0xf39) {\n                                            // Mn       TIBETAN MARK NGAS BZUNG NYI ZLA\n                                            if (0xf35 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mn       TIBETAN MARK NGAS BZUNG SGOR RTAGS\n                                            if (0xf37 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xf3e) {\n                                                // Mn       TIBETAN MARK TSA -PHRU\n                                                if (0xf39 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf71) {\n                                                    // Mc   [2] TIBETAN SIGN YAR TSHES..TIBETAN SIGN MAR TSHES\n                                                    if (0xf3e <= code && code <= 0xf3f) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [14] TIBETAN VOWEL SIGN AA..TIBETAN SIGN RJES SU NGA RO\n                                                    if (0xf71 <= code && code <= 0xf7e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xf8d) {\n                                            if (code < 0xf80) {\n                                                // Mc       TIBETAN SIGN RNAM BCAD\n                                                if (0xf7f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf86) {\n                                                    // Mn   [5] TIBETAN VOWEL SIGN REVERSED I..TIBETAN MARK HALANTA\n                                                    if (0xf80 <= code && code <= 0xf84) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIBETAN SIGN LCI RTAGS..TIBETAN SIGN YANG RTAGS\n                                                    if (0xf86 <= code && code <= 0xf87) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xf99) {\n                                                // Mn  [11] TIBETAN SUBJOINED SIGN LCE TSA CAN..TIBETAN SUBJOINED LETTER JA\n                                                if (0xf8d <= code && code <= 0xf97) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfc6) {\n                                                    // Mn  [36] TIBETAN SUBJOINED LETTER NYA..TIBETAN SUBJOINED LETTER FIXED-FORM RA\n                                                    if (0xf99 <= code && code <= 0xfbc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TIBETAN SYMBOL PADMA GDAN\n                                                    if (0xfc6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1c24) {\n                        if (code < 0x1930) {\n                            if (code < 0x1732) {\n                                if (code < 0x1082) {\n                                    if (code < 0x103d) {\n                                        if (code < 0x1032) {\n                                            if (code < 0x1031) {\n                                                // Mn   [4] MYANMAR VOWEL SIGN I..MYANMAR VOWEL SIGN UU\n                                                if (0x102d <= code && code <= 0x1030) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MYANMAR VOWEL SIGN E\n                                                if (0x1031 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1039) {\n                                                // Mn   [6] MYANMAR VOWEL SIGN AI..MYANMAR SIGN DOT BELOW\n                                                if (0x1032 <= code && code <= 0x1037) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x103b) {\n                                                    // Mn   [2] MYANMAR SIGN VIRAMA..MYANMAR SIGN ASAT\n                                                    if (0x1039 <= code && code <= 0x103a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] MYANMAR CONSONANT SIGN MEDIAL YA..MYANMAR CONSONANT SIGN MEDIAL RA\n                                                    if (0x103b <= code && code <= 0x103c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1058) {\n                                            if (code < 0x1056) {\n                                                // Mn   [2] MYANMAR CONSONANT SIGN MEDIAL WA..MYANMAR CONSONANT SIGN MEDIAL HA\n                                                if (0x103d <= code && code <= 0x103e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] MYANMAR VOWEL SIGN VOCALIC R..MYANMAR VOWEL SIGN VOCALIC RR\n                                                if (0x1056 <= code && code <= 0x1057) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x105e) {\n                                                // Mn   [2] MYANMAR VOWEL SIGN VOCALIC L..MYANMAR VOWEL SIGN VOCALIC LL\n                                                if (0x1058 <= code && code <= 0x1059) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1071) {\n                                                    // Mn   [3] MYANMAR CONSONANT SIGN MON MEDIAL NA..MYANMAR CONSONANT SIGN MON MEDIAL LA\n                                                    if (0x105e <= code && code <= 0x1060) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] MYANMAR VOWEL SIGN GEBA KAREN I..MYANMAR VOWEL SIGN KAYAH EE\n                                                    if (0x1071 <= code && code <= 0x1074) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1100) {\n                                        if (code < 0x1085) {\n                                            // Mn       MYANMAR CONSONANT SIGN SHAN MEDIAL WA\n                                            if (0x1082 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       MYANMAR VOWEL SIGN SHAN E\n                                            if (0x1084 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x108d) {\n                                                // Mn   [2] MYANMAR VOWEL SIGN SHAN E ABOVE..MYANMAR VOWEL SIGN SHAN FINAL Y\n                                                if (0x1085 <= code && code <= 0x1086) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MYANMAR SIGN SHAN COUNCIL EMPHATIC TONE\n                                                if (0x108d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       MYANMAR VOWEL SIGN AITON AI\n                                                if (0x109d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x135d) {\n                                            if (code < 0x1160) {\n                                                // Lo  [96] HANGUL CHOSEONG KIYEOK..HANGUL CHOSEONG FILLER\n                                                if (0x1100 <= code && code <= 0x115f) {\n                                                    return boundaries_1.CLUSTER_BREAK.L;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a8) {\n                                                    // Lo  [72] HANGUL JUNGSEONG FILLER..HANGUL JUNGSEONG O-YAE\n                                                    if (0x1160 <= code && code <= 0x11a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.V;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [88] HANGUL JONGSEONG KIYEOK..HANGUL JONGSEONG SSANGNIEUN\n                                                    if (0x11a8 <= code && code <= 0x11ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.T;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1712) {\n                                                // Mn   [3] ETHIOPIC COMBINING GEMINATION AND VOWEL LENGTH MARK..ETHIOPIC COMBINING GEMINATION MARK\n                                                if (0x135d <= code && code <= 0x135f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1715) {\n                                                    // Mn   [3] TAGALOG VOWEL SIGN I..TAGALOG SIGN VIRAMA\n                                                    if (0x1712 <= code && code <= 0x1714) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       TAGALOG SIGN PAMUDPOD\n                                                    if (0x1715 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x17c9) {\n                                    if (code < 0x17b6) {\n                                        if (code < 0x1752) {\n                                            if (code < 0x1734) {\n                                                // Mn   [2] HANUNOO VOWEL SIGN I..HANUNOO VOWEL SIGN U\n                                                if (0x1732 <= code && code <= 0x1733) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       HANUNOO SIGN PAMUDPOD\n                                                if (0x1734 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1772) {\n                                                // Mn   [2] BUHID VOWEL SIGN I..BUHID VOWEL SIGN U\n                                                if (0x1752 <= code && code <= 0x1753) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x17b4) {\n                                                    // Mn   [2] TAGBANWA VOWEL SIGN I..TAGBANWA VOWEL SIGN U\n                                                    if (0x1772 <= code && code <= 0x1773) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KHMER VOWEL INHERENT AQ..KHMER VOWEL INHERENT AA\n                                                    if (0x17b4 <= code && code <= 0x17b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x17be) {\n                                            if (code < 0x17b7) {\n                                                // Mc       KHMER VOWEL SIGN AA\n                                                if (0x17b6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [7] KHMER VOWEL SIGN I..KHMER VOWEL SIGN UA\n                                                if (0x17b7 <= code && code <= 0x17bd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x17c6) {\n                                                // Mc   [8] KHMER VOWEL SIGN OE..KHMER VOWEL SIGN AU\n                                                if (0x17be <= code && code <= 0x17c5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x17c7) {\n                                                    // Mn       KHMER SIGN NIKAHIT\n                                                    if (0x17c6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KHMER SIGN REAHMUK..KHMER SIGN YUUKALEAPINTU\n                                                    if (0x17c7 <= code && code <= 0x17c8) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1885) {\n                                        if (code < 0x180b) {\n                                            if (code < 0x17dd) {\n                                                // Mn  [11] KHMER SIGN MUUSIKATOAN..KHMER SIGN BATHAMASAT\n                                                if (0x17c9 <= code && code <= 0x17d3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KHMER SIGN ATTHACAN\n                                                if (0x17dd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x180e) {\n                                                // Mn   [3] MONGOLIAN FREE VARIATION SELECTOR ONE..MONGOLIAN FREE VARIATION SELECTOR THREE\n                                                if (0x180b <= code && code <= 0x180d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       MONGOLIAN VOWEL SEPARATOR\n                                                if (0x180e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                                // Mn       MONGOLIAN FREE VARIATION SELECTOR FOUR\n                                                if (0x180f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1923) {\n                                            if (code < 0x18a9) {\n                                                // Mn   [2] MONGOLIAN LETTER ALI GALI BALUDA..MONGOLIAN LETTER ALI GALI THREE BALUDA\n                                                if (0x1885 <= code && code <= 0x1886) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1920) {\n                                                    // Mn       MONGOLIAN LETTER ALI GALI DAGALGA\n                                                    if (0x18a9 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] LIMBU VOWEL SIGN A..LIMBU VOWEL SIGN U\n                                                    if (0x1920 <= code && code <= 0x1922) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1927) {\n                                                // Mc   [4] LIMBU VOWEL SIGN EE..LIMBU VOWEL SIGN AU\n                                                if (0x1923 <= code && code <= 0x1926) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1929) {\n                                                    // Mn   [2] LIMBU VOWEL SIGN E..LIMBU VOWEL SIGN O\n                                                    if (0x1927 <= code && code <= 0x1928) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] LIMBU SUBJOINED LETTER YA..LIMBU SUBJOINED LETTER WA\n                                                    if (0x1929 <= code && code <= 0x192b) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1b3b) {\n                                if (code < 0x1a58) {\n                                    if (code < 0x1a19) {\n                                        if (code < 0x1933) {\n                                            if (code < 0x1932) {\n                                                // Mc   [2] LIMBU SMALL LETTER KA..LIMBU SMALL LETTER NGA\n                                                if (0x1930 <= code && code <= 0x1931) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       LIMBU SMALL LETTER ANUSVARA\n                                                if (0x1932 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1939) {\n                                                // Mc   [6] LIMBU SMALL LETTER TA..LIMBU SMALL LETTER LA\n                                                if (0x1933 <= code && code <= 0x1938) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1a17) {\n                                                    // Mn   [3] LIMBU SIGN MUKPHRENG..LIMBU SIGN SA-I\n                                                    if (0x1939 <= code && code <= 0x193b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] BUGINESE VOWEL SIGN I..BUGINESE VOWEL SIGN U\n                                                    if (0x1a17 <= code && code <= 0x1a18) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1a55) {\n                                            if (code < 0x1a1b) {\n                                                // Mc   [2] BUGINESE VOWEL SIGN E..BUGINESE VOWEL SIGN O\n                                                if (0x1a19 <= code && code <= 0x1a1a) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BUGINESE VOWEL SIGN AE\n                                                if (0x1a1b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1a56) {\n                                                // Mc       TAI THAM CONSONANT SIGN MEDIAL RA\n                                                if (0x1a55 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI THAM CONSONANT SIGN MEDIAL LA\n                                                if (0x1a56 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       TAI THAM CONSONANT SIGN LA TANG LAI\n                                                if (0x1a57 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1a73) {\n                                        if (code < 0x1a62) {\n                                            if (code < 0x1a60) {\n                                                // Mn   [7] TAI THAM SIGN MAI KANG LAI..TAI THAM CONSONANT SIGN SA\n                                                if (0x1a58 <= code && code <= 0x1a5e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI THAM SIGN SAKOT\n                                                if (0x1a60 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1a65) {\n                                                // Mn       TAI THAM VOWEL SIGN MAI SAT\n                                                if (0x1a62 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1a6d) {\n                                                    // Mn   [8] TAI THAM VOWEL SIGN I..TAI THAM VOWEL SIGN OA BELOW\n                                                    if (0x1a65 <= code && code <= 0x1a6c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [6] TAI THAM VOWEL SIGN OY..TAI THAM VOWEL SIGN THAM AI\n                                                    if (0x1a6d <= code && code <= 0x1a72) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1b00) {\n                                            if (code < 0x1a7f) {\n                                                // Mn  [10] TAI THAM VOWEL SIGN OA ABOVE..TAI THAM SIGN KHUEN-LUE KARAN\n                                                if (0x1a73 <= code && code <= 0x1a7c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1ab0) {\n                                                    // Mn       TAI THAM COMBINING CRYPTOGRAMMIC DOT\n                                                    if (0x1a7f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [14] COMBINING DOUBLED CIRCUMFLEX ACCENT..COMBINING PARENTHESES BELOW\n                                                    // Me       COMBINING PARENTHESES OVERLAY\n                                                    // Mn  [16] COMBINING LATIN SMALL LETTER W BELOW..COMBINING LATIN SMALL LETTER INSULAR T\n                                                    if (0x1ab0 <= code && code <= 0x1ace) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1b04) {\n                                                // Mn   [4] BALINESE SIGN ULU RICEM..BALINESE SIGN SURANG\n                                                if (0x1b00 <= code && code <= 0x1b03) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b34) {\n                                                    // Mc       BALINESE SIGN BISAH\n                                                    if (0x1b04 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BALINESE SIGN REREKAN\n                                                    // Mc       BALINESE VOWEL SIGN TEDUNG\n                                                    // Mn   [5] BALINESE VOWEL SIGN ULU..BALINESE VOWEL SIGN RA REPA\n                                                    if (0x1b34 <= code && code <= 0x1b3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x1ba8) {\n                                    if (code < 0x1b6b) {\n                                        if (code < 0x1b3d) {\n                                            // Mc       BALINESE VOWEL SIGN RA REPA TEDUNG\n                                            if (0x1b3b === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BALINESE VOWEL SIGN LA LENGA\n                                            if (0x1b3c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1b42) {\n                                                // Mc   [5] BALINESE VOWEL SIGN LA LENGA TEDUNG..BALINESE VOWEL SIGN TALING REPA TEDUNG\n                                                if (0x1b3d <= code && code <= 0x1b41) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b43) {\n                                                    // Mn       BALINESE VOWEL SIGN PEPET\n                                                    if (0x1b42 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] BALINESE VOWEL SIGN PEPET TEDUNG..BALINESE ADEG ADEG\n                                                    if (0x1b43 <= code && code <= 0x1b44) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1ba1) {\n                                            if (code < 0x1b80) {\n                                                // Mn   [9] BALINESE MUSICAL SYMBOL COMBINING TEGEH..BALINESE MUSICAL SYMBOL COMBINING GONG\n                                                if (0x1b6b <= code && code <= 0x1b73) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b82) {\n                                                    // Mn   [2] SUNDANESE SIGN PANYECEK..SUNDANESE SIGN PANGLAYAR\n                                                    if (0x1b80 <= code && code <= 0x1b81) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       SUNDANESE SIGN PANGWISAD\n                                                    if (0x1b82 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1ba2) {\n                                                // Mc       SUNDANESE CONSONANT SIGN PAMINGKAL\n                                                if (0x1ba1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1ba6) {\n                                                    // Mn   [4] SUNDANESE CONSONANT SIGN PANYAKRA..SUNDANESE VOWEL SIGN PANYUKU\n                                                    if (0x1ba2 <= code && code <= 0x1ba5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SUNDANESE VOWEL SIGN PANAELAENG..SUNDANESE VOWEL SIGN PANOLONG\n                                                    if (0x1ba6 <= code && code <= 0x1ba7) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1be8) {\n                                        if (code < 0x1bab) {\n                                            if (code < 0x1baa) {\n                                                // Mn   [2] SUNDANESE VOWEL SIGN PAMEPET..SUNDANESE VOWEL SIGN PANEULEUNG\n                                                if (0x1ba8 <= code && code <= 0x1ba9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       SUNDANESE SIGN PAMAAEH\n                                                if (0x1baa === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1be6) {\n                                                // Mn   [3] SUNDANESE SIGN VIRAMA..SUNDANESE CONSONANT SIGN PASANGAN WA\n                                                if (0x1bab <= code && code <= 0x1bad) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BATAK SIGN TOMPI\n                                                if (0x1be6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       BATAK VOWEL SIGN E\n                                                if (0x1be7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1bee) {\n                                            if (code < 0x1bea) {\n                                                // Mn   [2] BATAK VOWEL SIGN PAKPAK E..BATAK VOWEL SIGN EE\n                                                if (0x1be8 <= code && code <= 0x1be9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bed) {\n                                                    // Mc   [3] BATAK VOWEL SIGN I..BATAK VOWEL SIGN O\n                                                    if (0x1bea <= code && code <= 0x1bec) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BATAK VOWEL SIGN KARO O\n                                                    if (0x1bed === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1bef) {\n                                                // Mc       BATAK VOWEL SIGN U\n                                                if (0x1bee === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bf2) {\n                                                    // Mn   [3] BATAK VOWEL SIGN U FOR SIMALUNGUN SA..BATAK CONSONANT SIGN H\n                                                    if (0x1bef <= code && code <= 0x1bf1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] BATAK PANGOLAT..BATAK PANONGONAN\n                                                    if (0x1bf2 <= code && code <= 0x1bf3) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xa952) {\n                            if (code < 0x2d7f) {\n                                if (code < 0x1cf7) {\n                                    if (code < 0x1cd4) {\n                                        if (code < 0x1c34) {\n                                            if (code < 0x1c2c) {\n                                                // Mc   [8] LEPCHA SUBJOINED LETTER YA..LEPCHA VOWEL SIGN UU\n                                                if (0x1c24 <= code && code <= 0x1c2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [8] LEPCHA VOWEL SIGN E..LEPCHA CONSONANT SIGN T\n                                                if (0x1c2c <= code && code <= 0x1c33) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1c36) {\n                                                // Mc   [2] LEPCHA CONSONANT SIGN NYIN-DO..LEPCHA CONSONANT SIGN KANG\n                                                if (0x1c34 <= code && code <= 0x1c35) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1cd0) {\n                                                    // Mn   [2] LEPCHA SIGN RAN..LEPCHA SIGN NUKTA\n                                                    if (0x1c36 <= code && code <= 0x1c37) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] VEDIC TONE KARSHANA..VEDIC TONE PRENKHA\n                                                    if (0x1cd0 <= code && code <= 0x1cd2) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1ce2) {\n                                            if (code < 0x1ce1) {\n                                                // Mn  [13] VEDIC SIGN YAJURVEDIC MIDLINE SVARITA..VEDIC TONE RIGVEDIC KASHMIRI INDEPENDENT SVARITA\n                                                if (0x1cd4 <= code && code <= 0x1ce0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       VEDIC TONE ATHARVAVEDIC INDEPENDENT SVARITA\n                                                if (0x1ce1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1ced) {\n                                                // Mn   [7] VEDIC SIGN VISARGA SVARITA..VEDIC SIGN VISARGA ANUDATTA WITH TAIL\n                                                if (0x1ce2 <= code && code <= 0x1ce8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       VEDIC SIGN TIRYAK\n                                                if (0x1ced === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       VEDIC TONE CANDRA ABOVE\n                                                if (0x1cf4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x200d) {\n                                        if (code < 0x1dc0) {\n                                            if (code < 0x1cf8) {\n                                                // Mc       VEDIC SIGN ATIKRAMA\n                                                if (0x1cf7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] VEDIC TONE RING ABOVE..VEDIC TONE DOUBLE RING ABOVE\n                                                if (0x1cf8 <= code && code <= 0x1cf9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x200b) {\n                                                // Mn  [64] COMBINING DOTTED GRAVE ACCENT..COMBINING RIGHT ARROWHEAD AND DOWN ARROWHEAD BELOW\n                                                if (0x1dc0 <= code && code <= 0x1dff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       ZERO WIDTH SPACE\n                                                if (0x200b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                                // Cf       ZERO WIDTH NON-JOINER\n                                                if (0x200c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x2060) {\n                                            if (code < 0x200e) {\n                                                // Cf       ZERO WIDTH JOINER\n                                                if (0x200d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.ZWJ;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x2028) {\n                                                    // Cf   [2] LEFT-TO-RIGHT MARK..RIGHT-TO-LEFT MARK\n                                                    if (0x200e <= code && code <= 0x200f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Zl       LINE SEPARATOR\n                                                    // Zp       PARAGRAPH SEPARATOR\n                                                    // Cf   [5] LEFT-TO-RIGHT EMBEDDING..RIGHT-TO-LEFT OVERRIDE\n                                                    if (0x2028 <= code && code <= 0x202e) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x20d0) {\n                                                // Cf   [5] WORD JOINER..INVISIBLE PLUS\n                                                // Cn       <reserved-2065>\n                                                // Cf  [10] LEFT-TO-RIGHT ISOLATE..NOMINAL DIGIT SHAPES\n                                                if (0x2060 <= code && code <= 0x206f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x2cef) {\n                                                    // Mn  [13] COMBINING LEFT HARPOON ABOVE..COMBINING FOUR DOTS ABOVE\n                                                    // Me   [4] COMBINING ENCLOSING CIRCLE..COMBINING ENCLOSING CIRCLE BACKSLASH\n                                                    // Mn       COMBINING LEFT RIGHT ARROW ABOVE\n                                                    // Me   [3] COMBINING ENCLOSING SCREEN..COMBINING ENCLOSING UPWARD POINTING TRIANGLE\n                                                    // Mn  [12] COMBINING REVERSE SOLIDUS OVERLAY..COMBINING ASTERISK ABOVE\n                                                    if (0x20d0 <= code && code <= 0x20f0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] COPTIC COMBINING NI ABOVE..COPTIC COMBINING SPIRITUS LENIS\n                                                    if (0x2cef <= code && code <= 0x2cf1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xa823) {\n                                    if (code < 0xa674) {\n                                        if (code < 0x302a) {\n                                            if (code < 0x2de0) {\n                                                // Mn       TIFINAGH CONSONANT JOINER\n                                                if (0x2d7f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [32] COMBINING CYRILLIC LETTER BE..COMBINING CYRILLIC LETTER IOTIFIED BIG YUS\n                                                if (0x2de0 <= code && code <= 0x2dff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x3099) {\n                                                // Mn   [4] IDEOGRAPHIC LEVEL TONE MARK..IDEOGRAPHIC ENTERING TONE MARK\n                                                // Mc   [2] HANGUL SINGLE DOT TONE MARK..HANGUL DOUBLE DOT TONE MARK\n                                                if (0x302a <= code && code <= 0x302f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa66f) {\n                                                    // Mn   [2] COMBINING KATAKANA-HIRAGANA VOICED SOUND MARK..COMBINING KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK\n                                                    if (0x3099 <= code && code <= 0x309a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       COMBINING CYRILLIC VZMET\n                                                    // Me   [3] COMBINING CYRILLIC TEN MILLIONS SIGN..COMBINING CYRILLIC THOUSAND MILLIONS SIGN\n                                                    if (0xa66f <= code && code <= 0xa672) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa802) {\n                                            if (code < 0xa69e) {\n                                                // Mn  [10] COMBINING CYRILLIC LETTER UKRAINIAN IE..COMBINING CYRILLIC PAYEROK\n                                                if (0xa674 <= code && code <= 0xa67d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa6f0) {\n                                                    // Mn   [2] COMBINING CYRILLIC LETTER EF..COMBINING CYRILLIC LETTER IOTIFIED E\n                                                    if (0xa69e <= code && code <= 0xa69f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] BAMUM COMBINING MARK KOQNDON..BAMUM COMBINING MARK TUKWENTIS\n                                                    if (0xa6f0 <= code && code <= 0xa6f1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa806) {\n                                                // Mn       SYLOTI NAGRI SIGN DVISVARA\n                                                if (0xa802 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       SYLOTI NAGRI SIGN HASANTA\n                                                if (0xa806 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       SYLOTI NAGRI SIGN ANUSVARA\n                                                if (0xa80b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xa8b4) {\n                                        if (code < 0xa827) {\n                                            if (code < 0xa825) {\n                                                // Mc   [2] SYLOTI NAGRI VOWEL SIGN A..SYLOTI NAGRI VOWEL SIGN I\n                                                if (0xa823 <= code && code <= 0xa824) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SYLOTI NAGRI VOWEL SIGN U..SYLOTI NAGRI VOWEL SIGN E\n                                                if (0xa825 <= code && code <= 0xa826) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa82c) {\n                                                // Mc       SYLOTI NAGRI VOWEL SIGN OO\n                                                if (0xa827 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa880) {\n                                                    // Mn       SYLOTI NAGRI SIGN ALTERNATE HASANTA\n                                                    if (0xa82c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SAURASHTRA SIGN ANUSVARA..SAURASHTRA SIGN VISARGA\n                                                    if (0xa880 <= code && code <= 0xa881) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa8ff) {\n                                            if (code < 0xa8c4) {\n                                                // Mc  [16] SAURASHTRA CONSONANT SIGN HAARU..SAURASHTRA VOWEL SIGN AU\n                                                if (0xa8b4 <= code && code <= 0xa8c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa8e0) {\n                                                    // Mn   [2] SAURASHTRA SIGN VIRAMA..SAURASHTRA SIGN CANDRABINDU\n                                                    if (0xa8c4 <= code && code <= 0xa8c5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [18] COMBINING DEVANAGARI DIGIT ZERO..COMBINING DEVANAGARI SIGN AVAGRAHA\n                                                    if (0xa8e0 <= code && code <= 0xa8f1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa926) {\n                                                // Mn       DEVANAGARI VOWEL SIGN AY\n                                                if (0xa8ff === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa947) {\n                                                    // Mn   [8] KAYAH LI VOWEL UE..KAYAH LI TONE CALYA PLOPHU\n                                                    if (0xa926 <= code && code <= 0xa92d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [11] REJANG VOWEL SIGN I..REJANG CONSONANT SIGN R\n                                                    if (0xa947 <= code && code <= 0xa951) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xaab2) {\n                                if (code < 0xa9e5) {\n                                    if (code < 0xa9b4) {\n                                        if (code < 0xa980) {\n                                            if (code < 0xa960) {\n                                                // Mc   [2] REJANG CONSONANT SIGN H..REJANG VIRAMA\n                                                if (0xa952 <= code && code <= 0xa953) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [29] HANGUL CHOSEONG TIKEUT-MIEUM..HANGUL CHOSEONG SSANGYEORINHIEUH\n                                                if (0xa960 <= code && code <= 0xa97c) {\n                                                    return boundaries_1.CLUSTER_BREAK.L;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa983) {\n                                                // Mn   [3] JAVANESE SIGN PANYANGGA..JAVANESE SIGN LAYAR\n                                                if (0xa980 <= code && code <= 0xa982) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       JAVANESE SIGN WIGNYAN\n                                                if (0xa983 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       JAVANESE SIGN CECAK TELU\n                                                if (0xa9b3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa9ba) {\n                                            if (code < 0xa9b6) {\n                                                // Mc   [2] JAVANESE VOWEL SIGN TARUNG..JAVANESE VOWEL SIGN TOLONG\n                                                if (0xa9b4 <= code && code <= 0xa9b5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] JAVANESE VOWEL SIGN WULU..JAVANESE VOWEL SIGN SUKU MENDUT\n                                                if (0xa9b6 <= code && code <= 0xa9b9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa9bc) {\n                                                // Mc   [2] JAVANESE VOWEL SIGN TALING..JAVANESE VOWEL SIGN DIRGA MURE\n                                                if (0xa9ba <= code && code <= 0xa9bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa9be) {\n                                                    // Mn   [2] JAVANESE VOWEL SIGN PEPET..JAVANESE CONSONANT SIGN KERET\n                                                    if (0xa9bc <= code && code <= 0xa9bd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] JAVANESE CONSONANT SIGN PENGKAL..JAVANESE PANGKON\n                                                    if (0xa9be <= code && code <= 0xa9c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xaa35) {\n                                        if (code < 0xaa2f) {\n                                            if (code < 0xaa29) {\n                                                // Mn       MYANMAR SIGN SHAN SAW\n                                                if (0xa9e5 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [6] CHAM VOWEL SIGN AA..CHAM VOWEL SIGN OE\n                                                if (0xaa29 <= code && code <= 0xaa2e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaa31) {\n                                                // Mc   [2] CHAM VOWEL SIGN O..CHAM VOWEL SIGN AI\n                                                if (0xaa2f <= code && code <= 0xaa30) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaa33) {\n                                                    // Mn   [2] CHAM VOWEL SIGN AU..CHAM VOWEL SIGN UE\n                                                    if (0xaa31 <= code && code <= 0xaa32) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] CHAM CONSONANT SIGN YA..CHAM CONSONANT SIGN RA\n                                                    if (0xaa33 <= code && code <= 0xaa34) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaa4d) {\n                                            if (code < 0xaa43) {\n                                                // Mn   [2] CHAM CONSONANT SIGN LA..CHAM CONSONANT SIGN WA\n                                                if (0xaa35 <= code && code <= 0xaa36) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       CHAM CONSONANT SIGN FINAL NG\n                                                if (0xaa43 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       CHAM CONSONANT SIGN FINAL M\n                                                if (0xaa4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaa7c) {\n                                                // Mc       CHAM CONSONANT SIGN FINAL H\n                                                if (0xaa4d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MYANMAR SIGN TAI LAING TONE-2\n                                                if (0xaa7c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       TAI VIET MAI KANG\n                                                if (0xaab0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xabe6) {\n                                    if (code < 0xaaec) {\n                                        if (code < 0xaabe) {\n                                            if (code < 0xaab7) {\n                                                // Mn   [3] TAI VIET VOWEL I..TAI VIET VOWEL U\n                                                if (0xaab2 <= code && code <= 0xaab4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] TAI VIET MAI KHIT..TAI VIET VOWEL IA\n                                                if (0xaab7 <= code && code <= 0xaab8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaac1) {\n                                                // Mn   [2] TAI VIET VOWEL AM..TAI VIET TONE MAI EK\n                                                if (0xaabe <= code && code <= 0xaabf) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI VIET TONE MAI THO\n                                                if (0xaac1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       MEETEI MAYEK VOWEL SIGN II\n                                                if (0xaaeb === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaaf6) {\n                                            if (code < 0xaaee) {\n                                                // Mn   [2] MEETEI MAYEK VOWEL SIGN UU..MEETEI MAYEK VOWEL SIGN AAI\n                                                if (0xaaec <= code && code <= 0xaaed) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaaf5) {\n                                                    // Mc   [2] MEETEI MAYEK VOWEL SIGN AU..MEETEI MAYEK VOWEL SIGN AAU\n                                                    if (0xaaee <= code && code <= 0xaaef) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       MEETEI MAYEK VOWEL SIGN VISARGA\n                                                    if (0xaaf5 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xabe3) {\n                                                // Mn       MEETEI MAYEK VIRAMA\n                                                if (0xaaf6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xabe5) {\n                                                    // Mc   [2] MEETEI MAYEK VOWEL SIGN ONAP..MEETEI MAYEK VOWEL SIGN INAP\n                                                    if (0xabe3 <= code && code <= 0xabe4) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MEETEI MAYEK VOWEL SIGN ANAP\n                                                    if (0xabe5 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xac00) {\n                                        if (code < 0xabe9) {\n                                            if (code < 0xabe8) {\n                                                // Mc   [2] MEETEI MAYEK VOWEL SIGN YENAP..MEETEI MAYEK VOWEL SIGN SOUNAP\n                                                if (0xabe6 <= code && code <= 0xabe7) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MEETEI MAYEK VOWEL SIGN UNAP\n                                                if (0xabe8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xabec) {\n                                                // Mc   [2] MEETEI MAYEK VOWEL SIGN CHEINAP..MEETEI MAYEK VOWEL SIGN NUNG\n                                                if (0xabe9 <= code && code <= 0xabea) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MEETEI MAYEK LUM IYEK\n                                                if (0xabec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       MEETEI MAYEK APUN IYEK\n                                                if (0xabed === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xac1d) {\n                                            if (code < 0xac01) {\n                                                // Lo       HANGUL SYLLABLE GA\n                                                if (0xac00 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac1c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GAG..HANGUL SYLLABLE GAH\n                                                    if (0xac01 <= code && code <= 0xac1b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GAE\n                                                    if (0xac1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac38) {\n                                                // Lo  [27] HANGUL SYLLABLE GAEG..HANGUL SYLLABLE GAEH\n                                                if (0xac1d <= code && code <= 0xac37) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac39) {\n                                                    // Lo       HANGUL SYLLABLE GYA\n                                                    if (0xac38 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GYAG..HANGUL SYLLABLE GYAH\n                                                    if (0xac39 <= code && code <= 0xac53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0xb5a1) {\n                    if (code < 0xb0ed) {\n                        if (code < 0xaea0) {\n                            if (code < 0xad6d) {\n                                if (code < 0xace0) {\n                                    if (code < 0xac8d) {\n                                        if (code < 0xac70) {\n                                            if (code < 0xac55) {\n                                                // Lo       HANGUL SYLLABLE GYAE\n                                                if (0xac54 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GYAEG..HANGUL SYLLABLE GYAEH\n                                                if (0xac55 <= code && code <= 0xac6f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac71) {\n                                                // Lo       HANGUL SYLLABLE GEO\n                                                if (0xac70 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac8c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GEOG..HANGUL SYLLABLE GEOH\n                                                    if (0xac71 <= code && code <= 0xac8b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GE\n                                                    if (0xac8c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaca9) {\n                                            if (code < 0xaca8) {\n                                                // Lo  [27] HANGUL SYLLABLE GEG..HANGUL SYLLABLE GEH\n                                                if (0xac8d <= code && code <= 0xaca7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GYEO\n                                                if (0xaca8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xacc4) {\n                                                // Lo  [27] HANGUL SYLLABLE GYEOG..HANGUL SYLLABLE GYEOH\n                                                if (0xaca9 <= code && code <= 0xacc3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xacc5) {\n                                                    // Lo       HANGUL SYLLABLE GYE\n                                                    if (0xacc4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GYEG..HANGUL SYLLABLE GYEH\n                                                    if (0xacc5 <= code && code <= 0xacdf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xad19) {\n                                        if (code < 0xacfc) {\n                                            if (code < 0xace1) {\n                                                // Lo       HANGUL SYLLABLE GO\n                                                if (0xace0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GOG..HANGUL SYLLABLE GOH\n                                                if (0xace1 <= code && code <= 0xacfb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xacfd) {\n                                                // Lo       HANGUL SYLLABLE GWA\n                                                if (0xacfc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad18) {\n                                                    // Lo  [27] HANGUL SYLLABLE GWAG..HANGUL SYLLABLE GWAH\n                                                    if (0xacfd <= code && code <= 0xad17) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GWAE\n                                                    if (0xad18 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xad50) {\n                                            if (code < 0xad34) {\n                                                // Lo  [27] HANGUL SYLLABLE GWAEG..HANGUL SYLLABLE GWAEH\n                                                if (0xad19 <= code && code <= 0xad33) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad35) {\n                                                    // Lo       HANGUL SYLLABLE GOE\n                                                    if (0xad34 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GOEG..HANGUL SYLLABLE GOEH\n                                                    if (0xad35 <= code && code <= 0xad4f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xad51) {\n                                                // Lo       HANGUL SYLLABLE GYO\n                                                if (0xad50 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad6c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GYOG..HANGUL SYLLABLE GYOH\n                                                    if (0xad51 <= code && code <= 0xad6b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GU\n                                                    if (0xad6c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xadf9) {\n                                    if (code < 0xadc0) {\n                                        if (code < 0xad89) {\n                                            if (code < 0xad88) {\n                                                // Lo  [27] HANGUL SYLLABLE GUG..HANGUL SYLLABLE GUH\n                                                if (0xad6d <= code && code <= 0xad87) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GWEO\n                                                if (0xad88 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xada4) {\n                                                // Lo  [27] HANGUL SYLLABLE GWEOG..HANGUL SYLLABLE GWEOH\n                                                if (0xad89 <= code && code <= 0xada3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xada5) {\n                                                    // Lo       HANGUL SYLLABLE GWE\n                                                    if (0xada4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GWEG..HANGUL SYLLABLE GWEH\n                                                    if (0xada5 <= code && code <= 0xadbf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaddc) {\n                                            if (code < 0xadc1) {\n                                                // Lo       HANGUL SYLLABLE GWI\n                                                if (0xadc0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GWIG..HANGUL SYLLABLE GWIH\n                                                if (0xadc1 <= code && code <= 0xaddb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaddd) {\n                                                // Lo       HANGUL SYLLABLE GYU\n                                                if (0xaddc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xadf8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GYUG..HANGUL SYLLABLE GYUH\n                                                    if (0xaddd <= code && code <= 0xadf7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GEU\n                                                    if (0xadf8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xae4c) {\n                                        if (code < 0xae15) {\n                                            if (code < 0xae14) {\n                                                // Lo  [27] HANGUL SYLLABLE GEUG..HANGUL SYLLABLE GEUH\n                                                if (0xadf9 <= code && code <= 0xae13) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GYI\n                                                if (0xae14 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xae30) {\n                                                // Lo  [27] HANGUL SYLLABLE GYIG..HANGUL SYLLABLE GYIH\n                                                if (0xae15 <= code && code <= 0xae2f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae31) {\n                                                    // Lo       HANGUL SYLLABLE GI\n                                                    if (0xae30 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GIG..HANGUL SYLLABLE GIH\n                                                    if (0xae31 <= code && code <= 0xae4b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xae69) {\n                                            if (code < 0xae4d) {\n                                                // Lo       HANGUL SYLLABLE GGA\n                                                if (0xae4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae68) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGAG..HANGUL SYLLABLE GGAH\n                                                    if (0xae4d <= code && code <= 0xae67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGAE\n                                                    if (0xae68 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xae84) {\n                                                // Lo  [27] HANGUL SYLLABLE GGAEG..HANGUL SYLLABLE GGAEH\n                                                if (0xae69 <= code && code <= 0xae83) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae85) {\n                                                    // Lo       HANGUL SYLLABLE GGYA\n                                                    if (0xae84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYAG..HANGUL SYLLABLE GGYAH\n                                                    if (0xae85 <= code && code <= 0xae9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xafb9) {\n                                if (code < 0xaf2c) {\n                                    if (code < 0xaed9) {\n                                        if (code < 0xaebc) {\n                                            if (code < 0xaea1) {\n                                                // Lo       HANGUL SYLLABLE GGYAE\n                                                if (0xaea0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGYAEG..HANGUL SYLLABLE GGYAEH\n                                                if (0xaea1 <= code && code <= 0xaebb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaebd) {\n                                                // Lo       HANGUL SYLLABLE GGEO\n                                                if (0xaebc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaed8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGEOG..HANGUL SYLLABLE GGEOH\n                                                    if (0xaebd <= code && code <= 0xaed7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGE\n                                                    if (0xaed8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaef5) {\n                                            if (code < 0xaef4) {\n                                                // Lo  [27] HANGUL SYLLABLE GGEG..HANGUL SYLLABLE GGEH\n                                                if (0xaed9 <= code && code <= 0xaef3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GGYEO\n                                                if (0xaef4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf10) {\n                                                // Lo  [27] HANGUL SYLLABLE GGYEOG..HANGUL SYLLABLE GGYEOH\n                                                if (0xaef5 <= code && code <= 0xaf0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf11) {\n                                                    // Lo       HANGUL SYLLABLE GGYE\n                                                    if (0xaf10 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYEG..HANGUL SYLLABLE GGYEH\n                                                    if (0xaf11 <= code && code <= 0xaf2b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xaf65) {\n                                        if (code < 0xaf48) {\n                                            if (code < 0xaf2d) {\n                                                // Lo       HANGUL SYLLABLE GGO\n                                                if (0xaf2c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGOG..HANGUL SYLLABLE GGOH\n                                                if (0xaf2d <= code && code <= 0xaf47) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf49) {\n                                                // Lo       HANGUL SYLLABLE GGWA\n                                                if (0xaf48 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf64) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWAG..HANGUL SYLLABLE GGWAH\n                                                    if (0xaf49 <= code && code <= 0xaf63) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGWAE\n                                                    if (0xaf64 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaf9c) {\n                                            if (code < 0xaf80) {\n                                                // Lo  [27] HANGUL SYLLABLE GGWAEG..HANGUL SYLLABLE GGWAEH\n                                                if (0xaf65 <= code && code <= 0xaf7f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf81) {\n                                                    // Lo       HANGUL SYLLABLE GGOE\n                                                    if (0xaf80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGOEG..HANGUL SYLLABLE GGOEH\n                                                    if (0xaf81 <= code && code <= 0xaf9b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf9d) {\n                                                // Lo       HANGUL SYLLABLE GGYO\n                                                if (0xaf9c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xafb8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYOG..HANGUL SYLLABLE GGYOH\n                                                    if (0xaf9d <= code && code <= 0xafb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGU\n                                                    if (0xafb8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb060) {\n                                    if (code < 0xb00c) {\n                                        if (code < 0xafd5) {\n                                            if (code < 0xafd4) {\n                                                // Lo  [27] HANGUL SYLLABLE GGUG..HANGUL SYLLABLE GGUH\n                                                if (0xafb9 <= code && code <= 0xafd3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GGWEO\n                                                if (0xafd4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaff0) {\n                                                // Lo  [27] HANGUL SYLLABLE GGWEOG..HANGUL SYLLABLE GGWEOH\n                                                if (0xafd5 <= code && code <= 0xafef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaff1) {\n                                                    // Lo       HANGUL SYLLABLE GGWE\n                                                    if (0xaff0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWEG..HANGUL SYLLABLE GGWEH\n                                                    if (0xaff1 <= code && code <= 0xb00b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb029) {\n                                            if (code < 0xb00d) {\n                                                // Lo       HANGUL SYLLABLE GGWI\n                                                if (0xb00c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb028) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWIG..HANGUL SYLLABLE GGWIH\n                                                    if (0xb00d <= code && code <= 0xb027) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGYU\n                                                    if (0xb028 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb044) {\n                                                // Lo  [27] HANGUL SYLLABLE GGYUG..HANGUL SYLLABLE GGYUH\n                                                if (0xb029 <= code && code <= 0xb043) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb045) {\n                                                    // Lo       HANGUL SYLLABLE GGEU\n                                                    if (0xb044 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGEUG..HANGUL SYLLABLE GGEUH\n                                                    if (0xb045 <= code && code <= 0xb05f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb099) {\n                                        if (code < 0xb07c) {\n                                            if (code < 0xb061) {\n                                                // Lo       HANGUL SYLLABLE GGYI\n                                                if (0xb060 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGYIG..HANGUL SYLLABLE GGYIH\n                                                if (0xb061 <= code && code <= 0xb07b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb07d) {\n                                                // Lo       HANGUL SYLLABLE GGI\n                                                if (0xb07c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb098) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGIG..HANGUL SYLLABLE GGIH\n                                                    if (0xb07d <= code && code <= 0xb097) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NA\n                                                    if (0xb098 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb0d0) {\n                                            if (code < 0xb0b4) {\n                                                // Lo  [27] HANGUL SYLLABLE NAG..HANGUL SYLLABLE NAH\n                                                if (0xb099 <= code && code <= 0xb0b3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb0b5) {\n                                                    // Lo       HANGUL SYLLABLE NAE\n                                                    if (0xb0b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NAEG..HANGUL SYLLABLE NAEH\n                                                    if (0xb0b5 <= code && code <= 0xb0cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb0d1) {\n                                                // Lo       HANGUL SYLLABLE NYA\n                                                if (0xb0d0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb0ec) {\n                                                    // Lo  [27] HANGUL SYLLABLE NYAG..HANGUL SYLLABLE NYAH\n                                                    if (0xb0d1 <= code && code <= 0xb0eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYAE\n                                                    if (0xb0ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xb354) {\n                            if (code < 0xb220) {\n                                if (code < 0xb179) {\n                                    if (code < 0xb140) {\n                                        if (code < 0xb109) {\n                                            if (code < 0xb108) {\n                                                // Lo  [27] HANGUL SYLLABLE NYAEG..HANGUL SYLLABLE NYAEH\n                                                if (0xb0ed <= code && code <= 0xb107) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NEO\n                                                if (0xb108 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb124) {\n                                                // Lo  [27] HANGUL SYLLABLE NEOG..HANGUL SYLLABLE NEOH\n                                                if (0xb109 <= code && code <= 0xb123) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb125) {\n                                                    // Lo       HANGUL SYLLABLE NE\n                                                    if (0xb124 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NEG..HANGUL SYLLABLE NEH\n                                                    if (0xb125 <= code && code <= 0xb13f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb15c) {\n                                            if (code < 0xb141) {\n                                                // Lo       HANGUL SYLLABLE NYEO\n                                                if (0xb140 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE NYEOG..HANGUL SYLLABLE NYEOH\n                                                if (0xb141 <= code && code <= 0xb15b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb15d) {\n                                                // Lo       HANGUL SYLLABLE NYE\n                                                if (0xb15c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb178) {\n                                                    // Lo  [27] HANGUL SYLLABLE NYEG..HANGUL SYLLABLE NYEH\n                                                    if (0xb15d <= code && code <= 0xb177) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NO\n                                                    if (0xb178 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb1cc) {\n                                        if (code < 0xb195) {\n                                            if (code < 0xb194) {\n                                                // Lo  [27] HANGUL SYLLABLE NOG..HANGUL SYLLABLE NOH\n                                                if (0xb179 <= code && code <= 0xb193) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NWA\n                                                if (0xb194 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb1b0) {\n                                                // Lo  [27] HANGUL SYLLABLE NWAG..HANGUL SYLLABLE NWAH\n                                                if (0xb195 <= code && code <= 0xb1af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb1b1) {\n                                                    // Lo       HANGUL SYLLABLE NWAE\n                                                    if (0xb1b0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NWAEG..HANGUL SYLLABLE NWAEH\n                                                    if (0xb1b1 <= code && code <= 0xb1cb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb1e9) {\n                                            if (code < 0xb1cd) {\n                                                // Lo       HANGUL SYLLABLE NOE\n                                                if (0xb1cc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb1e8) {\n                                                    // Lo  [27] HANGUL SYLLABLE NOEG..HANGUL SYLLABLE NOEH\n                                                    if (0xb1cd <= code && code <= 0xb1e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYO\n                                                    if (0xb1e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb204) {\n                                                // Lo  [27] HANGUL SYLLABLE NYOG..HANGUL SYLLABLE NYOH\n                                                if (0xb1e9 <= code && code <= 0xb203) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb205) {\n                                                    // Lo       HANGUL SYLLABLE NU\n                                                    if (0xb204 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NUG..HANGUL SYLLABLE NUH\n                                                    if (0xb205 <= code && code <= 0xb21f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb2ad) {\n                                    if (code < 0xb259) {\n                                        if (code < 0xb23c) {\n                                            if (code < 0xb221) {\n                                                // Lo       HANGUL SYLLABLE NWEO\n                                                if (0xb220 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE NWEOG..HANGUL SYLLABLE NWEOH\n                                                if (0xb221 <= code && code <= 0xb23b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb23d) {\n                                                // Lo       HANGUL SYLLABLE NWE\n                                                if (0xb23c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb258) {\n                                                    // Lo  [27] HANGUL SYLLABLE NWEG..HANGUL SYLLABLE NWEH\n                                                    if (0xb23d <= code && code <= 0xb257) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NWI\n                                                    if (0xb258 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb290) {\n                                            if (code < 0xb274) {\n                                                // Lo  [27] HANGUL SYLLABLE NWIG..HANGUL SYLLABLE NWIH\n                                                if (0xb259 <= code && code <= 0xb273) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb275) {\n                                                    // Lo       HANGUL SYLLABLE NYU\n                                                    if (0xb274 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NYUG..HANGUL SYLLABLE NYUH\n                                                    if (0xb275 <= code && code <= 0xb28f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb291) {\n                                                // Lo       HANGUL SYLLABLE NEU\n                                                if (0xb290 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb2ac) {\n                                                    // Lo  [27] HANGUL SYLLABLE NEUG..HANGUL SYLLABLE NEUH\n                                                    if (0xb291 <= code && code <= 0xb2ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYI\n                                                    if (0xb2ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb300) {\n                                        if (code < 0xb2c9) {\n                                            if (code < 0xb2c8) {\n                                                // Lo  [27] HANGUL SYLLABLE NYIG..HANGUL SYLLABLE NYIH\n                                                if (0xb2ad <= code && code <= 0xb2c7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NI\n                                                if (0xb2c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb2e4) {\n                                                // Lo  [27] HANGUL SYLLABLE NIG..HANGUL SYLLABLE NIH\n                                                if (0xb2c9 <= code && code <= 0xb2e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb2e5) {\n                                                    // Lo       HANGUL SYLLABLE DA\n                                                    if (0xb2e4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DAG..HANGUL SYLLABLE DAH\n                                                    if (0xb2e5 <= code && code <= 0xb2ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb31d) {\n                                            if (code < 0xb301) {\n                                                // Lo       HANGUL SYLLABLE DAE\n                                                if (0xb300 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb31c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DAEG..HANGUL SYLLABLE DAEH\n                                                    if (0xb301 <= code && code <= 0xb31b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DYA\n                                                    if (0xb31c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb338) {\n                                                // Lo  [27] HANGUL SYLLABLE DYAG..HANGUL SYLLABLE DYAH\n                                                if (0xb31d <= code && code <= 0xb337) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb339) {\n                                                    // Lo       HANGUL SYLLABLE DYAE\n                                                    if (0xb338 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYAEG..HANGUL SYLLABLE DYAEH\n                                                    if (0xb339 <= code && code <= 0xb353) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xb46d) {\n                                if (code < 0xb3e0) {\n                                    if (code < 0xb38d) {\n                                        if (code < 0xb370) {\n                                            if (code < 0xb355) {\n                                                // Lo       HANGUL SYLLABLE DEO\n                                                if (0xb354 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DEOG..HANGUL SYLLABLE DEOH\n                                                if (0xb355 <= code && code <= 0xb36f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb371) {\n                                                // Lo       HANGUL SYLLABLE DE\n                                                if (0xb370 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb38c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DEG..HANGUL SYLLABLE DEH\n                                                    if (0xb371 <= code && code <= 0xb38b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DYEO\n                                                    if (0xb38c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb3a9) {\n                                            if (code < 0xb3a8) {\n                                                // Lo  [27] HANGUL SYLLABLE DYEOG..HANGUL SYLLABLE DYEOH\n                                                if (0xb38d <= code && code <= 0xb3a7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DYE\n                                                if (0xb3a8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb3c4) {\n                                                // Lo  [27] HANGUL SYLLABLE DYEG..HANGUL SYLLABLE DYEH\n                                                if (0xb3a9 <= code && code <= 0xb3c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb3c5) {\n                                                    // Lo       HANGUL SYLLABLE DO\n                                                    if (0xb3c4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DOG..HANGUL SYLLABLE DOH\n                                                    if (0xb3c5 <= code && code <= 0xb3df) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb419) {\n                                        if (code < 0xb3fc) {\n                                            if (code < 0xb3e1) {\n                                                // Lo       HANGUL SYLLABLE DWA\n                                                if (0xb3e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DWAG..HANGUL SYLLABLE DWAH\n                                                if (0xb3e1 <= code && code <= 0xb3fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb3fd) {\n                                                // Lo       HANGUL SYLLABLE DWAE\n                                                if (0xb3fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb418) {\n                                                    // Lo  [27] HANGUL SYLLABLE DWAEG..HANGUL SYLLABLE DWAEH\n                                                    if (0xb3fd <= code && code <= 0xb417) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DOE\n                                                    if (0xb418 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb450) {\n                                            if (code < 0xb434) {\n                                                // Lo  [27] HANGUL SYLLABLE DOEG..HANGUL SYLLABLE DOEH\n                                                if (0xb419 <= code && code <= 0xb433) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb435) {\n                                                    // Lo       HANGUL SYLLABLE DYO\n                                                    if (0xb434 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYOG..HANGUL SYLLABLE DYOH\n                                                    if (0xb435 <= code && code <= 0xb44f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb451) {\n                                                // Lo       HANGUL SYLLABLE DU\n                                                if (0xb450 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb46c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DUG..HANGUL SYLLABLE DUH\n                                                    if (0xb451 <= code && code <= 0xb46b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DWEO\n                                                    if (0xb46c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb514) {\n                                    if (code < 0xb4c0) {\n                                        if (code < 0xb489) {\n                                            if (code < 0xb488) {\n                                                // Lo  [27] HANGUL SYLLABLE DWEOG..HANGUL SYLLABLE DWEOH\n                                                if (0xb46d <= code && code <= 0xb487) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DWE\n                                                if (0xb488 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb4a4) {\n                                                // Lo  [27] HANGUL SYLLABLE DWEG..HANGUL SYLLABLE DWEH\n                                                if (0xb489 <= code && code <= 0xb4a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4a5) {\n                                                    // Lo       HANGUL SYLLABLE DWI\n                                                    if (0xb4a4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DWIG..HANGUL SYLLABLE DWIH\n                                                    if (0xb4a5 <= code && code <= 0xb4bf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb4dd) {\n                                            if (code < 0xb4c1) {\n                                                // Lo       HANGUL SYLLABLE DYU\n                                                if (0xb4c0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4dc) {\n                                                    // Lo  [27] HANGUL SYLLABLE DYUG..HANGUL SYLLABLE DYUH\n                                                    if (0xb4c1 <= code && code <= 0xb4db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DEU\n                                                    if (0xb4dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb4f8) {\n                                                // Lo  [27] HANGUL SYLLABLE DEUG..HANGUL SYLLABLE DEUH\n                                                if (0xb4dd <= code && code <= 0xb4f7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4f9) {\n                                                    // Lo       HANGUL SYLLABLE DYI\n                                                    if (0xb4f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYIG..HANGUL SYLLABLE DYIH\n                                                    if (0xb4f9 <= code && code <= 0xb513) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb54d) {\n                                        if (code < 0xb530) {\n                                            if (code < 0xb515) {\n                                                // Lo       HANGUL SYLLABLE DI\n                                                if (0xb514 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DIG..HANGUL SYLLABLE DIH\n                                                if (0xb515 <= code && code <= 0xb52f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb531) {\n                                                // Lo       HANGUL SYLLABLE DDA\n                                                if (0xb530 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb54c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDAG..HANGUL SYLLABLE DDAH\n                                                    if (0xb531 <= code && code <= 0xb54b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDAE\n                                                    if (0xb54c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb584) {\n                                            if (code < 0xb568) {\n                                                // Lo  [27] HANGUL SYLLABLE DDAEG..HANGUL SYLLABLE DDAEH\n                                                if (0xb54d <= code && code <= 0xb567) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb569) {\n                                                    // Lo       HANGUL SYLLABLE DDYA\n                                                    if (0xb568 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYAG..HANGUL SYLLABLE DDYAH\n                                                    if (0xb569 <= code && code <= 0xb583) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb585) {\n                                                // Lo       HANGUL SYLLABLE DDYAE\n                                                if (0xb584 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb5a0) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYAEG..HANGUL SYLLABLE DDYAEH\n                                                    if (0xb585 <= code && code <= 0xb59f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDEO\n                                                    if (0xb5a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0xba55) {\n                        if (code < 0xb808) {\n                            if (code < 0xb6d4) {\n                                if (code < 0xb62d) {\n                                    if (code < 0xb5f4) {\n                                        if (code < 0xb5bd) {\n                                            if (code < 0xb5bc) {\n                                                // Lo  [27] HANGUL SYLLABLE DDEOG..HANGUL SYLLABLE DDEOH\n                                                if (0xb5a1 <= code && code <= 0xb5bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DDE\n                                                if (0xb5bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb5d8) {\n                                                // Lo  [27] HANGUL SYLLABLE DDEG..HANGUL SYLLABLE DDEH\n                                                if (0xb5bd <= code && code <= 0xb5d7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb5d9) {\n                                                    // Lo       HANGUL SYLLABLE DDYEO\n                                                    if (0xb5d8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYEOG..HANGUL SYLLABLE DDYEOH\n                                                    if (0xb5d9 <= code && code <= 0xb5f3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb610) {\n                                            if (code < 0xb5f5) {\n                                                // Lo       HANGUL SYLLABLE DDYE\n                                                if (0xb5f4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DDYEG..HANGUL SYLLABLE DDYEH\n                                                if (0xb5f5 <= code && code <= 0xb60f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb611) {\n                                                // Lo       HANGUL SYLLABLE DDO\n                                                if (0xb610 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb62c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDOG..HANGUL SYLLABLE DDOH\n                                                    if (0xb611 <= code && code <= 0xb62b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDWA\n                                                    if (0xb62c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb680) {\n                                        if (code < 0xb649) {\n                                            if (code < 0xb648) {\n                                                // Lo  [27] HANGUL SYLLABLE DDWAG..HANGUL SYLLABLE DDWAH\n                                                if (0xb62d <= code && code <= 0xb647) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DDWAE\n                                                if (0xb648 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb664) {\n                                                // Lo  [27] HANGUL SYLLABLE DDWAEG..HANGUL SYLLABLE DDWAEH\n                                                if (0xb649 <= code && code <= 0xb663) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb665) {\n                                                    // Lo       HANGUL SYLLABLE DDOE\n                                                    if (0xb664 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDOEG..HANGUL SYLLABLE DDOEH\n                                                    if (0xb665 <= code && code <= 0xb67f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb69d) {\n                                            if (code < 0xb681) {\n                                                // Lo       HANGUL SYLLABLE DDYO\n                                                if (0xb680 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb69c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYOG..HANGUL SYLLABLE DDYOH\n                                                    if (0xb681 <= code && code <= 0xb69b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDU\n                                                    if (0xb69c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb6b8) {\n                                                // Lo  [27] HANGUL SYLLABLE DDUG..HANGUL SYLLABLE DDUH\n                                                if (0xb69d <= code && code <= 0xb6b7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb6b9) {\n                                                    // Lo       HANGUL SYLLABLE DDWEO\n                                                    if (0xb6b8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDWEOG..HANGUL SYLLABLE DDWEOH\n                                                    if (0xb6b9 <= code && code <= 0xb6d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb761) {\n                                    if (code < 0xb70d) {\n                                        if (code < 0xb6f0) {\n                                            if (code < 0xb6d5) {\n                                                // Lo       HANGUL SYLLABLE DDWE\n                                                if (0xb6d4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DDWEG..HANGUL SYLLABLE DDWEH\n                                                if (0xb6d5 <= code && code <= 0xb6ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb6f1) {\n                                                // Lo       HANGUL SYLLABLE DDWI\n                                                if (0xb6f0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb70c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDWIG..HANGUL SYLLABLE DDWIH\n                                                    if (0xb6f1 <= code && code <= 0xb70b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDYU\n                                                    if (0xb70c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb744) {\n                                            if (code < 0xb728) {\n                                                // Lo  [27] HANGUL SYLLABLE DDYUG..HANGUL SYLLABLE DDYUH\n                                                if (0xb70d <= code && code <= 0xb727) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb729) {\n                                                    // Lo       HANGUL SYLLABLE DDEU\n                                                    if (0xb728 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDEUG..HANGUL SYLLABLE DDEUH\n                                                    if (0xb729 <= code && code <= 0xb743) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb745) {\n                                                // Lo       HANGUL SYLLABLE DDYI\n                                                if (0xb744 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb760) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYIG..HANGUL SYLLABLE DDYIH\n                                                    if (0xb745 <= code && code <= 0xb75f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDI\n                                                    if (0xb760 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb7b4) {\n                                        if (code < 0xb77d) {\n                                            if (code < 0xb77c) {\n                                                // Lo  [27] HANGUL SYLLABLE DDIG..HANGUL SYLLABLE DDIH\n                                                if (0xb761 <= code && code <= 0xb77b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RA\n                                                if (0xb77c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb798) {\n                                                // Lo  [27] HANGUL SYLLABLE RAG..HANGUL SYLLABLE RAH\n                                                if (0xb77d <= code && code <= 0xb797) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb799) {\n                                                    // Lo       HANGUL SYLLABLE RAE\n                                                    if (0xb798 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RAEG..HANGUL SYLLABLE RAEH\n                                                    if (0xb799 <= code && code <= 0xb7b3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb7d1) {\n                                            if (code < 0xb7b5) {\n                                                // Lo       HANGUL SYLLABLE RYA\n                                                if (0xb7b4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb7d0) {\n                                                    // Lo  [27] HANGUL SYLLABLE RYAG..HANGUL SYLLABLE RYAH\n                                                    if (0xb7b5 <= code && code <= 0xb7cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYAE\n                                                    if (0xb7d0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb7ec) {\n                                                // Lo  [27] HANGUL SYLLABLE RYAEG..HANGUL SYLLABLE RYAEH\n                                                if (0xb7d1 <= code && code <= 0xb7eb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb7ed) {\n                                                    // Lo       HANGUL SYLLABLE REO\n                                                    if (0xb7ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE REOG..HANGUL SYLLABLE REOH\n                                                    if (0xb7ed <= code && code <= 0xb807) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xb921) {\n                                if (code < 0xb894) {\n                                    if (code < 0xb841) {\n                                        if (code < 0xb824) {\n                                            if (code < 0xb809) {\n                                                // Lo       HANGUL SYLLABLE RE\n                                                if (0xb808 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE REG..HANGUL SYLLABLE REH\n                                                if (0xb809 <= code && code <= 0xb823) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb825) {\n                                                // Lo       HANGUL SYLLABLE RYEO\n                                                if (0xb824 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb840) {\n                                                    // Lo  [27] HANGUL SYLLABLE RYEOG..HANGUL SYLLABLE RYEOH\n                                                    if (0xb825 <= code && code <= 0xb83f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYE\n                                                    if (0xb840 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb85d) {\n                                            if (code < 0xb85c) {\n                                                // Lo  [27] HANGUL SYLLABLE RYEG..HANGUL SYLLABLE RYEH\n                                                if (0xb841 <= code && code <= 0xb85b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RO\n                                                if (0xb85c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb878) {\n                                                // Lo  [27] HANGUL SYLLABLE ROG..HANGUL SYLLABLE ROH\n                                                if (0xb85d <= code && code <= 0xb877) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb879) {\n                                                    // Lo       HANGUL SYLLABLE RWA\n                                                    if (0xb878 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RWAG..HANGUL SYLLABLE RWAH\n                                                    if (0xb879 <= code && code <= 0xb893) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb8cd) {\n                                        if (code < 0xb8b0) {\n                                            if (code < 0xb895) {\n                                                // Lo       HANGUL SYLLABLE RWAE\n                                                if (0xb894 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE RWAEG..HANGUL SYLLABLE RWAEH\n                                                if (0xb895 <= code && code <= 0xb8af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb8b1) {\n                                                // Lo       HANGUL SYLLABLE ROE\n                                                if (0xb8b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb8cc) {\n                                                    // Lo  [27] HANGUL SYLLABLE ROEG..HANGUL SYLLABLE ROEH\n                                                    if (0xb8b1 <= code && code <= 0xb8cb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYO\n                                                    if (0xb8cc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb904) {\n                                            if (code < 0xb8e8) {\n                                                // Lo  [27] HANGUL SYLLABLE RYOG..HANGUL SYLLABLE RYOH\n                                                if (0xb8cd <= code && code <= 0xb8e7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb8e9) {\n                                                    // Lo       HANGUL SYLLABLE RU\n                                                    if (0xb8e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RUG..HANGUL SYLLABLE RUH\n                                                    if (0xb8e9 <= code && code <= 0xb903) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb905) {\n                                                // Lo       HANGUL SYLLABLE RWEO\n                                                if (0xb904 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb920) {\n                                                    // Lo  [27] HANGUL SYLLABLE RWEOG..HANGUL SYLLABLE RWEOH\n                                                    if (0xb905 <= code && code <= 0xb91f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RWE\n                                                    if (0xb920 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb9c8) {\n                                    if (code < 0xb974) {\n                                        if (code < 0xb93d) {\n                                            if (code < 0xb93c) {\n                                                // Lo  [27] HANGUL SYLLABLE RWEG..HANGUL SYLLABLE RWEH\n                                                if (0xb921 <= code && code <= 0xb93b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RWI\n                                                if (0xb93c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb958) {\n                                                // Lo  [27] HANGUL SYLLABLE RWIG..HANGUL SYLLABLE RWIH\n                                                if (0xb93d <= code && code <= 0xb957) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb959) {\n                                                    // Lo       HANGUL SYLLABLE RYU\n                                                    if (0xb958 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RYUG..HANGUL SYLLABLE RYUH\n                                                    if (0xb959 <= code && code <= 0xb973) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb991) {\n                                            if (code < 0xb975) {\n                                                // Lo       HANGUL SYLLABLE REU\n                                                if (0xb974 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb990) {\n                                                    // Lo  [27] HANGUL SYLLABLE REUG..HANGUL SYLLABLE REUH\n                                                    if (0xb975 <= code && code <= 0xb98f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYI\n                                                    if (0xb990 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb9ac) {\n                                                // Lo  [27] HANGUL SYLLABLE RYIG..HANGUL SYLLABLE RYIH\n                                                if (0xb991 <= code && code <= 0xb9ab) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb9ad) {\n                                                    // Lo       HANGUL SYLLABLE RI\n                                                    if (0xb9ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RIG..HANGUL SYLLABLE RIH\n                                                    if (0xb9ad <= code && code <= 0xb9c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xba01) {\n                                        if (code < 0xb9e4) {\n                                            if (code < 0xb9c9) {\n                                                // Lo       HANGUL SYLLABLE MA\n                                                if (0xb9c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MAG..HANGUL SYLLABLE MAH\n                                                if (0xb9c9 <= code && code <= 0xb9e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb9e5) {\n                                                // Lo       HANGUL SYLLABLE MAE\n                                                if (0xb9e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba00) {\n                                                    // Lo  [27] HANGUL SYLLABLE MAEG..HANGUL SYLLABLE MAEH\n                                                    if (0xb9e5 <= code && code <= 0xb9ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MYA\n                                                    if (0xba00 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xba38) {\n                                            if (code < 0xba1c) {\n                                                // Lo  [27] HANGUL SYLLABLE MYAG..HANGUL SYLLABLE MYAH\n                                                if (0xba01 <= code && code <= 0xba1b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba1d) {\n                                                    // Lo       HANGUL SYLLABLE MYAE\n                                                    if (0xba1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYAEG..HANGUL SYLLABLE MYAEH\n                                                    if (0xba1d <= code && code <= 0xba37) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xba39) {\n                                                // Lo       HANGUL SYLLABLE MEO\n                                                if (0xba38 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba54) {\n                                                    // Lo  [27] HANGUL SYLLABLE MEOG..HANGUL SYLLABLE MEOH\n                                                    if (0xba39 <= code && code <= 0xba53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE ME\n                                                    if (0xba54 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xbcbc) {\n                            if (code < 0xbb88) {\n                                if (code < 0xbae1) {\n                                    if (code < 0xbaa8) {\n                                        if (code < 0xba71) {\n                                            if (code < 0xba70) {\n                                                // Lo  [27] HANGUL SYLLABLE MEG..HANGUL SYLLABLE MEH\n                                                if (0xba55 <= code && code <= 0xba6f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE MYEO\n                                                if (0xba70 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xba8c) {\n                                                // Lo  [27] HANGUL SYLLABLE MYEOG..HANGUL SYLLABLE MYEOH\n                                                if (0xba71 <= code && code <= 0xba8b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba8d) {\n                                                    // Lo       HANGUL SYLLABLE MYE\n                                                    if (0xba8c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYEG..HANGUL SYLLABLE MYEH\n                                                    if (0xba8d <= code && code <= 0xbaa7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbac4) {\n                                            if (code < 0xbaa9) {\n                                                // Lo       HANGUL SYLLABLE MO\n                                                if (0xbaa8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MOG..HANGUL SYLLABLE MOH\n                                                if (0xbaa9 <= code && code <= 0xbac3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbac5) {\n                                                // Lo       HANGUL SYLLABLE MWA\n                                                if (0xbac4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbae0) {\n                                                    // Lo  [27] HANGUL SYLLABLE MWAG..HANGUL SYLLABLE MWAH\n                                                    if (0xbac5 <= code && code <= 0xbadf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MWAE\n                                                    if (0xbae0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbb34) {\n                                        if (code < 0xbafd) {\n                                            if (code < 0xbafc) {\n                                                // Lo  [27] HANGUL SYLLABLE MWAEG..HANGUL SYLLABLE MWAEH\n                                                if (0xbae1 <= code && code <= 0xbafb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE MOE\n                                                if (0xbafc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbb18) {\n                                                // Lo  [27] HANGUL SYLLABLE MOEG..HANGUL SYLLABLE MOEH\n                                                if (0xbafd <= code && code <= 0xbb17) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb19) {\n                                                    // Lo       HANGUL SYLLABLE MYO\n                                                    if (0xbb18 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYOG..HANGUL SYLLABLE MYOH\n                                                    if (0xbb19 <= code && code <= 0xbb33) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbb51) {\n                                            if (code < 0xbb35) {\n                                                // Lo       HANGUL SYLLABLE MU\n                                                if (0xbb34 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb50) {\n                                                    // Lo  [27] HANGUL SYLLABLE MUG..HANGUL SYLLABLE MUH\n                                                    if (0xbb35 <= code && code <= 0xbb4f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MWEO\n                                                    if (0xbb50 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbb6c) {\n                                                // Lo  [27] HANGUL SYLLABLE MWEOG..HANGUL SYLLABLE MWEOH\n                                                if (0xbb51 <= code && code <= 0xbb6b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb6d) {\n                                                    // Lo       HANGUL SYLLABLE MWE\n                                                    if (0xbb6c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MWEG..HANGUL SYLLABLE MWEH\n                                                    if (0xbb6d <= code && code <= 0xbb87) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xbc15) {\n                                    if (code < 0xbbc1) {\n                                        if (code < 0xbba4) {\n                                            if (code < 0xbb89) {\n                                                // Lo       HANGUL SYLLABLE MWI\n                                                if (0xbb88 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MWIG..HANGUL SYLLABLE MWIH\n                                                if (0xbb89 <= code && code <= 0xbba3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbba5) {\n                                                // Lo       HANGUL SYLLABLE MYU\n                                                if (0xbba4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbbc0) {\n                                                    // Lo  [27] HANGUL SYLLABLE MYUG..HANGUL SYLLABLE MYUH\n                                                    if (0xbba5 <= code && code <= 0xbbbf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MEU\n                                                    if (0xbbc0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbbf8) {\n                                            if (code < 0xbbdc) {\n                                                // Lo  [27] HANGUL SYLLABLE MEUG..HANGUL SYLLABLE MEUH\n                                                if (0xbbc1 <= code && code <= 0xbbdb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbbdd) {\n                                                    // Lo       HANGUL SYLLABLE MYI\n                                                    if (0xbbdc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYIG..HANGUL SYLLABLE MYIH\n                                                    if (0xbbdd <= code && code <= 0xbbf7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbbf9) {\n                                                // Lo       HANGUL SYLLABLE MI\n                                                if (0xbbf8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc14) {\n                                                    // Lo  [27] HANGUL SYLLABLE MIG..HANGUL SYLLABLE MIH\n                                                    if (0xbbf9 <= code && code <= 0xbc13) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BA\n                                                    if (0xbc14 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbc68) {\n                                        if (code < 0xbc31) {\n                                            if (code < 0xbc30) {\n                                                // Lo  [27] HANGUL SYLLABLE BAG..HANGUL SYLLABLE BAH\n                                                if (0xbc15 <= code && code <= 0xbc2f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BAE\n                                                if (0xbc30 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbc4c) {\n                                                // Lo  [27] HANGUL SYLLABLE BAEG..HANGUL SYLLABLE BAEH\n                                                if (0xbc31 <= code && code <= 0xbc4b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc4d) {\n                                                    // Lo       HANGUL SYLLABLE BYA\n                                                    if (0xbc4c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BYAG..HANGUL SYLLABLE BYAH\n                                                    if (0xbc4d <= code && code <= 0xbc67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbc85) {\n                                            if (code < 0xbc69) {\n                                                // Lo       HANGUL SYLLABLE BYAE\n                                                if (0xbc68 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc84) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYAEG..HANGUL SYLLABLE BYAEH\n                                                    if (0xbc69 <= code && code <= 0xbc83) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BEO\n                                                    if (0xbc84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbca0) {\n                                                // Lo  [27] HANGUL SYLLABLE BEOG..HANGUL SYLLABLE BEOH\n                                                if (0xbc85 <= code && code <= 0xbc9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbca1) {\n                                                    // Lo       HANGUL SYLLABLE BE\n                                                    if (0xbca0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BEG..HANGUL SYLLABLE BEH\n                                                    if (0xbca1 <= code && code <= 0xbcbb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xbdd5) {\n                                if (code < 0xbd48) {\n                                    if (code < 0xbcf5) {\n                                        if (code < 0xbcd8) {\n                                            if (code < 0xbcbd) {\n                                                // Lo       HANGUL SYLLABLE BYEO\n                                                if (0xbcbc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BYEOG..HANGUL SYLLABLE BYEOH\n                                                if (0xbcbd <= code && code <= 0xbcd7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbcd9) {\n                                                // Lo       HANGUL SYLLABLE BYE\n                                                if (0xbcd8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbcf4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYEG..HANGUL SYLLABLE BYEH\n                                                    if (0xbcd9 <= code && code <= 0xbcf3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BO\n                                                    if (0xbcf4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbd11) {\n                                            if (code < 0xbd10) {\n                                                // Lo  [27] HANGUL SYLLABLE BOG..HANGUL SYLLABLE BOH\n                                                if (0xbcf5 <= code && code <= 0xbd0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BWA\n                                                if (0xbd10 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbd2c) {\n                                                // Lo  [27] HANGUL SYLLABLE BWAG..HANGUL SYLLABLE BWAH\n                                                if (0xbd11 <= code && code <= 0xbd2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd2d) {\n                                                    // Lo       HANGUL SYLLABLE BWAE\n                                                    if (0xbd2c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BWAEG..HANGUL SYLLABLE BWAEH\n                                                    if (0xbd2d <= code && code <= 0xbd47) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbd81) {\n                                        if (code < 0xbd64) {\n                                            if (code < 0xbd49) {\n                                                // Lo       HANGUL SYLLABLE BOE\n                                                if (0xbd48 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BOEG..HANGUL SYLLABLE BOEH\n                                                if (0xbd49 <= code && code <= 0xbd63) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbd65) {\n                                                // Lo       HANGUL SYLLABLE BYO\n                                                if (0xbd64 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd80) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYOG..HANGUL SYLLABLE BYOH\n                                                    if (0xbd65 <= code && code <= 0xbd7f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BU\n                                                    if (0xbd80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbdb8) {\n                                            if (code < 0xbd9c) {\n                                                // Lo  [27] HANGUL SYLLABLE BUG..HANGUL SYLLABLE BUH\n                                                if (0xbd81 <= code && code <= 0xbd9b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd9d) {\n                                                    // Lo       HANGUL SYLLABLE BWEO\n                                                    if (0xbd9c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BWEOG..HANGUL SYLLABLE BWEOH\n                                                    if (0xbd9d <= code && code <= 0xbdb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbdb9) {\n                                                // Lo       HANGUL SYLLABLE BWE\n                                                if (0xbdb8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbdd4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BWEG..HANGUL SYLLABLE BWEH\n                                                    if (0xbdb9 <= code && code <= 0xbdd3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BWI\n                                                    if (0xbdd4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xbe7c) {\n                                    if (code < 0xbe28) {\n                                        if (code < 0xbdf1) {\n                                            if (code < 0xbdf0) {\n                                                // Lo  [27] HANGUL SYLLABLE BWIG..HANGUL SYLLABLE BWIH\n                                                if (0xbdd5 <= code && code <= 0xbdef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BYU\n                                                if (0xbdf0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe0c) {\n                                                // Lo  [27] HANGUL SYLLABLE BYUG..HANGUL SYLLABLE BYUH\n                                                if (0xbdf1 <= code && code <= 0xbe0b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe0d) {\n                                                    // Lo       HANGUL SYLLABLE BEU\n                                                    if (0xbe0c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BEUG..HANGUL SYLLABLE BEUH\n                                                    if (0xbe0d <= code && code <= 0xbe27) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbe45) {\n                                            if (code < 0xbe29) {\n                                                // Lo       HANGUL SYLLABLE BYI\n                                                if (0xbe28 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe44) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYIG..HANGUL SYLLABLE BYIH\n                                                    if (0xbe29 <= code && code <= 0xbe43) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BI\n                                                    if (0xbe44 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe60) {\n                                                // Lo  [27] HANGUL SYLLABLE BIG..HANGUL SYLLABLE BIH\n                                                if (0xbe45 <= code && code <= 0xbe5f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe61) {\n                                                    // Lo       HANGUL SYLLABLE BBA\n                                                    if (0xbe60 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBAG..HANGUL SYLLABLE BBAH\n                                                    if (0xbe61 <= code && code <= 0xbe7b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbeb5) {\n                                        if (code < 0xbe98) {\n                                            if (code < 0xbe7d) {\n                                                // Lo       HANGUL SYLLABLE BBAE\n                                                if (0xbe7c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBAEG..HANGUL SYLLABLE BBAEH\n                                                if (0xbe7d <= code && code <= 0xbe97) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe99) {\n                                                // Lo       HANGUL SYLLABLE BBYA\n                                                if (0xbe98 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbeb4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBYAG..HANGUL SYLLABLE BBYAH\n                                                    if (0xbe99 <= code && code <= 0xbeb3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYAE\n                                                    if (0xbeb4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbeec) {\n                                            if (code < 0xbed0) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYAEG..HANGUL SYLLABLE BBYAEH\n                                                if (0xbeb5 <= code && code <= 0xbecf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbed1) {\n                                                    // Lo       HANGUL SYLLABLE BBEO\n                                                    if (0xbed0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEOG..HANGUL SYLLABLE BBEOH\n                                                    if (0xbed1 <= code && code <= 0xbeeb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbeed) {\n                                                // Lo       HANGUL SYLLABLE BBE\n                                                if (0xbeec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf08) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEG..HANGUL SYLLABLE BBEH\n                                                    if (0xbeed <= code && code <= 0xbf07) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYEO\n                                                    if (0xbf08 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (code < 0xd1d8) {\n                if (code < 0xc870) {\n                    if (code < 0xc3bc) {\n                        if (code < 0xc155) {\n                            if (code < 0xc03c) {\n                                if (code < 0xbf95) {\n                                    if (code < 0xbf5c) {\n                                        if (code < 0xbf25) {\n                                            if (code < 0xbf24) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYEOG..HANGUL SYLLABLE BBYEOH\n                                                if (0xbf09 <= code && code <= 0xbf23) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBYE\n                                                if (0xbf24 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbf40) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYEG..HANGUL SYLLABLE BBYEH\n                                                if (0xbf25 <= code && code <= 0xbf3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf41) {\n                                                    // Lo       HANGUL SYLLABLE BBO\n                                                    if (0xbf40 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBOG..HANGUL SYLLABLE BBOH\n                                                    if (0xbf41 <= code && code <= 0xbf5b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbf78) {\n                                            if (code < 0xbf5d) {\n                                                // Lo       HANGUL SYLLABLE BBWA\n                                                if (0xbf5c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBWAG..HANGUL SYLLABLE BBWAH\n                                                if (0xbf5d <= code && code <= 0xbf77) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbf79) {\n                                                // Lo       HANGUL SYLLABLE BBWAE\n                                                if (0xbf78 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf94) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWAEG..HANGUL SYLLABLE BBWAEH\n                                                    if (0xbf79 <= code && code <= 0xbf93) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBOE\n                                                    if (0xbf94 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbfe8) {\n                                        if (code < 0xbfb1) {\n                                            if (code < 0xbfb0) {\n                                                // Lo  [27] HANGUL SYLLABLE BBOEG..HANGUL SYLLABLE BBOEH\n                                                if (0xbf95 <= code && code <= 0xbfaf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBYO\n                                                if (0xbfb0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbfcc) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYOG..HANGUL SYLLABLE BBYOH\n                                                if (0xbfb1 <= code && code <= 0xbfcb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbfcd) {\n                                                    // Lo       HANGUL SYLLABLE BBU\n                                                    if (0xbfcc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBUG..HANGUL SYLLABLE BBUH\n                                                    if (0xbfcd <= code && code <= 0xbfe7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc005) {\n                                            if (code < 0xbfe9) {\n                                                // Lo       HANGUL SYLLABLE BBWEO\n                                                if (0xbfe8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc004) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWEOG..HANGUL SYLLABLE BBWEOH\n                                                    if (0xbfe9 <= code && code <= 0xc003) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBWE\n                                                    if (0xc004 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc020) {\n                                                // Lo  [27] HANGUL SYLLABLE BBWEG..HANGUL SYLLABLE BBWEH\n                                                if (0xc005 <= code && code <= 0xc01f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc021) {\n                                                    // Lo       HANGUL SYLLABLE BBWI\n                                                    if (0xc020 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWIG..HANGUL SYLLABLE BBWIH\n                                                    if (0xc021 <= code && code <= 0xc03b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc0c8) {\n                                    if (code < 0xc075) {\n                                        if (code < 0xc058) {\n                                            if (code < 0xc03d) {\n                                                // Lo       HANGUL SYLLABLE BBYU\n                                                if (0xc03c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBYUG..HANGUL SYLLABLE BBYUH\n                                                if (0xc03d <= code && code <= 0xc057) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc059) {\n                                                // Lo       HANGUL SYLLABLE BBEU\n                                                if (0xc058 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc074) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEUG..HANGUL SYLLABLE BBEUH\n                                                    if (0xc059 <= code && code <= 0xc073) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYI\n                                                    if (0xc074 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc091) {\n                                            if (code < 0xc090) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYIG..HANGUL SYLLABLE BBYIH\n                                                if (0xc075 <= code && code <= 0xc08f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBI\n                                                if (0xc090 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc0ac) {\n                                                // Lo  [27] HANGUL SYLLABLE BBIG..HANGUL SYLLABLE BBIH\n                                                if (0xc091 <= code && code <= 0xc0ab) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc0ad) {\n                                                    // Lo       HANGUL SYLLABLE SA\n                                                    if (0xc0ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SAG..HANGUL SYLLABLE SAH\n                                                    if (0xc0ad <= code && code <= 0xc0c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc101) {\n                                        if (code < 0xc0e4) {\n                                            if (code < 0xc0c9) {\n                                                // Lo       HANGUL SYLLABLE SAE\n                                                if (0xc0c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SAEG..HANGUL SYLLABLE SAEH\n                                                if (0xc0c9 <= code && code <= 0xc0e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc0e5) {\n                                                // Lo       HANGUL SYLLABLE SYA\n                                                if (0xc0e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc100) {\n                                                    // Lo  [27] HANGUL SYLLABLE SYAG..HANGUL SYLLABLE SYAH\n                                                    if (0xc0e5 <= code && code <= 0xc0ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYAE\n                                                    if (0xc100 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc138) {\n                                            if (code < 0xc11c) {\n                                                // Lo  [27] HANGUL SYLLABLE SYAEG..HANGUL SYLLABLE SYAEH\n                                                if (0xc101 <= code && code <= 0xc11b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc11d) {\n                                                    // Lo       HANGUL SYLLABLE SEO\n                                                    if (0xc11c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SEOG..HANGUL SYLLABLE SEOH\n                                                    if (0xc11d <= code && code <= 0xc137) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc139) {\n                                                // Lo       HANGUL SYLLABLE SE\n                                                if (0xc138 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc154) {\n                                                    // Lo  [27] HANGUL SYLLABLE SEG..HANGUL SYLLABLE SEH\n                                                    if (0xc139 <= code && code <= 0xc153) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYEO\n                                                    if (0xc154 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xc288) {\n                                if (code < 0xc1e1) {\n                                    if (code < 0xc1a8) {\n                                        if (code < 0xc171) {\n                                            if (code < 0xc170) {\n                                                // Lo  [27] HANGUL SYLLABLE SYEOG..HANGUL SYLLABLE SYEOH\n                                                if (0xc155 <= code && code <= 0xc16f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SYE\n                                                if (0xc170 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc18c) {\n                                                // Lo  [27] HANGUL SYLLABLE SYEG..HANGUL SYLLABLE SYEH\n                                                if (0xc171 <= code && code <= 0xc18b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc18d) {\n                                                    // Lo       HANGUL SYLLABLE SO\n                                                    if (0xc18c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SOG..HANGUL SYLLABLE SOH\n                                                    if (0xc18d <= code && code <= 0xc1a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc1c4) {\n                                            if (code < 0xc1a9) {\n                                                // Lo       HANGUL SYLLABLE SWA\n                                                if (0xc1a8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SWAG..HANGUL SYLLABLE SWAH\n                                                if (0xc1a9 <= code && code <= 0xc1c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc1c5) {\n                                                // Lo       HANGUL SYLLABLE SWAE\n                                                if (0xc1c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc1e0) {\n                                                    // Lo  [27] HANGUL SYLLABLE SWAEG..HANGUL SYLLABLE SWAEH\n                                                    if (0xc1c5 <= code && code <= 0xc1df) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SOE\n                                                    if (0xc1e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc234) {\n                                        if (code < 0xc1fd) {\n                                            if (code < 0xc1fc) {\n                                                // Lo  [27] HANGUL SYLLABLE SOEG..HANGUL SYLLABLE SOEH\n                                                if (0xc1e1 <= code && code <= 0xc1fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SYO\n                                                if (0xc1fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc218) {\n                                                // Lo  [27] HANGUL SYLLABLE SYOG..HANGUL SYLLABLE SYOH\n                                                if (0xc1fd <= code && code <= 0xc217) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc219) {\n                                                    // Lo       HANGUL SYLLABLE SU\n                                                    if (0xc218 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SUG..HANGUL SYLLABLE SUH\n                                                    if (0xc219 <= code && code <= 0xc233) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc251) {\n                                            if (code < 0xc235) {\n                                                // Lo       HANGUL SYLLABLE SWEO\n                                                if (0xc234 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc250) {\n                                                    // Lo  [27] HANGUL SYLLABLE SWEOG..HANGUL SYLLABLE SWEOH\n                                                    if (0xc235 <= code && code <= 0xc24f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SWE\n                                                    if (0xc250 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc26c) {\n                                                // Lo  [27] HANGUL SYLLABLE SWEG..HANGUL SYLLABLE SWEH\n                                                if (0xc251 <= code && code <= 0xc26b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc26d) {\n                                                    // Lo       HANGUL SYLLABLE SWI\n                                                    if (0xc26c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SWIG..HANGUL SYLLABLE SWIH\n                                                    if (0xc26d <= code && code <= 0xc287) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc315) {\n                                    if (code < 0xc2c1) {\n                                        if (code < 0xc2a4) {\n                                            if (code < 0xc289) {\n                                                // Lo       HANGUL SYLLABLE SYU\n                                                if (0xc288 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SYUG..HANGUL SYLLABLE SYUH\n                                                if (0xc289 <= code && code <= 0xc2a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc2a5) {\n                                                // Lo       HANGUL SYLLABLE SEU\n                                                if (0xc2a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc2c0) {\n                                                    // Lo  [27] HANGUL SYLLABLE SEUG..HANGUL SYLLABLE SEUH\n                                                    if (0xc2a5 <= code && code <= 0xc2bf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYI\n                                                    if (0xc2c0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc2f8) {\n                                            if (code < 0xc2dc) {\n                                                // Lo  [27] HANGUL SYLLABLE SYIG..HANGUL SYLLABLE SYIH\n                                                if (0xc2c1 <= code && code <= 0xc2db) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc2dd) {\n                                                    // Lo       HANGUL SYLLABLE SI\n                                                    if (0xc2dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SIG..HANGUL SYLLABLE SIH\n                                                    if (0xc2dd <= code && code <= 0xc2f7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc2f9) {\n                                                // Lo       HANGUL SYLLABLE SSA\n                                                if (0xc2f8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc314) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSAG..HANGUL SYLLABLE SSAH\n                                                    if (0xc2f9 <= code && code <= 0xc313) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSAE\n                                                    if (0xc314 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc368) {\n                                        if (code < 0xc331) {\n                                            if (code < 0xc330) {\n                                                // Lo  [27] HANGUL SYLLABLE SSAEG..HANGUL SYLLABLE SSAEH\n                                                if (0xc315 <= code && code <= 0xc32f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSYA\n                                                if (0xc330 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc34c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSYAG..HANGUL SYLLABLE SSYAH\n                                                if (0xc331 <= code && code <= 0xc34b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc34d) {\n                                                    // Lo       HANGUL SYLLABLE SSYAE\n                                                    if (0xc34c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYAEG..HANGUL SYLLABLE SSYAEH\n                                                    if (0xc34d <= code && code <= 0xc367) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc385) {\n                                            if (code < 0xc369) {\n                                                // Lo       HANGUL SYLLABLE SSEO\n                                                if (0xc368 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc384) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSEOG..HANGUL SYLLABLE SSEOH\n                                                    if (0xc369 <= code && code <= 0xc383) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSE\n                                                    if (0xc384 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc3a0) {\n                                                // Lo  [27] HANGUL SYLLABLE SSEG..HANGUL SYLLABLE SSEH\n                                                if (0xc385 <= code && code <= 0xc39f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc3a1) {\n                                                    // Lo       HANGUL SYLLABLE SSYEO\n                                                    if (0xc3a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYEOG..HANGUL SYLLABLE SSYEOH\n                                                    if (0xc3a1 <= code && code <= 0xc3bb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xc609) {\n                            if (code < 0xc4d5) {\n                                if (code < 0xc448) {\n                                    if (code < 0xc3f5) {\n                                        if (code < 0xc3d8) {\n                                            if (code < 0xc3bd) {\n                                                // Lo       HANGUL SYLLABLE SSYE\n                                                if (0xc3bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SSYEG..HANGUL SYLLABLE SSYEH\n                                                if (0xc3bd <= code && code <= 0xc3d7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc3d9) {\n                                                // Lo       HANGUL SYLLABLE SSO\n                                                if (0xc3d8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc3f4) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSOG..HANGUL SYLLABLE SSOH\n                                                    if (0xc3d9 <= code && code <= 0xc3f3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSWA\n                                                    if (0xc3f4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc411) {\n                                            if (code < 0xc410) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWAG..HANGUL SYLLABLE SSWAH\n                                                if (0xc3f5 <= code && code <= 0xc40f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSWAE\n                                                if (0xc410 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc42c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWAEG..HANGUL SYLLABLE SSWAEH\n                                                if (0xc411 <= code && code <= 0xc42b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc42d) {\n                                                    // Lo       HANGUL SYLLABLE SSOE\n                                                    if (0xc42c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSOEG..HANGUL SYLLABLE SSOEH\n                                                    if (0xc42d <= code && code <= 0xc447) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc481) {\n                                        if (code < 0xc464) {\n                                            if (code < 0xc449) {\n                                                // Lo       HANGUL SYLLABLE SSYO\n                                                if (0xc448 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SSYOG..HANGUL SYLLABLE SSYOH\n                                                if (0xc449 <= code && code <= 0xc463) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc465) {\n                                                // Lo       HANGUL SYLLABLE SSU\n                                                if (0xc464 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc480) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSUG..HANGUL SYLLABLE SSUH\n                                                    if (0xc465 <= code && code <= 0xc47f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSWEO\n                                                    if (0xc480 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc4b8) {\n                                            if (code < 0xc49c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWEOG..HANGUL SYLLABLE SSWEOH\n                                                if (0xc481 <= code && code <= 0xc49b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc49d) {\n                                                    // Lo       HANGUL SYLLABLE SSWE\n                                                    if (0xc49c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSWEG..HANGUL SYLLABLE SSWEH\n                                                    if (0xc49d <= code && code <= 0xc4b7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc4b9) {\n                                                // Lo       HANGUL SYLLABLE SSWI\n                                                if (0xc4b8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc4d4) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSWIG..HANGUL SYLLABLE SSWIH\n                                                    if (0xc4b9 <= code && code <= 0xc4d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSYU\n                                                    if (0xc4d4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc57c) {\n                                    if (code < 0xc528) {\n                                        if (code < 0xc4f1) {\n                                            if (code < 0xc4f0) {\n                                                // Lo  [27] HANGUL SYLLABLE SSYUG..HANGUL SYLLABLE SSYUH\n                                                if (0xc4d5 <= code && code <= 0xc4ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSEU\n                                                if (0xc4f0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc50c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSEUG..HANGUL SYLLABLE SSEUH\n                                                if (0xc4f1 <= code && code <= 0xc50b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc50d) {\n                                                    // Lo       HANGUL SYLLABLE SSYI\n                                                    if (0xc50c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYIG..HANGUL SYLLABLE SSYIH\n                                                    if (0xc50d <= code && code <= 0xc527) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc545) {\n                                            if (code < 0xc529) {\n                                                // Lo       HANGUL SYLLABLE SSI\n                                                if (0xc528 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc544) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSIG..HANGUL SYLLABLE SSIH\n                                                    if (0xc529 <= code && code <= 0xc543) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE A\n                                                    if (0xc544 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc560) {\n                                                // Lo  [27] HANGUL SYLLABLE AG..HANGUL SYLLABLE AH\n                                                if (0xc545 <= code && code <= 0xc55f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc561) {\n                                                    // Lo       HANGUL SYLLABLE AE\n                                                    if (0xc560 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE AEG..HANGUL SYLLABLE AEH\n                                                    if (0xc561 <= code && code <= 0xc57b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc5b5) {\n                                        if (code < 0xc598) {\n                                            if (code < 0xc57d) {\n                                                // Lo       HANGUL SYLLABLE YA\n                                                if (0xc57c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE YAG..HANGUL SYLLABLE YAH\n                                                if (0xc57d <= code && code <= 0xc597) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc599) {\n                                                // Lo       HANGUL SYLLABLE YAE\n                                                if (0xc598 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc5b4) {\n                                                    // Lo  [27] HANGUL SYLLABLE YAEG..HANGUL SYLLABLE YAEH\n                                                    if (0xc599 <= code && code <= 0xc5b3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE EO\n                                                    if (0xc5b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc5ec) {\n                                            if (code < 0xc5d0) {\n                                                // Lo  [27] HANGUL SYLLABLE EOG..HANGUL SYLLABLE EOH\n                                                if (0xc5b5 <= code && code <= 0xc5cf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc5d1) {\n                                                    // Lo       HANGUL SYLLABLE E\n                                                    if (0xc5d0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE EG..HANGUL SYLLABLE EH\n                                                    if (0xc5d1 <= code && code <= 0xc5eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc5ed) {\n                                                // Lo       HANGUL SYLLABLE YEO\n                                                if (0xc5ec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc608) {\n                                                    // Lo  [27] HANGUL SYLLABLE YEOG..HANGUL SYLLABLE YEOH\n                                                    if (0xc5ed <= code && code <= 0xc607) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE YE\n                                                    if (0xc608 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xc73c) {\n                                if (code < 0xc695) {\n                                    if (code < 0xc65c) {\n                                        if (code < 0xc625) {\n                                            if (code < 0xc624) {\n                                                // Lo  [27] HANGUL SYLLABLE YEG..HANGUL SYLLABLE YEH\n                                                if (0xc609 <= code && code <= 0xc623) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE O\n                                                if (0xc624 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc640) {\n                                                // Lo  [27] HANGUL SYLLABLE OG..HANGUL SYLLABLE OH\n                                                if (0xc625 <= code && code <= 0xc63f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc641) {\n                                                    // Lo       HANGUL SYLLABLE WA\n                                                    if (0xc640 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE WAG..HANGUL SYLLABLE WAH\n                                                    if (0xc641 <= code && code <= 0xc65b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc678) {\n                                            if (code < 0xc65d) {\n                                                // Lo       HANGUL SYLLABLE WAE\n                                                if (0xc65c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE WAEG..HANGUL SYLLABLE WAEH\n                                                if (0xc65d <= code && code <= 0xc677) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc679) {\n                                                // Lo       HANGUL SYLLABLE OE\n                                                if (0xc678 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc694) {\n                                                    // Lo  [27] HANGUL SYLLABLE OEG..HANGUL SYLLABLE OEH\n                                                    if (0xc679 <= code && code <= 0xc693) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE YO\n                                                    if (0xc694 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc6e8) {\n                                        if (code < 0xc6b1) {\n                                            if (code < 0xc6b0) {\n                                                // Lo  [27] HANGUL SYLLABLE YOG..HANGUL SYLLABLE YOH\n                                                if (0xc695 <= code && code <= 0xc6af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE U\n                                                if (0xc6b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc6cc) {\n                                                // Lo  [27] HANGUL SYLLABLE UG..HANGUL SYLLABLE UH\n                                                if (0xc6b1 <= code && code <= 0xc6cb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc6cd) {\n                                                    // Lo       HANGUL SYLLABLE WEO\n                                                    if (0xc6cc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE WEOG..HANGUL SYLLABLE WEOH\n                                                    if (0xc6cd <= code && code <= 0xc6e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc705) {\n                                            if (code < 0xc6e9) {\n                                                // Lo       HANGUL SYLLABLE WE\n                                                if (0xc6e8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc704) {\n                                                    // Lo  [27] HANGUL SYLLABLE WEG..HANGUL SYLLABLE WEH\n                                                    if (0xc6e9 <= code && code <= 0xc703) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE WI\n                                                    if (0xc704 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc720) {\n                                                // Lo  [27] HANGUL SYLLABLE WIG..HANGUL SYLLABLE WIH\n                                                if (0xc705 <= code && code <= 0xc71f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc721) {\n                                                    // Lo       HANGUL SYLLABLE YU\n                                                    if (0xc720 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE YUG..HANGUL SYLLABLE YUH\n                                                    if (0xc721 <= code && code <= 0xc73b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc7c9) {\n                                    if (code < 0xc775) {\n                                        if (code < 0xc758) {\n                                            if (code < 0xc73d) {\n                                                // Lo       HANGUL SYLLABLE EU\n                                                if (0xc73c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE EUG..HANGUL SYLLABLE EUH\n                                                if (0xc73d <= code && code <= 0xc757) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc759) {\n                                                // Lo       HANGUL SYLLABLE YI\n                                                if (0xc758 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc774) {\n                                                    // Lo  [27] HANGUL SYLLABLE YIG..HANGUL SYLLABLE YIH\n                                                    if (0xc759 <= code && code <= 0xc773) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE I\n                                                    if (0xc774 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc7ac) {\n                                            if (code < 0xc790) {\n                                                // Lo  [27] HANGUL SYLLABLE IG..HANGUL SYLLABLE IH\n                                                if (0xc775 <= code && code <= 0xc78f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc791) {\n                                                    // Lo       HANGUL SYLLABLE JA\n                                                    if (0xc790 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JAG..HANGUL SYLLABLE JAH\n                                                    if (0xc791 <= code && code <= 0xc7ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc7ad) {\n                                                // Lo       HANGUL SYLLABLE JAE\n                                                if (0xc7ac === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc7c8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JAEG..HANGUL SYLLABLE JAEH\n                                                    if (0xc7ad <= code && code <= 0xc7c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JYA\n                                                    if (0xc7c8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc81c) {\n                                        if (code < 0xc7e5) {\n                                            if (code < 0xc7e4) {\n                                                // Lo  [27] HANGUL SYLLABLE JYAG..HANGUL SYLLABLE JYAH\n                                                if (0xc7c9 <= code && code <= 0xc7e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JYAE\n                                                if (0xc7e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc800) {\n                                                // Lo  [27] HANGUL SYLLABLE JYAEG..HANGUL SYLLABLE JYAEH\n                                                if (0xc7e5 <= code && code <= 0xc7ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc801) {\n                                                    // Lo       HANGUL SYLLABLE JEO\n                                                    if (0xc800 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JEOG..HANGUL SYLLABLE JEOH\n                                                    if (0xc801 <= code && code <= 0xc81b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc839) {\n                                            if (code < 0xc81d) {\n                                                // Lo       HANGUL SYLLABLE JE\n                                                if (0xc81c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc838) {\n                                                    // Lo  [27] HANGUL SYLLABLE JEG..HANGUL SYLLABLE JEH\n                                                    if (0xc81d <= code && code <= 0xc837) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JYEO\n                                                    if (0xc838 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc854) {\n                                                // Lo  [27] HANGUL SYLLABLE JYEOG..HANGUL SYLLABLE JYEOH\n                                                if (0xc839 <= code && code <= 0xc853) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc855) {\n                                                    // Lo       HANGUL SYLLABLE JYE\n                                                    if (0xc854 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JYEG..HANGUL SYLLABLE JYEH\n                                                    if (0xc855 <= code && code <= 0xc86f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0xcd24) {\n                        if (code < 0xcabd) {\n                            if (code < 0xc989) {\n                                if (code < 0xc8fc) {\n                                    if (code < 0xc8a9) {\n                                        if (code < 0xc88c) {\n                                            if (code < 0xc871) {\n                                                // Lo       HANGUL SYLLABLE JO\n                                                if (0xc870 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JOG..HANGUL SYLLABLE JOH\n                                                if (0xc871 <= code && code <= 0xc88b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc88d) {\n                                                // Lo       HANGUL SYLLABLE JWA\n                                                if (0xc88c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc8a8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JWAG..HANGUL SYLLABLE JWAH\n                                                    if (0xc88d <= code && code <= 0xc8a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JWAE\n                                                    if (0xc8a8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc8c5) {\n                                            if (code < 0xc8c4) {\n                                                // Lo  [27] HANGUL SYLLABLE JWAEG..HANGUL SYLLABLE JWAEH\n                                                if (0xc8a9 <= code && code <= 0xc8c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JOE\n                                                if (0xc8c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc8e0) {\n                                                // Lo  [27] HANGUL SYLLABLE JOEG..HANGUL SYLLABLE JOEH\n                                                if (0xc8c5 <= code && code <= 0xc8df) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc8e1) {\n                                                    // Lo       HANGUL SYLLABLE JYO\n                                                    if (0xc8e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JYOG..HANGUL SYLLABLE JYOH\n                                                    if (0xc8e1 <= code && code <= 0xc8fb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc935) {\n                                        if (code < 0xc918) {\n                                            if (code < 0xc8fd) {\n                                                // Lo       HANGUL SYLLABLE JU\n                                                if (0xc8fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JUG..HANGUL SYLLABLE JUH\n                                                if (0xc8fd <= code && code <= 0xc917) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc919) {\n                                                // Lo       HANGUL SYLLABLE JWEO\n                                                if (0xc918 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc934) {\n                                                    // Lo  [27] HANGUL SYLLABLE JWEOG..HANGUL SYLLABLE JWEOH\n                                                    if (0xc919 <= code && code <= 0xc933) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JWE\n                                                    if (0xc934 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc96c) {\n                                            if (code < 0xc950) {\n                                                // Lo  [27] HANGUL SYLLABLE JWEG..HANGUL SYLLABLE JWEH\n                                                if (0xc935 <= code && code <= 0xc94f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc951) {\n                                                    // Lo       HANGUL SYLLABLE JWI\n                                                    if (0xc950 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JWIG..HANGUL SYLLABLE JWIH\n                                                    if (0xc951 <= code && code <= 0xc96b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc96d) {\n                                                // Lo       HANGUL SYLLABLE JYU\n                                                if (0xc96c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc988) {\n                                                    // Lo  [27] HANGUL SYLLABLE JYUG..HANGUL SYLLABLE JYUH\n                                                    if (0xc96d <= code && code <= 0xc987) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JEU\n                                                    if (0xc988 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xca30) {\n                                    if (code < 0xc9dc) {\n                                        if (code < 0xc9a5) {\n                                            if (code < 0xc9a4) {\n                                                // Lo  [27] HANGUL SYLLABLE JEUG..HANGUL SYLLABLE JEUH\n                                                if (0xc989 <= code && code <= 0xc9a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JYI\n                                                if (0xc9a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc9c0) {\n                                                // Lo  [27] HANGUL SYLLABLE JYIG..HANGUL SYLLABLE JYIH\n                                                if (0xc9a5 <= code && code <= 0xc9bf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc9c1) {\n                                                    // Lo       HANGUL SYLLABLE JI\n                                                    if (0xc9c0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JIG..HANGUL SYLLABLE JIH\n                                                    if (0xc9c1 <= code && code <= 0xc9db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc9f9) {\n                                            if (code < 0xc9dd) {\n                                                // Lo       HANGUL SYLLABLE JJA\n                                                if (0xc9dc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc9f8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJAG..HANGUL SYLLABLE JJAH\n                                                    if (0xc9dd <= code && code <= 0xc9f7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJAE\n                                                    if (0xc9f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xca14) {\n                                                // Lo  [27] HANGUL SYLLABLE JJAEG..HANGUL SYLLABLE JJAEH\n                                                if (0xc9f9 <= code && code <= 0xca13) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca15) {\n                                                    // Lo       HANGUL SYLLABLE JJYA\n                                                    if (0xca14 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYAG..HANGUL SYLLABLE JJYAH\n                                                    if (0xca15 <= code && code <= 0xca2f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xca69) {\n                                        if (code < 0xca4c) {\n                                            if (code < 0xca31) {\n                                                // Lo       HANGUL SYLLABLE JJYAE\n                                                if (0xca30 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJYAEG..HANGUL SYLLABLE JJYAEH\n                                                if (0xca31 <= code && code <= 0xca4b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xca4d) {\n                                                // Lo       HANGUL SYLLABLE JJEO\n                                                if (0xca4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca68) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJEOG..HANGUL SYLLABLE JJEOH\n                                                    if (0xca4d <= code && code <= 0xca67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJE\n                                                    if (0xca68 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcaa0) {\n                                            if (code < 0xca84) {\n                                                // Lo  [27] HANGUL SYLLABLE JJEG..HANGUL SYLLABLE JJEH\n                                                if (0xca69 <= code && code <= 0xca83) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca85) {\n                                                    // Lo       HANGUL SYLLABLE JJYEO\n                                                    if (0xca84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYEOG..HANGUL SYLLABLE JJYEOH\n                                                    if (0xca85 <= code && code <= 0xca9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcaa1) {\n                                                // Lo       HANGUL SYLLABLE JJYE\n                                                if (0xcaa0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcabc) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYEG..HANGUL SYLLABLE JJYEH\n                                                    if (0xcaa1 <= code && code <= 0xcabb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJO\n                                                    if (0xcabc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xcbf0) {\n                                if (code < 0xcb49) {\n                                    if (code < 0xcb10) {\n                                        if (code < 0xcad9) {\n                                            if (code < 0xcad8) {\n                                                // Lo  [27] HANGUL SYLLABLE JJOG..HANGUL SYLLABLE JJOH\n                                                if (0xcabd <= code && code <= 0xcad7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JJWA\n                                                if (0xcad8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcaf4) {\n                                                // Lo  [27] HANGUL SYLLABLE JJWAG..HANGUL SYLLABLE JJWAH\n                                                if (0xcad9 <= code && code <= 0xcaf3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcaf5) {\n                                                    // Lo       HANGUL SYLLABLE JJWAE\n                                                    if (0xcaf4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWAEG..HANGUL SYLLABLE JJWAEH\n                                                    if (0xcaf5 <= code && code <= 0xcb0f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcb2c) {\n                                            if (code < 0xcb11) {\n                                                // Lo       HANGUL SYLLABLE JJOE\n                                                if (0xcb10 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJOEG..HANGUL SYLLABLE JJOEH\n                                                if (0xcb11 <= code && code <= 0xcb2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcb2d) {\n                                                // Lo       HANGUL SYLLABLE JJYO\n                                                if (0xcb2c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcb48) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYOG..HANGUL SYLLABLE JJYOH\n                                                    if (0xcb2d <= code && code <= 0xcb47) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJU\n                                                    if (0xcb48 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcb9c) {\n                                        if (code < 0xcb65) {\n                                            if (code < 0xcb64) {\n                                                // Lo  [27] HANGUL SYLLABLE JJUG..HANGUL SYLLABLE JJUH\n                                                if (0xcb49 <= code && code <= 0xcb63) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JJWEO\n                                                if (0xcb64 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcb80) {\n                                                // Lo  [27] HANGUL SYLLABLE JJWEOG..HANGUL SYLLABLE JJWEOH\n                                                if (0xcb65 <= code && code <= 0xcb7f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcb81) {\n                                                    // Lo       HANGUL SYLLABLE JJWE\n                                                    if (0xcb80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWEG..HANGUL SYLLABLE JJWEH\n                                                    if (0xcb81 <= code && code <= 0xcb9b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcbb9) {\n                                            if (code < 0xcb9d) {\n                                                // Lo       HANGUL SYLLABLE JJWI\n                                                if (0xcb9c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbb8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWIG..HANGUL SYLLABLE JJWIH\n                                                    if (0xcb9d <= code && code <= 0xcbb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJYU\n                                                    if (0xcbb8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcbd4) {\n                                                // Lo  [27] HANGUL SYLLABLE JJYUG..HANGUL SYLLABLE JJYUH\n                                                if (0xcbb9 <= code && code <= 0xcbd3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbd5) {\n                                                    // Lo       HANGUL SYLLABLE JJEU\n                                                    if (0xcbd4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJEUG..HANGUL SYLLABLE JJEUH\n                                                    if (0xcbd5 <= code && code <= 0xcbef) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcc7d) {\n                                    if (code < 0xcc29) {\n                                        if (code < 0xcc0c) {\n                                            if (code < 0xcbf1) {\n                                                // Lo       HANGUL SYLLABLE JJYI\n                                                if (0xcbf0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJYIG..HANGUL SYLLABLE JJYIH\n                                                if (0xcbf1 <= code && code <= 0xcc0b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc0d) {\n                                                // Lo       HANGUL SYLLABLE JJI\n                                                if (0xcc0c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc28) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJIG..HANGUL SYLLABLE JJIH\n                                                    if (0xcc0d <= code && code <= 0xcc27) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CA\n                                                    if (0xcc28 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcc60) {\n                                            if (code < 0xcc44) {\n                                                // Lo  [27] HANGUL SYLLABLE CAG..HANGUL SYLLABLE CAH\n                                                if (0xcc29 <= code && code <= 0xcc43) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc45) {\n                                                    // Lo       HANGUL SYLLABLE CAE\n                                                    if (0xcc44 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CAEG..HANGUL SYLLABLE CAEH\n                                                    if (0xcc45 <= code && code <= 0xcc5f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc61) {\n                                                // Lo       HANGUL SYLLABLE CYA\n                                                if (0xcc60 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc7c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CYAG..HANGUL SYLLABLE CYAH\n                                                    if (0xcc61 <= code && code <= 0xcc7b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYAE\n                                                    if (0xcc7c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xccd0) {\n                                        if (code < 0xcc99) {\n                                            if (code < 0xcc98) {\n                                                // Lo  [27] HANGUL SYLLABLE CYAEG..HANGUL SYLLABLE CYAEH\n                                                if (0xcc7d <= code && code <= 0xcc97) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CEO\n                                                if (0xcc98 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xccb4) {\n                                                // Lo  [27] HANGUL SYLLABLE CEOG..HANGUL SYLLABLE CEOH\n                                                if (0xcc99 <= code && code <= 0xccb3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xccb5) {\n                                                    // Lo       HANGUL SYLLABLE CE\n                                                    if (0xccb4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CEG..HANGUL SYLLABLE CEH\n                                                    if (0xccb5 <= code && code <= 0xcccf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcced) {\n                                            if (code < 0xccd1) {\n                                                // Lo       HANGUL SYLLABLE CYEO\n                                                if (0xccd0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xccec) {\n                                                    // Lo  [27] HANGUL SYLLABLE CYEOG..HANGUL SYLLABLE CYEOH\n                                                    if (0xccd1 <= code && code <= 0xcceb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYE\n                                                    if (0xccec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd08) {\n                                                // Lo  [27] HANGUL SYLLABLE CYEG..HANGUL SYLLABLE CYEH\n                                                if (0xcced <= code && code <= 0xcd07) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd09) {\n                                                    // Lo       HANGUL SYLLABLE CO\n                                                    if (0xcd08 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE COG..HANGUL SYLLABLE COH\n                                                    if (0xcd09 <= code && code <= 0xcd23) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xcf71) {\n                            if (code < 0xce3d) {\n                                if (code < 0xcdb0) {\n                                    if (code < 0xcd5d) {\n                                        if (code < 0xcd40) {\n                                            if (code < 0xcd25) {\n                                                // Lo       HANGUL SYLLABLE CWA\n                                                if (0xcd24 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE CWAG..HANGUL SYLLABLE CWAH\n                                                if (0xcd25 <= code && code <= 0xcd3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd41) {\n                                                // Lo       HANGUL SYLLABLE CWAE\n                                                if (0xcd40 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd5c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CWAEG..HANGUL SYLLABLE CWAEH\n                                                    if (0xcd41 <= code && code <= 0xcd5b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE COE\n                                                    if (0xcd5c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcd79) {\n                                            if (code < 0xcd78) {\n                                                // Lo  [27] HANGUL SYLLABLE COEG..HANGUL SYLLABLE COEH\n                                                if (0xcd5d <= code && code <= 0xcd77) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CYO\n                                                if (0xcd78 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd94) {\n                                                // Lo  [27] HANGUL SYLLABLE CYOG..HANGUL SYLLABLE CYOH\n                                                if (0xcd79 <= code && code <= 0xcd93) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd95) {\n                                                    // Lo       HANGUL SYLLABLE CU\n                                                    if (0xcd94 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CUG..HANGUL SYLLABLE CUH\n                                                    if (0xcd95 <= code && code <= 0xcdaf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcde9) {\n                                        if (code < 0xcdcc) {\n                                            if (code < 0xcdb1) {\n                                                // Lo       HANGUL SYLLABLE CWEO\n                                                if (0xcdb0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE CWEOG..HANGUL SYLLABLE CWEOH\n                                                if (0xcdb1 <= code && code <= 0xcdcb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcdcd) {\n                                                // Lo       HANGUL SYLLABLE CWE\n                                                if (0xcdcc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcde8) {\n                                                    // Lo  [27] HANGUL SYLLABLE CWEG..HANGUL SYLLABLE CWEH\n                                                    if (0xcdcd <= code && code <= 0xcde7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CWI\n                                                    if (0xcde8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xce20) {\n                                            if (code < 0xce04) {\n                                                // Lo  [27] HANGUL SYLLABLE CWIG..HANGUL SYLLABLE CWIH\n                                                if (0xcde9 <= code && code <= 0xce03) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce05) {\n                                                    // Lo       HANGUL SYLLABLE CYU\n                                                    if (0xce04 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CYUG..HANGUL SYLLABLE CYUH\n                                                    if (0xce05 <= code && code <= 0xce1f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xce21) {\n                                                // Lo       HANGUL SYLLABLE CEU\n                                                if (0xce20 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce3c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CEUG..HANGUL SYLLABLE CEUH\n                                                    if (0xce21 <= code && code <= 0xce3b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYI\n                                                    if (0xce3c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcee4) {\n                                    if (code < 0xce90) {\n                                        if (code < 0xce59) {\n                                            if (code < 0xce58) {\n                                                // Lo  [27] HANGUL SYLLABLE CYIG..HANGUL SYLLABLE CYIH\n                                                if (0xce3d <= code && code <= 0xce57) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CI\n                                                if (0xce58 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xce74) {\n                                                // Lo  [27] HANGUL SYLLABLE CIG..HANGUL SYLLABLE CIH\n                                                if (0xce59 <= code && code <= 0xce73) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce75) {\n                                                    // Lo       HANGUL SYLLABLE KA\n                                                    if (0xce74 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KAG..HANGUL SYLLABLE KAH\n                                                    if (0xce75 <= code && code <= 0xce8f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcead) {\n                                            if (code < 0xce91) {\n                                                // Lo       HANGUL SYLLABLE KAE\n                                                if (0xce90 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xceac) {\n                                                    // Lo  [27] HANGUL SYLLABLE KAEG..HANGUL SYLLABLE KAEH\n                                                    if (0xce91 <= code && code <= 0xceab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KYA\n                                                    if (0xceac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcec8) {\n                                                // Lo  [27] HANGUL SYLLABLE KYAG..HANGUL SYLLABLE KYAH\n                                                if (0xcead <= code && code <= 0xcec7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcec9) {\n                                                    // Lo       HANGUL SYLLABLE KYAE\n                                                    if (0xcec8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYAEG..HANGUL SYLLABLE KYAEH\n                                                    if (0xcec9 <= code && code <= 0xcee3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcf1d) {\n                                        if (code < 0xcf00) {\n                                            if (code < 0xcee5) {\n                                                // Lo       HANGUL SYLLABLE KEO\n                                                if (0xcee4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KEOG..HANGUL SYLLABLE KEOH\n                                                if (0xcee5 <= code && code <= 0xceff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcf01) {\n                                                // Lo       HANGUL SYLLABLE KE\n                                                if (0xcf00 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf1c) {\n                                                    // Lo  [27] HANGUL SYLLABLE KEG..HANGUL SYLLABLE KEH\n                                                    if (0xcf01 <= code && code <= 0xcf1b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KYEO\n                                                    if (0xcf1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcf54) {\n                                            if (code < 0xcf38) {\n                                                // Lo  [27] HANGUL SYLLABLE KYEOG..HANGUL SYLLABLE KYEOH\n                                                if (0xcf1d <= code && code <= 0xcf37) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf39) {\n                                                    // Lo       HANGUL SYLLABLE KYE\n                                                    if (0xcf38 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYEG..HANGUL SYLLABLE KYEH\n                                                    if (0xcf39 <= code && code <= 0xcf53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcf55) {\n                                                // Lo       HANGUL SYLLABLE KO\n                                                if (0xcf54 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf70) {\n                                                    // Lo  [27] HANGUL SYLLABLE KOG..HANGUL SYLLABLE KOH\n                                                    if (0xcf55 <= code && code <= 0xcf6f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KWA\n                                                    if (0xcf70 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xd0a4) {\n                                if (code < 0xcffd) {\n                                    if (code < 0xcfc4) {\n                                        if (code < 0xcf8d) {\n                                            if (code < 0xcf8c) {\n                                                // Lo  [27] HANGUL SYLLABLE KWAG..HANGUL SYLLABLE KWAH\n                                                if (0xcf71 <= code && code <= 0xcf8b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE KWAE\n                                                if (0xcf8c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcfa8) {\n                                                // Lo  [27] HANGUL SYLLABLE KWAEG..HANGUL SYLLABLE KWAEH\n                                                if (0xcf8d <= code && code <= 0xcfa7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcfa9) {\n                                                    // Lo       HANGUL SYLLABLE KOE\n                                                    if (0xcfa8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KOEG..HANGUL SYLLABLE KOEH\n                                                    if (0xcfa9 <= code && code <= 0xcfc3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcfe0) {\n                                            if (code < 0xcfc5) {\n                                                // Lo       HANGUL SYLLABLE KYO\n                                                if (0xcfc4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KYOG..HANGUL SYLLABLE KYOH\n                                                if (0xcfc5 <= code && code <= 0xcfdf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcfe1) {\n                                                // Lo       HANGUL SYLLABLE KU\n                                                if (0xcfe0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcffc) {\n                                                    // Lo  [27] HANGUL SYLLABLE KUG..HANGUL SYLLABLE KUH\n                                                    if (0xcfe1 <= code && code <= 0xcffb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KWEO\n                                                    if (0xcffc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd050) {\n                                        if (code < 0xd019) {\n                                            if (code < 0xd018) {\n                                                // Lo  [27] HANGUL SYLLABLE KWEOG..HANGUL SYLLABLE KWEOH\n                                                if (0xcffd <= code && code <= 0xd017) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE KWE\n                                                if (0xd018 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd034) {\n                                                // Lo  [27] HANGUL SYLLABLE KWEG..HANGUL SYLLABLE KWEH\n                                                if (0xd019 <= code && code <= 0xd033) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd035) {\n                                                    // Lo       HANGUL SYLLABLE KWI\n                                                    if (0xd034 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KWIG..HANGUL SYLLABLE KWIH\n                                                    if (0xd035 <= code && code <= 0xd04f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd06d) {\n                                            if (code < 0xd051) {\n                                                // Lo       HANGUL SYLLABLE KYU\n                                                if (0xd050 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd06c) {\n                                                    // Lo  [27] HANGUL SYLLABLE KYUG..HANGUL SYLLABLE KYUH\n                                                    if (0xd051 <= code && code <= 0xd06b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KEU\n                                                    if (0xd06c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd088) {\n                                                // Lo  [27] HANGUL SYLLABLE KEUG..HANGUL SYLLABLE KEUH\n                                                if (0xd06d <= code && code <= 0xd087) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd089) {\n                                                    // Lo       HANGUL SYLLABLE KYI\n                                                    if (0xd088 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYIG..HANGUL SYLLABLE KYIH\n                                                    if (0xd089 <= code && code <= 0xd0a3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd131) {\n                                    if (code < 0xd0dd) {\n                                        if (code < 0xd0c0) {\n                                            if (code < 0xd0a5) {\n                                                // Lo       HANGUL SYLLABLE KI\n                                                if (0xd0a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KIG..HANGUL SYLLABLE KIH\n                                                if (0xd0a5 <= code && code <= 0xd0bf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd0c1) {\n                                                // Lo       HANGUL SYLLABLE TA\n                                                if (0xd0c0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd0dc) {\n                                                    // Lo  [27] HANGUL SYLLABLE TAG..HANGUL SYLLABLE TAH\n                                                    if (0xd0c1 <= code && code <= 0xd0db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TAE\n                                                    if (0xd0dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd114) {\n                                            if (code < 0xd0f8) {\n                                                // Lo  [27] HANGUL SYLLABLE TAEG..HANGUL SYLLABLE TAEH\n                                                if (0xd0dd <= code && code <= 0xd0f7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd0f9) {\n                                                    // Lo       HANGUL SYLLABLE TYA\n                                                    if (0xd0f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TYAG..HANGUL SYLLABLE TYAH\n                                                    if (0xd0f9 <= code && code <= 0xd113) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd115) {\n                                                // Lo       HANGUL SYLLABLE TYAE\n                                                if (0xd114 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd130) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYAEG..HANGUL SYLLABLE TYAEH\n                                                    if (0xd115 <= code && code <= 0xd12f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TEO\n                                                    if (0xd130 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd184) {\n                                        if (code < 0xd14d) {\n                                            if (code < 0xd14c) {\n                                                // Lo  [27] HANGUL SYLLABLE TEOG..HANGUL SYLLABLE TEOH\n                                                if (0xd131 <= code && code <= 0xd14b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE TE\n                                                if (0xd14c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd168) {\n                                                // Lo  [27] HANGUL SYLLABLE TEG..HANGUL SYLLABLE TEH\n                                                if (0xd14d <= code && code <= 0xd167) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd169) {\n                                                    // Lo       HANGUL SYLLABLE TYEO\n                                                    if (0xd168 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TYEOG..HANGUL SYLLABLE TYEOH\n                                                    if (0xd169 <= code && code <= 0xd183) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd1a1) {\n                                            if (code < 0xd185) {\n                                                // Lo       HANGUL SYLLABLE TYE\n                                                if (0xd184 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd1a0) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYEG..HANGUL SYLLABLE TYEH\n                                                    if (0xd185 <= code && code <= 0xd19f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TO\n                                                    if (0xd1a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd1bc) {\n                                                // Lo  [27] HANGUL SYLLABLE TOG..HANGUL SYLLABLE TOH\n                                                if (0xd1a1 <= code && code <= 0xd1bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd1bd) {\n                                                    // Lo       HANGUL SYLLABLE TWA\n                                                    if (0xd1bc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TWAG..HANGUL SYLLABLE TWAH\n                                                    if (0xd1bd <= code && code <= 0xd1d7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x1133b) {\n                    if (code < 0xd671) {\n                        if (code < 0xd424) {\n                            if (code < 0xd2f1) {\n                                if (code < 0xd264) {\n                                    if (code < 0xd211) {\n                                        if (code < 0xd1f4) {\n                                            if (code < 0xd1d9) {\n                                                // Lo       HANGUL SYLLABLE TWAE\n                                                if (0xd1d8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE TWAEG..HANGUL SYLLABLE TWAEH\n                                                if (0xd1d9 <= code && code <= 0xd1f3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd1f5) {\n                                                // Lo       HANGUL SYLLABLE TOE\n                                                if (0xd1f4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd210) {\n                                                    // Lo  [27] HANGUL SYLLABLE TOEG..HANGUL SYLLABLE TOEH\n                                                    if (0xd1f5 <= code && code <= 0xd20f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TYO\n                                                    if (0xd210 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd22d) {\n                                            if (code < 0xd22c) {\n                                                // Lo  [27] HANGUL SYLLABLE TYOG..HANGUL SYLLABLE TYOH\n                                                if (0xd211 <= code && code <= 0xd22b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE TU\n                                                if (0xd22c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd248) {\n                                                // Lo  [27] HANGUL SYLLABLE TUG..HANGUL SYLLABLE TUH\n                                                if (0xd22d <= code && code <= 0xd247) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd249) {\n                                                    // Lo       HANGUL SYLLABLE TWEO\n                                                    if (0xd248 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TWEOG..HANGUL SYLLABLE TWEOH\n                                                    if (0xd249 <= code && code <= 0xd263) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd29d) {\n                                        if (code < 0xd280) {\n                                            if (code < 0xd265) {\n                                                // Lo       HANGUL SYLLABLE TWE\n                                                if (0xd264 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE TWEG..HANGUL SYLLABLE TWEH\n                                                if (0xd265 <= code && code <= 0xd27f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd281) {\n                                                // Lo       HANGUL SYLLABLE TWI\n                                                if (0xd280 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd29c) {\n                                                    // Lo  [27] HANGUL SYLLABLE TWIG..HANGUL SYLLABLE TWIH\n                                                    if (0xd281 <= code && code <= 0xd29b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TYU\n                                                    if (0xd29c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd2d4) {\n                                            if (code < 0xd2b8) {\n                                                // Lo  [27] HANGUL SYLLABLE TYUG..HANGUL SYLLABLE TYUH\n                                                if (0xd29d <= code && code <= 0xd2b7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd2b9) {\n                                                    // Lo       HANGUL SYLLABLE TEU\n                                                    if (0xd2b8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TEUG..HANGUL SYLLABLE TEUH\n                                                    if (0xd2b9 <= code && code <= 0xd2d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd2d5) {\n                                                // Lo       HANGUL SYLLABLE TYI\n                                                if (0xd2d4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd2f0) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYIG..HANGUL SYLLABLE TYIH\n                                                    if (0xd2d5 <= code && code <= 0xd2ef) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TI\n                                                    if (0xd2f0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd37d) {\n                                    if (code < 0xd344) {\n                                        if (code < 0xd30d) {\n                                            if (code < 0xd30c) {\n                                                // Lo  [27] HANGUL SYLLABLE TIG..HANGUL SYLLABLE TIH\n                                                if (0xd2f1 <= code && code <= 0xd30b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PA\n                                                if (0xd30c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd328) {\n                                                // Lo  [27] HANGUL SYLLABLE PAG..HANGUL SYLLABLE PAH\n                                                if (0xd30d <= code && code <= 0xd327) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd329) {\n                                                    // Lo       HANGUL SYLLABLE PAE\n                                                    if (0xd328 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PAEG..HANGUL SYLLABLE PAEH\n                                                    if (0xd329 <= code && code <= 0xd343) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd360) {\n                                            if (code < 0xd345) {\n                                                // Lo       HANGUL SYLLABLE PYA\n                                                if (0xd344 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PYAG..HANGUL SYLLABLE PYAH\n                                                if (0xd345 <= code && code <= 0xd35f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd361) {\n                                                // Lo       HANGUL SYLLABLE PYAE\n                                                if (0xd360 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd37c) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYAEG..HANGUL SYLLABLE PYAEH\n                                                    if (0xd361 <= code && code <= 0xd37b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PEO\n                                                    if (0xd37c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd3d0) {\n                                        if (code < 0xd399) {\n                                            if (code < 0xd398) {\n                                                // Lo  [27] HANGUL SYLLABLE PEOG..HANGUL SYLLABLE PEOH\n                                                if (0xd37d <= code && code <= 0xd397) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PE\n                                                if (0xd398 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd3b4) {\n                                                // Lo  [27] HANGUL SYLLABLE PEG..HANGUL SYLLABLE PEH\n                                                if (0xd399 <= code && code <= 0xd3b3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3b5) {\n                                                    // Lo       HANGUL SYLLABLE PYEO\n                                                    if (0xd3b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PYEOG..HANGUL SYLLABLE PYEOH\n                                                    if (0xd3b5 <= code && code <= 0xd3cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd3ed) {\n                                            if (code < 0xd3d1) {\n                                                // Lo       HANGUL SYLLABLE PYE\n                                                if (0xd3d0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3ec) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYEG..HANGUL SYLLABLE PYEH\n                                                    if (0xd3d1 <= code && code <= 0xd3eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PO\n                                                    if (0xd3ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd408) {\n                                                // Lo  [27] HANGUL SYLLABLE POG..HANGUL SYLLABLE POH\n                                                if (0xd3ed <= code && code <= 0xd407) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd409) {\n                                                    // Lo       HANGUL SYLLABLE PWA\n                                                    if (0xd408 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PWAG..HANGUL SYLLABLE PWAH\n                                                    if (0xd409 <= code && code <= 0xd423) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xd53d) {\n                                if (code < 0xd4b0) {\n                                    if (code < 0xd45d) {\n                                        if (code < 0xd440) {\n                                            if (code < 0xd425) {\n                                                // Lo       HANGUL SYLLABLE PWAE\n                                                if (0xd424 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PWAEG..HANGUL SYLLABLE PWAEH\n                                                if (0xd425 <= code && code <= 0xd43f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd441) {\n                                                // Lo       HANGUL SYLLABLE POE\n                                                if (0xd440 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd45c) {\n                                                    // Lo  [27] HANGUL SYLLABLE POEG..HANGUL SYLLABLE POEH\n                                                    if (0xd441 <= code && code <= 0xd45b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PYO\n                                                    if (0xd45c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd479) {\n                                            if (code < 0xd478) {\n                                                // Lo  [27] HANGUL SYLLABLE PYOG..HANGUL SYLLABLE PYOH\n                                                if (0xd45d <= code && code <= 0xd477) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PU\n                                                if (0xd478 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd494) {\n                                                // Lo  [27] HANGUL SYLLABLE PUG..HANGUL SYLLABLE PUH\n                                                if (0xd479 <= code && code <= 0xd493) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd495) {\n                                                    // Lo       HANGUL SYLLABLE PWEO\n                                                    if (0xd494 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PWEOG..HANGUL SYLLABLE PWEOH\n                                                    if (0xd495 <= code && code <= 0xd4af) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd4e9) {\n                                        if (code < 0xd4cc) {\n                                            if (code < 0xd4b1) {\n                                                // Lo       HANGUL SYLLABLE PWE\n                                                if (0xd4b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PWEG..HANGUL SYLLABLE PWEH\n                                                if (0xd4b1 <= code && code <= 0xd4cb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd4cd) {\n                                                // Lo       HANGUL SYLLABLE PWI\n                                                if (0xd4cc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd4e8) {\n                                                    // Lo  [27] HANGUL SYLLABLE PWIG..HANGUL SYLLABLE PWIH\n                                                    if (0xd4cd <= code && code <= 0xd4e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PYU\n                                                    if (0xd4e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd520) {\n                                            if (code < 0xd504) {\n                                                // Lo  [27] HANGUL SYLLABLE PYUG..HANGUL SYLLABLE PYUH\n                                                if (0xd4e9 <= code && code <= 0xd503) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd505) {\n                                                    // Lo       HANGUL SYLLABLE PEU\n                                                    if (0xd504 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PEUG..HANGUL SYLLABLE PEUH\n                                                    if (0xd505 <= code && code <= 0xd51f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd521) {\n                                                // Lo       HANGUL SYLLABLE PYI\n                                                if (0xd520 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd53c) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYIG..HANGUL SYLLABLE PYIH\n                                                    if (0xd521 <= code && code <= 0xd53b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PI\n                                                    if (0xd53c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd5e4) {\n                                    if (code < 0xd590) {\n                                        if (code < 0xd559) {\n                                            if (code < 0xd558) {\n                                                // Lo  [27] HANGUL SYLLABLE PIG..HANGUL SYLLABLE PIH\n                                                if (0xd53d <= code && code <= 0xd557) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HA\n                                                if (0xd558 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd574) {\n                                                // Lo  [27] HANGUL SYLLABLE HAG..HANGUL SYLLABLE HAH\n                                                if (0xd559 <= code && code <= 0xd573) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd575) {\n                                                    // Lo       HANGUL SYLLABLE HAE\n                                                    if (0xd574 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HAEG..HANGUL SYLLABLE HAEH\n                                                    if (0xd575 <= code && code <= 0xd58f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd5ad) {\n                                            if (code < 0xd591) {\n                                                // Lo       HANGUL SYLLABLE HYA\n                                                if (0xd590 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd5ac) {\n                                                    // Lo  [27] HANGUL SYLLABLE HYAG..HANGUL SYLLABLE HYAH\n                                                    if (0xd591 <= code && code <= 0xd5ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYAE\n                                                    if (0xd5ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd5c8) {\n                                                // Lo  [27] HANGUL SYLLABLE HYAEG..HANGUL SYLLABLE HYAEH\n                                                if (0xd5ad <= code && code <= 0xd5c7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd5c9) {\n                                                    // Lo       HANGUL SYLLABLE HEO\n                                                    if (0xd5c8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HEOG..HANGUL SYLLABLE HEOH\n                                                    if (0xd5c9 <= code && code <= 0xd5e3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd61d) {\n                                        if (code < 0xd600) {\n                                            if (code < 0xd5e5) {\n                                                // Lo       HANGUL SYLLABLE HE\n                                                if (0xd5e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE HEG..HANGUL SYLLABLE HEH\n                                                if (0xd5e5 <= code && code <= 0xd5ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd601) {\n                                                // Lo       HANGUL SYLLABLE HYEO\n                                                if (0xd600 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd61c) {\n                                                    // Lo  [27] HANGUL SYLLABLE HYEOG..HANGUL SYLLABLE HYEOH\n                                                    if (0xd601 <= code && code <= 0xd61b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYE\n                                                    if (0xd61c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd654) {\n                                            if (code < 0xd638) {\n                                                // Lo  [27] HANGUL SYLLABLE HYEG..HANGUL SYLLABLE HYEH\n                                                if (0xd61d <= code && code <= 0xd637) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd639) {\n                                                    // Lo       HANGUL SYLLABLE HO\n                                                    if (0xd638 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HOG..HANGUL SYLLABLE HOH\n                                                    if (0xd639 <= code && code <= 0xd653) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd655) {\n                                                // Lo       HANGUL SYLLABLE HWA\n                                                if (0xd654 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd670) {\n                                                    // Lo  [27] HANGUL SYLLABLE HWAG..HANGUL SYLLABLE HWAH\n                                                    if (0xd655 <= code && code <= 0xd66f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HWAE\n                                                    if (0xd670 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x11000) {\n                            if (code < 0xd7b0) {\n                                if (code < 0xd6fd) {\n                                    if (code < 0xd6c4) {\n                                        if (code < 0xd68d) {\n                                            if (code < 0xd68c) {\n                                                // Lo  [27] HANGUL SYLLABLE HWAEG..HANGUL SYLLABLE HWAEH\n                                                if (0xd671 <= code && code <= 0xd68b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HOE\n                                                if (0xd68c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd6a8) {\n                                                // Lo  [27] HANGUL SYLLABLE HOEG..HANGUL SYLLABLE HOEH\n                                                if (0xd68d <= code && code <= 0xd6a7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd6a9) {\n                                                    // Lo       HANGUL SYLLABLE HYO\n                                                    if (0xd6a8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HYOG..HANGUL SYLLABLE HYOH\n                                                    if (0xd6a9 <= code && code <= 0xd6c3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd6e0) {\n                                            if (code < 0xd6c5) {\n                                                // Lo       HANGUL SYLLABLE HU\n                                                if (0xd6c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE HUG..HANGUL SYLLABLE HUH\n                                                if (0xd6c5 <= code && code <= 0xd6df) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd6e1) {\n                                                // Lo       HANGUL SYLLABLE HWEO\n                                                if (0xd6e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd6fc) {\n                                                    // Lo  [27] HANGUL SYLLABLE HWEOG..HANGUL SYLLABLE HWEOH\n                                                    if (0xd6e1 <= code && code <= 0xd6fb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HWE\n                                                    if (0xd6fc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd750) {\n                                        if (code < 0xd719) {\n                                            if (code < 0xd718) {\n                                                // Lo  [27] HANGUL SYLLABLE HWEG..HANGUL SYLLABLE HWEH\n                                                if (0xd6fd <= code && code <= 0xd717) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HWI\n                                                if (0xd718 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd734) {\n                                                // Lo  [27] HANGUL SYLLABLE HWIG..HANGUL SYLLABLE HWIH\n                                                if (0xd719 <= code && code <= 0xd733) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd735) {\n                                                    // Lo       HANGUL SYLLABLE HYU\n                                                    if (0xd734 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HYUG..HANGUL SYLLABLE HYUH\n                                                    if (0xd735 <= code && code <= 0xd74f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd76d) {\n                                            if (code < 0xd751) {\n                                                // Lo       HANGUL SYLLABLE HEU\n                                                if (0xd750 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd76c) {\n                                                    // Lo  [27] HANGUL SYLLABLE HEUG..HANGUL SYLLABLE HEUH\n                                                    if (0xd751 <= code && code <= 0xd76b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYI\n                                                    if (0xd76c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd788) {\n                                                // Lo  [27] HANGUL SYLLABLE HYIG..HANGUL SYLLABLE HYIH\n                                                if (0xd76d <= code && code <= 0xd787) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd789) {\n                                                    // Lo       HANGUL SYLLABLE HI\n                                                    if (0xd788 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HIG..HANGUL SYLLABLE HIH\n                                                    if (0xd789 <= code && code <= 0xd7a3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x10a01) {\n                                    if (code < 0xfeff) {\n                                        if (code < 0xfb1e) {\n                                            if (code < 0xd7cb) {\n                                                // Lo  [23] HANGUL JUNGSEONG O-YEO..HANGUL JUNGSEONG ARAEA-E\n                                                if (0xd7b0 <= code && code <= 0xd7c6) {\n                                                    return boundaries_1.CLUSTER_BREAK.V;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [49] HANGUL JONGSEONG NIEUN-RIEUL..HANGUL JONGSEONG PHIEUPH-THIEUTH\n                                                if (0xd7cb <= code && code <= 0xd7fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.T;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xfe00) {\n                                                // Mn       HEBREW POINT JUDEO-SPANISH VARIKA\n                                                if (0xfb1e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfe20) {\n                                                    // Mn  [16] VARIATION SELECTOR-1..VARIATION SELECTOR-16\n                                                    if (0xfe00 <= code && code <= 0xfe0f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [16] COMBINING LIGATURE LEFT HALF..COMBINING CYRILLIC TITLO RIGHT HALF\n                                                    if (0xfe20 <= code && code <= 0xfe2f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x101fd) {\n                                            if (code < 0xff9e) {\n                                                // Cf       ZERO WIDTH NO-BREAK SPACE\n                                                if (0xfeff === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfff0) {\n                                                    // Lm   [2] HALFWIDTH KATAKANA VOICED SOUND MARK..HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK\n                                                    if (0xff9e <= code && code <= 0xff9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cn   [9] <reserved-FFF0>..<reserved-FFF8>\n                                                    // Cf   [3] INTERLINEAR ANNOTATION ANCHOR..INTERLINEAR ANNOTATION TERMINATOR\n                                                    if (0xfff0 <= code && code <= 0xfffb) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x102e0) {\n                                                // Mn       PHAISTOS DISC SIGN COMBINING OBLIQUE STROKE\n                                                if (0x101fd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10376) {\n                                                    // Mn       COPTIC EPACT THOUSANDS MARK\n                                                    if (0x102e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [5] COMBINING OLD PERMIC LETTER AN..COMBINING OLD PERMIC LETTER SII\n                                                    if (0x10376 <= code && code <= 0x1037a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x10ae5) {\n                                        if (code < 0x10a0c) {\n                                            if (code < 0x10a05) {\n                                                // Mn   [3] KHAROSHTHI VOWEL SIGN I..KHAROSHTHI VOWEL SIGN VOCALIC R\n                                                if (0x10a01 <= code && code <= 0x10a03) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] KHAROSHTHI VOWEL SIGN E..KHAROSHTHI VOWEL SIGN O\n                                                if (0x10a05 <= code && code <= 0x10a06) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x10a38) {\n                                                // Mn   [4] KHAROSHTHI VOWEL LENGTH MARK..KHAROSHTHI SIGN VISARGA\n                                                if (0x10a0c <= code && code <= 0x10a0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10a3f) {\n                                                    // Mn   [3] KHAROSHTHI SIGN BAR ABOVE..KHAROSHTHI SIGN DOT BELOW\n                                                    if (0x10a38 <= code && code <= 0x10a3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KHAROSHTHI VIRAMA\n                                                    if (0x10a3f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x10efd) {\n                                            if (code < 0x10d24) {\n                                                // Mn   [2] MANICHAEAN ABBREVIATION MARK ABOVE..MANICHAEAN ABBREVIATION MARK BELOW\n                                                if (0x10ae5 <= code && code <= 0x10ae6) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10eab) {\n                                                    // Mn   [4] HANIFI ROHINGYA SIGN HARBAHAY..HANIFI ROHINGYA SIGN TASSI\n                                                    if (0x10d24 <= code && code <= 0x10d27) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] YEZIDI COMBINING HAMZA MARK..YEZIDI COMBINING MADDA MARK\n                                                    if (0x10eab <= code && code <= 0x10eac) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x10f46) {\n                                                // Mn   [3] ARABIC SMALL LOW WORD SAKTA..ARABIC SMALL LOW WORD MADDA\n                                                if (0x10efd <= code && code <= 0x10eff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10f82) {\n                                                    // Mn  [11] SOGDIAN COMBINING DOT BELOW..SOGDIAN COMBINING STROKE BELOW\n                                                    if (0x10f46 <= code && code <= 0x10f50) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] OLD UYGHUR COMBINING DOT ABOVE..OLD UYGHUR COMBINING TWO DOTS BELOW\n                                                    if (0x10f82 <= code && code <= 0x10f85) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x11180) {\n                                if (code < 0x110b7) {\n                                    if (code < 0x11073) {\n                                        if (code < 0x11002) {\n                                            // Mc       BRAHMI SIGN CANDRABINDU\n                                            if (0x11000 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BRAHMI SIGN ANUSVARA\n                                            if (0x11001 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11038) {\n                                                // Mc       BRAHMI SIGN VISARGA\n                                                if (0x11002 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11070) {\n                                                    // Mn  [15] BRAHMI VOWEL SIGN AA..BRAHMI VIRAMA\n                                                    if (0x11038 <= code && code <= 0x11046) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BRAHMI SIGN OLD TAMIL VIRAMA\n                                                    if (0x11070 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11082) {\n                                            if (code < 0x1107f) {\n                                                // Mn   [2] BRAHMI VOWEL SIGN OLD TAMIL SHORT E..BRAHMI VOWEL SIGN OLD TAMIL SHORT O\n                                                if (0x11073 <= code && code <= 0x11074) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [3] BRAHMI NUMBER JOINER..KAITHI SIGN ANUSVARA\n                                                if (0x1107f <= code && code <= 0x11081) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x110b0) {\n                                                // Mc       KAITHI SIGN VISARGA\n                                                if (0x11082 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x110b3) {\n                                                    // Mc   [3] KAITHI VOWEL SIGN AA..KAITHI VOWEL SIGN II\n                                                    if (0x110b0 <= code && code <= 0x110b2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] KAITHI VOWEL SIGN U..KAITHI VOWEL SIGN AI\n                                                    if (0x110b3 <= code && code <= 0x110b6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11100) {\n                                        if (code < 0x110bd) {\n                                            if (code < 0x110b9) {\n                                                // Mc   [2] KAITHI VOWEL SIGN O..KAITHI VOWEL SIGN AU\n                                                if (0x110b7 <= code && code <= 0x110b8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] KAITHI SIGN VIRAMA..KAITHI SIGN NUKTA\n                                                if (0x110b9 <= code && code <= 0x110ba) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x110c2) {\n                                                // Cf       KAITHI NUMBER SIGN\n                                                if (0x110bd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KAITHI VOWEL SIGN VOCALIC R\n                                                if (0x110c2 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Cf       KAITHI NUMBER SIGN ABOVE\n                                                if (0x110cd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1112d) {\n                                            if (code < 0x11127) {\n                                                // Mn   [3] CHAKMA SIGN CANDRABINDU..CHAKMA SIGN VISARGA\n                                                if (0x11100 <= code && code <= 0x11102) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1112c) {\n                                                    // Mn   [5] CHAKMA VOWEL SIGN A..CHAKMA VOWEL SIGN UU\n                                                    if (0x11127 <= code && code <= 0x1112b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       CHAKMA VOWEL SIGN E\n                                                    if (0x1112c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11145) {\n                                                // Mn   [8] CHAKMA VOWEL SIGN AI..CHAKMA MAAYYAA\n                                                if (0x1112d <= code && code <= 0x11134) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11173) {\n                                                    // Mc   [2] CHAKMA VOWEL SIGN AA..CHAKMA VOWEL SIGN EI\n                                                    if (0x11145 <= code && code <= 0x11146) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MAHAJANI SIGN NUKTA\n                                                    if (0x11173 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11232) {\n                                    if (code < 0x111c2) {\n                                        if (code < 0x111b3) {\n                                            if (code < 0x11182) {\n                                                // Mn   [2] SHARADA SIGN CANDRABINDU..SHARADA SIGN ANUSVARA\n                                                if (0x11180 <= code && code <= 0x11181) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       SHARADA SIGN VISARGA\n                                                if (0x11182 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x111b6) {\n                                                // Mc   [3] SHARADA VOWEL SIGN AA..SHARADA VOWEL SIGN II\n                                                if (0x111b3 <= code && code <= 0x111b5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x111bf) {\n                                                    // Mn   [9] SHARADA VOWEL SIGN U..SHARADA VOWEL SIGN O\n                                                    if (0x111b6 <= code && code <= 0x111be) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SHARADA VOWEL SIGN AU..SHARADA SIGN VIRAMA\n                                                    if (0x111bf <= code && code <= 0x111c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x111cf) {\n                                            if (code < 0x111c9) {\n                                                // Lo   [2] SHARADA SIGN JIHVAMULIYA..SHARADA SIGN UPADHMANIYA\n                                                if (0x111c2 <= code && code <= 0x111c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x111ce) {\n                                                    // Mn   [4] SHARADA SANDHI MARK..SHARADA EXTRA SHORT VOWEL MARK\n                                                    if (0x111c9 <= code && code <= 0x111cc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       SHARADA VOWEL SIGN PRISHTHAMATRA E\n                                                    if (0x111ce === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1122c) {\n                                                // Mn       SHARADA SIGN INVERTED CANDRABINDU\n                                                if (0x111cf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1122f) {\n                                                    // Mc   [3] KHOJKI VOWEL SIGN AA..KHOJKI VOWEL SIGN II\n                                                    if (0x1122c <= code && code <= 0x1122e) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] KHOJKI VOWEL SIGN U..KHOJKI VOWEL SIGN AI\n                                                    if (0x1122f <= code && code <= 0x11231) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11241) {\n                                        if (code < 0x11235) {\n                                            if (code < 0x11234) {\n                                                // Mc   [2] KHOJKI VOWEL SIGN O..KHOJKI VOWEL SIGN AU\n                                                if (0x11232 <= code && code <= 0x11233) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KHOJKI SIGN ANUSVARA\n                                                if (0x11234 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11236) {\n                                                // Mc       KHOJKI SIGN VIRAMA\n                                                if (0x11235 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1123e) {\n                                                    // Mn   [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\n                                                    if (0x11236 <= code && code <= 0x11237) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KHOJKI SIGN SUKUN\n                                                    if (0x1123e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x112e3) {\n                                            if (code < 0x112df) {\n                                                // Mn       KHOJKI VOWEL SIGN VOCALIC R\n                                                if (0x11241 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x112e0) {\n                                                    // Mn       KHUDAWADI SIGN ANUSVARA\n                                                    if (0x112df === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] KHUDAWADI VOWEL SIGN AA..KHUDAWADI VOWEL SIGN II\n                                                    if (0x112e0 <= code && code <= 0x112e2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11300) {\n                                                // Mn   [8] KHUDAWADI VOWEL SIGN U..KHUDAWADI SIGN VIRAMA\n                                                if (0x112e3 <= code && code <= 0x112ea) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11302) {\n                                                    // Mn   [2] GRANTHA SIGN COMBINING ANUSVARA ABOVE..GRANTHA SIGN CANDRABINDU\n                                                    if (0x11300 <= code && code <= 0x11301) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] GRANTHA SIGN ANUSVARA..GRANTHA SIGN VISARGA\n                                                    if (0x11302 <= code && code <= 0x11303) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x11a97) {\n                        if (code < 0x116ab) {\n                            if (code < 0x114b9) {\n                                if (code < 0x11370) {\n                                    if (code < 0x11347) {\n                                        if (code < 0x1133f) {\n                                            if (code < 0x1133e) {\n                                                // Mn   [2] COMBINING BINDU BELOW..GRANTHA SIGN NUKTA\n                                                if (0x1133b <= code && code <= 0x1133c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GRANTHA VOWEL SIGN AA\n                                                if (0x1133e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11340) {\n                                                // Mc       GRANTHA VOWEL SIGN I\n                                                if (0x1133f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11341) {\n                                                    // Mn       GRANTHA VOWEL SIGN II\n                                                    if (0x11340 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [4] GRANTHA VOWEL SIGN U..GRANTHA VOWEL SIGN VOCALIC RR\n                                                    if (0x11341 <= code && code <= 0x11344) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11357) {\n                                            if (code < 0x1134b) {\n                                                // Mc   [2] GRANTHA VOWEL SIGN EE..GRANTHA VOWEL SIGN AI\n                                                if (0x11347 <= code && code <= 0x11348) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] GRANTHA VOWEL SIGN OO..GRANTHA SIGN VIRAMA\n                                                if (0x1134b <= code && code <= 0x1134d) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11362) {\n                                                // Mc       GRANTHA AU LENGTH MARK\n                                                if (0x11357 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11366) {\n                                                    // Mc   [2] GRANTHA VOWEL SIGN VOCALIC L..GRANTHA VOWEL SIGN VOCALIC LL\n                                                    if (0x11362 <= code && code <= 0x11363) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] COMBINING GRANTHA DIGIT ZERO..COMBINING GRANTHA DIGIT SIX\n                                                    if (0x11366 <= code && code <= 0x1136c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11445) {\n                                        if (code < 0x11438) {\n                                            if (code < 0x11435) {\n                                                // Mn   [5] COMBINING GRANTHA LETTER A..COMBINING GRANTHA LETTER PA\n                                                if (0x11370 <= code && code <= 0x11374) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] NEWA VOWEL SIGN AA..NEWA VOWEL SIGN II\n                                                if (0x11435 <= code && code <= 0x11437) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11440) {\n                                                // Mn   [8] NEWA VOWEL SIGN U..NEWA VOWEL SIGN AI\n                                                if (0x11438 <= code && code <= 0x1143f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11442) {\n                                                    // Mc   [2] NEWA VOWEL SIGN O..NEWA VOWEL SIGN AU\n                                                    if (0x11440 <= code && code <= 0x11441) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] NEWA SIGN VIRAMA..NEWA SIGN ANUSVARA\n                                                    if (0x11442 <= code && code <= 0x11444) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x114b0) {\n                                            if (code < 0x11446) {\n                                                // Mc       NEWA SIGN VISARGA\n                                                if (0x11445 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       NEWA SIGN NUKTA\n                                                if (0x11446 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       NEWA SANDHI MARK\n                                                if (0x1145e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x114b1) {\n                                                // Mc       TIRHUTA VOWEL SIGN AA\n                                                if (0x114b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x114b3) {\n                                                    // Mc   [2] TIRHUTA VOWEL SIGN I..TIRHUTA VOWEL SIGN II\n                                                    if (0x114b1 <= code && code <= 0x114b2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] TIRHUTA VOWEL SIGN U..TIRHUTA VOWEL SIGN VOCALIC LL\n                                                    if (0x114b3 <= code && code <= 0x114b8) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x115b8) {\n                                    if (code < 0x114bf) {\n                                        if (code < 0x114bb) {\n                                            // Mc       TIRHUTA VOWEL SIGN E\n                                            if (0x114b9 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       TIRHUTA VOWEL SIGN SHORT E\n                                            if (0x114ba === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x114bd) {\n                                                // Mc   [2] TIRHUTA VOWEL SIGN AI..TIRHUTA VOWEL SIGN O\n                                                if (0x114bb <= code && code <= 0x114bc) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       TIRHUTA VOWEL SIGN SHORT O\n                                                if (0x114bd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       TIRHUTA VOWEL SIGN AU\n                                                if (0x114be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x115af) {\n                                            if (code < 0x114c1) {\n                                                // Mn   [2] TIRHUTA SIGN CANDRABINDU..TIRHUTA SIGN ANUSVARA\n                                                if (0x114bf <= code && code <= 0x114c0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x114c2) {\n                                                    // Mc       TIRHUTA SIGN VISARGA\n                                                    if (0x114c1 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIRHUTA SIGN VIRAMA..TIRHUTA SIGN NUKTA\n                                                    if (0x114c2 <= code && code <= 0x114c3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x115b0) {\n                                                // Mc       SIDDHAM VOWEL SIGN AA\n                                                if (0x115af === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x115b2) {\n                                                    // Mc   [2] SIDDHAM VOWEL SIGN I..SIDDHAM VOWEL SIGN II\n                                                    if (0x115b0 <= code && code <= 0x115b1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] SIDDHAM VOWEL SIGN U..SIDDHAM VOWEL SIGN VOCALIC RR\n                                                    if (0x115b2 <= code && code <= 0x115b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11630) {\n                                        if (code < 0x115be) {\n                                            if (code < 0x115bc) {\n                                                // Mc   [4] SIDDHAM VOWEL SIGN E..SIDDHAM VOWEL SIGN AU\n                                                if (0x115b8 <= code && code <= 0x115bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SIDDHAM SIGN CANDRABINDU..SIDDHAM SIGN ANUSVARA\n                                                if (0x115bc <= code && code <= 0x115bd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x115bf) {\n                                                // Mc       SIDDHAM SIGN VISARGA\n                                                if (0x115be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x115dc) {\n                                                    // Mn   [2] SIDDHAM SIGN VIRAMA..SIDDHAM SIGN NUKTA\n                                                    if (0x115bf <= code && code <= 0x115c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] SIDDHAM VOWEL SIGN ALTERNATE U..SIDDHAM VOWEL SIGN ALTERNATE UU\n                                                    if (0x115dc <= code && code <= 0x115dd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1163d) {\n                                            if (code < 0x11633) {\n                                                // Mc   [3] MODI VOWEL SIGN AA..MODI VOWEL SIGN II\n                                                if (0x11630 <= code && code <= 0x11632) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1163b) {\n                                                    // Mn   [8] MODI VOWEL SIGN U..MODI VOWEL SIGN AI\n                                                    if (0x11633 <= code && code <= 0x1163a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] MODI VOWEL SIGN O..MODI VOWEL SIGN AU\n                                                    if (0x1163b <= code && code <= 0x1163c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1163e) {\n                                                // Mn       MODI SIGN ANUSVARA\n                                                if (0x1163d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1163f) {\n                                                    // Mc       MODI SIGN VISARGA\n                                                    if (0x1163e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] MODI SIGN VIRAMA..MODI SIGN ARDHACANDRA\n                                                    if (0x1163f <= code && code <= 0x11640) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1193f) {\n                                if (code < 0x11727) {\n                                    if (code < 0x116b6) {\n                                        if (code < 0x116ad) {\n                                            // Mn       TAKRI SIGN ANUSVARA\n                                            if (0x116ab === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       TAKRI SIGN VISARGA\n                                            if (0x116ac === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x116ae) {\n                                                // Mn       TAKRI VOWEL SIGN AA\n                                                if (0x116ad === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x116b0) {\n                                                    // Mc   [2] TAKRI VOWEL SIGN I..TAKRI VOWEL SIGN II\n                                                    if (0x116ae <= code && code <= 0x116af) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] TAKRI VOWEL SIGN U..TAKRI VOWEL SIGN AU\n                                                    if (0x116b0 <= code && code <= 0x116b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1171d) {\n                                            // Mc       TAKRI SIGN VIRAMA\n                                            if (0x116b6 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       TAKRI SIGN NUKTA\n                                            if (0x116b7 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11722) {\n                                                // Mn   [3] AHOM CONSONANT SIGN MEDIAL LA..AHOM CONSONANT SIGN MEDIAL LIGATING RA\n                                                if (0x1171d <= code && code <= 0x1171f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11726) {\n                                                    // Mn   [4] AHOM VOWEL SIGN I..AHOM VOWEL SIGN UU\n                                                    if (0x11722 <= code && code <= 0x11725) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       AHOM VOWEL SIGN E\n                                                    if (0x11726 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11930) {\n                                        if (code < 0x1182f) {\n                                            if (code < 0x1182c) {\n                                                // Mn   [5] AHOM VOWEL SIGN AW..AHOM SIGN KILLER\n                                                if (0x11727 <= code && code <= 0x1172b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] DOGRA VOWEL SIGN AA..DOGRA VOWEL SIGN II\n                                                if (0x1182c <= code && code <= 0x1182e) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11838) {\n                                                // Mn   [9] DOGRA VOWEL SIGN U..DOGRA SIGN ANUSVARA\n                                                if (0x1182f <= code && code <= 0x11837) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11839) {\n                                                    // Mc       DOGRA SIGN VISARGA\n                                                    if (0x11838 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] DOGRA SIGN VIRAMA..DOGRA SIGN NUKTA\n                                                    if (0x11839 <= code && code <= 0x1183a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1193b) {\n                                            if (code < 0x11931) {\n                                                // Mc       DIVES AKURU VOWEL SIGN AA\n                                                if (0x11930 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11937) {\n                                                    // Mc   [5] DIVES AKURU VOWEL SIGN I..DIVES AKURU VOWEL SIGN E\n                                                    if (0x11931 <= code && code <= 0x11935) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] DIVES AKURU VOWEL SIGN AI..DIVES AKURU VOWEL SIGN O\n                                                    if (0x11937 <= code && code <= 0x11938) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1193d) {\n                                                // Mn   [2] DIVES AKURU SIGN ANUSVARA..DIVES AKURU SIGN CANDRABINDU\n                                                if (0x1193b <= code && code <= 0x1193c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DIVES AKURU SIGN HALANTA\n                                                if (0x1193d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DIVES AKURU VIRAMA\n                                                if (0x1193e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11a01) {\n                                    if (code < 0x119d1) {\n                                        if (code < 0x11941) {\n                                            // Lo       DIVES AKURU PREFIXED NASAL SIGN\n                                            if (0x1193f === code) {\n                                                return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                            }\n                                            // Mc       DIVES AKURU MEDIAL YA\n                                            if (0x11940 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11942) {\n                                                // Lo       DIVES AKURU INITIAL RA\n                                                if (0x11941 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DIVES AKURU MEDIAL RA\n                                                if (0x11942 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DIVES AKURU SIGN NUKTA\n                                                if (0x11943 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x119dc) {\n                                            if (code < 0x119d4) {\n                                                // Mc   [3] NANDINAGARI VOWEL SIGN AA..NANDINAGARI VOWEL SIGN II\n                                                if (0x119d1 <= code && code <= 0x119d3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x119da) {\n                                                    // Mn   [4] NANDINAGARI VOWEL SIGN U..NANDINAGARI VOWEL SIGN VOCALIC RR\n                                                    if (0x119d4 <= code && code <= 0x119d7) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] NANDINAGARI VOWEL SIGN E..NANDINAGARI VOWEL SIGN AI\n                                                    if (0x119da <= code && code <= 0x119db) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x119e0) {\n                                                // Mc   [4] NANDINAGARI VOWEL SIGN O..NANDINAGARI SIGN VISARGA\n                                                if (0x119dc <= code && code <= 0x119df) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       NANDINAGARI SIGN VIRAMA\n                                                if (0x119e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       NANDINAGARI VOWEL SIGN PRISHTHAMATRA E\n                                                if (0x119e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11a47) {\n                                        if (code < 0x11a39) {\n                                            if (code < 0x11a33) {\n                                                // Mn  [10] ZANABAZAR SQUARE VOWEL SIGN I..ZANABAZAR SQUARE VOWEL LENGTH MARK\n                                                if (0x11a01 <= code && code <= 0x11a0a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [6] ZANABAZAR SQUARE FINAL CONSONANT MARK..ZANABAZAR SQUARE SIGN ANUSVARA\n                                                if (0x11a33 <= code && code <= 0x11a38) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11a3a) {\n                                                // Mc       ZANABAZAR SQUARE SIGN VISARGA\n                                                if (0x11a39 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a3b) {\n                                                    // Lo       ZANABAZAR SQUARE CLUSTER-INITIAL LETTER RA\n                                                    if (0x11a3a === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] ZANABAZAR SQUARE CLUSTER-FINAL LETTER YA..ZANABAZAR SQUARE CLUSTER-FINAL LETTER VA\n                                                    if (0x11a3b <= code && code <= 0x11a3e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11a59) {\n                                            if (code < 0x11a51) {\n                                                // Mn       ZANABAZAR SQUARE SUBJOINER\n                                                if (0x11a47 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a57) {\n                                                    // Mn   [6] SOYOMBO VOWEL SIGN I..SOYOMBO VOWEL SIGN OE\n                                                    if (0x11a51 <= code && code <= 0x11a56) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SOYOMBO VOWEL SIGN AI..SOYOMBO VOWEL SIGN AU\n                                                    if (0x11a57 <= code && code <= 0x11a58) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11a84) {\n                                                // Mn   [3] SOYOMBO VOWEL SIGN VOCALIC R..SOYOMBO VOWEL LENGTH MARK\n                                                if (0x11a59 <= code && code <= 0x11a5b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a8a) {\n                                                    // Lo   [6] SOYOMBO SIGN JIHVAMULIYA..SOYOMBO CLUSTER-INITIAL LETTER SA\n                                                    if (0x11a84 <= code && code <= 0x11a89) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [13] SOYOMBO FINAL CONSONANT SIGN G..SOYOMBO SIGN ANUSVARA\n                                                    if (0x11a8a <= code && code <= 0x11a96) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x16f51) {\n                            if (code < 0x11d90) {\n                                if (code < 0x11cb1) {\n                                    if (code < 0x11c3e) {\n                                        if (code < 0x11c2f) {\n                                            if (code < 0x11a98) {\n                                                // Mc       SOYOMBO SIGN VISARGA\n                                                if (0x11a97 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SOYOMBO GEMINATION MARK..SOYOMBO SUBJOINER\n                                                if (0x11a98 <= code && code <= 0x11a99) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11c30) {\n                                                // Mc       BHAIKSUKI VOWEL SIGN AA\n                                                if (0x11c2f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11c38) {\n                                                    // Mn   [7] BHAIKSUKI VOWEL SIGN I..BHAIKSUKI VOWEL SIGN VOCALIC L\n                                                    if (0x11c30 <= code && code <= 0x11c36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] BHAIKSUKI VOWEL SIGN E..BHAIKSUKI SIGN ANUSVARA\n                                                    if (0x11c38 <= code && code <= 0x11c3d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11c92) {\n                                            // Mc       BHAIKSUKI SIGN VISARGA\n                                            if (0x11c3e === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BHAIKSUKI SIGN VIRAMA\n                                            if (0x11c3f === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11ca9) {\n                                                // Mn  [22] MARCHEN SUBJOINED LETTER KA..MARCHEN SUBJOINED LETTER ZA\n                                                if (0x11c92 <= code && code <= 0x11ca7) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11caa) {\n                                                    // Mc       MARCHEN SUBJOINED LETTER YA\n                                                    if (0x11ca9 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] MARCHEN SUBJOINED LETTER RA..MARCHEN VOWEL SIGN AA\n                                                    if (0x11caa <= code && code <= 0x11cb0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11d3a) {\n                                        if (code < 0x11cb4) {\n                                            if (code < 0x11cb2) {\n                                                // Mc       MARCHEN VOWEL SIGN I\n                                                if (0x11cb1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] MARCHEN VOWEL SIGN U..MARCHEN VOWEL SIGN E\n                                                if (0x11cb2 <= code && code <= 0x11cb3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11cb5) {\n                                                // Mc       MARCHEN VOWEL SIGN O\n                                                if (0x11cb4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d31) {\n                                                    // Mn   [2] MARCHEN SIGN ANUSVARA..MARCHEN SIGN CANDRABINDU\n                                                    if (0x11cb5 <= code && code <= 0x11cb6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] MASARAM GONDI VOWEL SIGN AA..MASARAM GONDI VOWEL SIGN VOCALIC R\n                                                    if (0x11d31 <= code && code <= 0x11d36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11d46) {\n                                            if (code < 0x11d3c) {\n                                                // Mn       MASARAM GONDI VOWEL SIGN E\n                                                if (0x11d3a === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d3f) {\n                                                    // Mn   [2] MASARAM GONDI VOWEL SIGN AI..MASARAM GONDI VOWEL SIGN O\n                                                    if (0x11d3c <= code && code <= 0x11d3d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] MASARAM GONDI VOWEL SIGN AU..MASARAM GONDI VIRAMA\n                                                    if (0x11d3f <= code && code <= 0x11d45) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11d47) {\n                                                // Lo       MASARAM GONDI REPHA\n                                                if (0x11d46 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d8a) {\n                                                    // Mn       MASARAM GONDI RA-KARA\n                                                    if (0x11d47 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [5] GUNJALA GONDI VOWEL SIGN AA..GUNJALA GONDI VOWEL SIGN UU\n                                                    if (0x11d8a <= code && code <= 0x11d8e) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11f36) {\n                                    if (code < 0x11ef3) {\n                                        if (code < 0x11d95) {\n                                            if (code < 0x11d93) {\n                                                // Mn   [2] GUNJALA GONDI VOWEL SIGN EE..GUNJALA GONDI VOWEL SIGN AI\n                                                if (0x11d90 <= code && code <= 0x11d91) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] GUNJALA GONDI VOWEL SIGN OO..GUNJALA GONDI VOWEL SIGN AU\n                                                if (0x11d93 <= code && code <= 0x11d94) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11d96) {\n                                                // Mn       GUNJALA GONDI SIGN ANUSVARA\n                                                if (0x11d95 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GUNJALA GONDI SIGN VISARGA\n                                                if (0x11d96 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       GUNJALA GONDI VIRAMA\n                                                if (0x11d97 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11f02) {\n                                            if (code < 0x11ef5) {\n                                                // Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n                                                if (0x11ef3 <= code && code <= 0x11ef4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11f00) {\n                                                    // Mc   [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n                                                    if (0x11ef5 <= code && code <= 0x11ef6) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n                                                    if (0x11f00 <= code && code <= 0x11f01) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11f03) {\n                                                // Lo       KAWI SIGN REPHA\n                                                if (0x11f02 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11f34) {\n                                                    // Mc       KAWI SIGN VISARGA\n                                                    if (0x11f03 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KAWI VOWEL SIGN AA..KAWI VOWEL SIGN ALTERNATE AA\n                                                    if (0x11f34 <= code && code <= 0x11f35) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x13430) {\n                                        if (code < 0x11f40) {\n                                            if (code < 0x11f3e) {\n                                                // Mn   [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n                                                if (0x11f36 <= code && code <= 0x11f3a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] KAWI VOWEL SIGN E..KAWI VOWEL SIGN AI\n                                                if (0x11f3e <= code && code <= 0x11f3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11f41) {\n                                                // Mn       KAWI VOWEL SIGN EU\n                                                if (0x11f40 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       KAWI SIGN KILLER\n                                                if (0x11f41 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       KAWI CONJOINER\n                                                if (0x11f42 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x16af0) {\n                                            if (code < 0x13440) {\n                                                // Cf  [16] EGYPTIAN HIEROGLYPH VERTICAL JOINER..EGYPTIAN HIEROGLYPH END WALLED ENCLOSURE\n                                                if (0x13430 <= code && code <= 0x1343f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x13447) {\n                                                    // Mn       EGYPTIAN HIEROGLYPH MIRROR HORIZONTALLY\n                                                    if (0x13440 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [15] EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START..EGYPTIAN HIEROGLYPH MODIFIER DAMAGED\n                                                    if (0x13447 <= code && code <= 0x13455) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x16b30) {\n                                                // Mn   [5] BASSA VAH COMBINING HIGH TONE..BASSA VAH COMBINING HIGH-LOW TONE\n                                                if (0x16af0 <= code && code <= 0x16af4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x16f4f) {\n                                                    // Mn   [7] PAHAWH HMONG MARK CIM TUB..PAHAWH HMONG MARK CIM TAUM\n                                                    if (0x16b30 <= code && code <= 0x16b36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MIAO SIGN CONSONANT MODIFIER BAR\n                                                    if (0x16f4f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1da84) {\n                                if (code < 0x1d167) {\n                                    if (code < 0x1bca0) {\n                                        if (code < 0x16fe4) {\n                                            if (code < 0x16f8f) {\n                                                // Mc  [55] MIAO SIGN ASPIRATION..MIAO VOWEL SIGN UI\n                                                if (0x16f51 <= code && code <= 0x16f87) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] MIAO TONE RIGHT..MIAO TONE BELOW\n                                                if (0x16f8f <= code && code <= 0x16f92) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x16ff0) {\n                                                // Mn       KHITAN SMALL SCRIPT FILLER\n                                                if (0x16fe4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bc9d) {\n                                                    // Mc   [2] VIETNAMESE ALTERNATE READING MARK CA..VIETNAMESE ALTERNATE READING MARK NHAY\n                                                    if (0x16ff0 <= code && code <= 0x16ff1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] DUPLOYAN THICK LETTER SELECTOR..DUPLOYAN DOUBLE MARK\n                                                    if (0x1bc9d <= code && code <= 0x1bc9e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1cf30) {\n                                            if (code < 0x1cf00) {\n                                                // Cf   [4] SHORTHAND FORMAT LETTER OVERLAP..SHORTHAND FORMAT UP STEP\n                                                if (0x1bca0 <= code && code <= 0x1bca3) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [46] ZNAMENNY COMBINING MARK GORAZDO NIZKO S KRYZHEM ON LEFT..ZNAMENNY COMBINING MARK KRYZH ON LEFT\n                                                if (0x1cf00 <= code && code <= 0x1cf2d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1d165) {\n                                                // Mn  [23] ZNAMENNY COMBINING TONAL RANGE MARK MRACHNO..ZNAMENNY PRIZNAK MODIFIER ROG\n                                                if (0x1cf30 <= code && code <= 0x1cf46) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MUSICAL SYMBOL COMBINING STEM\n                                                if (0x1d165 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       MUSICAL SYMBOL COMBINING SPRECHGESANG STEM\n                                                if (0x1d166 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1d185) {\n                                        if (code < 0x1d16e) {\n                                            if (code < 0x1d16d) {\n                                                // Mn   [3] MUSICAL SYMBOL COMBINING TREMOLO-1..MUSICAL SYMBOL COMBINING TREMOLO-3\n                                                if (0x1d167 <= code && code <= 0x1d169) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MUSICAL SYMBOL COMBINING AUGMENTATION DOT\n                                                if (0x1d16d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1d173) {\n                                                // Mc   [5] MUSICAL SYMBOL COMBINING FLAG-1..MUSICAL SYMBOL COMBINING FLAG-5\n                                                if (0x1d16e <= code && code <= 0x1d172) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1d17b) {\n                                                    // Cf   [8] MUSICAL SYMBOL BEGIN BEAM..MUSICAL SYMBOL END PHRASE\n                                                    if (0x1d173 <= code && code <= 0x1d17a) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [8] MUSICAL SYMBOL COMBINING ACCENT..MUSICAL SYMBOL COMBINING LOURE\n                                                    if (0x1d17b <= code && code <= 0x1d182) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1da00) {\n                                            if (code < 0x1d1aa) {\n                                                // Mn   [7] MUSICAL SYMBOL COMBINING DOIT..MUSICAL SYMBOL COMBINING TRIPLE TONGUE\n                                                if (0x1d185 <= code && code <= 0x1d18b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1d242) {\n                                                    // Mn   [4] MUSICAL SYMBOL COMBINING DOWN BOW..MUSICAL SYMBOL COMBINING SNAP PIZZICATO\n                                                    if (0x1d1aa <= code && code <= 0x1d1ad) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] COMBINING GREEK MUSICAL TRISEME..COMBINING GREEK MUSICAL PENTASEME\n                                                    if (0x1d242 <= code && code <= 0x1d244) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1da3b) {\n                                                // Mn  [55] SIGNWRITING HEAD RIM..SIGNWRITING AIR SUCKING IN\n                                                if (0x1da00 <= code && code <= 0x1da36) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1da75) {\n                                                    // Mn  [50] SIGNWRITING MOUTH CLOSED NEUTRAL..SIGNWRITING EXCITEMENT\n                                                    if (0x1da3b <= code && code <= 0x1da6c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       SIGNWRITING UPPER BODY TILTING FROM HIP JOINTS\n                                                    if (0x1da75 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x1e2ec) {\n                                    if (code < 0x1e01b) {\n                                        if (code < 0x1daa1) {\n                                            if (code < 0x1da9b) {\n                                                // Mn       SIGNWRITING LOCATION HEAD NECK\n                                                if (0x1da84 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [5] SIGNWRITING FILL MODIFIER-2..SIGNWRITING FILL MODIFIER-6\n                                                if (0x1da9b <= code && code <= 0x1da9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e000) {\n                                                // Mn  [15] SIGNWRITING ROTATION MODIFIER-2..SIGNWRITING ROTATION MODIFIER-16\n                                                if (0x1daa1 <= code && code <= 0x1daaf) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e008) {\n                                                    // Mn   [7] COMBINING GLAGOLITIC LETTER AZU..COMBINING GLAGOLITIC LETTER ZHIVETE\n                                                    if (0x1e000 <= code && code <= 0x1e006) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [17] COMBINING GLAGOLITIC LETTER ZEMLJA..COMBINING GLAGOLITIC LETTER HERU\n                                                    if (0x1e008 <= code && code <= 0x1e018) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1e08f) {\n                                            if (code < 0x1e023) {\n                                                // Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n                                                if (0x1e01b <= code && code <= 0x1e021) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e026) {\n                                                    // Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n                                                    if (0x1e023 <= code && code <= 0x1e024) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n                                                    if (0x1e026 <= code && code <= 0x1e02a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e130) {\n                                                // Mn       COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n                                                if (0x1e08f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e2ae) {\n                                                    // Mn   [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n                                                    if (0x1e130 <= code && code <= 0x1e136) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TOTO SIGN RISING TONE\n                                                    if (0x1e2ae === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1f3fb) {\n                                        if (code < 0x1e8d0) {\n                                            if (code < 0x1e4ec) {\n                                                // Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI\n                                                if (0x1e2ec <= code && code <= 0x1e2ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] NAG MUNDARI SIGN MUHOR..NAG MUNDARI SIGN SUTUH\n                                                if (0x1e4ec <= code && code <= 0x1e4ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e944) {\n                                                // Mn   [7] MENDE KIKAKUI COMBINING NUMBER TEENS..MENDE KIKAKUI COMBINING NUMBER MILLIONS\n                                                if (0x1e8d0 <= code && code <= 0x1e8d6) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1f1e6) {\n                                                    // Mn   [7] ADLAM ALIF LENGTHENER..ADLAM NUKTA\n                                                    if (0x1e944 <= code && code <= 0x1e94a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // So  [26] REGIONAL INDICATOR SYMBOL LETTER A..REGIONAL INDICATOR SYMBOL LETTER Z\n                                                    if (0x1f1e6 <= code && code <= 0x1f1ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xe0080) {\n                                            if (code < 0xe0000) {\n                                                // Sk   [5] EMOJI MODIFIER FITZPATRICK TYPE-1-2..EMOJI MODIFIER FITZPATRICK TYPE-6\n                                                if (0x1f3fb <= code && code <= 0x1f3ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe0020) {\n                                                    // Cn       <reserved-E0000>\n                                                    // Cf       LANGUAGE TAG\n                                                    // Cn  [30] <reserved-E0002>..<reserved-E001F>\n                                                    if (0xe0000 <= code && code <= 0xe001f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf  [96] TAG SPACE..CANCEL TAG\n                                                    if (0xe0020 <= code && code <= 0xe007f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xe0100) {\n                                                // Cn [128] <reserved-E0080>..<reserved-E00FF>\n                                                if (0xe0080 <= code && code <= 0xe00ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe01f0) {\n                                                    // Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n                                                    if (0xe0100 <= code && code <= 0xe01ef) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cn [3600] <reserved-E01F0>..<reserved-E0FFF>\n                                                    if (0xe01f0 <= code && code <= 0xe0fff) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // unlisted code points are treated as a break property of \"Other\"\n        return boundaries_1.CLUSTER_BREAK.OTHER;\n    }\n    /**\n     * Given a Unicode code point, returns if symbol is an extended pictographic or some other break\n     * @param code {number} Unicode code point\n     * @returns {number}\n     */\n    static getEmojiProperty(code) {\n        // emoji property taken from:\n        // https://www.unicode.org/Public/UCD/latest/ucd/emoji/emoji-data.txt\n        // and generated by\n        // node ./scripts/generate-emoji-extended-pictographic.js\n        if (code < 0x27b0) {\n            if (code < 0x2600) {\n                if (code < 0x2328) {\n                    if (code < 0x2122) {\n                        if (code < 0x203c) {\n                            // E0.6   [1] (\u00A9\uFE0F)       copyright\n                            if (0xa9 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u00AE\uFE0F)       registered\n                            if (0xae === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            // E0.6   [1] (\u203C\uFE0F)       double exclamation mark\n                            if (0x203c === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2049\uFE0F)       exclamation question mark\n                            if (0x2049 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2194) {\n                            // E0.6   [1] (\u2122\uFE0F)       trade mark\n                            if (0x2122 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2139\uFE0F)       information\n                            if (0x2139 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x21a9) {\n                                // E0.6   [6] (\u2194\uFE0F..\u2199\uFE0F)    left-right arrow..down-left arrow\n                                if (0x2194 <= code && code <= 0x2199) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x231a) {\n                                    // E0.6   [2] (\u21A9\uFE0F..\u21AA\uFE0F)    right arrow curving left..left arrow curving right\n                                    if (0x21a9 <= code && code <= 0x21aa) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [2] (\u231A..\u231B)    watch..hourglass done\n                                    if (0x231a <= code && code <= 0x231b) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x24c2) {\n                        if (code < 0x23cf) {\n                            // E1.0   [1] (\u2328\uFE0F)       keyboard\n                            if (0x2328 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.0   [1] (\u2388)       HELM SYMBOL\n                            if (0x2388 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x23e9) {\n                                // E1.0   [1] (\u23CF\uFE0F)       eject button\n                                if (0x23cf === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x23f8) {\n                                    // E0.6   [4] (\u23E9..\u23EC)    fast-forward button..fast down button\n                                    // E0.7   [2] (\u23ED\uFE0F..\u23EE\uFE0F)    next track button..last track button\n                                    // E1.0   [1] (\u23EF\uFE0F)       play or pause button\n                                    // E0.6   [1] (\u23F0)       alarm clock\n                                    // E1.0   [2] (\u23F1\uFE0F..\u23F2\uFE0F)    stopwatch..timer clock\n                                    // E0.6   [1] (\u23F3)       hourglass not done\n                                    if (0x23e9 <= code && code <= 0x23f3) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.7   [3] (\u23F8\uFE0F..\u23FA\uFE0F)    pause button..record button\n                                    if (0x23f8 <= code && code <= 0x23fa) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x25b6) {\n                            if (code < 0x25aa) {\n                                // E0.6   [1] (\u24C2\uFE0F)       circled M\n                                if (0x24c2 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [2] (\u25AA\uFE0F..\u25AB\uFE0F)    black small square..white small square\n                                if (0x25aa <= code && code <= 0x25ab) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x25c0) {\n                                // E0.6   [1] (\u25B6\uFE0F)       play button\n                                if (0x25b6 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x25fb) {\n                                    // E0.6   [1] (\u25C0\uFE0F)       reverse button\n                                    if (0x25c0 === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [4] (\u25FB\uFE0F..\u25FE)    white medium square..black medium-small square\n                                    if (0x25fb <= code && code <= 0x25fe) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x2733) {\n                    if (code < 0x2714) {\n                        if (code < 0x2614) {\n                            if (code < 0x2607) {\n                                // E0.6   [2] (\u2600\uFE0F..\u2601\uFE0F)    sun..cloud\n                                // E0.7   [2] (\u2602\uFE0F..\u2603\uFE0F)    umbrella..snowman\n                                // E1.0   [1] (\u2604\uFE0F)       comet\n                                // E0.0   [1] (\u2605)       BLACK STAR\n                                if (0x2600 <= code && code <= 0x2605) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.0   [7] (\u2607..\u260D)    LIGHTNING..OPPOSITION\n                                // E0.6   [1] (\u260E\uFE0F)       telephone\n                                // E0.0   [2] (\u260F..\u2610)    WHITE TELEPHONE..BALLOT BOX\n                                // E0.6   [1] (\u2611\uFE0F)       check box with check\n                                // E0.0   [1] (\u2612)       BALLOT BOX WITH X\n                                if (0x2607 <= code && code <= 0x2612) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x2690) {\n                                // E0.6   [2] (\u2614..\u2615)    umbrella with rain drops..hot beverage\n                                // E0.0   [2] (\u2616..\u2617)    WHITE SHOGI PIECE..BLACK SHOGI PIECE\n                                // E1.0   [1] (\u2618\uFE0F)       shamrock\n                                // E0.0   [4] (\u2619..\u261C)    REVERSED ROTATED FLORAL HEART BULLET..WHITE LEFT POINTING INDEX\n                                // E0.6   [1] (\u261D\uFE0F)       index pointing up\n                                // E0.0   [2] (\u261E..\u261F)    WHITE RIGHT POINTING INDEX..WHITE DOWN POINTING INDEX\n                                // E1.0   [1] (\u2620\uFE0F)       skull and crossbones\n                                // E0.0   [1] (\u2621)       CAUTION SIGN\n                                // E1.0   [2] (\u2622\uFE0F..\u2623\uFE0F)    radioactive..biohazard\n                                // E0.0   [2] (\u2624..\u2625)    CADUCEUS..ANKH\n                                // E1.0   [1] (\u2626\uFE0F)       orthodox cross\n                                // E0.0   [3] (\u2627..\u2629)    CHI RHO..CROSS OF JERUSALEM\n                                // E0.7   [1] (\u262A\uFE0F)       star and crescent\n                                // E0.0   [3] (\u262B..\u262D)    FARSI SYMBOL..HAMMER AND SICKLE\n                                // E1.0   [1] (\u262E\uFE0F)       peace symbol\n                                // E0.7   [1] (\u262F\uFE0F)       yin yang\n                                // E0.0   [8] (\u2630..\u2637)    TRIGRAM FOR HEAVEN..TRIGRAM FOR EARTH\n                                // E0.7   [2] (\u2638\uFE0F..\u2639\uFE0F)    wheel of dharma..frowning face\n                                // E0.6   [1] (\u263A\uFE0F)       smiling face\n                                // E0.0   [5] (\u263B..\u263F)    BLACK SMILING FACE..MERCURY\n                                // E4.0   [1] (\u2640\uFE0F)       female sign\n                                // E0.0   [1] (\u2641)       EARTH\n                                // E4.0   [1] (\u2642\uFE0F)       male sign\n                                // E0.0   [5] (\u2643..\u2647)    JUPITER..PLUTO\n                                // E0.6  [12] (\u2648..\u2653)    Aries..Pisces\n                                // E0.0  [11] (\u2654..\u265E)    WHITE CHESS KING..BLACK CHESS KNIGHT\n                                // E11.0  [1] (\u265F\uFE0F)       chess pawn\n                                // E0.6   [1] (\u2660\uFE0F)       spade suit\n                                // E0.0   [2] (\u2661..\u2662)    WHITE HEART SUIT..WHITE DIAMOND SUIT\n                                // E0.6   [1] (\u2663\uFE0F)       club suit\n                                // E0.0   [1] (\u2664)       WHITE SPADE SUIT\n                                // E0.6   [2] (\u2665\uFE0F..\u2666\uFE0F)    heart suit..diamond suit\n                                // E0.0   [1] (\u2667)       WHITE CLUB SUIT\n                                // E0.6   [1] (\u2668\uFE0F)       hot springs\n                                // E0.0  [18] (\u2669..\u267A)    QUARTER NOTE..RECYCLING SYMBOL FOR GENERIC MATERIALS\n                                // E0.6   [1] (\u267B\uFE0F)       recycling symbol\n                                // E0.0   [2] (\u267C..\u267D)    RECYCLED PAPER SYMBOL..PARTIALLY-RECYCLED PAPER SYMBOL\n                                // E11.0  [1] (\u267E\uFE0F)       infinity\n                                // E0.6   [1] (\u267F)       wheelchair symbol\n                                // E0.0   [6] (\u2680..\u2685)    DIE FACE-1..DIE FACE-6\n                                if (0x2614 <= code && code <= 0x2685) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x2708) {\n                                    // E0.0   [2] (\u2690..\u2691)    WHITE FLAG..BLACK FLAG\n                                    // E1.0   [1] (\u2692\uFE0F)       hammer and pick\n                                    // E0.6   [1] (\u2693)       anchor\n                                    // E1.0   [1] (\u2694\uFE0F)       crossed swords\n                                    // E4.0   [1] (\u2695\uFE0F)       medical symbol\n                                    // E1.0   [2] (\u2696\uFE0F..\u2697\uFE0F)    balance scale..alembic\n                                    // E0.0   [1] (\u2698)       FLOWER\n                                    // E1.0   [1] (\u2699\uFE0F)       gear\n                                    // E0.0   [1] (\u269A)       STAFF OF HERMES\n                                    // E1.0   [2] (\u269B\uFE0F..\u269C\uFE0F)    atom symbol..fleur-de-lis\n                                    // E0.0   [3] (\u269D..\u269F)    OUTLINED WHITE STAR..THREE LINES CONVERGING LEFT\n                                    // E0.6   [2] (\u26A0\uFE0F..\u26A1)    warning..high voltage\n                                    // E0.0   [5] (\u26A2..\u26A6)    DOUBLED FEMALE SIGN..MALE WITH STROKE SIGN\n                                    // E13.0  [1] (\u26A7\uFE0F)       transgender symbol\n                                    // E0.0   [2] (\u26A8..\u26A9)    VERTICAL MALE WITH STROKE SIGN..HORIZONTAL MALE WITH STROKE SIGN\n                                    // E0.6   [2] (\u26AA..\u26AB)    white circle..black circle\n                                    // E0.0   [4] (\u26AC..\u26AF)    MEDIUM SMALL WHITE CIRCLE..UNMARRIED PARTNERSHIP SYMBOL\n                                    // E1.0   [2] (\u26B0\uFE0F..\u26B1\uFE0F)    coffin..funeral urn\n                                    // E0.0  [11] (\u26B2..\u26BC)    NEUTER..SESQUIQUADRATE\n                                    // E0.6   [2] (\u26BD..\u26BE)    soccer ball..baseball\n                                    // E0.0   [5] (\u26BF..\u26C3)    SQUARED KEY..BLACK DRAUGHTS KING\n                                    // E0.6   [2] (\u26C4..\u26C5)    snowman without snow..sun behind cloud\n                                    // E0.0   [2] (\u26C6..\u26C7)    RAIN..BLACK SNOWMAN\n                                    // E0.7   [1] (\u26C8\uFE0F)       cloud with lightning and rain\n                                    // E0.0   [5] (\u26C9..\u26CD)    TURNED WHITE SHOGI PIECE..DISABLED CAR\n                                    // E0.6   [1] (\u26CE)       Ophiuchus\n                                    // E0.7   [1] (\u26CF\uFE0F)       pick\n                                    // E0.0   [1] (\u26D0)       CAR SLIDING\n                                    // E0.7   [1] (\u26D1\uFE0F)       rescue worker\u2019s helmet\n                                    // E0.0   [1] (\u26D2)       CIRCLED CROSSING LANES\n                                    // E0.7   [1] (\u26D3\uFE0F)       chains\n                                    // E0.6   [1] (\u26D4)       no entry\n                                    // E0.0  [20] (\u26D5..\u26E8)    ALTERNATE ONE-WAY LEFT WAY TRAFFIC..BLACK CROSS ON SHIELD\n                                    // E0.7   [1] (\u26E9\uFE0F)       shinto shrine\n                                    // E0.6   [1] (\u26EA)       church\n                                    // E0.0   [5] (\u26EB..\u26EF)    CASTLE..MAP SYMBOL FOR LIGHTHOUSE\n                                    // E0.7   [2] (\u26F0\uFE0F..\u26F1\uFE0F)    mountain..umbrella on ground\n                                    // E0.6   [2] (\u26F2..\u26F3)    fountain..flag in hole\n                                    // E0.7   [1] (\u26F4\uFE0F)       ferry\n                                    // E0.6   [1] (\u26F5)       sailboat\n                                    // E0.0   [1] (\u26F6)       SQUARE FOUR CORNERS\n                                    // E0.7   [3] (\u26F7\uFE0F..\u26F9\uFE0F)    skier..person bouncing ball\n                                    // E0.6   [1] (\u26FA)       tent\n                                    // E0.0   [2] (\u26FB..\u26FC)    JAPANESE BANK SYMBOL..HEADSTONE GRAVEYARD SYMBOL\n                                    // E0.6   [1] (\u26FD)       fuel pump\n                                    // E0.0   [4] (\u26FE..\u2701)    CUP ON BLACK SQUARE..UPPER BLADE SCISSORS\n                                    // E0.6   [1] (\u2702\uFE0F)       scissors\n                                    // E0.0   [2] (\u2703..\u2704)    LOWER BLADE SCISSORS..WHITE SCISSORS\n                                    // E0.6   [1] (\u2705)       check mark button\n                                    if (0x2690 <= code && code <= 0x2705) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [5] (\u2708\uFE0F..\u270C\uFE0F)    airplane..victory hand\n                                    // E0.7   [1] (\u270D\uFE0F)       writing hand\n                                    // E0.0   [1] (\u270E)       LOWER RIGHT PENCIL\n                                    // E0.6   [1] (\u270F\uFE0F)       pencil\n                                    // E0.0   [2] (\u2710..\u2711)    UPPER RIGHT PENCIL..WHITE NIB\n                                    // E0.6   [1] (\u2712\uFE0F)       black nib\n                                    if (0x2708 <= code && code <= 0x2712) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x271d) {\n                            // E0.6   [1] (\u2714\uFE0F)       check mark\n                            if (0x2714 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2716\uFE0F)       multiply\n                            if (0x2716 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x2721) {\n                                // E0.7   [1] (\u271D\uFE0F)       latin cross\n                                if (0x271d === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.7   [1] (\u2721\uFE0F)       star of David\n                                if (0x2721 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u2728)       sparkles\n                                if (0x2728 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x2753) {\n                        if (code < 0x2747) {\n                            if (code < 0x2744) {\n                                // E0.6   [2] (\u2733\uFE0F..\u2734\uFE0F)    eight-spoked asterisk..eight-pointed star\n                                if (0x2733 <= code && code <= 0x2734) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2744\uFE0F)       snowflake\n                                if (0x2744 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x274c) {\n                                // E0.6   [1] (\u2747\uFE0F)       sparkle\n                                if (0x2747 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u274C)       cross mark\n                                if (0x274c === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u274E)       cross mark button\n                                if (0x274e === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2763) {\n                            if (code < 0x2757) {\n                                // E0.6   [3] (\u2753..\u2755)    red question mark..white exclamation mark\n                                if (0x2753 <= code && code <= 0x2755) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2757)       red exclamation mark\n                                if (0x2757 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x2795) {\n                                // E1.0   [1] (\u2763\uFE0F)       heart exclamation\n                                // E0.6   [1] (\u2764\uFE0F)       red heart\n                                // E0.0   [3] (\u2765..\u2767)    ROTATED HEAVY BLACK HEART BULLET..ROTATED FLORAL HEART BULLET\n                                if (0x2763 <= code && code <= 0x2767) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x27a1) {\n                                    // E0.6   [3] (\u2795..\u2797)    plus..divide\n                                    if (0x2795 <= code && code <= 0x2797) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [1] (\u27A1\uFE0F)       right arrow\n                                    if (0x27a1 === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (code < 0x1f201) {\n                if (code < 0x3297) {\n                    if (code < 0x2b1b) {\n                        if (code < 0x2934) {\n                            // E0.6   [1] (\u27B0)       curly loop\n                            if (0x27b0 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E1.0   [1] (\u27BF)       double curly loop\n                            if (0x27bf === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x2b05) {\n                                // E0.6   [2] (\u2934\uFE0F..\u2935\uFE0F)    right arrow curving up..right arrow curving down\n                                if (0x2934 <= code && code <= 0x2935) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [3] (\u2B05\uFE0F..\u2B07\uFE0F)    left arrow..down arrow\n                                if (0x2b05 <= code && code <= 0x2b07) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2b55) {\n                            if (code < 0x2b50) {\n                                // E0.6   [2] (\u2B1B..\u2B1C)    black large square..white large square\n                                if (0x2b1b <= code && code <= 0x2b1c) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2B50)       star\n                                if (0x2b50 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x3030) {\n                                // E0.6   [1] (\u2B55)       hollow red circle\n                                if (0x2b55 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u3030\uFE0F)       wavy dash\n                                if (0x3030 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u303D\uFE0F)       part alternation mark\n                                if (0x303d === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1f16c) {\n                        if (code < 0x1f000) {\n                            // E0.6   [1] (\u3297\uFE0F)       Japanese \u201Ccongratulations\u201D button\n                            if (0x3297 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u3299\uFE0F)       Japanese \u201Csecret\u201D button\n                            if (0x3299 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x1f10d) {\n                                // E0.0   [4] (\uD83C\uDC00..\uD83C\uDC03)    MAHJONG TILE EAST WIND..MAHJONG TILE NORTH WIND\n                                // E0.6   [1] (\uD83C\uDC04)       mahjong red dragon\n                                // E0.0 [202] (\uD83C\uDC05..\uD83C\uDCCE)    MAHJONG TILE GREEN DRAGON..PLAYING CARD KING OF DIAMONDS\n                                // E0.6   [1] (\uD83C\uDCCF)       joker\n                                // E0.0  [48] (\uD83C\uDCD0..\uD83C\uDCFF)    <reserved-1F0D0>..<reserved-1F0FF>\n                                if (0x1f000 <= code && code <= 0x1f0ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f12f) {\n                                    // E0.0   [3] (\uD83C\uDD0D..\uD83C\uDD0F)    CIRCLED ZERO WITH SLASH..CIRCLED DOLLAR SIGN WITH OVERLAID BACKSLASH\n                                    if (0x1f10d <= code && code <= 0x1f10f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [1] (\uD83C\uDD2F)       COPYLEFT SYMBOL\n                                    if (0x1f12f === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f18e) {\n                            if (code < 0x1f17e) {\n                                // E0.0   [4] (\uD83C\uDD6C..\uD83C\uDD6F)    RAISED MR SIGN..CIRCLED HUMAN FIGURE\n                                // E0.6   [2] (\uD83C\uDD70\uFE0F..\uD83C\uDD71\uFE0F)    A button (blood type)..B button (blood type)\n                                if (0x1f16c <= code && code <= 0x1f171) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [2] (\uD83C\uDD7E\uFE0F..\uD83C\uDD7F\uFE0F)    O button (blood type)..P button\n                                if (0x1f17e <= code && code <= 0x1f17f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f191) {\n                                // E0.6   [1] (\uD83C\uDD8E)       AB button (blood type)\n                                if (0x1f18e === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f1ad) {\n                                    // E0.6  [10] (\uD83C\uDD91..\uD83C\uDD9A)    CL button..VS button\n                                    if (0x1f191 <= code && code <= 0x1f19a) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0  [57] (\uD83C\uDDAD..\uD83C\uDDE5)    MASK WORK SYMBOL..<reserved-1F1E5>\n                                    if (0x1f1ad <= code && code <= 0x1f1e5) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x1f7d5) {\n                    if (code < 0x1f249) {\n                        if (code < 0x1f22f) {\n                            if (code < 0x1f21a) {\n                                // E0.6   [2] (\uD83C\uDE01..\uD83C\uDE02\uFE0F)    Japanese \u201Chere\u201D button..Japanese \u201Cservice charge\u201D button\n                                // E0.0  [13] (\uD83C\uDE03..\uD83C\uDE0F)    <reserved-1F203>..<reserved-1F20F>\n                                if (0x1f201 <= code && code <= 0x1f20f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\uD83C\uDE1A)       Japanese \u201Cfree of charge\u201D button\n                                if (0x1f21a === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f232) {\n                                // E0.6   [1] (\uD83C\uDE2F)       Japanese \u201Creserved\u201D button\n                                if (0x1f22f === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f23c) {\n                                    // E0.6   [9] (\uD83C\uDE32..\uD83C\uDE3A)    Japanese \u201Cprohibited\u201D button..Japanese \u201Copen for business\u201D button\n                                    if (0x1f232 <= code && code <= 0x1f23a) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [4] (\uD83C\uDE3C..\uD83C\uDE3F)    <reserved-1F23C>..<reserved-1F23F>\n                                    if (0x1f23c <= code && code <= 0x1f23f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f546) {\n                            if (code < 0x1f400) {\n                                // E0.0   [7] (\uD83C\uDE49..\uD83C\uDE4F)    <reserved-1F249>..<reserved-1F24F>\n                                // E0.6   [2] (\uD83C\uDE50..\uD83C\uDE51)    Japanese \u201Cbargain\u201D button..Japanese \u201Cacceptable\u201D button\n                                // E0.0 [174] (\uD83C\uDE52..\uD83C\uDEFF)    <reserved-1F252>..<reserved-1F2FF>\n                                // E0.6  [13] (\uD83C\uDF00..\uD83C\uDF0C)    cyclone..milky way\n                                // E0.7   [2] (\uD83C\uDF0D..\uD83C\uDF0E)    globe showing Europe-Africa..globe showing Americas\n                                // E0.6   [1] (\uD83C\uDF0F)       globe showing Asia-Australia\n                                // E1.0   [1] (\uD83C\uDF10)       globe with meridians\n                                // E0.6   [1] (\uD83C\uDF11)       new moon\n                                // E1.0   [1] (\uD83C\uDF12)       waxing crescent moon\n                                // E0.6   [3] (\uD83C\uDF13..\uD83C\uDF15)    first quarter moon..full moon\n                                // E1.0   [3] (\uD83C\uDF16..\uD83C\uDF18)    waning gibbous moon..waning crescent moon\n                                // E0.6   [1] (\uD83C\uDF19)       crescent moon\n                                // E1.0   [1] (\uD83C\uDF1A)       new moon face\n                                // E0.6   [1] (\uD83C\uDF1B)       first quarter moon face\n                                // E0.7   [1] (\uD83C\uDF1C)       last quarter moon face\n                                // E1.0   [2] (\uD83C\uDF1D..\uD83C\uDF1E)    full moon face..sun with face\n                                // E0.6   [2] (\uD83C\uDF1F..\uD83C\uDF20)    glowing star..shooting star\n                                // E0.7   [1] (\uD83C\uDF21\uFE0F)       thermometer\n                                // E0.0   [2] (\uD83C\uDF22..\uD83C\uDF23)    BLACK DROPLET..WHITE SUN\n                                // E0.7   [9] (\uD83C\uDF24\uFE0F..\uD83C\uDF2C\uFE0F)    sun behind small cloud..wind face\n                                // E1.0   [3] (\uD83C\uDF2D..\uD83C\uDF2F)    hot dog..burrito\n                                // E0.6   [2] (\uD83C\uDF30..\uD83C\uDF31)    chestnut..seedling\n                                // E1.0   [2] (\uD83C\uDF32..\uD83C\uDF33)    evergreen tree..deciduous tree\n                                // E0.6   [2] (\uD83C\uDF34..\uD83C\uDF35)    palm tree..cactus\n                                // E0.7   [1] (\uD83C\uDF36\uFE0F)       hot pepper\n                                // E0.6  [20] (\uD83C\uDF37..\uD83C\uDF4A)    tulip..tangerine\n                                // E1.0   [1] (\uD83C\uDF4B)       lemon\n                                // E0.6   [4] (\uD83C\uDF4C..\uD83C\uDF4F)    banana..green apple\n                                // E1.0   [1] (\uD83C\uDF50)       pear\n                                // E0.6  [43] (\uD83C\uDF51..\uD83C\uDF7B)    peach..clinking beer mugs\n                                // E1.0   [1] (\uD83C\uDF7C)       baby bottle\n                                // E0.7   [1] (\uD83C\uDF7D\uFE0F)       fork and knife with plate\n                                // E1.0   [2] (\uD83C\uDF7E..\uD83C\uDF7F)    bottle with popping cork..popcorn\n                                // E0.6  [20] (\uD83C\uDF80..\uD83C\uDF93)    ribbon..graduation cap\n                                // E0.0   [2] (\uD83C\uDF94..\uD83C\uDF95)    HEART WITH TIP ON THE LEFT..BOUQUET OF FLOWERS\n                                // E0.7   [2] (\uD83C\uDF96\uFE0F..\uD83C\uDF97\uFE0F)    military medal..reminder ribbon\n                                // E0.0   [1] (\uD83C\uDF98)       MUSICAL KEYBOARD WITH JACKS\n                                // E0.7   [3] (\uD83C\uDF99\uFE0F..\uD83C\uDF9B\uFE0F)    studio microphone..control knobs\n                                // E0.0   [2] (\uD83C\uDF9C..\uD83C\uDF9D)    BEAMED ASCENDING MUSICAL NOTES..BEAMED DESCENDING MUSICAL NOTES\n                                // E0.7   [2] (\uD83C\uDF9E\uFE0F..\uD83C\uDF9F\uFE0F)    film frames..admission tickets\n                                // E0.6  [37] (\uD83C\uDFA0..\uD83C\uDFC4)    carousel horse..person surfing\n                                // E1.0   [1] (\uD83C\uDFC5)       sports medal\n                                // E0.6   [1] (\uD83C\uDFC6)       trophy\n                                // E1.0   [1] (\uD83C\uDFC7)       horse racing\n                                // E0.6   [1] (\uD83C\uDFC8)       american football\n                                // E1.0   [1] (\uD83C\uDFC9)       rugby football\n                                // E0.6   [1] (\uD83C\uDFCA)       person swimming\n                                // E0.7   [4] (\uD83C\uDFCB\uFE0F..\uD83C\uDFCE\uFE0F)    person lifting weights..racing car\n                                // E1.0   [5] (\uD83C\uDFCF..\uD83C\uDFD3)    cricket game..ping pong\n                                // E0.7  [12] (\uD83C\uDFD4\uFE0F..\uD83C\uDFDF\uFE0F)    snow-capped mountain..stadium\n                                // E0.6   [4] (\uD83C\uDFE0..\uD83C\uDFE3)    house..Japanese post office\n                                // E1.0   [1] (\uD83C\uDFE4)       post office\n                                // E0.6  [12] (\uD83C\uDFE5..\uD83C\uDFF0)    hospital..castle\n                                // E0.0   [2] (\uD83C\uDFF1..\uD83C\uDFF2)    WHITE PENNANT..BLACK PENNANT\n                                // E0.7   [1] (\uD83C\uDFF3\uFE0F)       white flag\n                                // E1.0   [1] (\uD83C\uDFF4)       black flag\n                                // E0.7   [1] (\uD83C\uDFF5\uFE0F)       rosette\n                                // E0.0   [1] (\uD83C\uDFF6)       BLACK ROSETTE\n                                // E0.7   [1] (\uD83C\uDFF7\uFE0F)       label\n                                // E1.0   [3] (\uD83C\uDFF8..\uD83C\uDFFA)    badminton..amphora\n                                if (0x1f249 <= code && code <= 0x1f3fa) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E1.0   [8] (\uD83D\uDC00..\uD83D\uDC07)    rat..rabbit\n                                // E0.7   [1] (\uD83D\uDC08)       cat\n                                // E1.0   [3] (\uD83D\uDC09..\uD83D\uDC0B)    dragon..whale\n                                // E0.6   [3] (\uD83D\uDC0C..\uD83D\uDC0E)    snail..horse\n                                // E1.0   [2] (\uD83D\uDC0F..\uD83D\uDC10)    ram..goat\n                                // E0.6   [2] (\uD83D\uDC11..\uD83D\uDC12)    ewe..monkey\n                                // E1.0   [1] (\uD83D\uDC13)       rooster\n                                // E0.6   [1] (\uD83D\uDC14)       chicken\n                                // E0.7   [1] (\uD83D\uDC15)       dog\n                                // E1.0   [1] (\uD83D\uDC16)       pig\n                                // E0.6  [19] (\uD83D\uDC17..\uD83D\uDC29)    boar..poodle\n                                // E1.0   [1] (\uD83D\uDC2A)       camel\n                                // E0.6  [20] (\uD83D\uDC2B..\uD83D\uDC3E)    two-hump camel..paw prints\n                                // E0.7   [1] (\uD83D\uDC3F\uFE0F)       chipmunk\n                                // E0.6   [1] (\uD83D\uDC40)       eyes\n                                // E0.7   [1] (\uD83D\uDC41\uFE0F)       eye\n                                // E0.6  [35] (\uD83D\uDC42..\uD83D\uDC64)    ear..bust in silhouette\n                                // E1.0   [1] (\uD83D\uDC65)       busts in silhouette\n                                // E0.6   [6] (\uD83D\uDC66..\uD83D\uDC6B)    boy..woman and man holding hands\n                                // E1.0   [2] (\uD83D\uDC6C..\uD83D\uDC6D)    men holding hands..women holding hands\n                                // E0.6  [63] (\uD83D\uDC6E..\uD83D\uDCAC)    police officer..speech balloon\n                                // E1.0   [1] (\uD83D\uDCAD)       thought balloon\n                                // E0.6   [8] (\uD83D\uDCAE..\uD83D\uDCB5)    white flower..dollar banknote\n                                // E1.0   [2] (\uD83D\uDCB6..\uD83D\uDCB7)    euro banknote..pound banknote\n                                // E0.6  [52] (\uD83D\uDCB8..\uD83D\uDCEB)    money with wings..closed mailbox with raised flag\n                                // E0.7   [2] (\uD83D\uDCEC..\uD83D\uDCED)    open mailbox with raised flag..open mailbox with lowered flag\n                                // E0.6   [1] (\uD83D\uDCEE)       postbox\n                                // E1.0   [1] (\uD83D\uDCEF)       postal horn\n                                // E0.6   [5] (\uD83D\uDCF0..\uD83D\uDCF4)    newspaper..mobile phone off\n                                // E1.0   [1] (\uD83D\uDCF5)       no mobile phones\n                                // E0.6   [2] (\uD83D\uDCF6..\uD83D\uDCF7)    antenna bars..camera\n                                // E1.0   [1] (\uD83D\uDCF8)       camera with flash\n                                // E0.6   [4] (\uD83D\uDCF9..\uD83D\uDCFC)    video camera..videocassette\n                                // E0.7   [1] (\uD83D\uDCFD\uFE0F)       film projector\n                                // E0.0   [1] (\uD83D\uDCFE)       PORTABLE STEREO\n                                // E1.0   [4] (\uD83D\uDCFF..\uD83D\uDD02)    prayer beads..repeat single button\n                                // E0.6   [1] (\uD83D\uDD03)       clockwise vertical arrows\n                                // E1.0   [4] (\uD83D\uDD04..\uD83D\uDD07)    counterclockwise arrows button..muted speaker\n                                // E0.7   [1] (\uD83D\uDD08)       speaker low volume\n                                // E1.0   [1] (\uD83D\uDD09)       speaker medium volume\n                                // E0.6  [11] (\uD83D\uDD0A..\uD83D\uDD14)    speaker high volume..bell\n                                // E1.0   [1] (\uD83D\uDD15)       bell with slash\n                                // E0.6  [22] (\uD83D\uDD16..\uD83D\uDD2B)    bookmark..water pistol\n                                // E1.0   [2] (\uD83D\uDD2C..\uD83D\uDD2D)    microscope..telescope\n                                // E0.6  [16] (\uD83D\uDD2E..\uD83D\uDD3D)    crystal ball..downwards button\n                                if (0x1f400 <= code && code <= 0x1f53d) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f680) {\n                                // E0.0   [3] (\uD83D\uDD46..\uD83D\uDD48)    WHITE LATIN CROSS..CELTIC CROSS\n                                // E0.7   [2] (\uD83D\uDD49\uFE0F..\uD83D\uDD4A\uFE0F)    om..dove\n                                // E1.0   [4] (\uD83D\uDD4B..\uD83D\uDD4E)    kaaba..menorah\n                                // E0.0   [1] (\uD83D\uDD4F)       BOWL OF HYGIEIA\n                                // E0.6  [12] (\uD83D\uDD50..\uD83D\uDD5B)    one o\u2019clock..twelve o\u2019clock\n                                // E0.7  [12] (\uD83D\uDD5C..\uD83D\uDD67)    one-thirty..twelve-thirty\n                                // E0.0   [7] (\uD83D\uDD68..\uD83D\uDD6E)    RIGHT SPEAKER..BOOK\n                                // E0.7   [2] (\uD83D\uDD6F\uFE0F..\uD83D\uDD70\uFE0F)    candle..mantelpiece clock\n                                // E0.0   [2] (\uD83D\uDD71..\uD83D\uDD72)    BLACK SKULL AND CROSSBONES..NO PIRACY\n                                // E0.7   [7] (\uD83D\uDD73\uFE0F..\uD83D\uDD79\uFE0F)    hole..joystick\n                                // E3.0   [1] (\uD83D\uDD7A)       man dancing\n                                // E0.0  [12] (\uD83D\uDD7B..\uD83D\uDD86)    LEFT HAND TELEPHONE RECEIVER..PEN OVER STAMPED ENVELOPE\n                                // E0.7   [1] (\uD83D\uDD87\uFE0F)       linked paperclips\n                                // E0.0   [2] (\uD83D\uDD88..\uD83D\uDD89)    BLACK PUSHPIN..LOWER LEFT PENCIL\n                                // E0.7   [4] (\uD83D\uDD8A\uFE0F..\uD83D\uDD8D\uFE0F)    pen..crayon\n                                // E0.0   [2] (\uD83D\uDD8E..\uD83D\uDD8F)    LEFT WRITING HAND..TURNED OK HAND SIGN\n                                // E0.7   [1] (\uD83D\uDD90\uFE0F)       hand with fingers splayed\n                                // E0.0   [4] (\uD83D\uDD91..\uD83D\uDD94)    REVERSED RAISED HAND WITH FINGERS SPLAYED..REVERSED VICTORY HAND\n                                // E1.0   [2] (\uD83D\uDD95..\uD83D\uDD96)    middle finger..vulcan salute\n                                // E0.0  [13] (\uD83D\uDD97..\uD83D\uDDA3)    WHITE DOWN POINTING LEFT HAND INDEX..BLACK DOWN POINTING BACKHAND INDEX\n                                // E3.0   [1] (\uD83D\uDDA4)       black heart\n                                // E0.7   [1] (\uD83D\uDDA5\uFE0F)       desktop computer\n                                // E0.0   [2] (\uD83D\uDDA6..\uD83D\uDDA7)    KEYBOARD AND MOUSE..THREE NETWORKED COMPUTERS\n                                // E0.7   [1] (\uD83D\uDDA8\uFE0F)       printer\n                                // E0.0   [8] (\uD83D\uDDA9..\uD83D\uDDB0)    POCKET CALCULATOR..TWO BUTTON MOUSE\n                                // E0.7   [2] (\uD83D\uDDB1\uFE0F..\uD83D\uDDB2\uFE0F)    computer mouse..trackball\n                                // E0.0   [9] (\uD83D\uDDB3..\uD83D\uDDBB)    OLD PERSONAL COMPUTER..DOCUMENT WITH PICTURE\n                                // E0.7   [1] (\uD83D\uDDBC\uFE0F)       framed picture\n                                // E0.0   [5] (\uD83D\uDDBD..\uD83D\uDDC1)    FRAME WITH TILES..OPEN FOLDER\n                                // E0.7   [3] (\uD83D\uDDC2\uFE0F..\uD83D\uDDC4\uFE0F)    card index dividers..file cabinet\n                                // E0.0  [12] (\uD83D\uDDC5..\uD83D\uDDD0)    EMPTY NOTE..PAGES\n                                // E0.7   [3] (\uD83D\uDDD1\uFE0F..\uD83D\uDDD3\uFE0F)    wastebasket..spiral calendar\n                                // E0.0   [8] (\uD83D\uDDD4..\uD83D\uDDDB)    DESKTOP WINDOW..DECREASE FONT SIZE SYMBOL\n                                // E0.7   [3] (\uD83D\uDDDC\uFE0F..\uD83D\uDDDE\uFE0F)    clamp..rolled-up newspaper\n                                // E0.0   [2] (\uD83D\uDDDF..\uD83D\uDDE0)    PAGE WITH CIRCLED TEXT..STOCK CHART\n                                // E0.7   [1] (\uD83D\uDDE1\uFE0F)       dagger\n                                // E0.0   [1] (\uD83D\uDDE2)       LIPS\n                                // E0.7   [1] (\uD83D\uDDE3\uFE0F)       speaking head\n                                // E0.0   [4] (\uD83D\uDDE4..\uD83D\uDDE7)    THREE RAYS ABOVE..THREE RAYS RIGHT\n                                // E2.0   [1] (\uD83D\uDDE8\uFE0F)       left speech bubble\n                                // E0.0   [6] (\uD83D\uDDE9..\uD83D\uDDEE)    RIGHT SPEECH BUBBLE..LEFT ANGER BUBBLE\n                                // E0.7   [1] (\uD83D\uDDEF\uFE0F)       right anger bubble\n                                // E0.0   [3] (\uD83D\uDDF0..\uD83D\uDDF2)    MOOD BUBBLE..LIGHTNING MOOD\n                                // E0.7   [1] (\uD83D\uDDF3\uFE0F)       ballot box with ballot\n                                // E0.0   [6] (\uD83D\uDDF4..\uD83D\uDDF9)    BALLOT SCRIPT X..BALLOT BOX WITH BOLD CHECK\n                                // E0.7   [1] (\uD83D\uDDFA\uFE0F)       world map\n                                // E0.6   [5] (\uD83D\uDDFB..\uD83D\uDDFF)    mount fuji..moai\n                                // E1.0   [1] (\uD83D\uDE00)       grinning face\n                                // E0.6   [6] (\uD83D\uDE01..\uD83D\uDE06)    beaming face with smiling eyes..grinning squinting face\n                                // E1.0   [2] (\uD83D\uDE07..\uD83D\uDE08)    smiling face with halo..smiling face with horns\n                                // E0.6   [5] (\uD83D\uDE09..\uD83D\uDE0D)    winking face..smiling face with heart-eyes\n                                // E1.0   [1] (\uD83D\uDE0E)       smiling face with sunglasses\n                                // E0.6   [1] (\uD83D\uDE0F)       smirking face\n                                // E0.7   [1] (\uD83D\uDE10)       neutral face\n                                // E1.0   [1] (\uD83D\uDE11)       expressionless face\n                                // E0.6   [3] (\uD83D\uDE12..\uD83D\uDE14)    unamused face..pensive face\n                                // E1.0   [1] (\uD83D\uDE15)       confused face\n                                // E0.6   [1] (\uD83D\uDE16)       confounded face\n                                // E1.0   [1] (\uD83D\uDE17)       kissing face\n                                // E0.6   [1] (\uD83D\uDE18)       face blowing a kiss\n                                // E1.0   [1] (\uD83D\uDE19)       kissing face with smiling eyes\n                                // E0.6   [1] (\uD83D\uDE1A)       kissing face with closed eyes\n                                // E1.0   [1] (\uD83D\uDE1B)       face with tongue\n                                // E0.6   [3] (\uD83D\uDE1C..\uD83D\uDE1E)    winking face with tongue..disappointed face\n                                // E1.0   [1] (\uD83D\uDE1F)       worried face\n                                // E0.6   [6] (\uD83D\uDE20..\uD83D\uDE25)    angry face..sad but relieved face\n                                // E1.0   [2] (\uD83D\uDE26..\uD83D\uDE27)    frowning face with open mouth..anguished face\n                                // E0.6   [4] (\uD83D\uDE28..\uD83D\uDE2B)    fearful face..tired face\n                                // E1.0   [1] (\uD83D\uDE2C)       grimacing face\n                                // E0.6   [1] (\uD83D\uDE2D)       loudly crying face\n                                // E1.0   [2] (\uD83D\uDE2E..\uD83D\uDE2F)    face with open mouth..hushed face\n                                // E0.6   [4] (\uD83D\uDE30..\uD83D\uDE33)    anxious face with sweat..flushed face\n                                // E1.0   [1] (\uD83D\uDE34)       sleeping face\n                                // E0.6   [1] (\uD83D\uDE35)       face with crossed-out eyes\n                                // E1.0   [1] (\uD83D\uDE36)       face without mouth\n                                // E0.6  [10] (\uD83D\uDE37..\uD83D\uDE40)    face with medical mask..weary cat\n                                // E1.0   [4] (\uD83D\uDE41..\uD83D\uDE44)    slightly frowning face..face with rolling eyes\n                                // E0.6  [11] (\uD83D\uDE45..\uD83D\uDE4F)    person gesturing NO..folded hands\n                                if (0x1f546 <= code && code <= 0x1f64f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f774) {\n                                    // E0.6   [1] (\uD83D\uDE80)       rocket\n                                    // E1.0   [2] (\uD83D\uDE81..\uD83D\uDE82)    helicopter..locomotive\n                                    // E0.6   [3] (\uD83D\uDE83..\uD83D\uDE85)    railway car..bullet train\n                                    // E1.0   [1] (\uD83D\uDE86)       train\n                                    // E0.6   [1] (\uD83D\uDE87)       metro\n                                    // E1.0   [1] (\uD83D\uDE88)       light rail\n                                    // E0.6   [1] (\uD83D\uDE89)       station\n                                    // E1.0   [2] (\uD83D\uDE8A..\uD83D\uDE8B)    tram..tram car\n                                    // E0.6   [1] (\uD83D\uDE8C)       bus\n                                    // E0.7   [1] (\uD83D\uDE8D)       oncoming bus\n                                    // E1.0   [1] (\uD83D\uDE8E)       trolleybus\n                                    // E0.6   [1] (\uD83D\uDE8F)       bus stop\n                                    // E1.0   [1] (\uD83D\uDE90)       minibus\n                                    // E0.6   [3] (\uD83D\uDE91..\uD83D\uDE93)    ambulance..police car\n                                    // E0.7   [1] (\uD83D\uDE94)       oncoming police car\n                                    // E0.6   [1] (\uD83D\uDE95)       taxi\n                                    // E1.0   [1] (\uD83D\uDE96)       oncoming taxi\n                                    // E0.6   [1] (\uD83D\uDE97)       automobile\n                                    // E0.7   [1] (\uD83D\uDE98)       oncoming automobile\n                                    // E0.6   [2] (\uD83D\uDE99..\uD83D\uDE9A)    sport utility vehicle..delivery truck\n                                    // E1.0   [7] (\uD83D\uDE9B..\uD83D\uDEA1)    articulated lorry..aerial tramway\n                                    // E0.6   [1] (\uD83D\uDEA2)       ship\n                                    // E1.0   [1] (\uD83D\uDEA3)       person rowing boat\n                                    // E0.6   [2] (\uD83D\uDEA4..\uD83D\uDEA5)    speedboat..horizontal traffic light\n                                    // E1.0   [1] (\uD83D\uDEA6)       vertical traffic light\n                                    // E0.6   [7] (\uD83D\uDEA7..\uD83D\uDEAD)    construction..no smoking\n                                    // E1.0   [4] (\uD83D\uDEAE..\uD83D\uDEB1)    litter in bin sign..non-potable water\n                                    // E0.6   [1] (\uD83D\uDEB2)       bicycle\n                                    // E1.0   [3] (\uD83D\uDEB3..\uD83D\uDEB5)    no bicycles..person mountain biking\n                                    // E0.6   [1] (\uD83D\uDEB6)       person walking\n                                    // E1.0   [2] (\uD83D\uDEB7..\uD83D\uDEB8)    no pedestrians..children crossing\n                                    // E0.6   [6] (\uD83D\uDEB9..\uD83D\uDEBE)    men\u2019s room..water closet\n                                    // E1.0   [1] (\uD83D\uDEBF)       shower\n                                    // E0.6   [1] (\uD83D\uDEC0)       person taking bath\n                                    // E1.0   [5] (\uD83D\uDEC1..\uD83D\uDEC5)    bathtub..left luggage\n                                    // E0.0   [5] (\uD83D\uDEC6..\uD83D\uDECA)    TRIANGLE WITH ROUNDED CORNERS..GIRLS SYMBOL\n                                    // E0.7   [1] (\uD83D\uDECB\uFE0F)       couch and lamp\n                                    // E1.0   [1] (\uD83D\uDECC)       person in bed\n                                    // E0.7   [3] (\uD83D\uDECD\uFE0F..\uD83D\uDECF\uFE0F)    shopping bags..bed\n                                    // E1.0   [1] (\uD83D\uDED0)       place of worship\n                                    // E3.0   [2] (\uD83D\uDED1..\uD83D\uDED2)    stop sign..shopping cart\n                                    // E0.0   [2] (\uD83D\uDED3..\uD83D\uDED4)    STUPA..PAGODA\n                                    // E12.0  [1] (\uD83D\uDED5)       hindu temple\n                                    // E13.0  [2] (\uD83D\uDED6..\uD83D\uDED7)    hut..elevator\n                                    // E0.0   [4] (\uD83D\uDED8..\uD83D\uDEDB)    <reserved-1F6D8>..<reserved-1F6DB>\n                                    // E15.0  [1] (\uD83D\uDEDC)       wireless\n                                    // E14.0  [3] (\uD83D\uDEDD..\uD83D\uDEDF)    playground slide..ring buoy\n                                    // E0.7   [6] (\uD83D\uDEE0\uFE0F..\uD83D\uDEE5\uFE0F)    hammer and wrench..motor boat\n                                    // E0.0   [3] (\uD83D\uDEE6..\uD83D\uDEE8)    UP-POINTING MILITARY AIRPLANE..UP-POINTING SMALL AIRPLANE\n                                    // E0.7   [1] (\uD83D\uDEE9\uFE0F)       small airplane\n                                    // E0.0   [1] (\uD83D\uDEEA)       NORTHEAST-POINTING AIRPLANE\n                                    // E1.0   [2] (\uD83D\uDEEB..\uD83D\uDEEC)    airplane departure..airplane arrival\n                                    // E0.0   [3] (\uD83D\uDEED..\uD83D\uDEEF)    <reserved-1F6ED>..<reserved-1F6EF>\n                                    // E0.7   [1] (\uD83D\uDEF0\uFE0F)       satellite\n                                    // E0.0   [2] (\uD83D\uDEF1..\uD83D\uDEF2)    ONCOMING FIRE ENGINE..DIESEL LOCOMOTIVE\n                                    // E0.7   [1] (\uD83D\uDEF3\uFE0F)       passenger ship\n                                    // E3.0   [3] (\uD83D\uDEF4..\uD83D\uDEF6)    kick scooter..canoe\n                                    // E5.0   [2] (\uD83D\uDEF7..\uD83D\uDEF8)    sled..flying saucer\n                                    // E11.0  [1] (\uD83D\uDEF9)       skateboard\n                                    // E12.0  [1] (\uD83D\uDEFA)       auto rickshaw\n                                    // E13.0  [2] (\uD83D\uDEFB..\uD83D\uDEFC)    pickup truck..roller skate\n                                    // E0.0   [3] (\uD83D\uDEFD..\uD83D\uDEFF)    <reserved-1F6FD>..<reserved-1F6FF>\n                                    if (0x1f680 <= code && code <= 0x1f6ff) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0  [12] (\uD83D\uDF74..\uD83D\uDF7F)    LOT OF FORTUNE..ORCUS\n                                    if (0x1f774 <= code && code <= 0x1f77f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1f8ae) {\n                        if (code < 0x1f848) {\n                            if (code < 0x1f80c) {\n                                // E0.0  [11] (\uD83D\uDFD5..\uD83D\uDFDF)    CIRCLED TRIANGLE..<reserved-1F7DF>\n                                // E12.0 [12] (\uD83D\uDFE0..\uD83D\uDFEB)    orange circle..brown square\n                                // E0.0   [4] (\uD83D\uDFEC..\uD83D\uDFEF)    <reserved-1F7EC>..<reserved-1F7EF>\n                                // E14.0  [1] (\uD83D\uDFF0)       heavy equals sign\n                                // E0.0  [15] (\uD83D\uDFF1..\uD83D\uDFFF)    <reserved-1F7F1>..<reserved-1F7FF>\n                                if (0x1f7d5 <= code && code <= 0x1f7ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.0   [4] (\uD83E\uDC0C..\uD83E\uDC0F)    <reserved-1F80C>..<reserved-1F80F>\n                                if (0x1f80c <= code && code <= 0x1f80f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f85a) {\n                                // E0.0   [8] (\uD83E\uDC48..\uD83E\uDC4F)    <reserved-1F848>..<reserved-1F84F>\n                                if (0x1f848 <= code && code <= 0x1f84f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f888) {\n                                    // E0.0   [6] (\uD83E\uDC5A..\uD83E\uDC5F)    <reserved-1F85A>..<reserved-1F85F>\n                                    if (0x1f85a <= code && code <= 0x1f85f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [8] (\uD83E\uDC88..\uD83E\uDC8F)    <reserved-1F888>..<reserved-1F88F>\n                                    if (0x1f888 <= code && code <= 0x1f88f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f93c) {\n                            if (code < 0x1f90c) {\n                                // E0.0  [82] (\uD83E\uDCAE..\uD83E\uDCFF)    <reserved-1F8AE>..<reserved-1F8FF>\n                                if (0x1f8ae <= code && code <= 0x1f8ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E13.0  [1] (\uD83E\uDD0C)       pinched fingers\n                                // E12.0  [3] (\uD83E\uDD0D..\uD83E\uDD0F)    white heart..pinching hand\n                                // E1.0   [9] (\uD83E\uDD10..\uD83E\uDD18)    zipper-mouth face..sign of the horns\n                                // E3.0   [6] (\uD83E\uDD19..\uD83E\uDD1E)    call me hand..crossed fingers\n                                // E5.0   [1] (\uD83E\uDD1F)       love-you gesture\n                                // E3.0   [8] (\uD83E\uDD20..\uD83E\uDD27)    cowboy hat face..sneezing face\n                                // E5.0   [8] (\uD83E\uDD28..\uD83E\uDD2F)    face with raised eyebrow..exploding head\n                                // E3.0   [1] (\uD83E\uDD30)       pregnant woman\n                                // E5.0   [2] (\uD83E\uDD31..\uD83E\uDD32)    breast-feeding..palms up together\n                                // E3.0   [8] (\uD83E\uDD33..\uD83E\uDD3A)    selfie..person fencing\n                                if (0x1f90c <= code && code <= 0x1f93a) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f947) {\n                                // E3.0   [3] (\uD83E\uDD3C..\uD83E\uDD3E)    people wrestling..person playing handball\n                                // E12.0  [1] (\uD83E\uDD3F)       diving mask\n                                // E3.0   [6] (\uD83E\uDD40..\uD83E\uDD45)    wilted flower..goal net\n                                if (0x1f93c <= code && code <= 0x1f945) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1fc00) {\n                                    // E3.0   [5] (\uD83E\uDD47..\uD83E\uDD4B)    1st place medal..martial arts uniform\n                                    // E5.0   [1] (\uD83E\uDD4C)       curling stone\n                                    // E11.0  [3] (\uD83E\uDD4D..\uD83E\uDD4F)    lacrosse..flying disc\n                                    // E3.0  [15] (\uD83E\uDD50..\uD83E\uDD5E)    croissant..pancakes\n                                    // E5.0  [13] (\uD83E\uDD5F..\uD83E\uDD6B)    dumpling..canned food\n                                    // E11.0  [5] (\uD83E\uDD6C..\uD83E\uDD70)    leafy green..smiling face with hearts\n                                    // E12.0  [1] (\uD83E\uDD71)       yawning face\n                                    // E13.0  [1] (\uD83E\uDD72)       smiling face with tear\n                                    // E11.0  [4] (\uD83E\uDD73..\uD83E\uDD76)    partying face..cold face\n                                    // E13.0  [2] (\uD83E\uDD77..\uD83E\uDD78)    ninja..disguised face\n                                    // E14.0  [1] (\uD83E\uDD79)       face holding back tears\n                                    // E11.0  [1] (\uD83E\uDD7A)       pleading face\n                                    // E12.0  [1] (\uD83E\uDD7B)       sari\n                                    // E11.0  [4] (\uD83E\uDD7C..\uD83E\uDD7F)    lab coat..flat shoe\n                                    // E1.0   [5] (\uD83E\uDD80..\uD83E\uDD84)    crab..unicorn\n                                    // E3.0  [13] (\uD83E\uDD85..\uD83E\uDD91)    eagle..squid\n                                    // E5.0   [6] (\uD83E\uDD92..\uD83E\uDD97)    giraffe..cricket\n                                    // E11.0 [11] (\uD83E\uDD98..\uD83E\uDDA2)    kangaroo..swan\n                                    // E13.0  [2] (\uD83E\uDDA3..\uD83E\uDDA4)    mammoth..dodo\n                                    // E12.0  [6] (\uD83E\uDDA5..\uD83E\uDDAA)    sloth..oyster\n                                    // E13.0  [3] (\uD83E\uDDAB..\uD83E\uDDAD)    beaver..seal\n                                    // E12.0  [2] (\uD83E\uDDAE..\uD83E\uDDAF)    guide dog..white cane\n                                    // E11.0 [10] (\uD83E\uDDB0..\uD83E\uDDB9)    red hair..supervillain\n                                    // E12.0  [6] (\uD83E\uDDBA..\uD83E\uDDBF)    safety vest..mechanical leg\n                                    // E1.0   [1] (\uD83E\uDDC0)       cheese wedge\n                                    // E11.0  [2] (\uD83E\uDDC1..\uD83E\uDDC2)    cupcake..salt\n                                    // E12.0  [8] (\uD83E\uDDC3..\uD83E\uDDCA)    beverage box..ice\n                                    // E13.0  [1] (\uD83E\uDDCB)       bubble tea\n                                    // E14.0  [1] (\uD83E\uDDCC)       troll\n                                    // E12.0  [3] (\uD83E\uDDCD..\uD83E\uDDCF)    person standing..deaf person\n                                    // E5.0  [23] (\uD83E\uDDD0..\uD83E\uDDE6)    face with monocle..socks\n                                    // E11.0 [25] (\uD83E\uDDE7..\uD83E\uDDFF)    red envelope..nazar amulet\n                                    // E0.0 [112] (\uD83E\uDE00..\uD83E\uDE6F)    NEUTRAL CHESS KING..<reserved-1FA6F>\n                                    // E12.0  [4] (\uD83E\uDE70..\uD83E\uDE73)    ballet shoes..shorts\n                                    // E13.0  [1] (\uD83E\uDE74)       thong sandal\n                                    // E15.0  [3] (\uD83E\uDE75..\uD83E\uDE77)    light blue heart..pink heart\n                                    // E12.0  [3] (\uD83E\uDE78..\uD83E\uDE7A)    drop of blood..stethoscope\n                                    // E14.0  [2] (\uD83E\uDE7B..\uD83E\uDE7C)    x-ray..crutch\n                                    // E0.0   [3] (\uD83E\uDE7D..\uD83E\uDE7F)    <reserved-1FA7D>..<reserved-1FA7F>\n                                    // E12.0  [3] (\uD83E\uDE80..\uD83E\uDE82)    yo-yo..parachute\n                                    // E13.0  [4] (\uD83E\uDE83..\uD83E\uDE86)    boomerang..nesting dolls\n                                    // E15.0  [2] (\uD83E\uDE87..\uD83E\uDE88)    maracas..flute\n                                    // E0.0   [7] (\uD83E\uDE89..\uD83E\uDE8F)    <reserved-1FA89>..<reserved-1FA8F>\n                                    // E12.0  [6] (\uD83E\uDE90..\uD83E\uDE95)    ringed planet..banjo\n                                    // E13.0 [19] (\uD83E\uDE96..\uD83E\uDEA8)    military helmet..rock\n                                    // E14.0  [4] (\uD83E\uDEA9..\uD83E\uDEAC)    mirror ball..hamsa\n                                    // E15.0  [3] (\uD83E\uDEAD..\uD83E\uDEAF)    folding hand fan..khanda\n                                    // E13.0  [7] (\uD83E\uDEB0..\uD83E\uDEB6)    fly..feather\n                                    // E14.0  [4] (\uD83E\uDEB7..\uD83E\uDEBA)    lotus..nest with eggs\n                                    // E15.0  [3] (\uD83E\uDEBB..\uD83E\uDEBD)    hyacinth..wing\n                                    // E0.0   [1] (\uD83E\uDEBE)       <reserved-1FABE>\n                                    // E15.0  [1] (\uD83E\uDEBF)       goose\n                                    // E13.0  [3] (\uD83E\uDEC0..\uD83E\uDEC2)    anatomical heart..people hugging\n                                    // E14.0  [3] (\uD83E\uDEC3..\uD83E\uDEC5)    pregnant man..person with crown\n                                    // E0.0   [8] (\uD83E\uDEC6..\uD83E\uDECD)    <reserved-1FAC6>..<reserved-1FACD>\n                                    // E15.0  [2] (\uD83E\uDECE..\uD83E\uDECF)    moose..donkey\n                                    // E13.0  [7] (\uD83E\uDED0..\uD83E\uDED6)    blueberries..teapot\n                                    // E14.0  [3] (\uD83E\uDED7..\uD83E\uDED9)    pouring liquid..jar\n                                    // E15.0  [2] (\uD83E\uDEDA..\uD83E\uDEDB)    ginger root..pea pod\n                                    // E0.0   [4] (\uD83E\uDEDC..\uD83E\uDEDF)    <reserved-1FADC>..<reserved-1FADF>\n                                    // E14.0  [8] (\uD83E\uDEE0..\uD83E\uDEE7)    melting face..bubbles\n                                    // E15.0  [1] (\uD83E\uDEE8)       shaking face\n                                    // E0.0   [7] (\uD83E\uDEE9..\uD83E\uDEEF)    <reserved-1FAE9>..<reserved-1FAEF>\n                                    // E14.0  [7] (\uD83E\uDEF0..\uD83E\uDEF6)    hand with index finger and thumb crossed..heart hands\n                                    // E15.0  [2] (\uD83E\uDEF7..\uD83E\uDEF8)    leftwards pushing hand..rightwards pushing hand\n                                    // E0.0   [7] (\uD83E\uDEF9..\uD83E\uDEFF)    <reserved-1FAF9>..<reserved-1FAFF>\n                                    if (0x1f947 <= code && code <= 0x1faff) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0[1022] (\uD83F\uDC00..\uD83F\uDFFD)    <reserved-1FC00>..<reserved-1FFFD>\n                                    if (0x1fc00 <= code && code <= 0x1fffd) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // unlisted code points are treated as a break property of \"Other\"\n        return boundaries_1.CLUSTER_BREAK.OTHER;\n    }\n}\nexports.default = Graphemer;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Graphemer_1 = __importDefault(require(\"./Graphemer\"));\nexports.default = Graphemer_1.default;\n", "import Graphemer from 'graphemer'\nimport * as ui8 from 'uint8arrays'\n\n// counts the number of bytes in a utf8 string\nexport const utf8Len = (str: string): number => {\n  return new TextEncoder().encode(str).byteLength\n}\n\n// counts the number of graphemes (user-displayed characters) in a string\nexport const graphemeLen = (str: string): number => {\n  const splitter = new Graphemer()\n  return splitter.countGraphemes(str)\n}\n\nexport const utf8ToB64Url = (utf8: string): string => {\n  return ui8.toString(ui8.fromString(utf8, 'utf8'), 'base64url')\n}\n\nexport const b64UrlToUtf8 = (b64: string): string => {\n  return ui8.toString(ui8.fromString(b64, 'base64url'), 'utf8')\n}\n\nexport const parseLanguage = (langTag: string): LanguageTag | null => {\n  const parsed = langTag.match(bcp47Regexp)\n  if (!parsed?.groups) return null\n  const parts = parsed.groups\n  return {\n    grandfathered: parts.grandfathered,\n    language: parts.language,\n    extlang: parts.extlang,\n    script: parts.script,\n    region: parts.region,\n    variant: parts.variant,\n    extension: parts.extension,\n    privateUse: parts.privateUseA || parts.privateUseB,\n  }\n}\n\nexport const validateLanguage = (langTag: string): boolean => {\n  return bcp47Regexp.test(langTag)\n}\n\nexport type LanguageTag = {\n  grandfathered?: string\n  language?: string\n  extlang?: string\n  script?: string\n  region?: string\n  variant?: string\n  extension?: string\n  privateUse?: string\n}\n\n// Validates well-formed BCP 47 syntax: https://www.rfc-editor.org/rfc/rfc5646.html#section-2.1\nconst bcp47Regexp =\n  /^((?<grandfathered>(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?<language>([A-Za-z]{2,3}(-(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?<script>[A-Za-z]{4}))?(-(?<region>[A-Za-z]{2}|[0-9]{3}))?(-(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?<extension>[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?<privateUseA>x(-[A-Za-z0-9]{1,8})+))?)|(?<privateUseB>x(-[A-Za-z0-9]{1,8})+))$/\n", "import { z } from 'zod'\n\n// Parsing atproto data\n// --------\n\nexport const isValidDidDoc = (doc: unknown): doc is DidDocument => {\n  return didDocument.safeParse(doc).success\n}\n\nexport const getDid = (doc: DidDocument): string => {\n  const id = doc.id\n  if (typeof id !== 'string') {\n    throw new Error('No `id` on document')\n  }\n  return id\n}\n\nexport const getHandle = (doc: DidDocument): string | undefined => {\n  const aka = doc.alsoKnownAs\n  if (aka) {\n    for (let i = 0; i < aka.length; i++) {\n      const alias = aka[i]\n      if (alias.startsWith('at://')) {\n        // strip off \"at://\" prefix\n        return alias.slice(5)\n      }\n    }\n  }\n  return undefined\n}\n\n// @NOTE we parse to type/publicKeyMultibase to avoid the dependency on @atproto/crypto\nexport const getSigningKey = (\n  doc: DidDocument,\n): { type: string; publicKeyMultibase: string } | undefined => {\n  return getVerificationMaterial(doc, 'atproto')\n}\n\nexport const getVerificationMaterial = (\n  doc: DidDocument,\n  keyId: string,\n): { type: string; publicKeyMultibase: string } | undefined => {\n  // /!\\ Hot path\n\n  const key = findItemById(doc, 'verificationMethod', `#${keyId}`)\n  if (!key) {\n    return undefined\n  }\n\n  if (!key.publicKeyMultibase) {\n    return undefined\n  }\n\n  return {\n    type: key.type,\n    publicKeyMultibase: key.publicKeyMultibase,\n  }\n}\n\nexport const getSigningDidKey = (doc: DidDocument): string | undefined => {\n  const parsed = getSigningKey(doc)\n  if (!parsed) return\n  return `did:key:${parsed.publicKeyMultibase}`\n}\n\nexport const getPdsEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#atproto_pds',\n    type: 'AtprotoPersonalDataServer',\n  })\n}\n\nexport const getFeedGenEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#bsky_fg',\n    type: 'BskyFeedGenerator',\n  })\n}\n\nexport const getNotifEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#bsky_notif',\n    type: 'BskyNotificationService',\n  })\n}\n\nexport const getServiceEndpoint = (\n  doc: DidDocument,\n  opts: { id: string; type?: string },\n) => {\n  // /!\\ Hot path\n\n  const service = findItemById(doc, 'service', opts.id)\n  if (!service) {\n    return undefined\n  }\n\n  if (opts.type && service.type !== opts.type) {\n    return undefined\n  }\n\n  if (typeof service.serviceEndpoint !== 'string') {\n    return undefined\n  }\n\n  return validateUrl(service.serviceEndpoint)\n}\n\nfunction findItemById<\n  D extends DidDocument,\n  T extends 'verificationMethod' | 'service',\n>(doc: D, type: T, id: string): NonNullable<D[T]>[number] | undefined\nfunction findItemById(\n  doc: DidDocument,\n  type: 'verificationMethod' | 'service',\n  id: string,\n) {\n  // /!\\ Hot path\n\n  const items = doc[type]\n  if (items) {\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i]\n      const itemId = item.id\n\n      if (\n        itemId[0] === '#'\n          ? itemId === id\n          : // Optimized version of: itemId === `${doc.id}${id}`\n            itemId.length === doc.id.length + id.length &&\n            itemId[doc.id.length] === '#' &&\n            itemId.endsWith(id) &&\n            itemId.startsWith(doc.id) // <== We could probably skip this check\n      ) {\n        return item\n      }\n    }\n  }\n  return undefined\n}\n\n// Check protocol and hostname to prevent potential SSRF\nconst validateUrl = (urlStr: string): string | undefined => {\n  if (!urlStr.startsWith('http://') && !urlStr.startsWith('https://')) {\n    return undefined\n  }\n\n  if (!canParseUrl(urlStr)) {\n    return undefined\n  }\n\n  return urlStr\n}\n\nconst canParseUrl =\n  URL.canParse ??\n  // URL.canParse is not available in Node.js < 18.17.0\n  ((urlStr: string): boolean => {\n    try {\n      new URL(urlStr)\n      return true\n    } catch {\n      return false\n    }\n  })\n\n// Types\n// --------\n\nconst verificationMethod = z.object({\n  id: z.string(),\n  type: z.string(),\n  controller: z.string(),\n  publicKeyMultibase: z.string().optional(),\n})\n\nconst service = z.object({\n  id: z.string(),\n  type: z.string(),\n  serviceEndpoint: z.union([z.string(), z.record(z.unknown())]),\n})\n\nexport const didDocument = z.object({\n  id: z.string(),\n  alsoKnownAs: z.array(z.string()).optional(),\n  verificationMethod: z.array(verificationMethod).optional(),\n  service: z.array(service).optional(),\n})\n\nexport type DidDocument = z.infer<typeof didDocument>\n", "export * as check from './check'\nexport * as util from './util'\n\nexport * from './arrays'\nexport * from './async'\nexport * from './util'\nexport * from './tid'\nexport * from './ipld'\nexport * from './retry'\nexport * from './types'\nexport * from './times'\nexport * from './strings'\nexport * from './did-doc'\n", "import { CID } from 'multiformats/cid'\nimport { z } from 'zod'\nimport { check, ipldToJson, schema } from '@atproto/common-web'\n\nexport const typedJsonBlobRef = z\n  .object({\n    $type: z.literal('blob'),\n    ref: schema.cid,\n    mimeType: z.string(),\n    size: z.number(),\n  })\n  .strict()\nexport type TypedJsonBlobRef = z.infer<typeof typedJsonBlobRef>\n\nexport const untypedJsonBlobRef = z\n  .object({\n    cid: z.string(),\n    mimeType: z.string(),\n  })\n  .strict()\nexport type UntypedJsonBlobRef = z.infer<typeof untypedJsonBlobRef>\n\nexport const jsonBlobRef = z.union([typedJsonBlobRef, untypedJsonBlobRef])\nexport type JsonBlobRef = z.infer<typeof jsonBlobRef>\n\nexport class BlobRef {\n  public original: JsonBlobRef\n\n  constructor(\n    public ref: CID,\n    public mimeType: string,\n    public size: number,\n    original?: JsonBlobRef,\n  ) {\n    this.original = original ?? {\n      $type: 'blob',\n      ref,\n      mimeType,\n      size,\n    }\n  }\n\n  static asBlobRef(obj: unknown): BlobRef | null {\n    if (check.is(obj, jsonBlobRef)) {\n      return BlobRef.fromJsonRef(obj)\n    }\n    return null\n  }\n\n  static fromJsonRef(json: JsonBlobRef): BlobRef {\n    if (check.is(json, typedJsonBlobRef)) {\n      return new BlobRef(json.ref, json.mimeType, json.size)\n    } else {\n      return new BlobRef(CID.parse(json.cid), json.mimeType, -1, json)\n    }\n  }\n\n  ipld(): TypedJsonBlobRef {\n    return {\n      $type: 'blob',\n      ref: this.ref,\n      mimeType: this.mimeType,\n      size: this.size,\n    }\n  }\n\n  toJSON() {\n    return ipldToJson(this.ipld())\n  }\n}\n", "import { BlobRef } from '../blob-refs'\nimport { Lexicons } from '../lexicons'\nimport { LexUserType, ValidationError, ValidationResult } from '../types'\n\nexport function blob(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  // check\n  if (!value || !(value instanceof BlobRef)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} should be a blob ref`),\n    }\n  }\n  return { success: true, value }\n}\n", "(()=>{\"use strict\";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},t={};function r(e,t){return void 0===t&&(t=\"-\"),new RegExp(\"^(?!0{4}\"+t+\"0{2}\"+t+\"0{2})((?=[0-9]{4}\"+t+\"(((0[^2])|1[0-2])|02(?=\"+t+\"(([0-1][0-9])|2[0-8])))\"+t+\"[0-9]{2})|(?=((([13579][26])|([2468][048])|(0[48]))0{2})|([0-9]{2}((((0|[2468])[48])|[2468][048])|([13579][26])))\"+t+\"02\"+t+\"29))([0-9]{4})\"+t+\"(?!((0[469])|11)\"+t+\"31)((0[1,3-9]|1[0-2])|(02(?!\"+t+\"3)))\"+t+\"(0[1-9]|[1-2][0-9]|3[0-1])$\").test(e)}function n(e){var t=/\\D/.exec(e);return t?t[0]:\"\"}function i(e,t,r){void 0===t&&(t=\":\"),void 0===r&&(r=!1);var i=new RegExp(\"^([0-1]|2(?=([0-3])|4\"+t+\"00))[0-9]\"+t+\"[0-5][0-9](\"+t+\"([0-5]|6(?=0))[0-9])?(.[0-9]{1,9})?$\");if(!r||!/[Z+\\-]/.test(e))return i.test(e);if(/Z$/.test(e))return i.test(e.replace(\"Z\",\"\"));var o=e.includes(\"+\"),a=e.split(/[+-]/),u=a[0],d=a[1];return i.test(u)&&function(e,t,r){return void 0===r&&(r=\":\"),new RegExp(t?\"^(0(?!(2\"+r+\"4)|0\"+r+\"3)|1(?=([0-1]|2(?=\"+r+\"[04])|[34](?=\"+r+\"0))))([03469](?=\"+r+\"[03])|[17](?=\"+r+\"0)|2(?=\"+r+\"[04])|5(?=\"+r+\"[034])|8(?=\"+r+\"[04]))\"+r+\"([03](?=0)|4(?=5))[05]$\":\"^(0(?=[^0])|1(?=[0-2]))([39](?=\"+r+\"[03])|[0-24-8](?=\"+r+\"00))\"+r+\"[03]0$\").test(e)}(d,o,n(d))}function o(e){var t=e.split(\"T\"),o=t[0],a=t[1],u=r(o,n(o));if(!a)return!1;var d,s=(d=a.match(/([^Z+\\-\\d])(?=\\d+\\1)/),Array.isArray(d)?d[0]:\"\");return u&&i(a,s,!0)}function a(e,t){return void 0===t&&(t=\"-\"),new RegExp(\"^[0-9]{4}\"+t+\"(0(?=[^0])|1(?=[0-2]))[0-9]$\").test(e)}e.r(t),e.d(t,{isValidDate:()=>r,isValidISODateString:()=>o,isValidTime:()=>i,isValidYearMonth:()=>a});var u=exports;for(var d in t)u[d]=t[d];t.__esModule&&Object.defineProperty(u,\"__esModule\",{value:!0})})();", "import { isValidISODateString } from 'iso-datestring-validator'\nimport { CID } from 'multiformats/cid'\nimport { validateLanguage } from '@atproto/common-web'\nimport {\n  ensureValidAtUri,\n  ensureValidDid,\n  ensureValidHandle,\n  ensureValidNsid,\n  ensureValidRecordKey,\n  isValidTid,\n} from '@atproto/syntax'\nimport { ValidationError, ValidationResult } from '../types'\n\nexport function datetime(path: string, value: string): ValidationResult {\n  try {\n    if (!isValidISODateString(value)) {\n      throw new Error()\n    }\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(\n        `${path} must be an valid atproto datetime (both RFC-3339 and ISO-8601)`,\n      ),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function uri(path: string, value: string): ValidationResult {\n  const isUri = value.match(/^\\w+:(?:\\/\\/)?[^\\s/][^\\s]*$/) !== null\n  if (!isUri) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a uri`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function atUri(path: string, value: string): ValidationResult {\n  try {\n    ensureValidAtUri(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid at-uri`),\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function did(path: string, value: string): ValidationResult {\n  try {\n    ensureValidDid(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid did`),\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function handle(path: string, value: string): ValidationResult {\n  try {\n    ensureValidHandle(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid handle`),\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function atIdentifier(path: string, value: string): ValidationResult {\n  // We can discriminate based on the \"did:\" prefix\n  if (value.startsWith('did:')) {\n    const didResult = did(path, value)\n    if (didResult.success) return didResult\n  } else {\n    const handleResult = handle(path, value)\n    if (handleResult.success) return handleResult\n  }\n\n  return {\n    success: false,\n    error: new ValidationError(`${path} must be a valid did or a handle`),\n  }\n}\n\nexport function nsid(path: string, value: string): ValidationResult {\n  try {\n    ensureValidNsid(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid nsid`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function cid(path: string, value: string): ValidationResult {\n  try {\n    CID.parse(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a cid string`),\n    }\n  }\n  return { success: true, value }\n}\n\n// The language format validates well-formed BCP 47 language tags: https://www.rfc-editor.org/info/bcp47\nexport function language(path: string, value: string): ValidationResult {\n  if (validateLanguage(value)) {\n    return { success: true, value }\n  }\n  return {\n    success: false,\n    error: new ValidationError(\n      `${path} must be a well-formed BCP 47 language tag`,\n    ),\n  }\n}\n\nexport function tid(path: string, value: string): ValidationResult {\n  if (isValidTid(value)) {\n    return { success: true, value }\n  }\n\n  return {\n    success: false,\n    error: new ValidationError(`${path} must be a valid TID`),\n  }\n}\n\nexport function recordKey(path: string, value: string): ValidationResult {\n  try {\n    ensureValidRecordKey(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid Record Key`),\n    }\n  }\n  return { success: true, value }\n}\n", "import { CID } from 'multiformats/cid'\nimport { graphemeLen, utf8Len } from '@atproto/common-web'\nimport { Lexicons } from '../lexicons'\nimport {\n  LexBoolean,\n  LexBytes,\n  LexInteger,\n  LexString,\n  LexUserType,\n  ValidationError,\n  ValidationResult,\n} from '../types'\nimport * as formats from './formats'\n\nexport function validate(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  switch (def.type) {\n    case 'boolean':\n      return boolean(lexicons, path, def, value)\n    case 'integer':\n      return integer(lexicons, path, def, value)\n    case 'string':\n      return string(lexicons, path, def, value)\n    case 'bytes':\n      return bytes(lexicons, path, def, value)\n    case 'cid-link':\n      return cidLink(lexicons, path, def, value)\n    case 'unknown':\n      return unknown(lexicons, path, def, value)\n    default:\n      return {\n        success: false,\n        error: new ValidationError(`Unexpected lexicon type: ${def.type}`),\n      }\n  }\n}\n\nfunction boolean(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexBoolean\n\n  // type\n  const type = typeof value\n  if (type === 'undefined') {\n    if (typeof def.default === 'boolean') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a boolean`),\n    }\n  } else if (type !== 'boolean') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a boolean`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'boolean') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nfunction integer(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexInteger\n\n  // type\n  const type = typeof value\n  if (type === 'undefined') {\n    if (typeof def.default === 'number') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an integer`),\n    }\n  } else if (!Number.isInteger(value)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an integer`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'number') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  // enum\n  if (Array.isArray(def.enum)) {\n    if (!def.enum.includes(value as number)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be one of (${def.enum.join('|')})`,\n        ),\n      }\n    }\n  }\n\n  // maximum\n  if (typeof def.maximum === 'number') {\n    if ((value as number) > def.maximum) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} can not be greater than ${def.maximum}`,\n        ),\n      }\n    }\n  }\n\n  // minimum\n  if (typeof def.minimum === 'number') {\n    if ((value as number) < def.minimum) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} can not be less than ${def.minimum}`,\n        ),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nfunction string(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexString\n\n  // type\n  if (typeof value === 'undefined') {\n    if (typeof def.default === 'string') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a string`),\n    }\n  } else if (typeof value !== 'string') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a string`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'string') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  // enum\n  if (Array.isArray(def.enum)) {\n    if (!def.enum.includes(value as string)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be one of (${def.enum.join('|')})`,\n        ),\n      }\n    }\n  }\n\n  // maxLength and minLength\n  if (typeof def.minLength === 'number' || typeof def.maxLength === 'number') {\n    // If the JavaScript string length * 3 is below the maximum limit,\n    // its UTF8 length (which <= .length * 3) will also be below.\n    if (typeof def.minLength === 'number' && value.length * 3 < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be shorter than ${def.minLength} characters`,\n        ),\n      }\n    }\n\n    // If the JavaScript string length * 3 is within the maximum limit,\n    // its UTF8 length (which <= .length * 3) will also be within.\n    // When there's no minimal length, this lets us skip the UTF8 length check.\n    let canSkipUtf8LenChecks = false\n    if (\n      typeof def.minLength === 'undefined' &&\n      typeof def.maxLength === 'number' &&\n      value.length * 3 <= def.maxLength\n    ) {\n      canSkipUtf8LenChecks = true\n    }\n\n    if (!canSkipUtf8LenChecks) {\n      const len = utf8Len(value)\n\n      if (typeof def.maxLength === 'number') {\n        if (len > def.maxLength) {\n          return {\n            success: false,\n            error: new ValidationError(\n              `${path} must not be longer than ${def.maxLength} characters`,\n            ),\n          }\n        }\n      }\n\n      if (typeof def.minLength === 'number') {\n        if (len < def.minLength) {\n          return {\n            success: false,\n            error: new ValidationError(\n              `${path} must not be shorter than ${def.minLength} characters`,\n            ),\n          }\n        }\n      }\n    }\n  }\n\n  // maxGraphemes and minGraphemes\n  if (\n    typeof def.maxGraphemes === 'number' ||\n    typeof def.minGraphemes === 'number'\n  ) {\n    let needsMaxGraphemesCheck = false\n    let needsMinGraphemesCheck = false\n\n    if (typeof def.maxGraphemes === 'number') {\n      if (value.length <= def.maxGraphemes) {\n        // If the JavaScript string length (UTF-16) is within the maximum limit,\n        // its grapheme length (which <= .length) will also be within.\n        needsMaxGraphemesCheck = false\n      } else {\n        needsMaxGraphemesCheck = true\n      }\n    }\n\n    if (typeof def.minGraphemes === 'number') {\n      if (value.length < def.minGraphemes) {\n        // If the JavaScript string length (UTF-16) is below the minimal limit,\n        // its grapheme length (which <= .length) will also be below.\n        // Fail early.\n        return {\n          success: false,\n          error: new ValidationError(\n            `${path} must not be shorter than ${def.minGraphemes} graphemes`,\n          ),\n        }\n      } else {\n        needsMinGraphemesCheck = true\n      }\n    }\n\n    if (needsMaxGraphemesCheck || needsMinGraphemesCheck) {\n      const len = graphemeLen(value)\n\n      if (typeof def.maxGraphemes === 'number') {\n        if (len > def.maxGraphemes) {\n          return {\n            success: false,\n            error: new ValidationError(\n              `${path} must not be longer than ${def.maxGraphemes} graphemes`,\n            ),\n          }\n        }\n      }\n\n      if (typeof def.minGraphemes === 'number') {\n        if (len < def.minGraphemes) {\n          return {\n            success: false,\n            error: new ValidationError(\n              `${path} must not be shorter than ${def.minGraphemes} graphemes`,\n            ),\n          }\n        }\n      }\n    }\n  }\n\n  if (typeof def.format === 'string') {\n    switch (def.format) {\n      case 'datetime':\n        return formats.datetime(path, value)\n      case 'uri':\n        return formats.uri(path, value)\n      case 'at-uri':\n        return formats.atUri(path, value)\n      case 'did':\n        return formats.did(path, value)\n      case 'handle':\n        return formats.handle(path, value)\n      case 'at-identifier':\n        return formats.atIdentifier(path, value)\n      case 'nsid':\n        return formats.nsid(path, value)\n      case 'cid':\n        return formats.cid(path, value)\n      case 'language':\n        return formats.language(path, value)\n      case 'tid':\n        return formats.tid(path, value)\n      case 'record-key':\n        return formats.recordKey(path, value)\n    }\n  }\n\n  return { success: true, value }\n}\n\nfunction bytes(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexBytes\n\n  if (!value || !(value instanceof Uint8Array)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a byte array`),\n    }\n  }\n\n  // maxLength\n  if (typeof def.maxLength === 'number') {\n    if (value.byteLength > def.maxLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be larger than ${def.maxLength} bytes`,\n        ),\n      }\n    }\n  }\n\n  // minLength\n  if (typeof def.minLength === 'number') {\n    if (value.byteLength < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be smaller than ${def.minLength} bytes`,\n        ),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nfunction cidLink(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  if (CID.asCID(value) === null) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a CID`),\n    }\n  }\n\n  return { success: true, value }\n}\n\nfunction unknown(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  // type\n  if (!value || typeof value !== 'object') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an object`),\n    }\n  }\n\n  return { success: true, value }\n}\n", "import { Lexicons } from '../lexicons'\nimport {\n  LexArray,\n  LexRefVariant,\n  LexUserType,\n  ValidationError,\n  ValidationResult,\n  isDiscriminatedObject,\n  isObj,\n} from '../types'\nimport { toLexUri } from '../util'\nimport { blob } from './blob'\nimport { validate as validatePrimitive } from './primitives'\n\nexport function validate(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  switch (def.type) {\n    case 'object':\n      return object(lexicons, path, def, value)\n    case 'array':\n      return array(lexicons, path, def, value)\n    case 'blob':\n      return blob(lexicons, path, def, value)\n    default:\n      return validatePrimitive(lexicons, path, def, value)\n  }\n}\n\nexport function array(\n  lexicons: Lexicons,\n  path: string,\n  def: LexArray,\n  value: unknown,\n): ValidationResult {\n  // type\n  if (!Array.isArray(value)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an array`),\n    }\n  }\n\n  // maxLength\n  if (typeof def.maxLength === 'number') {\n    if ((value as Array<unknown>).length > def.maxLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not have more than ${def.maxLength} elements`,\n        ),\n      }\n    }\n  }\n\n  // minLength\n  if (typeof def.minLength === 'number') {\n    if ((value as Array<unknown>).length < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not have fewer than ${def.minLength} elements`,\n        ),\n      }\n    }\n  }\n\n  // items\n  const itemsDef = def.items\n  for (let i = 0; i < (value as Array<unknown>).length; i++) {\n    const itemValue = value[i]\n    const itemPath = `${path}/${i}`\n    const res = validateOneOf(lexicons, itemPath, itemsDef, itemValue)\n    if (!res.success) {\n      return res\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function object(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  // type\n  if (!isObj(value)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an object`),\n    }\n  }\n\n  // properties\n  let resultValue = value\n  if ('properties' in def && def.properties != null) {\n    for (const key in def.properties) {\n      const keyValue = value[key]\n      if (keyValue === null && def.nullable?.includes(key)) {\n        continue\n      }\n      const propDef = def.properties[key]\n      if (keyValue === undefined && !def.required?.includes(key)) {\n        // Fast path for non-required undefined props.\n        if (\n          propDef.type === 'integer' ||\n          propDef.type === 'boolean' ||\n          propDef.type === 'string'\n        ) {\n          if (propDef.default === undefined) {\n            continue\n          }\n        } else {\n          // Other types have no defaults.\n          continue\n        }\n      }\n      const propPath = `${path}/${key}`\n      const validated = validateOneOf(lexicons, propPath, propDef, keyValue)\n      const propValue = validated.success ? validated.value : keyValue\n\n      // Return error for bad validation, giving required rule precedence\n      if (propValue === undefined) {\n        if (def.required?.includes(key)) {\n          return {\n            success: false,\n            error: new ValidationError(\n              `${path} must have the property \"${key}\"`,\n            ),\n          }\n        }\n      } else {\n        if (!validated.success) {\n          return validated\n        }\n      }\n\n      // Adjust value based on e.g. applied defaults, cloning shallowly if there was a changed value\n      if (propValue !== keyValue) {\n        if (resultValue === value) {\n          // Lazy shallow clone\n          resultValue = { ...value }\n        }\n        resultValue[key] = propValue\n      }\n    }\n  }\n\n  return { success: true, value: resultValue }\n}\n\nexport function validateOneOf(\n  lexicons: Lexicons,\n  path: string,\n  def: LexRefVariant | LexUserType,\n  value: unknown,\n  mustBeObj = false, // this is the only type constraint we need currently (used by xrpc body schema validators)\n): ValidationResult {\n  let concreteDef: LexUserType\n\n  if (def.type === 'union') {\n    if (!isDiscriminatedObject(value)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be an object which includes the \"$type\" property`,\n        ),\n      }\n    }\n    if (!refsContainType(def.refs, value.$type)) {\n      if (def.closed) {\n        return {\n          success: false,\n          error: new ValidationError(\n            `${path} $type must be one of ${def.refs.join(', ')}`,\n          ),\n        }\n      }\n      return { success: true, value }\n    } else {\n      concreteDef = lexicons.getDefOrThrow(value.$type)\n    }\n  } else if (def.type === 'ref') {\n    concreteDef = lexicons.getDefOrThrow(def.ref)\n  } else {\n    concreteDef = def\n  }\n\n  return mustBeObj\n    ? object(lexicons, path, concreteDef, value)\n    : validate(lexicons, path, concreteDef, value)\n}\n\n// to avoid bugs like #0189 this needs to handle both\n// explicit and implicit #main\nconst refsContainType = (refs: string[], type: string) => {\n  const lexUri = toLexUri(type)\n  if (refs.includes(lexUri)) {\n    return true\n  }\n\n  if (lexUri.endsWith('#main')) {\n    return refs.includes(lexUri.slice(0, -5))\n  } else {\n    return !lexUri.includes('#') && refs.includes(`${lexUri}#main`)\n  }\n}\n", "import { Lexicons } from '../lexicons'\nimport { LexXrpcParameters, ValidationError, ValidationResult } from '../types'\nimport { array } from './complex'\nimport * as PrimitiveValidators from './primitives'\n\nexport function params(\n  lexicons: Lexicons,\n  path: string,\n  def: LexXrpcParameters,\n  val: unknown,\n): ValidationResult {\n  // type\n  const value = val && typeof val === 'object' ? val : {}\n\n  const requiredProps = new Set(def.required ?? [])\n\n  // properties\n  let resultValue = value\n  if (typeof def.properties === 'object') {\n    for (const key in def.properties) {\n      const propDef = def.properties[key]\n      const validated =\n        propDef.type === 'array'\n          ? array(lexicons, key, propDef, value[key])\n          : PrimitiveValidators.validate(lexicons, key, propDef, value[key])\n      const propValue = validated.success ? validated.value : value[key]\n      const propIsUndefined = typeof propValue === 'undefined'\n      // Return error for bad validation, giving required rule precedence\n      if (propIsUndefined && requiredProps.has(key)) {\n        return {\n          success: false,\n          error: new ValidationError(`${path} must have the property \"${key}\"`),\n        }\n      } else if (!propIsUndefined && !validated.success) {\n        return validated\n      }\n      // Adjust value based on e.g. applied defaults, cloning shallowly if there was a changed value\n      if (propValue !== value[key]) {\n        if (resultValue === value) {\n          // Lazy shallow clone\n          resultValue = { ...value }\n        }\n        resultValue[key] = propValue\n      }\n    }\n  }\n\n  return { success: true, value: resultValue }\n}\n", "import { Lexicons } from './lexicons'\nimport {\n  LexRecord,\n  LexRefVariant,\n  LexUserType,\n  LexXrpcProcedure,\n  LexXrpcQuery,\n  LexXrpcSubscription,\n} from './types'\nimport { object, validateOneOf } from './validators/complex'\nimport { params } from './validators/xrpc'\n\nexport function assertValidRecord(\n  lexicons: Lexicons,\n  def: LexRecord,\n  value: unknown,\n) {\n  const res = object(lexicons, 'Record', def.record, value)\n  if (!res.success) throw res.error\n  return res.value\n}\n\nexport function assertValidXrpcParams(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure | LexXrpcQuery | LexXrpcSubscription,\n  value: unknown,\n) {\n  if (def.parameters) {\n    const res = params(lexicons, 'Params', def.parameters, value)\n    if (!res.success) throw res.error\n    return res.value\n  }\n}\n\nexport function assertValidXrpcInput(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure,\n  value: unknown,\n) {\n  if (def.input?.schema) {\n    // loop: all input schema definitions\n    return assertValidOneOf(lexicons, 'Input', def.input.schema, value, true)\n  }\n}\n\nexport function assertValidXrpcOutput(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure | LexXrpcQuery,\n  value: unknown,\n) {\n  if (def.output?.schema) {\n    // loop: all output schema definitions\n    return assertValidOneOf(lexicons, 'Output', def.output.schema, value, true)\n  }\n}\n\nexport function assertValidXrpcMessage(\n  lexicons: Lexicons,\n  def: LexXrpcSubscription,\n  value: unknown,\n) {\n  if (def.message?.schema) {\n    // loop: all output schema definitions\n    return assertValidOneOf(\n      lexicons,\n      'Message',\n      def.message.schema,\n      value,\n      true,\n    )\n  }\n}\n\nfunction assertValidOneOf(\n  lexicons: Lexicons,\n  path: string,\n  def: LexRefVariant | LexUserType,\n  value: unknown,\n  mustBeObj = false,\n) {\n  const res = validateOneOf(lexicons, path, def, value, mustBeObj)\n  if (!res.success) throw res.error\n  return res.value\n}\n", "import {\n  InvalidLexiconError,\n  LexRecord,\n  LexUserType,\n  LexiconDefNotFoundError,\n  LexiconDoc,\n  ValidationError,\n  ValidationResult,\n  isObj,\n} from './types'\nimport { toLexUri } from './util'\nimport {\n  assertValidRecord,\n  assertValidXrpcInput,\n  assertValidXrpcMessage,\n  assertValidXrpcOutput,\n  assertValidXrpcParams,\n} from './validation'\nimport { object as validateObject } from './validators/complex'\n\n/**\n * A collection of compiled lexicons.\n */\nexport class Lexicons implements Iterable<LexiconDoc> {\n  docs: Map<string, LexiconDoc> = new Map()\n  defs: Map<string, LexUserType> = new Map()\n\n  constructor(docs?: Iterable<LexiconDoc>) {\n    if (docs) {\n      for (const doc of docs) {\n        this.add(doc)\n      }\n    }\n  }\n\n  /**\n   * @example clone a lexicon:\n   * ```ts\n   * const clone = new Lexicons(originalLexicon)\n   * ```\n   *\n   * @example get docs array:\n   * ```ts\n   * const docs = Array.from(lexicons)\n   * ```\n   */\n  [Symbol.iterator](): Iterator<LexiconDoc> {\n    return this.docs.values()\n  }\n\n  /**\n   * Add a lexicon doc.\n   */\n  add(doc: LexiconDoc): void {\n    const uri = toLexUri(doc.id)\n    if (this.docs.has(uri)) {\n      throw new Error(`${uri} has already been registered`)\n    }\n\n    // WARNING\n    // mutates the object\n    // -prf\n    resolveRefUris(doc, uri)\n\n    this.docs.set(uri, doc)\n    for (const [defUri, def] of iterDefs(doc)) {\n      this.defs.set(defUri, def)\n    }\n  }\n\n  /**\n   * Remove a lexicon doc.\n   */\n  remove(uri: string) {\n    uri = toLexUri(uri)\n    const doc = this.docs.get(uri)\n    if (!doc) {\n      throw new Error(`Unable to remove \"${uri}\": does not exist`)\n    }\n    for (const [defUri, _def] of iterDefs(doc)) {\n      this.defs.delete(defUri)\n    }\n    this.docs.delete(uri)\n  }\n\n  /**\n   * Get a lexicon doc.\n   */\n  get(uri: string): LexiconDoc | undefined {\n    uri = toLexUri(uri)\n    return this.docs.get(uri)\n  }\n\n  /**\n   * Get a definition.\n   */\n  getDef(uri: string): LexUserType | undefined {\n    uri = toLexUri(uri)\n    return this.defs.get(uri)\n  }\n\n  /**\n   * Get a def, throw if not found. Throws on not found.\n   */\n  getDefOrThrow<T extends LexUserType['type'] = LexUserType['type']>(\n    uri: string,\n    types?: readonly T[],\n  ): Extract<LexUserType, { type: T }>\n  getDefOrThrow(\n    uri: string,\n    types?: readonly LexUserType['type'][],\n  ): LexUserType {\n    const def = this.getDef(uri)\n    if (!def) {\n      throw new LexiconDefNotFoundError(`Lexicon not found: ${uri}`)\n    }\n    if (types && !types.includes(def.type)) {\n      throw new InvalidLexiconError(\n        `Not a ${types.join(' or ')} lexicon: ${uri}`,\n      )\n    }\n    return def\n  }\n\n  /**\n   * Validate a record or object.\n   */\n  validate(lexUri: string, value: unknown): ValidationResult {\n    if (!isObj(value)) {\n      throw new ValidationError(`Value must be an object`)\n    }\n\n    const lexUriNormalized = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUriNormalized, ['record', 'object'])\n\n    if (def.type === 'record') {\n      return validateObject(this, 'Record', def.record, value)\n    } else if (def.type === 'object') {\n      return validateObject(this, 'Object', def, value)\n    } else {\n      // shouldn't happen\n      throw new InvalidLexiconError('Definition must be a record or object')\n    }\n  }\n\n  /**\n   * Validate a record and throw on any error.\n   */\n  assertValidRecord(lexUri: string, value: unknown) {\n    if (!isObj(value)) {\n      throw new ValidationError(`Record must be an object`)\n    }\n    if (!('$type' in value)) {\n      throw new ValidationError(`Record/$type must be a string`)\n    }\n    const { $type } = value\n    if (typeof $type !== 'string') {\n      throw new ValidationError(`Record/$type must be a string`)\n    }\n\n    const lexUriNormalized = toLexUri(lexUri)\n    if (toLexUri($type) !== lexUriNormalized) {\n      throw new ValidationError(\n        `Invalid $type: must be ${lexUriNormalized}, got ${$type}`,\n      )\n    }\n\n    const def = this.getDefOrThrow(lexUriNormalized, ['record'])\n    return assertValidRecord(this, def as LexRecord, value)\n  }\n\n  /**\n   * Validate xrpc query params and throw on any error.\n   */\n  assertValidXrpcParams(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, [\n      'query',\n      'procedure',\n      'subscription',\n    ])\n    return assertValidXrpcParams(this, def, value)\n  }\n\n  /**\n   * Validate xrpc input body and throw on any error.\n   */\n  assertValidXrpcInput(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['procedure'])\n    return assertValidXrpcInput(this, def, value)\n  }\n\n  /**\n   * Validate xrpc output body and throw on any error.\n   */\n  assertValidXrpcOutput(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['query', 'procedure'])\n    return assertValidXrpcOutput(this, def, value)\n  }\n\n  /**\n   * Validate xrpc subscription message and throw on any error.\n   */\n  assertValidXrpcMessage<T = unknown>(lexUri: string, value: unknown): T {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['subscription'])\n    return assertValidXrpcMessage(this, def, value) as T\n  }\n\n  /**\n   * Resolve a lex uri given a ref\n   */\n  resolveLexUri(lexUri: string, ref: string) {\n    lexUri = toLexUri(lexUri)\n    return toLexUri(ref, lexUri)\n  }\n}\n\nfunction* iterDefs(doc: LexiconDoc): Generator<[string, LexUserType]> {\n  for (const defId in doc.defs) {\n    yield [`lex:${doc.id}#${defId}`, doc.defs[defId]]\n    if (defId === 'main') {\n      yield [`lex:${doc.id}`, doc.defs[defId]]\n    }\n  }\n}\n\n// WARNING\n// this method mutates objects\n// -prf\nfunction resolveRefUris(obj: any, baseUri: string): any {\n  for (const k in obj) {\n    if (obj.type === 'ref') {\n      obj.ref = toLexUri(obj.ref, baseUri)\n    } else if (obj.type === 'union') {\n      obj.refs = obj.refs.map((ref) => toLexUri(ref, baseUri))\n    } else if (Array.isArray(obj[k])) {\n      obj[k] = obj[k].map((item: any) => {\n        if (typeof item === 'string') {\n          return item.startsWith('#') ? toLexUri(item, baseUri) : item\n        } else if (item && typeof item === 'object') {\n          return resolveRefUris(item, baseUri)\n        }\n        return item\n      })\n    } else if (obj[k] && typeof obj[k] === 'object') {\n      obj[k] = resolveRefUris(obj[k], baseUri)\n    }\n  }\n  return obj\n}\n", "import { CID } from 'multiformats/cid'\nimport {\n  IpldValue,\n  JsonValue,\n  check,\n  ipldToJson,\n  jsonToIpld,\n} from '@atproto/common-web'\nimport { BlobRef, jsonBlobRef } from './blob-refs'\n\nexport type LexValue =\n  | IpldValue\n  | BlobRef\n  | Array<LexValue>\n  | { [key: string]: LexValue }\n\nexport type RepoRecord = Record<string, LexValue>\n\n// @NOTE avoiding use of check.is() here only because it makes\n// these implementations slow, and they often live in hot paths.\n\nexport const lexToIpld = (val: LexValue): IpldValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => lexToIpld(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert blobs, leaving the original encoding so that we don't change CIDs on re-encode\n    if (val instanceof BlobRef) {\n      return val.original\n    }\n    // retain cids & bytes\n    if (CID.asCID(val) || val instanceof Uint8Array) {\n      return val\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = lexToIpld(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const ipldToLex = (val: IpldValue): LexValue => {\n  // map arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => ipldToLex(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert blobs, using hints to avoid expensive is() check\n    if (\n      (val['$type'] === 'blob' ||\n        (typeof val['cid'] === 'string' &&\n          typeof val['mimeType'] === 'string')) &&\n      check.is(val, jsonBlobRef)\n    ) {\n      return BlobRef.fromJsonRef(val)\n    }\n    // retain cids, bytes\n    if (CID.asCID(val) || val instanceof Uint8Array) {\n      return val\n    }\n    // map plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = ipldToLex(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const lexToJson = (val: LexValue): JsonValue => {\n  return ipldToJson(lexToIpld(val))\n}\n\nexport const stringifyLex = (val: LexValue): string => {\n  return JSON.stringify(lexToJson(val))\n}\n\nexport const jsonToLex = (val: JsonValue): LexValue => {\n  return ipldToLex(jsonToIpld(val))\n}\n\nexport const jsonStringToLex = (val: string): LexValue => {\n  return jsonToLex(JSON.parse(val))\n}\n", "export * from './types'\nexport * from './lexicons'\nexport * from './blob-refs'\nexport * from './serialize'\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\n\nimport { ValidationResult } from '@atproto/lexicon'\n\nexport type OmitKey<T, K extends keyof T> = {\n  [K2 in keyof T as K2 extends K ? never : K2]: T[K2]\n}\n\nexport type $Typed<V, T extends string = string> = V & { $type: T }\nexport type Un$Typed<V extends { $type?: string }> = OmitKey<V, '$type'>\n\nexport type $Type<Id extends string, Hash extends string> = Hash extends 'main'\n  ? Id\n  : `${Id}#${Hash}`\n\nfunction isObject<V>(v: V): v is V & object {\n  return v != null && typeof v === 'object'\n}\n\nfunction is$type<Id extends string, Hash extends string>(\n  $type: unknown,\n  id: Id,\n  hash: Hash,\n): $type is $Type<Id, Hash> {\n  return hash === 'main'\n    ? $type === id\n    : // $type === `${id}#${hash}`\n      typeof $type === 'string' &&\n        $type.length === id.length + 1 + hash.length &&\n        $type.charCodeAt(id.length) === 35 /* '#' */ &&\n        $type.startsWith(id) &&\n        $type.endsWith(hash)\n}\n\nexport type $TypedObject<\n  V,\n  Id extends string,\n  Hash extends string,\n> = V extends {\n  $type: $Type<Id, Hash>\n}\n  ? V\n  : V extends { $type?: string }\n    ? V extends { $type?: infer T extends $Type<Id, Hash> }\n      ? V & { $type: T }\n      : never\n    : V & { $type: $Type<Id, Hash> }\n\nexport function is$typed<V, Id extends string, Hash extends string>(\n  v: V,\n  id: Id,\n  hash: Hash,\n): v is $TypedObject<V, Id, Hash> {\n  return isObject(v) && '$type' in v && is$type(v.$type, id, hash)\n}\n\nexport function maybe$typed<V, Id extends string, Hash extends string>(\n  v: V,\n  id: Id,\n  hash: Hash,\n): v is V & object & { $type?: $Type<Id, Hash> } {\n  return (\n    isObject(v) &&\n    ('$type' in v ? v.$type === undefined || is$type(v.$type, id, hash) : true)\n  )\n}\n\nexport type Validator<R = unknown> = (v: unknown) => ValidationResult<R>\nexport type ValidatorParam<V extends Validator> =\n  V extends Validator<infer R> ? R : never\n\n/**\n * Utility function that allows to convert a \"validate*\" utility function into a\n * type predicate.\n */\nexport function asPredicate<V extends Validator>(validate: V) {\n  return function <T>(v: T): v is T & ValidatorParam<V> {\n    return validate(v).success\n  }\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport {\n  LexiconDoc,\n  Lexicons,\n  ValidationError,\n  ValidationResult,\n} from '@atproto/lexicon'\nimport { $Typed, is$typed, maybe$typed } from './util.js'\n\nexport const schemaDict = {\n  ComAtprotoAdminDefs: {\n    lexicon: 1,\n    id: 'com.atproto.admin.defs',\n    defs: {\n      statusAttr: {\n        type: 'object',\n        required: ['applied'],\n        properties: {\n          applied: {\n            type: 'boolean',\n          },\n          ref: {\n            type: 'string',\n          },\n        },\n      },\n      accountView: {\n        type: 'object',\n        required: ['did', 'handle', 'indexedAt'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invites: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCode',\n            },\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          emailConfirmedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n          deactivatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          threatSignatures: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#threatSignature',\n            },\n          },\n        },\n      },\n      repoRef: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      repoBlobRef: {\n        type: 'object',\n        required: ['did', 'cid'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          recordUri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      threatSignature: {\n        type: 'object',\n        required: ['property', 'value'],\n        properties: {\n          property: {\n            type: 'string',\n          },\n          value: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDeleteAccount: {\n    lexicon: 1,\n    id: 'com.atproto.admin.deleteAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete a user account as an administrator.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDisableAccountInvites: {\n    lexicon: 1,\n    id: 'com.atproto.admin.disableAccountInvites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Disable an account from receiving new invite codes, but does not invalidate existing codes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'did',\n              },\n              note: {\n                type: 'string',\n                description: 'Optional reason for disabled invites.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDisableInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.admin.disableInviteCodes',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Disable some set of codes and/or all codes associated with a set of users.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              accounts: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminEnableAccountInvites: {\n    lexicon: 1,\n    id: 'com.atproto.admin.enableAccountInvites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Re-enable an account's ability to receive invite codes.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'did',\n              },\n              note: {\n                type: 'string',\n                description: 'Optional reason for enabled invites.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetAccountInfo: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getAccountInfo',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about an account.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#accountView',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetAccountInfos: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getAccountInfos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about some accounts.',\n        parameters: {\n          type: 'params',\n          required: ['dids'],\n          properties: {\n            dids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['infos'],\n            properties: {\n              infos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#accountView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getInviteCodes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get an admin view of invite codes.',\n        parameters: {\n          type: 'params',\n          properties: {\n            sort: {\n              type: 'string',\n              knownValues: ['recent', 'usage'],\n              default: 'recent',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 500,\n              default: 100,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.defs#inviteCode',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetSubjectStatus: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getSubjectStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get the service-specific admin status of a subject (account, record, or blob).',\n        parameters: {\n          type: 'params',\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            blob: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n              deactivated: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminSearchAccounts: {\n    lexicon: 1,\n    id: 'com.atproto.admin.searchAccounts',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get list of accounts that matches your search query.',\n        parameters: {\n          type: 'params',\n          properties: {\n            email: {\n              type: 'string',\n            },\n            cursor: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accounts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              accounts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#accountView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminSendEmail: {\n    lexicon: 1,\n    id: 'com.atproto.admin.sendEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Send email to a user's account email address.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['recipientDid', 'content', 'senderDid'],\n            properties: {\n              recipientDid: {\n                type: 'string',\n                format: 'did',\n              },\n              content: {\n                type: 'string',\n              },\n              subject: {\n                type: 'string',\n              },\n              senderDid: {\n                type: 'string',\n                format: 'did',\n              },\n              comment: {\n                type: 'string',\n                description:\n                  \"Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers\",\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['sent'],\n            properties: {\n              sent: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountEmail: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Administrative action to update an account's email.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account', 'email'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              email: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountHandle: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Administrative action to update an account's handle.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'handle'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountPassword: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Update the password for a user account as an administrator.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'password'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              password: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateSubjectStatus: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateSubjectStatus',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Update the service-specific admin status of a subject (account, record, or blob).',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n              deactivated: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityGetRecommendedDidCredentials: {\n    lexicon: 1,\n    id: 'com.atproto.identity.getRecommendedDidCredentials',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Describe the credentials that should be included in the DID doc of an account that is migrating to this service.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              rotationKeys: {\n                description:\n                  'Recommended rotation keys for PLC dids. Should be undefined (or ignored) for did:webs.',\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              alsoKnownAs: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              verificationMethods: {\n                type: 'unknown',\n              },\n              services: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityRequestPlcOperationSignature: {\n    lexicon: 1,\n    id: 'com.atproto.identity.requestPlcOperationSignature',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request an email with a code to in order to request a signed PLC operation. Requires Auth.',\n      },\n    },\n  },\n  ComAtprotoIdentityResolveHandle: {\n    lexicon: 1,\n    id: 'com.atproto.identity.resolveHandle',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Resolves a handle (domain name) to a DID.',\n        parameters: {\n          type: 'params',\n          required: ['handle'],\n          properties: {\n            handle: {\n              type: 'string',\n              format: 'handle',\n              description: 'The handle to resolve.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentitySignPlcOperation: {\n    lexicon: 1,\n    id: 'com.atproto.identity.signPlcOperation',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Signs a PLC operation to update some value(s) in the requesting DID's document.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              token: {\n                description:\n                  'A token received through com.atproto.identity.requestPlcOperationSignature',\n                type: 'string',\n              },\n              rotationKeys: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              alsoKnownAs: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              verificationMethods: {\n                type: 'unknown',\n              },\n              services: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['operation'],\n            properties: {\n              operation: {\n                type: 'unknown',\n                description: 'A signed DID PLC operation.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentitySubmitPlcOperation: {\n    lexicon: 1,\n    id: 'com.atproto.identity.submitPlcOperation',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Validates a PLC operation to ensure that it doesn't violate a service's constraints or get the identity into a bad state, then submits it to the PLC registry\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['operation'],\n            properties: {\n              operation: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityUpdateHandle: {\n    lexicon: 1,\n    id: 'com.atproto.identity.updateHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Updates the current account's handle. Verifies handle validity, and updates did:plc document if necessary. Implemented by PDS, and requires auth.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n                description: 'The new handle.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelDefs: {\n    lexicon: 1,\n    id: 'com.atproto.label.defs',\n    defs: {\n      label: {\n        type: 'object',\n        description:\n          'Metadata tag on an atproto resource (eg, repo or record).',\n        required: ['src', 'uri', 'val', 'cts'],\n        properties: {\n          ver: {\n            type: 'integer',\n            description: 'The AT Protocol version of the label object.',\n          },\n          src: {\n            type: 'string',\n            format: 'did',\n            description: 'DID of the actor who created this label.',\n          },\n          uri: {\n            type: 'string',\n            format: 'uri',\n            description:\n              'AT URI of the record, repository (account), or other resource that this label applies to.',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n            description:\n              \"Optionally, CID specifying the specific version of 'uri' resource this label applies to.\",\n          },\n          val: {\n            type: 'string',\n            maxLength: 128,\n            description:\n              'The short string name of the value or type of this label.',\n          },\n          neg: {\n            type: 'boolean',\n            description:\n              'If true, this is a negation label, overwriting a previous label.',\n          },\n          cts: {\n            type: 'string',\n            format: 'datetime',\n            description: 'Timestamp when this label was created.',\n          },\n          exp: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp at which this label expires (no longer applies).',\n          },\n          sig: {\n            type: 'bytes',\n            description: 'Signature of dag-cbor encoded label.',\n          },\n        },\n      },\n      selfLabels: {\n        type: 'object',\n        description:\n          'Metadata tags on an atproto record, published by the author within the record.',\n        required: ['values'],\n        properties: {\n          values: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#selfLabel',\n            },\n            maxLength: 10,\n          },\n        },\n      },\n      selfLabel: {\n        type: 'object',\n        description:\n          'Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel.',\n        required: ['val'],\n        properties: {\n          val: {\n            type: 'string',\n            maxLength: 128,\n            description:\n              'The short string name of the value or type of this label.',\n          },\n        },\n      },\n      labelValueDefinition: {\n        type: 'object',\n        description:\n          'Declares a label value and its expected interpretations and behaviors.',\n        required: ['identifier', 'severity', 'blurs', 'locales'],\n        properties: {\n          identifier: {\n            type: 'string',\n            description:\n              \"The value of the label being defined. Must only include lowercase ascii and the '-' character ([a-z-]+).\",\n            maxLength: 100,\n            maxGraphemes: 100,\n          },\n          severity: {\n            type: 'string',\n            description:\n              \"How should a client visually convey this label? 'inform' means neutral and informational; 'alert' means negative and warning; 'none' means show nothing.\",\n            knownValues: ['inform', 'alert', 'none'],\n          },\n          blurs: {\n            type: 'string',\n            description:\n              \"What should this label hide in the UI, if applied? 'content' hides all of the target; 'media' hides the images/video/audio; 'none' hides nothing.\",\n            knownValues: ['content', 'media', 'none'],\n          },\n          defaultSetting: {\n            type: 'string',\n            description: 'The default setting for this label.',\n            knownValues: ['ignore', 'warn', 'hide'],\n            default: 'warn',\n          },\n          adultOnly: {\n            type: 'boolean',\n            description:\n              'Does the user need to have adult content enabled in order to configure this label?',\n          },\n          locales: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#labelValueDefinitionStrings',\n            },\n          },\n        },\n      },\n      labelValueDefinitionStrings: {\n        type: 'object',\n        description:\n          'Strings which describe the label in the UI, localized into a specific language.',\n        required: ['lang', 'name', 'description'],\n        properties: {\n          lang: {\n            type: 'string',\n            description:\n              'The code of the language these strings are written in.',\n            format: 'language',\n          },\n          name: {\n            type: 'string',\n            description: 'A short human-readable name for the label.',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            description:\n              'A longer description of what the label means and why it might be applied.',\n            maxGraphemes: 10000,\n            maxLength: 100000,\n          },\n        },\n      },\n      labelValue: {\n        type: 'string',\n        knownValues: [\n          '!hide',\n          '!no-promote',\n          '!warn',\n          '!no-unauthenticated',\n          'dmca-violation',\n          'doxxing',\n          'porn',\n          'sexual',\n          'nudity',\n          'nsfl',\n          'gore',\n        ],\n      },\n    },\n  },\n  ComAtprotoLabelQueryLabels: {\n    lexicon: 1,\n    id: 'com.atproto.label.queryLabels',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find labels relevant to the provided AT-URI patterns. Public endpoint for moderation services, though may return different or additional results with auth.',\n        parameters: {\n          type: 'params',\n          required: ['uriPatterns'],\n          properties: {\n            uriPatterns: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                \"List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI.\",\n            },\n            sources: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n              description:\n                'Optional list of label sources (DIDs) to filter on.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 250,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['labels'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              labels: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.label.defs#label',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelSubscribeLabels: {\n    lexicon: 1,\n    id: 'com.atproto.label.subscribeLabels',\n    defs: {\n      main: {\n        type: 'subscription',\n        description:\n          'Subscribe to stream of labels (and negations). Public endpoint implemented by mod services. Uses same sequencing scheme as repo event stream.',\n        parameters: {\n          type: 'params',\n          properties: {\n            cursor: {\n              type: 'integer',\n              description: 'The last known event seq number to backfill from.',\n            },\n          },\n        },\n        message: {\n          schema: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.label.subscribeLabels#labels',\n              'lex:com.atproto.label.subscribeLabels#info',\n            ],\n          },\n        },\n        errors: [\n          {\n            name: 'FutureCursor',\n          },\n        ],\n      },\n      labels: {\n        type: 'object',\n        required: ['seq', 'labels'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      info: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            knownValues: ['OutdatedCursor'],\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLexiconSchema: {\n    lexicon: 1,\n    id: 'com.atproto.lexicon.schema',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          \"Representation of Lexicon schemas themselves, when published as atproto records. Note that the schema language is not defined in Lexicon; this meta schema currently only includes a single version field ('lexicon'). See the atproto specifications for description of the other expected top-level fields ('id', 'defs', etc).\",\n        key: 'nsid',\n        record: {\n          type: 'object',\n          required: ['lexicon'],\n          properties: {\n            lexicon: {\n              type: 'integer',\n              description:\n                \"Indicates the 'version' of the Lexicon language. Must be '1' for the current atproto/Lexicon schema system.\",\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoModerationCreateReport: {\n    lexicon: 1,\n    id: 'com.atproto.moderation.createReport',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Submit a moderation report regarding an atproto account or record. Implemented by moderation services (with PDS proxying), and requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['reasonType', 'subject'],\n            properties: {\n              reasonType: {\n                type: 'ref',\n                description:\n                  'Indicates the broad category of violation the report is for.',\n                ref: 'lex:com.atproto.moderation.defs#reasonType',\n              },\n              reason: {\n                type: 'string',\n                maxGraphemes: 2000,\n                maxLength: 20000,\n                description:\n                  'Additional context about the content and violation.',\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'id',\n              'reasonType',\n              'subject',\n              'reportedBy',\n              'createdAt',\n            ],\n            properties: {\n              id: {\n                type: 'integer',\n              },\n              reasonType: {\n                type: 'ref',\n                ref: 'lex:com.atproto.moderation.defs#reasonType',\n              },\n              reason: {\n                type: 'string',\n                maxGraphemes: 2000,\n                maxLength: 20000,\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n              reportedBy: {\n                type: 'string',\n                format: 'did',\n              },\n              createdAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoModerationDefs: {\n    lexicon: 1,\n    id: 'com.atproto.moderation.defs',\n    defs: {\n      reasonType: {\n        type: 'string',\n        knownValues: [\n          'com.atproto.moderation.defs#reasonSpam',\n          'com.atproto.moderation.defs#reasonViolation',\n          'com.atproto.moderation.defs#reasonMisleading',\n          'com.atproto.moderation.defs#reasonSexual',\n          'com.atproto.moderation.defs#reasonRude',\n          'com.atproto.moderation.defs#reasonOther',\n          'com.atproto.moderation.defs#reasonAppeal',\n        ],\n      },\n      reasonSpam: {\n        type: 'token',\n        description: 'Spam: frequent unwanted promotion, replies, mentions',\n      },\n      reasonViolation: {\n        type: 'token',\n        description: 'Direct violation of server rules, laws, terms of service',\n      },\n      reasonMisleading: {\n        type: 'token',\n        description: 'Misleading identity, affiliation, or content',\n      },\n      reasonSexual: {\n        type: 'token',\n        description: 'Unwanted or mislabeled sexual content',\n      },\n      reasonRude: {\n        type: 'token',\n        description:\n          'Rude, harassing, explicit, or otherwise unwelcoming behavior',\n      },\n      reasonOther: {\n        type: 'token',\n        description: 'Other: reports not falling under another report category',\n      },\n      reasonAppeal: {\n        type: 'token',\n        description: 'Appeal: appeal a previously taken moderation action',\n      },\n      subjectType: {\n        type: 'string',\n        description: 'Tag describing a type of subject that might be reported.',\n        knownValues: ['account', 'record', 'chat'],\n      },\n    },\n  },\n  ComAtprotoRepoApplyWrites: {\n    lexicon: 1,\n    id: 'com.atproto.repo.applyWrites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Apply a batch transaction of repository creates, updates, and deletes. Requires auth, implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'writes'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              validate: {\n                type: 'boolean',\n                description:\n                  \"Can be set to 'false' to skip Lexicon schema validation of record data across all operations, 'true' to require it, or leave unset to validate only for known Lexicons.\",\n              },\n              writes: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:com.atproto.repo.applyWrites#create',\n                    'lex:com.atproto.repo.applyWrites#update',\n                    'lex:com.atproto.repo.applyWrites#delete',\n                  ],\n                  closed: true,\n                },\n              },\n              swapCommit: {\n                type: 'string',\n                description:\n                  'If provided, the entire operation will fail if the current repo commit CID does not match this value. Used to prevent conflicting repo mutations.',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [],\n            properties: {\n              commit: {\n                type: 'ref',\n                ref: 'lex:com.atproto.repo.defs#commitMeta',\n              },\n              results: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:com.atproto.repo.applyWrites#createResult',\n                    'lex:com.atproto.repo.applyWrites#updateResult',\n                    'lex:com.atproto.repo.applyWrites#deleteResult',\n                  ],\n                  closed: true,\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n            description:\n              \"Indicates that the 'swapCommit' parameter did not match current commit.\",\n          },\n        ],\n      },\n      create: {\n        type: 'object',\n        description: 'Operation which creates a new record.',\n        required: ['collection', 'value'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n            maxLength: 512,\n            format: 'record-key',\n            description:\n              'NOTE: maxLength is redundant with record-key format. Keeping it temporarily to ensure backwards compatibility.',\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n      update: {\n        type: 'object',\n        description: 'Operation which updates an existing record.',\n        required: ['collection', 'rkey', 'value'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n            format: 'record-key',\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n      delete: {\n        type: 'object',\n        description: 'Operation which deletes an existing record.',\n        required: ['collection', 'rkey'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n            format: 'record-key',\n          },\n        },\n      },\n      createResult: {\n        type: 'object',\n        required: ['uri', 'cid'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          validationStatus: {\n            type: 'string',\n            knownValues: ['valid', 'unknown'],\n          },\n        },\n      },\n      updateResult: {\n        type: 'object',\n        required: ['uri', 'cid'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          validationStatus: {\n            type: 'string',\n            knownValues: ['valid', 'unknown'],\n          },\n        },\n      },\n      deleteResult: {\n        type: 'object',\n        required: [],\n        properties: {},\n      },\n    },\n  },\n  ComAtprotoRepoCreateRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.createRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Create a single new repository record. Requires auth, implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'record'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                format: 'record-key',\n                description: 'The Record Key.',\n                maxLength: 512,\n              },\n              validate: {\n                type: 'boolean',\n                description:\n                  \"Can be set to 'false' to skip Lexicon schema validation of record data, 'true' to require it, or leave unset to validate only for known Lexicons.\",\n              },\n              record: {\n                type: 'unknown',\n                description: 'The record itself. Must contain a $type field.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'cid'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              commit: {\n                type: 'ref',\n                ref: 'lex:com.atproto.repo.defs#commitMeta',\n              },\n              validationStatus: {\n                type: 'string',\n                knownValues: ['valid', 'unknown'],\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n            description:\n              \"Indicates that 'swapCommit' didn't match current repo commit.\",\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoDefs: {\n    lexicon: 1,\n    id: 'com.atproto.repo.defs',\n    defs: {\n      commitMeta: {\n        type: 'object',\n        required: ['cid', 'rev'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          rev: {\n            type: 'string',\n            format: 'tid',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoDeleteRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.deleteRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Delete a repository record, or ensure it doesn't exist. Requires auth, implemented by PDS.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'rkey'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                format: 'record-key',\n                description: 'The Record Key.',\n              },\n              swapRecord: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous record by CID.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              commit: {\n                type: 'ref',\n                ref: 'lex:com.atproto.repo.defs#commitMeta',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoDescribeRepo: {\n    lexicon: 1,\n    id: 'com.atproto.repo.describeRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about an account and repository, including the list of collections. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['repo'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'handle',\n              'did',\n              'didDoc',\n              'collections',\n              'handleIsCorrect',\n            ],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n                description: 'The complete DID document for this account.',\n              },\n              collections: {\n                type: 'array',\n                description:\n                  'List of all the collections (NSIDs) for which this repo contains at least one record.',\n                items: {\n                  type: 'string',\n                  format: 'nsid',\n                },\n              },\n              handleIsCorrect: {\n                type: 'boolean',\n                description:\n                  'Indicates if handle is currently valid (resolves bi-directionally)',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a single record from a repository. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['repo', 'collection', 'rkey'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n              description: 'The NSID of the record collection.',\n            },\n            rkey: {\n              type: 'string',\n              description: 'The Record Key.',\n              format: 'record-key',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'The CID of the version of the record. If not specified, then return the most recent version.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'value'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              value: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'RecordNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoImportRepo: {\n    lexicon: 1,\n    id: 'com.atproto.repo.importRepo',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Import a repo in the form of a CAR file. Requires Content-Length HTTP header to be set.',\n        input: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoRepoListMissingBlobs: {\n    lexicon: 1,\n    id: 'com.atproto.repo.listMissingBlobs',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Returns a list of missing blobs for the requesting account. Intended to be used in the account migration flow.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blobs'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              blobs: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.repo.listMissingBlobs#recordBlob',\n                },\n              },\n            },\n          },\n        },\n      },\n      recordBlob: {\n        type: 'object',\n        required: ['cid', 'recordUri'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          recordUri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoListRecords: {\n    lexicon: 1,\n    id: 'com.atproto.repo.listRecords',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'List a range of records in a repository, matching a specific collection. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['repo', 'collection'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n              description: 'The NSID of the record type.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n              description: 'The number of records to return.',\n            },\n            cursor: {\n              type: 'string',\n            },\n            reverse: {\n              type: 'boolean',\n              description: 'Flag to reverse the order of the returned records.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['records'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              records: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.repo.listRecords#record',\n                },\n              },\n            },\n          },\n        },\n      },\n      record: {\n        type: 'object',\n        required: ['uri', 'cid', 'value'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoPutRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.putRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Write a repository record, creating or updating it as needed. Requires auth, implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'rkey', 'record'],\n            nullable: ['swapRecord'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                format: 'record-key',\n                description: 'The Record Key.',\n                maxLength: 512,\n              },\n              validate: {\n                type: 'boolean',\n                description:\n                  \"Can be set to 'false' to skip Lexicon schema validation of record data, 'true' to require it, or leave unset to validate only for known Lexicons.\",\n              },\n              record: {\n                type: 'unknown',\n                description: 'The record to write.',\n              },\n              swapRecord: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous record by CID. WARNING: nullable and optional field; may cause problems with golang implementation',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'cid'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              commit: {\n                type: 'ref',\n                ref: 'lex:com.atproto.repo.defs#commitMeta',\n              },\n              validationStatus: {\n                type: 'string',\n                knownValues: ['valid', 'unknown'],\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoStrongRef: {\n    lexicon: 1,\n    id: 'com.atproto.repo.strongRef',\n    description: 'A URI with a content-hash fingerprint.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['uri', 'cid'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoUploadBlob: {\n    lexicon: 1,\n    id: 'com.atproto.repo.uploadBlob',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Upload a new blob, to be referenced from a repository record. The blob will be deleted if it is not referenced within a time window (eg, minutes). Blob restrictions (mimetype, size, etc) are enforced when the reference is created. Requires auth, implemented by PDS.',\n        input: {\n          encoding: '*/*',\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blob'],\n            properties: {\n              blob: {\n                type: 'blob',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerActivateAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.activateAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Activates a currently deactivated account. Used to finalize account migration after the account's repo is imported and identity is setup.\",\n      },\n    },\n  },\n  ComAtprotoServerCheckAccountStatus: {\n    lexicon: 1,\n    id: 'com.atproto.server.checkAccountStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Returns the status of an account, especially as pertaining to import or recovery. Can be called many times over the course of an account migration. Requires auth and can only be called pertaining to oneself.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'activated',\n              'validDid',\n              'repoCommit',\n              'repoRev',\n              'repoBlocks',\n              'indexedRecords',\n              'privateStateValues',\n              'expectedBlobs',\n              'importedBlobs',\n            ],\n            properties: {\n              activated: {\n                type: 'boolean',\n              },\n              validDid: {\n                type: 'boolean',\n              },\n              repoCommit: {\n                type: 'string',\n                format: 'cid',\n              },\n              repoRev: {\n                type: 'string',\n              },\n              repoBlocks: {\n                type: 'integer',\n              },\n              indexedRecords: {\n                type: 'integer',\n              },\n              privateStateValues: {\n                type: 'integer',\n              },\n              expectedBlobs: {\n                type: 'integer',\n              },\n              importedBlobs: {\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerConfirmEmail: {\n    lexicon: 1,\n    id: 'com.atproto.server.confirmEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Confirm an email using a token from com.atproto.server.requestEmailConfirmation.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email', 'token'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountNotFound',\n          },\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n          {\n            name: 'InvalidEmail',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerCreateAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.createAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an account. Implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n                description: 'Requested handle for the account.',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n                description:\n                  'Pre-existing atproto DID, being imported to a new account.',\n              },\n              inviteCode: {\n                type: 'string',\n              },\n              verificationCode: {\n                type: 'string',\n              },\n              verificationPhone: {\n                type: 'string',\n              },\n              password: {\n                type: 'string',\n                description:\n                  'Initial account password. May need to meet instance-specific password strength requirements.',\n              },\n              recoveryKey: {\n                type: 'string',\n                description:\n                  'DID PLC rotation key (aka, recovery key) to be included in PLC creation operation.',\n              },\n              plcOp: {\n                type: 'unknown',\n                description:\n                  'A signed DID PLC operation to be submitted as part of importing an existing account to this instance. NOTE: this optional field may be updated when full account migration is implemented.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            description:\n              'Account login session returned on successful account creation.',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n                description: 'The DID of the new account.',\n              },\n              didDoc: {\n                type: 'unknown',\n                description: 'Complete DID document.',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidHandle',\n          },\n          {\n            name: 'InvalidPassword',\n          },\n          {\n            name: 'InvalidInviteCode',\n          },\n          {\n            name: 'HandleNotAvailable',\n          },\n          {\n            name: 'UnsupportedDomain',\n          },\n          {\n            name: 'UnresolvableDid',\n          },\n          {\n            name: 'IncompatibleDidDoc',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerCreateAppPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.createAppPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an App Password.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n                description:\n                  'A short name for the App Password, to help distinguish them.',\n              },\n              privileged: {\n                type: 'boolean',\n                description:\n                  \"If an app password has 'privileged' access to possibly sensitive account state. Meant for use with trusted clients.\",\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.createAppPassword#appPassword',\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n      appPassword: {\n        type: 'object',\n        required: ['name', 'password', 'createdAt'],\n        properties: {\n          name: {\n            type: 'string',\n          },\n          password: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          privileged: {\n            type: 'boolean',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateInviteCode: {\n    lexicon: 1,\n    id: 'com.atproto.server.createInviteCode',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an invite code.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['useCount'],\n            properties: {\n              useCount: {\n                type: 'integer',\n              },\n              forAccount: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['code'],\n            properties: {\n              code: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.server.createInviteCodes',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create invite codes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codeCount', 'useCount'],\n            properties: {\n              codeCount: {\n                type: 'integer',\n                default: 1,\n              },\n              useCount: {\n                type: 'integer',\n              },\n              forAccounts: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'did',\n                },\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.createInviteCodes#accountCodes',\n                },\n              },\n            },\n          },\n        },\n      },\n      accountCodes: {\n        type: 'object',\n        required: ['account', 'codes'],\n        properties: {\n          account: {\n            type: 'string',\n          },\n          codes: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.createSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an authentication session.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['identifier', 'password'],\n            properties: {\n              identifier: {\n                type: 'string',\n                description:\n                  'Handle or other identifier supported by the server for the authenticating user.',\n              },\n              password: {\n                type: 'string',\n              },\n              authFactorToken: {\n                type: 'string',\n              },\n              allowTakendown: {\n                type: 'boolean',\n                description:\n                  'When true, instead of throwing error for takendown accounts, a valid response with a narrow scoped token will be returned',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n              email: {\n                type: 'string',\n              },\n              emailConfirmed: {\n                type: 'boolean',\n              },\n              emailAuthFactor: {\n                type: 'boolean',\n              },\n              active: {\n                type: 'boolean',\n              },\n              status: {\n                type: 'string',\n                description:\n                  'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n                knownValues: ['takendown', 'suspended', 'deactivated'],\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n          {\n            name: 'AuthFactorTokenRequired',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerDeactivateAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.deactivateAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Deactivates a currently active account. Stops serving of repo, and future writes to repo until reactivated. Used to finalize account migration with the old host after the account has been activated on the new host.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              deleteAfter: {\n                type: 'string',\n                format: 'datetime',\n                description:\n                  'A recommendation to server as to how long they should hold onto the deactivated account before deleting.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerDefs: {\n    lexicon: 1,\n    id: 'com.atproto.server.defs',\n    defs: {\n      inviteCode: {\n        type: 'object',\n        required: [\n          'code',\n          'available',\n          'disabled',\n          'forAccount',\n          'createdBy',\n          'createdAt',\n          'uses',\n        ],\n        properties: {\n          code: {\n            type: 'string',\n          },\n          available: {\n            type: 'integer',\n          },\n          disabled: {\n            type: 'boolean',\n          },\n          forAccount: {\n            type: 'string',\n          },\n          createdBy: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          uses: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCodeUse',\n            },\n          },\n        },\n      },\n      inviteCodeUse: {\n        type: 'object',\n        required: ['usedBy', 'usedAt'],\n        properties: {\n          usedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          usedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerDeleteAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.deleteAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Delete an actor's account with a token and password. Can only be called after requesting a deletion token. Requires auth.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'password', 'token'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              password: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerDeleteSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.deleteSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete the current session. Requires auth.',\n      },\n    },\n  },\n  ComAtprotoServerDescribeServer: {\n    lexicon: 1,\n    id: 'com.atproto.server.describeServer',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Describes the server's account creation requirements and capabilities. Implemented by PDS.\",\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'availableUserDomains'],\n            properties: {\n              inviteCodeRequired: {\n                type: 'boolean',\n                description:\n                  'If true, an invite code must be supplied to create an account on this instance.',\n              },\n              phoneVerificationRequired: {\n                type: 'boolean',\n                description:\n                  'If true, a phone verification token must be supplied to create an account on this instance.',\n              },\n              availableUserDomains: {\n                type: 'array',\n                description:\n                  'List of domain suffixes that can be used in account handles.',\n                items: {\n                  type: 'string',\n                },\n              },\n              links: {\n                type: 'ref',\n                description: 'URLs of service policy documents.',\n                ref: 'lex:com.atproto.server.describeServer#links',\n              },\n              contact: {\n                type: 'ref',\n                description: 'Contact information',\n                ref: 'lex:com.atproto.server.describeServer#contact',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n      links: {\n        type: 'object',\n        properties: {\n          privacyPolicy: {\n            type: 'string',\n            format: 'uri',\n          },\n          termsOfService: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n      contact: {\n        type: 'object',\n        properties: {\n          email: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerGetAccountInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.server.getAccountInviteCodes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get all invite codes for the current account. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            includeUsed: {\n              type: 'boolean',\n              default: true,\n            },\n            createAvailable: {\n              type: 'boolean',\n              default: true,\n              description:\n                \"Controls whether any new 'earned' but not 'created' invites should be created.\",\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.defs#inviteCode',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'DuplicateCreate',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerGetServiceAuth: {\n    lexicon: 1,\n    id: 'com.atproto.server.getServiceAuth',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a signed token on behalf of the requesting DID for the requested service.',\n        parameters: {\n          type: 'params',\n          required: ['aud'],\n          properties: {\n            aud: {\n              type: 'string',\n              format: 'did',\n              description:\n                'The DID of the service that the token will be used to authenticate with',\n            },\n            exp: {\n              type: 'integer',\n              description:\n                'The time in Unix Epoch seconds that the JWT expires. Defaults to 60 seconds in the future. The service may enforce certain time bounds on tokens depending on the requested scope.',\n            },\n            lxm: {\n              type: 'string',\n              format: 'nsid',\n              description:\n                'Lexicon (XRPC) method to bind the requested token to',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['token'],\n            properties: {\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadExpiration',\n            description:\n              'Indicates that the requested expiration date is not a valid. May be in the past or may be reliant on the requested scopes.',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerGetSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.getSession',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about the current auth session. Requires auth.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle', 'did'],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              email: {\n                type: 'string',\n              },\n              emailConfirmed: {\n                type: 'boolean',\n              },\n              emailAuthFactor: {\n                type: 'boolean',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n              active: {\n                type: 'boolean',\n              },\n              status: {\n                type: 'string',\n                description:\n                  'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n                knownValues: ['takendown', 'suspended', 'deactivated'],\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerListAppPasswords: {\n    lexicon: 1,\n    id: 'com.atproto.server.listAppPasswords',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List all App Passwords.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['passwords'],\n            properties: {\n              passwords: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.listAppPasswords#appPassword',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n      appPassword: {\n        type: 'object',\n        required: ['name', 'createdAt'],\n        properties: {\n          name: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          privileged: {\n            type: 'boolean',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerRefreshSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.refreshSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Refresh an authentication session. Requires auth using the 'refreshJwt' (not the 'accessJwt').\",\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n              active: {\n                type: 'boolean',\n              },\n              status: {\n                type: 'string',\n                description:\n                  \"Hosting status of the account. If not specified, then assume 'active'.\",\n                knownValues: ['takendown', 'suspended', 'deactivated'],\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerRequestAccountDelete: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestAccountDelete',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Initiate a user account deletion via email.',\n      },\n    },\n  },\n  ComAtprotoServerRequestEmailConfirmation: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestEmailConfirmation',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request an email with a code to confirm ownership of email.',\n      },\n    },\n  },\n  ComAtprotoServerRequestEmailUpdate: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestEmailUpdate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Request a token in order to update email.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['tokenRequired'],\n            properties: {\n              tokenRequired: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerRequestPasswordReset: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestPasswordReset',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Initiate a user account password reset via email.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerReserveSigningKey: {\n    lexicon: 1,\n    id: 'com.atproto.server.reserveSigningKey',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Reserve a repo signing key, for use with account creation. Necessary so that a DID PLC update operation can be constructed during an account migraiton. Public and does not require auth; implemented by PDS. NOTE: this endpoint may change when full account migration is implemented.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n                description: 'The DID to reserve a key for.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['signingKey'],\n            properties: {\n              signingKey: {\n                type: 'string',\n                description:\n                  'The public key for the reserved signing key, in did:key serialization.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerResetPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.resetPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Reset a user account password using a token.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['token', 'password'],\n            properties: {\n              token: {\n                type: 'string',\n              },\n              password: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerRevokeAppPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.revokeAppPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Revoke an App Password by name.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerUpdateEmail: {\n    lexicon: 1,\n    id: 'com.atproto.server.updateEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Update an account's email.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              emailAuthFactor: {\n                type: 'boolean',\n              },\n              token: {\n                type: 'string',\n                description:\n                  \"Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed.\",\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n          {\n            name: 'TokenRequired',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetBlob: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getBlob',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a blob associated with a given account. Returns the full blob as originally uploaded. Does not require auth; implemented by PDS.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'cid'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the account.',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description: 'The CID of the blob to fetch',\n            },\n          },\n        },\n        output: {\n          encoding: '*/*',\n        },\n        errors: [\n          {\n            name: 'BlobNotFound',\n          },\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetBlocks: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get data blocks from a given repo, by CID. For example, intermediate MST nodes, or records. Does not require auth; implemented by PDS.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'cids'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            cids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n        errors: [\n          {\n            name: 'BlockNotFound',\n          },\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetCheckout: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getCheckout',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'DEPRECATED - please use com.atproto.sync.getRepo instead',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetHead: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getHead',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED - please use com.atproto.sync.getLatestCommit instead',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['root'],\n            properties: {\n              root: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'HeadNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetLatestCommit: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getLatestCommit',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get the current commit CID & revision of the specified repo. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['cid', 'rev'],\n            properties: {\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              rev: {\n                type: 'string',\n                format: 'tid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get data blocks needed to prove the existence or non-existence of record in the current version of repo. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'collection', 'rkey'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n            },\n            rkey: {\n              type: 'string',\n              description: 'Record Key',\n              format: 'record-key',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n        errors: [\n          {\n            name: 'RecordNotFound',\n          },\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetRepo: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Download a repository export as CAR file. Optionally only a 'diff' since a previous revision. Does not require auth; implemented by PDS.\",\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            since: {\n              type: 'string',\n              format: 'tid',\n              description:\n                \"The revision ('rev') of the repo to create a diff from.\",\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetRepoStatus: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRepoStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get the hosting status for a repository, on this server. Expected to be implemented by PDS and Relay.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'active'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              active: {\n                type: 'boolean',\n              },\n              status: {\n                type: 'string',\n                description:\n                  'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n                knownValues: [\n                  'takendown',\n                  'suspended',\n                  'deleted',\n                  'deactivated',\n                  'desynchronized',\n                  'throttled',\n                ],\n              },\n              rev: {\n                type: 'string',\n                format: 'tid',\n                description:\n                  'Optional field, the current rev of the repo, if active=true',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncListBlobs: {\n    lexicon: 1,\n    id: 'com.atproto.sync.listBlobs',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'List blob CIDs for an account, since some repo revision. Does not require auth; implemented by PDS.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            since: {\n              type: 'string',\n              format: 'tid',\n              description: 'Optional revision of the repo to list blobs since.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['cids'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              cids: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'cid',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncListRepos: {\n    lexicon: 1,\n    id: 'com.atproto.sync.listRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates all the DID, rev, and commit CID for all repos hosted by this service. Does not require auth; implemented by PDS and Relay.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.sync.listRepos#repo',\n                },\n              },\n            },\n          },\n        },\n      },\n      repo: {\n        type: 'object',\n        required: ['did', 'head', 'rev'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          head: {\n            type: 'string',\n            format: 'cid',\n            description: 'Current repo commit CID',\n          },\n          rev: {\n            type: 'string',\n            format: 'tid',\n          },\n          active: {\n            type: 'boolean',\n          },\n          status: {\n            type: 'string',\n            description:\n              'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n            knownValues: [\n              'takendown',\n              'suspended',\n              'deleted',\n              'deactivated',\n              'desynchronized',\n              'throttled',\n            ],\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncListReposByCollection: {\n    lexicon: 1,\n    id: 'com.atproto.sync.listReposByCollection',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates all the DIDs which have records with the given collection NSID.',\n        parameters: {\n          type: 'params',\n          required: ['collection'],\n          properties: {\n            collection: {\n              type: 'string',\n              format: 'nsid',\n            },\n            limit: {\n              type: 'integer',\n              description:\n                'Maximum size of response set. Recommend setting a large maximum (1000+) when enumerating large DID lists.',\n              minimum: 1,\n              maximum: 2000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.sync.listReposByCollection#repo',\n                },\n              },\n            },\n          },\n        },\n      },\n      repo: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncNotifyOfUpdate: {\n    lexicon: 1,\n    id: 'com.atproto.sync.notifyOfUpdate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Notify a crawling service of a recent update, and that crawling should resume. Intended use is after a gap between repo stream events caused the crawling service to disconnect. Does not require auth; implemented by Relay. DEPRECATED: just use com.atproto.sync.requestCrawl',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['hostname'],\n            properties: {\n              hostname: {\n                type: 'string',\n                description:\n                  'Hostname of the current service (usually a PDS) that is notifying of update.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncRequestCrawl: {\n    lexicon: 1,\n    id: 'com.atproto.sync.requestCrawl',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request a service to persistently crawl hosted repos. Expected use is new PDS instances declaring their existence to Relays. Does not require auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['hostname'],\n            properties: {\n              hostname: {\n                type: 'string',\n                description:\n                  'Hostname of the current service (eg, PDS) that is requesting to be crawled.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncSubscribeRepos: {\n    lexicon: 1,\n    id: 'com.atproto.sync.subscribeRepos',\n    defs: {\n      main: {\n        type: 'subscription',\n        description:\n          'Repository event stream, aka Firehose endpoint. Outputs repo commits with diff data, and identity update events, for all repositories on the current server. See the atproto specifications for details around stream sequencing, repo versioning, CAR diff format, and more. Public and does not require auth; implemented by PDS and Relay.',\n        parameters: {\n          type: 'params',\n          properties: {\n            cursor: {\n              type: 'integer',\n              description: 'The last known event seq number to backfill from.',\n            },\n          },\n        },\n        message: {\n          schema: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.sync.subscribeRepos#commit',\n              'lex:com.atproto.sync.subscribeRepos#sync',\n              'lex:com.atproto.sync.subscribeRepos#identity',\n              'lex:com.atproto.sync.subscribeRepos#account',\n              'lex:com.atproto.sync.subscribeRepos#handle',\n              'lex:com.atproto.sync.subscribeRepos#migrate',\n              'lex:com.atproto.sync.subscribeRepos#tombstone',\n              'lex:com.atproto.sync.subscribeRepos#info',\n            ],\n          },\n        },\n        errors: [\n          {\n            name: 'FutureCursor',\n          },\n          {\n            name: 'ConsumerTooSlow',\n            description:\n              'If the consumer of the stream can not keep up with events, and a backlog gets too large, the server will drop the connection.',\n          },\n        ],\n      },\n      commit: {\n        type: 'object',\n        description:\n          'Represents an update of repository state. Note that empty commits are allowed, which include no repo data changes, but an update to rev and signature.',\n        required: [\n          'seq',\n          'rebase',\n          'tooBig',\n          'repo',\n          'commit',\n          'rev',\n          'since',\n          'blocks',\n          'ops',\n          'blobs',\n          'time',\n        ],\n        nullable: ['since'],\n        properties: {\n          seq: {\n            type: 'integer',\n            description: 'The stream sequence number of this message.',\n          },\n          rebase: {\n            type: 'boolean',\n            description: 'DEPRECATED -- unused',\n          },\n          tooBig: {\n            type: 'boolean',\n            description:\n              'DEPRECATED -- replaced by #sync event and data limits. Indicates that this commit contained too many ops, or data size was too large. Consumers will need to make a separate request to get missing data.',\n          },\n          repo: {\n            type: 'string',\n            format: 'did',\n            description:\n              \"The repo this event comes from. Note that all other message types name this field 'did'.\",\n          },\n          commit: {\n            type: 'cid-link',\n            description: 'Repo commit object CID.',\n          },\n          rev: {\n            type: 'string',\n            format: 'tid',\n            description:\n              'The rev of the emitted commit. Note that this information is also in the commit object included in blocks, unless this is a tooBig event.',\n          },\n          since: {\n            type: 'string',\n            format: 'tid',\n            description:\n              'The rev of the last emitted commit from this repo (if any).',\n          },\n          blocks: {\n            type: 'bytes',\n            description:\n              \"CAR file containing relevant blocks, as a diff since the previous repo state. The commit must be included as a block, and the commit block CID must be the first entry in the CAR header 'roots' list.\",\n            maxLength: 2000000,\n          },\n          ops: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.sync.subscribeRepos#repoOp',\n              description:\n                'List of repo mutation operations in this commit (eg, records created, updated, or deleted).',\n            },\n            maxLength: 200,\n          },\n          blobs: {\n            type: 'array',\n            items: {\n              type: 'cid-link',\n              description:\n                'DEPRECATED -- will soon always be empty. List of new blobs (by CID) referenced by records in this commit.',\n            },\n          },\n          prevData: {\n            type: 'cid-link',\n            description:\n              \"The root CID of the MST tree for the previous commit from this repo (indicated by the 'since' revision field in this message). Corresponds to the 'data' field in the repo commit object. NOTE: this field is effectively required for the 'inductive' version of firehose.\",\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp of when this message was originally broadcast.',\n          },\n        },\n      },\n      sync: {\n        type: 'object',\n        description:\n          'Updates the repo to a new state, without necessarily including that state on the firehose. Used to recover from broken commit streams, data loss incidents, or in situations where upstream host does not know recent state of the repository.',\n        required: ['seq', 'did', 'blocks', 'rev', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n            description: 'The stream sequence number of this message.',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n            description:\n              'The account this repo event corresponds to. Must match that in the commit object.',\n          },\n          blocks: {\n            type: 'bytes',\n            description:\n              \"CAR file containing the commit, as a block. The CAR header must include the commit block CID as the first 'root'.\",\n            maxLength: 10000,\n          },\n          rev: {\n            type: 'string',\n            description:\n              'The rev of the commit. This value must match that in the commit object.',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp of when this message was originally broadcast.',\n          },\n        },\n      },\n      identity: {\n        type: 'object',\n        description:\n          \"Represents a change to an account's identity. Could be an updated handle, signing key, or pds hosting endpoint. Serves as a prod to all downstream services to refresh their identity cache.\",\n        required: ['seq', 'did', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n            description:\n              \"The current handle for the account, or 'handle.invalid' if validation fails. This field is optional, might have been validated or passed-through from an upstream source. Semantics and behaviors for PDS vs Relay may evolve in the future; see atproto specs for more details.\",\n          },\n        },\n      },\n      account: {\n        type: 'object',\n        description:\n          \"Represents a change to an account's status on a host (eg, PDS or Relay). The semantics of this event are that the status is at the host which emitted the event, not necessarily that at the currently active PDS. Eg, a Relay takedown would emit a takedown with active=false, even if the PDS is still active.\",\n        required: ['seq', 'did', 'time', 'active'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n          active: {\n            type: 'boolean',\n            description:\n              'Indicates that the account has a repository which can be fetched from the host that emitted this event.',\n          },\n          status: {\n            type: 'string',\n            description:\n              'If active=false, this optional field indicates a reason for why the account is not active.',\n            knownValues: [\n              'takendown',\n              'suspended',\n              'deleted',\n              'deactivated',\n              'desynchronized',\n              'throttled',\n            ],\n          },\n        },\n      },\n      handle: {\n        type: 'object',\n        description: 'DEPRECATED -- Use #identity event instead',\n        required: ['seq', 'did', 'handle', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      migrate: {\n        type: 'object',\n        description: 'DEPRECATED -- Use #account event instead',\n        required: ['seq', 'did', 'migrateTo', 'time'],\n        nullable: ['migrateTo'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          migrateTo: {\n            type: 'string',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      tombstone: {\n        type: 'object',\n        description: 'DEPRECATED -- Use #account event instead',\n        required: ['seq', 'did', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      info: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            knownValues: ['OutdatedCursor'],\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n      repoOp: {\n        type: 'object',\n        description: 'A repo operation, ie a mutation of a single record.',\n        required: ['action', 'path', 'cid'],\n        nullable: ['cid'],\n        properties: {\n          action: {\n            type: 'string',\n            knownValues: ['create', 'update', 'delete'],\n          },\n          path: {\n            type: 'string',\n          },\n          cid: {\n            type: 'cid-link',\n            description:\n              'For creates and updates, the new record CID. For deletions, null.',\n          },\n          prev: {\n            type: 'cid-link',\n            description:\n              'For updates and deletes, the previous record CID (required for inductive firehose). For creations, field should not be defined.',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempAddReservedHandle: {\n    lexicon: 1,\n    id: 'com.atproto.temp.addReservedHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Add a handle to the set of reserved handles.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              handle: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {},\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempCheckSignupQueue: {\n    lexicon: 1,\n    id: 'com.atproto.temp.checkSignupQueue',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Check accounts location in signup queue.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['activated'],\n            properties: {\n              activated: {\n                type: 'boolean',\n              },\n              placeInQueue: {\n                type: 'integer',\n              },\n              estimatedTimeMs: {\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempFetchLabels: {\n    lexicon: 1,\n    id: 'com.atproto.temp.fetchLabels',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED: use queryLabels or subscribeLabels instead -- Fetch all labels from a labeler created after a certain date.',\n        parameters: {\n          type: 'params',\n          properties: {\n            since: {\n              type: 'integer',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 250,\n              default: 50,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['labels'],\n            properties: {\n              labels: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.label.defs#label',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempRequestPhoneVerification: {\n    lexicon: 1,\n    id: 'com.atproto.temp.requestPhoneVerification',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request a verification code to be sent to the supplied phone number',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['phoneNumber'],\n            properties: {\n              phoneNumber: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorDefs: {\n    lexicon: 1,\n    id: 'app.bsky.actor.defs',\n    defs: {\n      profileViewBasic: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          associated: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociated',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      profileView: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 256,\n            maxLength: 2560,\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          associated: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociated',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      profileViewDetailed: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 256,\n            maxLength: 2560,\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          banner: {\n            type: 'string',\n            format: 'uri',\n          },\n          followersCount: {\n            type: 'integer',\n          },\n          followsCount: {\n            type: 'integer',\n          },\n          postsCount: {\n            type: 'integer',\n          },\n          associated: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociated',\n          },\n          joinedViaStarterPack: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          pinnedPost: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      profileAssociated: {\n        type: 'object',\n        properties: {\n          lists: {\n            type: 'integer',\n          },\n          feedgens: {\n            type: 'integer',\n          },\n          starterPacks: {\n            type: 'integer',\n          },\n          labeler: {\n            type: 'boolean',\n          },\n          chat: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociatedChat',\n          },\n        },\n      },\n      profileAssociatedChat: {\n        type: 'object',\n        required: ['allowIncoming'],\n        properties: {\n          allowIncoming: {\n            type: 'string',\n            knownValues: ['all', 'none', 'following'],\n          },\n        },\n      },\n      viewerState: {\n        type: 'object',\n        description:\n          \"Metadata about the requesting account's relationship with the subject account. Only has meaningful content for authed requests.\",\n        properties: {\n          muted: {\n            type: 'boolean',\n          },\n          mutedByList: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          blockedBy: {\n            type: 'boolean',\n          },\n          blocking: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blockingByList: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          following: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          followedBy: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          knownFollowers: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#knownFollowers',\n          },\n        },\n      },\n      knownFollowers: {\n        type: 'object',\n        description: \"The subject's followers whom you also follow\",\n        required: ['count', 'followers'],\n        properties: {\n          count: {\n            type: 'integer',\n          },\n          followers: {\n            type: 'array',\n            minLength: 0,\n            maxLength: 5,\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n            },\n          },\n        },\n      },\n      preferences: {\n        type: 'array',\n        items: {\n          type: 'union',\n          refs: [\n            'lex:app.bsky.actor.defs#adultContentPref',\n            'lex:app.bsky.actor.defs#contentLabelPref',\n            'lex:app.bsky.actor.defs#savedFeedsPref',\n            'lex:app.bsky.actor.defs#savedFeedsPrefV2',\n            'lex:app.bsky.actor.defs#personalDetailsPref',\n            'lex:app.bsky.actor.defs#feedViewPref',\n            'lex:app.bsky.actor.defs#threadViewPref',\n            'lex:app.bsky.actor.defs#interestsPref',\n            'lex:app.bsky.actor.defs#mutedWordsPref',\n            'lex:app.bsky.actor.defs#hiddenPostsPref',\n            'lex:app.bsky.actor.defs#bskyAppStatePref',\n            'lex:app.bsky.actor.defs#labelersPref',\n            'lex:app.bsky.actor.defs#postInteractionSettingsPref',\n          ],\n        },\n      },\n      adultContentPref: {\n        type: 'object',\n        required: ['enabled'],\n        properties: {\n          enabled: {\n            type: 'boolean',\n            default: false,\n          },\n        },\n      },\n      contentLabelPref: {\n        type: 'object',\n        required: ['label', 'visibility'],\n        properties: {\n          labelerDid: {\n            type: 'string',\n            description:\n              'Which labeler does this preference apply to? If undefined, applies globally.',\n            format: 'did',\n          },\n          label: {\n            type: 'string',\n          },\n          visibility: {\n            type: 'string',\n            knownValues: ['ignore', 'show', 'warn', 'hide'],\n          },\n        },\n      },\n      savedFeed: {\n        type: 'object',\n        required: ['id', 'type', 'value', 'pinned'],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          type: {\n            type: 'string',\n            knownValues: ['feed', 'list', 'timeline'],\n          },\n          value: {\n            type: 'string',\n          },\n          pinned: {\n            type: 'boolean',\n          },\n        },\n      },\n      savedFeedsPrefV2: {\n        type: 'object',\n        required: ['items'],\n        properties: {\n          items: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#savedFeed',\n            },\n          },\n        },\n      },\n      savedFeedsPref: {\n        type: 'object',\n        required: ['pinned', 'saved'],\n        properties: {\n          pinned: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n          saved: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n          timelineIndex: {\n            type: 'integer',\n          },\n        },\n      },\n      personalDetailsPref: {\n        type: 'object',\n        properties: {\n          birthDate: {\n            type: 'string',\n            format: 'datetime',\n            description: 'The birth date of account owner.',\n          },\n        },\n      },\n      feedViewPref: {\n        type: 'object',\n        required: ['feed'],\n        properties: {\n          feed: {\n            type: 'string',\n            description:\n              'The URI of the feed, or an identifier which describes the feed.',\n          },\n          hideReplies: {\n            type: 'boolean',\n            description: 'Hide replies in the feed.',\n          },\n          hideRepliesByUnfollowed: {\n            type: 'boolean',\n            description:\n              'Hide replies in the feed if they are not by followed users.',\n            default: true,\n          },\n          hideRepliesByLikeCount: {\n            type: 'integer',\n            description:\n              'Hide replies in the feed if they do not have this number of likes.',\n          },\n          hideReposts: {\n            type: 'boolean',\n            description: 'Hide reposts in the feed.',\n          },\n          hideQuotePosts: {\n            type: 'boolean',\n            description: 'Hide quote posts in the feed.',\n          },\n        },\n      },\n      threadViewPref: {\n        type: 'object',\n        properties: {\n          sort: {\n            type: 'string',\n            description: 'Sorting mode for threads.',\n            knownValues: [\n              'oldest',\n              'newest',\n              'most-likes',\n              'random',\n              'hotness',\n            ],\n          },\n          prioritizeFollowedUsers: {\n            type: 'boolean',\n            description: 'Show followed users at the top of all replies.',\n          },\n        },\n      },\n      interestsPref: {\n        type: 'object',\n        required: ['tags'],\n        properties: {\n          tags: {\n            type: 'array',\n            maxLength: 100,\n            items: {\n              type: 'string',\n              maxLength: 640,\n              maxGraphemes: 64,\n            },\n            description:\n              \"A list of tags which describe the account owner's interests gathered during onboarding.\",\n          },\n        },\n      },\n      mutedWordTarget: {\n        type: 'string',\n        knownValues: ['content', 'tag'],\n        maxLength: 640,\n        maxGraphemes: 64,\n      },\n      mutedWord: {\n        type: 'object',\n        description: 'A word that the account owner has muted.',\n        required: ['value', 'targets'],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          value: {\n            type: 'string',\n            description: 'The muted word itself.',\n            maxLength: 10000,\n            maxGraphemes: 1000,\n          },\n          targets: {\n            type: 'array',\n            description: 'The intended targets of the muted word.',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#mutedWordTarget',\n            },\n          },\n          actorTarget: {\n            type: 'string',\n            description:\n              'Groups of users to apply the muted word to. If undefined, applies to all users.',\n            knownValues: ['all', 'exclude-following'],\n            default: 'all',\n          },\n          expiresAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'The date and time at which the muted word will expire and no longer be applied.',\n          },\n        },\n      },\n      mutedWordsPref: {\n        type: 'object',\n        required: ['items'],\n        properties: {\n          items: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#mutedWord',\n            },\n            description: 'A list of words the account owner has muted.',\n          },\n        },\n      },\n      hiddenPostsPref: {\n        type: 'object',\n        required: ['items'],\n        properties: {\n          items: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            description:\n              'A list of URIs of posts the account owner has hidden.',\n          },\n        },\n      },\n      labelersPref: {\n        type: 'object',\n        required: ['labelers'],\n        properties: {\n          labelers: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#labelerPrefItem',\n            },\n          },\n        },\n      },\n      labelerPrefItem: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      bskyAppStatePref: {\n        description:\n          \"A grab bag of state that's specific to the bsky.app program. Third-party apps shouldn't use this.\",\n        type: 'object',\n        properties: {\n          activeProgressGuide: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#bskyAppProgressGuide',\n          },\n          queuedNudges: {\n            description:\n              'An array of tokens which identify nudges (modals, popups, tours, highlight dots) that should be shown to the user.',\n            type: 'array',\n            maxLength: 1000,\n            items: {\n              type: 'string',\n              maxLength: 100,\n            },\n          },\n          nuxs: {\n            description: 'Storage for NUXs the user has encountered.',\n            type: 'array',\n            maxLength: 100,\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#nux',\n            },\n          },\n        },\n      },\n      bskyAppProgressGuide: {\n        description:\n          'If set, an active progress guide. Once completed, can be set to undefined. Should have unspecced fields tracking progress.',\n        type: 'object',\n        required: ['guide'],\n        properties: {\n          guide: {\n            type: 'string',\n            maxLength: 100,\n          },\n        },\n      },\n      nux: {\n        type: 'object',\n        description: 'A new user experiences (NUX) storage object',\n        required: ['id', 'completed'],\n        properties: {\n          id: {\n            type: 'string',\n            maxLength: 100,\n          },\n          completed: {\n            type: 'boolean',\n            default: false,\n          },\n          data: {\n            description:\n              'Arbitrary data for the NUX. The structure is defined by the NUX itself. Limited to 300 characters.',\n            type: 'string',\n            maxLength: 3000,\n            maxGraphemes: 300,\n          },\n          expiresAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'The date and time at which the NUX will expire and should be considered completed.',\n          },\n        },\n      },\n      postInteractionSettingsPref: {\n        type: 'object',\n        description:\n          'Default post interaction settings for the account. These values should be applied as default values when creating new posts. These refs should mirror the threadgate and postgate records exactly.',\n        required: [],\n        properties: {\n          threadgateAllowRules: {\n            description:\n              'Matches threadgate record. List of rules defining who can reply to this users posts. If value is an empty array, no one can reply. If value is undefined, anyone can reply.',\n            type: 'array',\n            maxLength: 5,\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.feed.threadgate#mentionRule',\n                'lex:app.bsky.feed.threadgate#followerRule',\n                'lex:app.bsky.feed.threadgate#followingRule',\n                'lex:app.bsky.feed.threadgate#listRule',\n              ],\n            },\n          },\n          postgateEmbeddingRules: {\n            description:\n              'Matches postgate record. List of rules defining who can embed this users posts. If value is an empty array or is undefined, no particular rules apply and anyone can embed.',\n            type: 'array',\n            maxLength: 5,\n            items: {\n              type: 'union',\n              refs: ['lex:app.bsky.feed.postgate#disableRule'],\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getPreferences',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get private preferences attached to the current account. Expected use is synchronization between multiple devices, and import/export during account migration. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {},\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['preferences'],\n            properties: {\n              preferences: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#preferences',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetProfile: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getProfile',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get detailed profile view of an actor. Does not require auth, but contains relevant metadata with auth.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'Handle or DID of account to fetch profile of.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetProfiles: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getProfiles',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get detailed profile views of multiple actors.',\n        parameters: {\n          type: 'params',\n          required: ['actors'],\n          properties: {\n            actors: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['profiles'],\n            properties: {\n              profiles: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetSuggestions: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getSuggestions',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of suggested actors. Expected use is discovery of accounts to follow during new account onboarding.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n              recId: {\n                type: 'integer',\n                description:\n                  'Snowflake for this recommendation, use when submitting recommendation events.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorProfile: {\n    lexicon: 1,\n    id: 'app.bsky.actor.profile',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a Bluesky account profile.',\n        key: 'literal:self',\n        record: {\n          type: 'object',\n          properties: {\n            displayName: {\n              type: 'string',\n              maxGraphemes: 64,\n              maxLength: 640,\n            },\n            description: {\n              type: 'string',\n              description: 'Free-form profile description text.',\n              maxGraphemes: 256,\n              maxLength: 2560,\n            },\n            avatar: {\n              type: 'blob',\n              description:\n                \"Small image to be displayed next to posts from account. AKA, 'profile picture'\",\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            banner: {\n              type: 'blob',\n              description:\n                'Larger horizontal image to display behind profile view.',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              description:\n                'Self-label values, specific to the Bluesky application, on the overall account.',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            joinedViaStarterPack: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            pinnedPost: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorPutPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.actor.putPreferences',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Set the private preferences attached to the account.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['preferences'],\n            properties: {\n              preferences: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#preferences',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorSearchActors: {\n    lexicon: 1,\n    id: 'app.bsky.actor.searchActors',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find actors (profiles) matching search criteria. Does not require auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead.\",\n            },\n            q: {\n              type: 'string',\n              description:\n                'Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorSearchActorsTypeahead: {\n    lexicon: 1,\n    id: 'app.bsky.actor.searchActorsTypeahead',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find actor suggestions for a prefix search term. Expected use is for auto-completion during text field entry. Does not require auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead.\",\n            },\n            q: {\n              type: 'string',\n              description: 'Search query prefix; not a full query string.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 10,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.embed.defs',\n    defs: {\n      aspectRatio: {\n        type: 'object',\n        description:\n          'width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit.',\n        required: ['width', 'height'],\n        properties: {\n          width: {\n            type: 'integer',\n            minimum: 1,\n          },\n          height: {\n            type: 'integer',\n            minimum: 1,\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedExternal: {\n    lexicon: 1,\n    id: 'app.bsky.embed.external',\n    defs: {\n      main: {\n        type: 'object',\n        description:\n          \"A representation of some externally linked content (eg, a URL and 'card'), embedded in a Bluesky record (eg, a post).\",\n        required: ['external'],\n        properties: {\n          external: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.external#external',\n          },\n        },\n      },\n      external: {\n        type: 'object',\n        required: ['uri', 'title', 'description'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n          title: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          thumb: {\n            type: 'blob',\n            accept: ['image/*'],\n            maxSize: 1000000,\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['external'],\n        properties: {\n          external: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.external#viewExternal',\n          },\n        },\n      },\n      viewExternal: {\n        type: 'object',\n        required: ['uri', 'title', 'description'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n          title: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          thumb: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedImages: {\n    lexicon: 1,\n    id: 'app.bsky.embed.images',\n    description: 'A set of images embedded in a Bluesky record (eg, a post).',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['images'],\n        properties: {\n          images: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.images#image',\n            },\n            maxLength: 4,\n          },\n        },\n      },\n      image: {\n        type: 'object',\n        required: ['image', 'alt'],\n        properties: {\n          image: {\n            type: 'blob',\n            accept: ['image/*'],\n            maxSize: 1000000,\n          },\n          alt: {\n            type: 'string',\n            description:\n              'Alt text description of the image, for accessibility.',\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.defs#aspectRatio',\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['images'],\n        properties: {\n          images: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.images#viewImage',\n            },\n            maxLength: 4,\n          },\n        },\n      },\n      viewImage: {\n        type: 'object',\n        required: ['thumb', 'fullsize', 'alt'],\n        properties: {\n          thumb: {\n            type: 'string',\n            format: 'uri',\n            description:\n              'Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View.',\n          },\n          fullsize: {\n            type: 'string',\n            format: 'uri',\n            description:\n              'Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View.',\n          },\n          alt: {\n            type: 'string',\n            description:\n              'Alt text description of the image, for accessibility.',\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.defs#aspectRatio',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedRecord: {\n    lexicon: 1,\n    id: 'app.bsky.embed.record',\n    description:\n      'A representation of a record embedded in a Bluesky record (eg, a post). For example, a quote-post, or sharing a feed generator record.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['record'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['record'],\n        properties: {\n          record: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.record#viewRecord',\n              'lex:app.bsky.embed.record#viewNotFound',\n              'lex:app.bsky.embed.record#viewBlocked',\n              'lex:app.bsky.embed.record#viewDetached',\n              'lex:app.bsky.feed.defs#generatorView',\n              'lex:app.bsky.graph.defs#listView',\n              'lex:app.bsky.labeler.defs#labelerView',\n              'lex:app.bsky.graph.defs#starterPackViewBasic',\n            ],\n          },\n        },\n      },\n      viewRecord: {\n        type: 'object',\n        required: ['uri', 'cid', 'author', 'value', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          value: {\n            type: 'unknown',\n            description: 'The record data itself.',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          replyCount: {\n            type: 'integer',\n          },\n          repostCount: {\n            type: 'integer',\n          },\n          likeCount: {\n            type: 'integer',\n          },\n          quoteCount: {\n            type: 'integer',\n          },\n          embeds: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.embed.images#view',\n                'lex:app.bsky.embed.video#view',\n                'lex:app.bsky.embed.external#view',\n                'lex:app.bsky.embed.record#view',\n                'lex:app.bsky.embed.recordWithMedia#view',\n              ],\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      viewNotFound: {\n        type: 'object',\n        required: ['uri', 'notFound'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      viewBlocked: {\n        type: 'object',\n        required: ['uri', 'blocked', 'author'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blocked: {\n            type: 'boolean',\n            const: true,\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n          },\n        },\n      },\n      viewDetached: {\n        type: 'object',\n        required: ['uri', 'detached'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          detached: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedRecordWithMedia: {\n    lexicon: 1,\n    id: 'app.bsky.embed.recordWithMedia',\n    description:\n      'A representation of a record embedded in a Bluesky record (eg, a post), alongside other compatible embeds. For example, a quote post and image, or a quote post and external URL card.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['record', 'media'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.record',\n          },\n          media: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images',\n              'lex:app.bsky.embed.video',\n              'lex:app.bsky.embed.external',\n            ],\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['record', 'media'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.record#view',\n          },\n          media: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images#view',\n              'lex:app.bsky.embed.video#view',\n              'lex:app.bsky.embed.external#view',\n            ],\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedVideo: {\n    lexicon: 1,\n    id: 'app.bsky.embed.video',\n    description: 'A video embedded in a Bluesky record (eg, a post).',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['video'],\n        properties: {\n          video: {\n            type: 'blob',\n            accept: ['video/mp4'],\n            maxSize: 50000000,\n          },\n          captions: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.video#caption',\n            },\n            maxLength: 20,\n          },\n          alt: {\n            type: 'string',\n            description:\n              'Alt text description of the video, for accessibility.',\n            maxGraphemes: 1000,\n            maxLength: 10000,\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.defs#aspectRatio',\n          },\n        },\n      },\n      caption: {\n        type: 'object',\n        required: ['lang', 'file'],\n        properties: {\n          lang: {\n            type: 'string',\n            format: 'language',\n          },\n          file: {\n            type: 'blob',\n            accept: ['text/vtt'],\n            maxSize: 20000,\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['cid', 'playlist'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          playlist: {\n            type: 'string',\n            format: 'uri',\n          },\n          thumbnail: {\n            type: 'string',\n            format: 'uri',\n          },\n          alt: {\n            type: 'string',\n            maxGraphemes: 1000,\n            maxLength: 10000,\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.defs#aspectRatio',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.feed.defs',\n    defs: {\n      postView: {\n        type: 'object',\n        required: ['uri', 'cid', 'author', 'record', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          record: {\n            type: 'unknown',\n          },\n          embed: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images#view',\n              'lex:app.bsky.embed.video#view',\n              'lex:app.bsky.embed.external#view',\n              'lex:app.bsky.embed.record#view',\n              'lex:app.bsky.embed.recordWithMedia#view',\n            ],\n          },\n          replyCount: {\n            type: 'integer',\n          },\n          repostCount: {\n            type: 'integer',\n          },\n          likeCount: {\n            type: 'integer',\n          },\n          quoteCount: {\n            type: 'integer',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          threadgate: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#threadgateView',\n          },\n        },\n      },\n      viewerState: {\n        type: 'object',\n        description:\n          \"Metadata about the requesting account's relationship with the subject content. Only has meaningful content for authed requests.\",\n        properties: {\n          repost: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          threadMuted: {\n            type: 'boolean',\n          },\n          replyDisabled: {\n            type: 'boolean',\n          },\n          embeddingDisabled: {\n            type: 'boolean',\n          },\n          pinned: {\n            type: 'boolean',\n          },\n        },\n      },\n      threadContext: {\n        type: 'object',\n        description:\n          'Metadata about this post within the context of the thread it is in.',\n        properties: {\n          rootAuthorLike: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      feedViewPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#postView',\n          },\n          reply: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#replyRef',\n          },\n          reason: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#reasonRepost',\n              'lex:app.bsky.feed.defs#reasonPin',\n            ],\n          },\n          feedContext: {\n            type: 'string',\n            description:\n              'Context provided by feed generator that may be passed back alongside interactions.',\n            maxLength: 2000,\n          },\n        },\n      },\n      replyRef: {\n        type: 'object',\n        required: ['root', 'parent'],\n        properties: {\n          root: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#postView',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          parent: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#postView',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          grandparentAuthor: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n            description:\n              'When parent is a reply to another post, this is the author of that post.',\n          },\n        },\n      },\n      reasonRepost: {\n        type: 'object',\n        required: ['by', 'indexedAt'],\n        properties: {\n          by: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      reasonPin: {\n        type: 'object',\n        properties: {},\n      },\n      threadViewPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#postView',\n          },\n          parent: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#threadViewPost',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          replies: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.feed.defs#threadViewPost',\n                'lex:app.bsky.feed.defs#notFoundPost',\n                'lex:app.bsky.feed.defs#blockedPost',\n              ],\n            },\n          },\n          threadContext: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#threadContext',\n          },\n        },\n      },\n      notFoundPost: {\n        type: 'object',\n        required: ['uri', 'notFound'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      blockedPost: {\n        type: 'object',\n        required: ['uri', 'blocked', 'author'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blocked: {\n            type: 'boolean',\n            const: true,\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n          },\n        },\n      },\n      blockedAuthor: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n        },\n      },\n      generatorView: {\n        type: 'object',\n        required: ['uri', 'cid', 'did', 'creator', 'displayName', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          displayName: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 300,\n            maxLength: 3000,\n          },\n          descriptionFacets: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          likeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          acceptsInteractions: {\n            type: 'boolean',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#generatorViewerState',\n          },\n          contentMode: {\n            type: 'string',\n            knownValues: [\n              'app.bsky.feed.defs#contentModeUnspecified',\n              'app.bsky.feed.defs#contentModeVideo',\n            ],\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      generatorViewerState: {\n        type: 'object',\n        properties: {\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonFeedPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          reason: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#skeletonReasonRepost',\n              'lex:app.bsky.feed.defs#skeletonReasonPin',\n            ],\n          },\n          feedContext: {\n            type: 'string',\n            description:\n              'Context that will be passed through to client and may be passed to feed generator back alongside interactions.',\n            maxLength: 2000,\n          },\n        },\n      },\n      skeletonReasonRepost: {\n        type: 'object',\n        required: ['repost'],\n        properties: {\n          repost: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonReasonPin: {\n        type: 'object',\n        properties: {},\n      },\n      threadgateView: {\n        type: 'object',\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          record: {\n            type: 'unknown',\n          },\n          lists: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.graph.defs#listViewBasic',\n            },\n          },\n        },\n      },\n      interaction: {\n        type: 'object',\n        properties: {\n          item: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          event: {\n            type: 'string',\n            knownValues: [\n              'app.bsky.feed.defs#requestLess',\n              'app.bsky.feed.defs#requestMore',\n              'app.bsky.feed.defs#clickthroughItem',\n              'app.bsky.feed.defs#clickthroughAuthor',\n              'app.bsky.feed.defs#clickthroughReposter',\n              'app.bsky.feed.defs#clickthroughEmbed',\n              'app.bsky.feed.defs#interactionSeen',\n              'app.bsky.feed.defs#interactionLike',\n              'app.bsky.feed.defs#interactionRepost',\n              'app.bsky.feed.defs#interactionReply',\n              'app.bsky.feed.defs#interactionQuote',\n              'app.bsky.feed.defs#interactionShare',\n            ],\n          },\n          feedContext: {\n            type: 'string',\n            description:\n              'Context on a feed item that was originally supplied by the feed generator on getFeedSkeleton.',\n            maxLength: 2000,\n          },\n        },\n      },\n      requestLess: {\n        type: 'token',\n        description:\n          'Request that less content like the given feed item be shown in the feed',\n      },\n      requestMore: {\n        type: 'token',\n        description:\n          'Request that more content like the given feed item be shown in the feed',\n      },\n      clickthroughItem: {\n        type: 'token',\n        description: 'User clicked through to the feed item',\n      },\n      clickthroughAuthor: {\n        type: 'token',\n        description: 'User clicked through to the author of the feed item',\n      },\n      clickthroughReposter: {\n        type: 'token',\n        description: 'User clicked through to the reposter of the feed item',\n      },\n      clickthroughEmbed: {\n        type: 'token',\n        description:\n          'User clicked through to the embedded content of the feed item',\n      },\n      contentModeUnspecified: {\n        type: 'token',\n        description: 'Declares the feed generator returns any types of posts.',\n      },\n      contentModeVideo: {\n        type: 'token',\n        description:\n          'Declares the feed generator returns posts containing app.bsky.embed.video embeds.',\n      },\n      interactionSeen: {\n        type: 'token',\n        description: 'Feed item was seen by user',\n      },\n      interactionLike: {\n        type: 'token',\n        description: 'User liked the feed item',\n      },\n      interactionRepost: {\n        type: 'token',\n        description: 'User reposted the feed item',\n      },\n      interactionReply: {\n        type: 'token',\n        description: 'User replied to the feed item',\n      },\n      interactionQuote: {\n        type: 'token',\n        description: 'User quoted the feed item',\n      },\n      interactionShare: {\n        type: 'token',\n        description: 'User shared the feed item',\n      },\n    },\n  },\n  AppBskyFeedDescribeFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.describeFeedGenerator',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about a feed generator, including policies and offered feed URIs. Does not require auth; implemented by Feed Generator services (not App View).',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'feeds'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.describeFeedGenerator#feed',\n                },\n              },\n              links: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.describeFeedGenerator#links',\n              },\n            },\n          },\n        },\n      },\n      feed: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      links: {\n        type: 'object',\n        properties: {\n          privacyPolicy: {\n            type: 'string',\n          },\n          termsOfService: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.generator',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          'Record declaring of the existence of a feed generator, and containing metadata about it. The record can exist in any repository.',\n        key: 'any',\n        record: {\n          type: 'object',\n          required: ['did', 'displayName', 'createdAt'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            displayName: {\n              type: 'string',\n              maxGraphemes: 24,\n              maxLength: 240,\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            acceptsInteractions: {\n              type: 'boolean',\n              description:\n                'Declaration that a feed accepts feedback interactions from a client through app.bsky.feed.sendInteractions',\n            },\n            labels: {\n              type: 'union',\n              description: 'Self-label values',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            contentMode: {\n              type: 'string',\n              knownValues: [\n                'app.bsky.feed.defs#contentModeUnspecified',\n                'app.bsky.feed.defs#contentModeVideo',\n              ],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetActorFeeds: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getActorFeeds',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a list of feeds (feed generator records) created by the actor (in the actor's repo).\",\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetActorLikes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getActorLikes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of posts liked by an actor. Requires auth, actor must be the requesting account.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BlockedActor',\n          },\n          {\n            name: 'BlockedByActor',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetAuthorFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getAuthorFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a view of an actor's 'author feed' (post and reposts by the author). Does not require auth.\",\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            filter: {\n              type: 'string',\n              description:\n                'Combinations of post/repost types to include in response.',\n              knownValues: [\n                'posts_with_replies',\n                'posts_no_replies',\n                'posts_with_media',\n                'posts_and_author_threads',\n                'posts_with_video',\n              ],\n              default: 'posts_with_replies',\n            },\n            includePins: {\n              type: 'boolean',\n              default: false,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BlockedActor',\n          },\n          {\n            name: 'BlockedByActor',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a hydrated feed from an actor's selected feed generator. Implemented by App View.\",\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedGenerator',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about a feed generator. Implemented by AppView.',\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'AT-URI of the feed generator record.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['view', 'isOnline', 'isValid'],\n            properties: {\n              view: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.defs#generatorView',\n              },\n              isOnline: {\n                type: 'boolean',\n                description:\n                  'Indicates whether the feed generator service has been online recently, or else seems to be inactive.',\n              },\n              isValid: {\n                type: 'boolean',\n                description:\n                  'Indicates whether the feed generator service is compatible with the record declaration.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetFeedGenerators: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedGenerators',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about a list of feed generators.',\n        parameters: {\n          type: 'params',\n          required: ['feeds'],\n          properties: {\n            feeds: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetFeedSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a skeleton of a feed provided by a feed generator. Auth is optional, depending on provider requirements, and provides the DID of the requester. Implemented by Feed Generator Service.',\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n              description:\n                'Reference to feed generator record describing the specific feed being requested.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#skeletonFeedPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetLikes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getLikes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get like records which reference a subject (by AT-URI and CID).',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'AT-URI of the subject (eg, a post record).',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'CID of the subject record (aka, specific version of record), to filter likes.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'likes'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              likes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.getLikes#like',\n                },\n              },\n            },\n          },\n        },\n      },\n      like: {\n        type: 'object',\n        required: ['indexedAt', 'createdAt', 'actor'],\n        properties: {\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          actor: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetListFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getListFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a feed of recent posts from a list (posts and reposts from any actors on the list). Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['list'],\n          properties: {\n            list: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the list record.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownList',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetPostThread: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getPostThread',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get posts in a thread. Does not require auth, but additional metadata and filtering will be applied for authed requests.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to post record.',\n            },\n            depth: {\n              type: 'integer',\n              description:\n                'How many levels of reply depth should be included in response.',\n              default: 6,\n              minimum: 0,\n              maximum: 1000,\n            },\n            parentHeight: {\n              type: 'integer',\n              description:\n                'How many levels of parent (and grandparent, etc) post to include.',\n              default: 80,\n              minimum: 0,\n              maximum: 1000,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['thread'],\n            properties: {\n              thread: {\n                type: 'union',\n                refs: [\n                  'lex:app.bsky.feed.defs#threadViewPost',\n                  'lex:app.bsky.feed.defs#notFoundPost',\n                  'lex:app.bsky.feed.defs#blockedPost',\n                ],\n              },\n              threadgate: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.defs#threadgateView',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'NotFound',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetPosts: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getPosts',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Gets post views for a specified list of posts (by AT-URI). This is sometimes referred to as 'hydrating' a 'feed skeleton'.\",\n        parameters: {\n          type: 'params',\n          required: ['uris'],\n          properties: {\n            uris: {\n              type: 'array',\n              description: 'List of post AT-URIs to return hydrated views for.',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetQuotes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getQuotes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of quotes for a given post.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) of post record',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'If supplied, filters to quotes of specific version (by CID) of the post record.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'posts'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetRepostedBy: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getRepostedBy',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of reposts for a given post.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) of post record',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'If supplied, filters to reposts of specific version (by CID) of the post record.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'repostedBy'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              repostedBy: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetSuggestedFeeds: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getSuggestedFeeds',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of suggested feeds (feed generators) for the requesting account.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetTimeline: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getTimeline',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a view of the requesting account's home timeline. This is expected to be some form of reverse-chronological feed.\",\n        parameters: {\n          type: 'params',\n          properties: {\n            algorithm: {\n              type: 'string',\n              description:\n                \"Variant 'algorithm' for timeline. Implementation-specific. NOTE: most feed flexibility has been moved to feed generator mechanism.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedLike: {\n    lexicon: 1,\n    id: 'app.bsky.feed.like',\n    defs: {\n      main: {\n        type: 'record',\n        description: \"Record declaring a 'like' of a piece of subject content.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedPost: {\n    lexicon: 1,\n    id: 'app.bsky.feed.post',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'Record containing a Bluesky post.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['text', 'createdAt'],\n          properties: {\n            text: {\n              type: 'string',\n              maxLength: 3000,\n              maxGraphemes: 300,\n              description:\n                'The primary post content. May be an empty string, if there are embeds.',\n            },\n            entities: {\n              type: 'array',\n              description: 'DEPRECATED: replaced by app.bsky.richtext.facet.',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.post#entity',\n              },\n            },\n            facets: {\n              type: 'array',\n              description:\n                'Annotations of text (mentions, URLs, hashtags, etc)',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            reply: {\n              type: 'ref',\n              ref: 'lex:app.bsky.feed.post#replyRef',\n            },\n            embed: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.embed.images',\n                'lex:app.bsky.embed.video',\n                'lex:app.bsky.embed.external',\n                'lex:app.bsky.embed.record',\n                'lex:app.bsky.embed.recordWithMedia',\n              ],\n            },\n            langs: {\n              type: 'array',\n              description:\n                'Indicates human language of post primary text content.',\n              maxLength: 3,\n              items: {\n                type: 'string',\n                format: 'language',\n              },\n            },\n            labels: {\n              type: 'union',\n              description:\n                'Self-label values for this post. Effectively content warnings.',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            tags: {\n              type: 'array',\n              description:\n                'Additional hashtags, in addition to any included in post text and facets.',\n              maxLength: 8,\n              items: {\n                type: 'string',\n                maxLength: 640,\n                maxGraphemes: 64,\n              },\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n              description:\n                'Client-declared timestamp when this post was originally created.',\n            },\n          },\n        },\n      },\n      replyRef: {\n        type: 'object',\n        required: ['root', 'parent'],\n        properties: {\n          root: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n          parent: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      entity: {\n        type: 'object',\n        description: 'Deprecated: use facets instead.',\n        required: ['index', 'type', 'value'],\n        properties: {\n          index: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.post#textSlice',\n          },\n          type: {\n            type: 'string',\n            description: \"Expected values are 'mention' and 'link'.\",\n          },\n          value: {\n            type: 'string',\n          },\n        },\n      },\n      textSlice: {\n        type: 'object',\n        description:\n          'Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.',\n        required: ['start', 'end'],\n        properties: {\n          start: {\n            type: 'integer',\n            minimum: 0,\n          },\n          end: {\n            type: 'integer',\n            minimum: 0,\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedPostgate: {\n    lexicon: 1,\n    id: 'app.bsky.feed.postgate',\n    defs: {\n      main: {\n        type: 'record',\n        key: 'tid',\n        description:\n          'Record defining interaction rules for a post. The record key (rkey) of the postgate record must match the record key of the post, and that record must be in the same repository.',\n        record: {\n          type: 'object',\n          required: ['post', 'createdAt'],\n          properties: {\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n            post: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the post record.',\n            },\n            detachedEmbeddingUris: {\n              type: 'array',\n              maxLength: 50,\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              description:\n                'List of AT-URIs embedding this post that the author has detached from.',\n            },\n            embeddingRules: {\n              description:\n                'List of rules defining who can embed this post. If value is an empty array or is undefined, no particular rules apply and anyone can embed.',\n              type: 'array',\n              maxLength: 5,\n              items: {\n                type: 'union',\n                refs: ['lex:app.bsky.feed.postgate#disableRule'],\n              },\n            },\n          },\n        },\n      },\n      disableRule: {\n        type: 'object',\n        description: 'Disables embedding of this post.',\n        properties: {},\n      },\n    },\n  },\n  AppBskyFeedRepost: {\n    lexicon: 1,\n    id: 'app.bsky.feed.repost',\n    defs: {\n      main: {\n        description:\n          \"Record representing a 'repost' of an existing Bluesky post.\",\n        type: 'record',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedSearchPosts: {\n    lexicon: 1,\n    id: 'app.bsky.feed.searchPosts',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find posts matching search criteria, returning views of those posts.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            sort: {\n              type: 'string',\n              knownValues: ['top', 'latest'],\n              default: 'latest',\n              description: 'Specifies the ranking order of results.',\n            },\n            since: {\n              type: 'string',\n              description:\n                \"Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD).\",\n            },\n            until: {\n              type: 'string',\n              description:\n                \"Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD).\",\n            },\n            mentions: {\n              type: 'string',\n              format: 'at-identifier',\n              description:\n                'Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.',\n            },\n            author: {\n              type: 'string',\n              format: 'at-identifier',\n              description:\n                'Filter to posts by the given account. Handles are resolved to DID before query-time.',\n            },\n            lang: {\n              type: 'string',\n              format: 'language',\n              description:\n                'Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.',\n            },\n            domain: {\n              type: 'string',\n              description:\n                'Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization.',\n            },\n            url: {\n              type: 'string',\n              format: 'uri',\n              description:\n                'Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.',\n            },\n            tag: {\n              type: 'array',\n              items: {\n                type: 'string',\n                maxLength: 640,\n                maxGraphemes: 64,\n              },\n              description:\n                \"Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedSendInteractions: {\n    lexicon: 1,\n    id: 'app.bsky.feed.sendInteractions',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Send information about interactions with feed items back to the feed generator that served them.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['interactions'],\n            properties: {\n              interactions: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#interaction',\n                },\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {},\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedThreadgate: {\n    lexicon: 1,\n    id: 'app.bsky.feed.threadgate',\n    defs: {\n      main: {\n        type: 'record',\n        key: 'tid',\n        description:\n          \"Record defining interaction gating rules for a thread (aka, reply controls). The record key (rkey) of the threadgate record must match the record key of the thread's root post, and that record must be in the same repository.\",\n        record: {\n          type: 'object',\n          required: ['post', 'createdAt'],\n          properties: {\n            post: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the post record.',\n            },\n            allow: {\n              description:\n                'List of rules defining who can reply to this post. If value is an empty array, no one can reply. If value is undefined, anyone can reply.',\n              type: 'array',\n              maxLength: 5,\n              items: {\n                type: 'union',\n                refs: [\n                  'lex:app.bsky.feed.threadgate#mentionRule',\n                  'lex:app.bsky.feed.threadgate#followerRule',\n                  'lex:app.bsky.feed.threadgate#followingRule',\n                  'lex:app.bsky.feed.threadgate#listRule',\n                ],\n              },\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n            hiddenReplies: {\n              type: 'array',\n              maxLength: 50,\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              description: 'List of hidden reply URIs.',\n            },\n          },\n        },\n      },\n      mentionRule: {\n        type: 'object',\n        description: 'Allow replies from actors mentioned in your post.',\n        properties: {},\n      },\n      followerRule: {\n        type: 'object',\n        description: 'Allow replies from actors who follow you.',\n        properties: {},\n      },\n      followingRule: {\n        type: 'object',\n        description: 'Allow replies from actors you follow.',\n        properties: {},\n      },\n      listRule: {\n        type: 'object',\n        description: 'Allow replies from actors on a list.',\n        required: ['list'],\n        properties: {\n          list: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphBlock: {\n    lexicon: 1,\n    id: 'app.bsky.graph.block',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          \"Record declaring a 'block' relationship against another account. NOTE: blocks are public in Bluesky; see blog posts for details.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n              description: 'DID of the account to be blocked.',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphDefs: {\n    lexicon: 1,\n    id: 'app.bsky.graph.defs',\n    defs: {\n      listViewBasic: {\n        type: 'object',\n        required: ['uri', 'cid', 'name', 'purpose'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          name: {\n            type: 'string',\n            maxLength: 64,\n            minLength: 1,\n          },\n          purpose: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listPurpose',\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          listItemCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listView: {\n        type: 'object',\n        required: ['uri', 'cid', 'creator', 'name', 'purpose', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          name: {\n            type: 'string',\n            maxLength: 64,\n            minLength: 1,\n          },\n          purpose: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listPurpose',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 300,\n            maxLength: 3000,\n          },\n          descriptionFacets: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          listItemCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listItemView: {\n        type: 'object',\n        required: ['uri', 'subject'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          subject: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n        },\n      },\n      starterPackView: {\n        type: 'object',\n        required: ['uri', 'cid', 'record', 'creator', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          record: {\n            type: 'unknown',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          list: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          listItemsSample: {\n            type: 'array',\n            maxLength: 12,\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.graph.defs#listItemView',\n            },\n          },\n          feeds: {\n            type: 'array',\n            maxLength: 3,\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.feed.defs#generatorView',\n            },\n          },\n          joinedWeekCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          joinedAllTimeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      starterPackViewBasic: {\n        type: 'object',\n        required: ['uri', 'cid', 'record', 'creator', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          record: {\n            type: 'unknown',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          listItemCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          joinedWeekCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          joinedAllTimeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listPurpose: {\n        type: 'string',\n        knownValues: [\n          'app.bsky.graph.defs#modlist',\n          'app.bsky.graph.defs#curatelist',\n          'app.bsky.graph.defs#referencelist',\n        ],\n      },\n      modlist: {\n        type: 'token',\n        description:\n          'A list of actors to apply an aggregate moderation action (mute/block) on.',\n      },\n      curatelist: {\n        type: 'token',\n        description:\n          'A list of actors used for curation purposes such as list feeds or interaction gating.',\n      },\n      referencelist: {\n        type: 'token',\n        description:\n          'A list of actors used for only for reference purposes such as within a starter pack.',\n      },\n      listViewerState: {\n        type: 'object',\n        properties: {\n          muted: {\n            type: 'boolean',\n          },\n          blocked: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      notFoundActor: {\n        type: 'object',\n        description: 'indicates that a handle or DID could not be resolved',\n        required: ['actor', 'notFound'],\n        properties: {\n          actor: {\n            type: 'string',\n            format: 'at-identifier',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      relationship: {\n        type: 'object',\n        description:\n          'lists the bi-directional graph relationships between one actor (not indicated in the object), and the target actors (the DID included in the object)',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          following: {\n            type: 'string',\n            format: 'at-uri',\n            description:\n              'if the actor follows this DID, this is the AT-URI of the follow record',\n          },\n          followedBy: {\n            type: 'string',\n            format: 'at-uri',\n            description:\n              'if the actor is followed by this DID, contains the AT-URI of the follow record',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphFollow: {\n    lexicon: 1,\n    id: 'app.bsky.graph.follow',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          \"Record declaring a social 'follow' relationship of another account. Duplicate follows will be ignored by the AppView.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetActorStarterPacks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getActorStarterPacks',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of starter packs created by the actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['starterPacks'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              starterPacks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetBlocks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates which accounts the requesting account is currently blocking. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blocks'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              blocks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetFollowers: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getFollowers',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates accounts which follow a specified account (actor).',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'followers'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              followers: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetFollows: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getFollows',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates accounts which a specified account (actor) follows.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'follows'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              follows: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetKnownFollowers: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getKnownFollowers',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates accounts which follow a specified account (actor) and are followed by the viewer.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'followers'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              followers: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getList',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Gets a 'view' (with additional context) of a specified list.\",\n        parameters: {\n          type: 'params',\n          required: ['list'],\n          properties: {\n            list: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) of the list record to hydrate.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list', 'items'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              list: {\n                type: 'ref',\n                ref: 'lex:app.bsky.graph.defs#listView',\n              },\n              items: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listItemView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetListBlocks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getListBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get mod lists that the requesting account (actor) is blocking. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetListMutes: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getListMutes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates mod lists that the requesting account (actor) currently has muted. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetLists: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getLists',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates the lists created by a specified account (actor).',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The account (actor) to enumerate lists from.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetMutes: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getMutes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates accounts that the requesting account (actor) currently has muted. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['mutes'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              mutes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetRelationships: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getRelationships',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates public relationships between one account, and a list of other accounts. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'Primary account requesting relationships for.',\n            },\n            others: {\n              type: 'array',\n              description:\n                \"List of 'other' accounts to be related back to the primary.\",\n              maxLength: 30,\n              items: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['relationships'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'did',\n              },\n              relationships: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:app.bsky.graph.defs#relationship',\n                    'lex:app.bsky.graph.defs#notFoundActor',\n                  ],\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ActorNotFound',\n            description:\n              'the primary actor at-identifier could not be resolved',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyGraphGetStarterPack: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getStarterPack',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Gets a view of a starter pack.',\n        parameters: {\n          type: 'params',\n          required: ['starterPack'],\n          properties: {\n            starterPack: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) of the starter pack record.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['starterPack'],\n            properties: {\n              starterPack: {\n                type: 'ref',\n                ref: 'lex:app.bsky.graph.defs#starterPackView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetStarterPacks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getStarterPacks',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get views for a list of starter packs.',\n        parameters: {\n          type: 'params',\n          required: ['uris'],\n          properties: {\n            uris: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['starterPacks'],\n            properties: {\n              starterPacks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetSuggestedFollowsByActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getSuggestedFollowsByActor',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates follows similar to a given account (actor). Expected use is to recommend additional accounts immediately after following one account.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['suggestions'],\n            properties: {\n              suggestions: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n              isFallback: {\n                type: 'boolean',\n                description:\n                  'If true, response has fallen-back to generic results, and is not scoped using relativeToDid',\n                default: false,\n              },\n              recId: {\n                type: 'integer',\n                description:\n                  'Snowflake for this recommendation, use when submitting recommendation events.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.list',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          'Record representing a list of accounts (actors). Scope includes both moderation-oriented lists and curration-oriented lists.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['name', 'purpose', 'createdAt'],\n          properties: {\n            purpose: {\n              type: 'ref',\n              description:\n                'Defines the purpose of the list (aka, moderation-oriented or curration-oriented)',\n              ref: 'lex:app.bsky.graph.defs#listPurpose',\n            },\n            name: {\n              type: 'string',\n              maxLength: 64,\n              minLength: 1,\n              description: 'Display name for list; can not be empty.',\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphListblock: {\n    lexicon: 1,\n    id: 'app.bsky.graph.listblock',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          'Record representing a block relationship against an entire an entire list of accounts (actors).',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the mod list record.',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphListitem: {\n    lexicon: 1,\n    id: 'app.bsky.graph.listitem',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          \"Record representing an account's inclusion on a specific list. The AppView will ignore duplicate listitem records.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'list', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n              description: 'The account which is included on the list.',\n            },\n            list: {\n              type: 'string',\n              format: 'at-uri',\n              description:\n                'Reference (AT-URI) to the list record (app.bsky.graph.list).',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteActor',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Creates a mute relationship for the specified account. Mutes are private in Bluesky. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteActorList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteActorList',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Creates a mute relationship for the specified list of accounts. Mutes are private in Bluesky. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list'],\n            properties: {\n              list: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteThread: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteThread',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Mutes a thread preventing notifications from the thread and any of its children. Mutes are private in Bluesky. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['root'],\n            properties: {\n              root: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphSearchStarterPacks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.searchStarterPacks',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find starter packs matching search criteria. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['starterPacks'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              starterPacks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphStarterpack: {\n    lexicon: 1,\n    id: 'app.bsky.graph.starterpack',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          'Record defining a starter pack of actors and feeds for new users.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['name', 'list', 'createdAt'],\n          properties: {\n            name: {\n              type: 'string',\n              maxGraphemes: 50,\n              maxLength: 500,\n              minLength: 1,\n              description: 'Display name for starter pack; can not be empty.',\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            list: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the list record.',\n            },\n            feeds: {\n              type: 'array',\n              maxLength: 3,\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.graph.starterpack#feedItem',\n              },\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n      feedItem: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteActor',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmutes the specified account. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteActorList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteActorList',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmutes the specified list of accounts. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list'],\n            properties: {\n              list: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteThread: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteThread',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmutes the specified thread. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['root'],\n            properties: {\n              root: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyLabelerDefs: {\n    lexicon: 1,\n    id: 'app.bsky.labeler.defs',\n    defs: {\n      labelerView: {\n        type: 'object',\n        required: ['uri', 'cid', 'creator', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          likeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.labeler.defs#labelerViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      labelerViewDetailed: {\n        type: 'object',\n        required: ['uri', 'cid', 'creator', 'policies', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          policies: {\n            type: 'ref',\n            ref: 'lex:app.bsky.labeler.defs#labelerPolicies',\n          },\n          likeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.labeler.defs#labelerViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          reasonTypes: {\n            description:\n              \"The set of report reason 'codes' which are in-scope for this service to review and action. These usually align to policy categories. If not defined (distinct from empty array), all reason types are allowed.\",\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.moderation.defs#reasonType',\n            },\n          },\n          subjectTypes: {\n            description:\n              'The set of subject types (account, record, etc) this service accepts reports on.',\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.moderation.defs#subjectType',\n            },\n          },\n          subjectCollections: {\n            type: 'array',\n            description:\n              'Set of record types (collection NSIDs) which can be reported to this service. If not defined (distinct from empty array), default is any record type.',\n            items: {\n              type: 'string',\n              format: 'nsid',\n            },\n          },\n        },\n      },\n      labelerViewerState: {\n        type: 'object',\n        properties: {\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      labelerPolicies: {\n        type: 'object',\n        required: ['labelValues'],\n        properties: {\n          labelValues: {\n            type: 'array',\n            description:\n              'The label values which this labeler publishes. May include global or custom labels.',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#labelValue',\n            },\n          },\n          labelValueDefinitions: {\n            type: 'array',\n            description:\n              'Label values created by this labeler and scoped exclusively to it. Labels defined here will override global label definitions for this labeler.',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#labelValueDefinition',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyLabelerGetServices: {\n    lexicon: 1,\n    id: 'app.bsky.labeler.getServices',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about a list of labeler services.',\n        parameters: {\n          type: 'params',\n          required: ['dids'],\n          properties: {\n            dids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n            detailed: {\n              type: 'boolean',\n              default: false,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['views'],\n            properties: {\n              views: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:app.bsky.labeler.defs#labelerView',\n                    'lex:app.bsky.labeler.defs#labelerViewDetailed',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyLabelerService: {\n    lexicon: 1,\n    id: 'app.bsky.labeler.service',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of the existence of labeler service.',\n        key: 'literal:self',\n        record: {\n          type: 'object',\n          required: ['policies', 'createdAt'],\n          properties: {\n            policies: {\n              type: 'ref',\n              ref: 'lex:app.bsky.labeler.defs#labelerPolicies',\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n            reasonTypes: {\n              description:\n                \"The set of report reason 'codes' which are in-scope for this service to review and action. These usually align to policy categories. If not defined (distinct from empty array), all reason types are allowed.\",\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:com.atproto.moderation.defs#reasonType',\n              },\n            },\n            subjectTypes: {\n              description:\n                'The set of subject types (account, record, etc) this service accepts reports on.',\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:com.atproto.moderation.defs#subjectType',\n              },\n            },\n            subjectCollections: {\n              type: 'array',\n              description:\n                'Set of record types (collection NSIDs) which can be reported to this service. If not defined (distinct from empty array), default is any record type.',\n              items: {\n                type: 'string',\n                format: 'nsid',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationGetUnreadCount: {\n    lexicon: 1,\n    id: 'app.bsky.notification.getUnreadCount',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Count the number of unread notifications for the requesting account. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            priority: {\n              type: 'boolean',\n            },\n            seenAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['count'],\n            properties: {\n              count: {\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationListNotifications: {\n    lexicon: 1,\n    id: 'app.bsky.notification.listNotifications',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerate notifications for the requesting account. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            reasons: {\n              description: 'Notification reasons to include in response.',\n              type: 'array',\n              items: {\n                type: 'string',\n                description:\n                  'A reason that matches the reason property of #notification.',\n              },\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            priority: {\n              type: 'boolean',\n            },\n            cursor: {\n              type: 'string',\n            },\n            seenAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['notifications'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              notifications: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.notification.listNotifications#notification',\n                },\n              },\n              priority: {\n                type: 'boolean',\n              },\n              seenAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n      notification: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'author',\n          'reason',\n          'record',\n          'isRead',\n          'indexedAt',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          reason: {\n            type: 'string',\n            description:\n              \"Expected values are 'like', 'repost', 'follow', 'mention', 'reply', 'quote', and 'starterpack-joined'.\",\n            knownValues: [\n              'like',\n              'repost',\n              'follow',\n              'mention',\n              'reply',\n              'quote',\n              'starterpack-joined',\n            ],\n          },\n          reasonSubject: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          record: {\n            type: 'unknown',\n          },\n          isRead: {\n            type: 'boolean',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationPutPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.notification.putPreferences',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Set notification-related preferences for an account. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['priority'],\n            properties: {\n              priority: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationRegisterPush: {\n    lexicon: 1,\n    id: 'app.bsky.notification.registerPush',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Register to receive push notifications, via a specified service, for the requesting account. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['serviceDid', 'token', 'platform', 'appId'],\n            properties: {\n              serviceDid: {\n                type: 'string',\n                format: 'did',\n              },\n              token: {\n                type: 'string',\n              },\n              platform: {\n                type: 'string',\n                knownValues: ['ios', 'android', 'web'],\n              },\n              appId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationUpdateSeen: {\n    lexicon: 1,\n    id: 'app.bsky.notification.updateSeen',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Notify server that the requesting account has seen notifications. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['seenAt'],\n            properties: {\n              seenAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyRichtextFacet: {\n    lexicon: 1,\n    id: 'app.bsky.richtext.facet',\n    defs: {\n      main: {\n        type: 'object',\n        description: 'Annotation of a sub-string within rich text.',\n        required: ['index', 'features'],\n        properties: {\n          index: {\n            type: 'ref',\n            ref: 'lex:app.bsky.richtext.facet#byteSlice',\n          },\n          features: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.richtext.facet#mention',\n                'lex:app.bsky.richtext.facet#link',\n                'lex:app.bsky.richtext.facet#tag',\n              ],\n            },\n          },\n        },\n      },\n      mention: {\n        type: 'object',\n        description:\n          \"Facet feature for mention of another account. The text is usually a handle, including a '@' prefix, but the facet reference is a DID.\",\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      link: {\n        type: 'object',\n        description:\n          'Facet feature for a URL. The text URL may have been simplified or truncated, but the facet reference should be a complete URL.',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n      tag: {\n        type: 'object',\n        description:\n          \"Facet feature for a hashtag. The text usually includes a '#' prefix, but the facet reference should not (except in the case of 'double hash tags').\",\n        required: ['tag'],\n        properties: {\n          tag: {\n            type: 'string',\n            maxLength: 640,\n            maxGraphemes: 64,\n          },\n        },\n      },\n      byteSlice: {\n        type: 'object',\n        description:\n          'Specifies the sub-string range a facet feature applies to. Start index is inclusive, end index is exclusive. Indices are zero-indexed, counting bytes of the UTF-8 encoded text. NOTE: some languages, like Javascript, use UTF-16 or Unicode codepoints for string slice indexing; in these languages, convert to byte arrays before working with facets.',\n        required: ['byteStart', 'byteEnd'],\n        properties: {\n          byteStart: {\n            type: 'integer',\n            minimum: 0,\n          },\n          byteEnd: {\n            type: 'integer',\n            minimum: 0,\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.defs',\n    defs: {\n      skeletonSearchPost: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonSearchActor: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      skeletonSearchStarterPack: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      trendingTopic: {\n        type: 'object',\n        required: ['topic', 'link'],\n        properties: {\n          topic: {\n            type: 'string',\n          },\n          displayName: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          link: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetConfig: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getConfig',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get miscellaneous runtime configuration.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [],\n            properties: {\n              checkEmailConfirmed: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetPopularFeedGenerators: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getPopularFeedGenerators',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'An unspecced view of globally popular feed generators.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            query: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetSuggestionsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getSuggestionsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a skeleton of suggested actors. Intended to be called and then hydrated through app.bsky.actor.getSuggestions',\n        parameters: {\n          type: 'params',\n          properties: {\n            viewer: {\n              type: 'string',\n              format: 'did',\n              description:\n                'DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            relativeToDid: {\n              type: 'string',\n              format: 'did',\n              description:\n                'DID of the account to get suggestions relative to. If not provided, suggestions will be based on the viewer.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchActor',\n                },\n              },\n              relativeToDid: {\n                type: 'string',\n                format: 'did',\n                description:\n                  'DID of the account these suggestions are relative to. If this is returned undefined, suggestions are based on the viewer.',\n              },\n              recId: {\n                type: 'integer',\n                description:\n                  'Snowflake for this recommendation, use when submitting recommendation events.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetTaggedSuggestions: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getTaggedSuggestions',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of suggestions (feeds and users) tagged with categories',\n        parameters: {\n          type: 'params',\n          properties: {},\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['suggestions'],\n            properties: {\n              suggestions: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.getTaggedSuggestions#suggestion',\n                },\n              },\n            },\n          },\n        },\n      },\n      suggestion: {\n        type: 'object',\n        required: ['tag', 'subjectType', 'subject'],\n        properties: {\n          tag: {\n            type: 'string',\n          },\n          subjectType: {\n            type: 'string',\n            knownValues: ['actor', 'feed'],\n          },\n          subject: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetTrendingTopics: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getTrendingTopics',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of trending topics',\n        parameters: {\n          type: 'params',\n          properties: {\n            viewer: {\n              type: 'string',\n              format: 'did',\n              description:\n                'DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 25,\n              default: 10,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['topics', 'suggested'],\n            properties: {\n              topics: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#trendingTopic',\n                },\n              },\n              suggested: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#trendingTopic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedSearchActorsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchActorsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Actors (profile) search, returns only skeleton.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax.',\n            },\n            viewer: {\n              type: 'string',\n              format: 'did',\n              description:\n                'DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.',\n            },\n            typeahead: {\n              type: 'boolean',\n              description: \"If true, acts as fast/simple 'typeahead' query.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchActor',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyUnspeccedSearchPostsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchPostsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Posts search, returns only skeleton',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            sort: {\n              type: 'string',\n              knownValues: ['top', 'latest'],\n              default: 'latest',\n              description: 'Specifies the ranking order of results.',\n            },\n            since: {\n              type: 'string',\n              description:\n                \"Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD).\",\n            },\n            until: {\n              type: 'string',\n              description:\n                \"Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD).\",\n            },\n            mentions: {\n              type: 'string',\n              format: 'at-identifier',\n              description:\n                'Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.',\n            },\n            author: {\n              type: 'string',\n              format: 'at-identifier',\n              description:\n                'Filter to posts by the given account. Handles are resolved to DID before query-time.',\n            },\n            lang: {\n              type: 'string',\n              format: 'language',\n              description:\n                'Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.',\n            },\n            domain: {\n              type: 'string',\n              description:\n                'Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization.',\n            },\n            url: {\n              type: 'string',\n              format: 'uri',\n              description:\n                'Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.',\n            },\n            tag: {\n              type: 'array',\n              items: {\n                type: 'string',\n                maxLength: 640,\n                maxGraphemes: 64,\n              },\n              description:\n                \"Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching.\",\n            },\n            viewer: {\n              type: 'string',\n              format: 'did',\n              description:\n                \"DID of the account making the request (not included for public/unauthenticated queries). Used for 'from:me' queries.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyUnspeccedSearchStarterPacksSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchStarterPacksSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Starter Pack search, returns only skeleton.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            viewer: {\n              type: 'string',\n              format: 'did',\n              description:\n                'DID of the account making the request (not included for public/unauthenticated queries).',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['starterPacks'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              starterPacks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchStarterPack',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyVideoDefs: {\n    lexicon: 1,\n    id: 'app.bsky.video.defs',\n    defs: {\n      jobStatus: {\n        type: 'object',\n        required: ['jobId', 'did', 'state'],\n        properties: {\n          jobId: {\n            type: 'string',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          state: {\n            type: 'string',\n            description:\n              'The state of the video processing job. All values not listed as a known value indicate that the job is in process.',\n            knownValues: ['JOB_STATE_COMPLETED', 'JOB_STATE_FAILED'],\n          },\n          progress: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 100,\n            description: 'Progress within the current processing state.',\n          },\n          blob: {\n            type: 'blob',\n          },\n          error: {\n            type: 'string',\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyVideoGetJobStatus: {\n    lexicon: 1,\n    id: 'app.bsky.video.getJobStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get status details for a video processing job.',\n        parameters: {\n          type: 'params',\n          required: ['jobId'],\n          properties: {\n            jobId: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['jobStatus'],\n            properties: {\n              jobStatus: {\n                type: 'ref',\n                ref: 'lex:app.bsky.video.defs#jobStatus',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyVideoGetUploadLimits: {\n    lexicon: 1,\n    id: 'app.bsky.video.getUploadLimits',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get video upload limits for the authenticated user.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['canUpload'],\n            properties: {\n              canUpload: {\n                type: 'boolean',\n              },\n              remainingDailyVideos: {\n                type: 'integer',\n              },\n              remainingDailyBytes: {\n                type: 'integer',\n              },\n              message: {\n                type: 'string',\n              },\n              error: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyVideoUploadVideo: {\n    lexicon: 1,\n    id: 'app.bsky.video.uploadVideo',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Upload a video to be processed then stored on the PDS.',\n        input: {\n          encoding: 'video/mp4',\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['jobStatus'],\n            properties: {\n              jobStatus: {\n                type: 'ref',\n                ref: 'lex:app.bsky.video.defs#jobStatus',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyActorDeclaration: {\n    lexicon: 1,\n    id: 'chat.bsky.actor.declaration',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a Bluesky chat account.',\n        key: 'literal:self',\n        record: {\n          type: 'object',\n          required: ['allowIncoming'],\n          properties: {\n            allowIncoming: {\n              type: 'string',\n              knownValues: ['all', 'none', 'following'],\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyActorDefs: {\n    lexicon: 1,\n    id: 'chat.bsky.actor.defs',\n    defs: {\n      profileViewBasic: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          associated: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociated',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          chatDisabled: {\n            type: 'boolean',\n            description:\n              'Set to true when the actor cannot actively participate in converations',\n          },\n        },\n      },\n    },\n  },\n  ChatBskyActorDeleteAccount: {\n    lexicon: 1,\n    id: 'chat.bsky.actor.deleteAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {},\n          },\n        },\n      },\n    },\n  },\n  ChatBskyActorExportAccountData: {\n    lexicon: 1,\n    id: 'chat.bsky.actor.exportAccountData',\n    defs: {\n      main: {\n        type: 'query',\n        output: {\n          encoding: 'application/jsonl',\n        },\n      },\n    },\n  },\n  ChatBskyConvoAcceptConvo: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.acceptConvo',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              rev: {\n                description:\n                  'Rev when the convo was accepted. If not present, the convo was already accepted.',\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoDefs: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.defs',\n    defs: {\n      messageRef: {\n        type: 'object',\n        required: ['did', 'messageId', 'convoId'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          convoId: {\n            type: 'string',\n          },\n          messageId: {\n            type: 'string',\n          },\n        },\n      },\n      messageInput: {\n        type: 'object',\n        required: ['text'],\n        properties: {\n          text: {\n            type: 'string',\n            maxLength: 10000,\n            maxGraphemes: 1000,\n          },\n          facets: {\n            type: 'array',\n            description: 'Annotations of text (mentions, URLs, hashtags, etc)',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          embed: {\n            type: 'union',\n            refs: ['lex:app.bsky.embed.record'],\n          },\n        },\n      },\n      messageView: {\n        type: 'object',\n        required: ['id', 'rev', 'text', 'sender', 'sentAt'],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          rev: {\n            type: 'string',\n          },\n          text: {\n            type: 'string',\n            maxLength: 10000,\n            maxGraphemes: 1000,\n          },\n          facets: {\n            type: 'array',\n            description: 'Annotations of text (mentions, URLs, hashtags, etc)',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          embed: {\n            type: 'union',\n            refs: ['lex:app.bsky.embed.record#view'],\n          },\n          sender: {\n            type: 'ref',\n            ref: 'lex:chat.bsky.convo.defs#messageViewSender',\n          },\n          sentAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      deletedMessageView: {\n        type: 'object',\n        required: ['id', 'rev', 'sender', 'sentAt'],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          rev: {\n            type: 'string',\n          },\n          sender: {\n            type: 'ref',\n            ref: 'lex:chat.bsky.convo.defs#messageViewSender',\n          },\n          sentAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      messageViewSender: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      convoView: {\n        type: 'object',\n        required: ['id', 'rev', 'members', 'muted', 'unreadCount'],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          rev: {\n            type: 'string',\n          },\n          members: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:chat.bsky.actor.defs#profileViewBasic',\n            },\n          },\n          lastMessage: {\n            type: 'union',\n            refs: [\n              'lex:chat.bsky.convo.defs#messageView',\n              'lex:chat.bsky.convo.defs#deletedMessageView',\n            ],\n          },\n          muted: {\n            type: 'boolean',\n          },\n          status: {\n            type: 'string',\n            knownValues: ['request', 'accepted'],\n          },\n          unreadCount: {\n            type: 'integer',\n          },\n        },\n      },\n      logBeginConvo: {\n        type: 'object',\n        required: ['rev', 'convoId'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n        },\n      },\n      logAcceptConvo: {\n        type: 'object',\n        required: ['rev', 'convoId'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n        },\n      },\n      logLeaveConvo: {\n        type: 'object',\n        required: ['rev', 'convoId'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n        },\n      },\n      logMuteConvo: {\n        type: 'object',\n        required: ['rev', 'convoId'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n        },\n      },\n      logUnmuteConvo: {\n        type: 'object',\n        required: ['rev', 'convoId'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n        },\n      },\n      logCreateMessage: {\n        type: 'object',\n        required: ['rev', 'convoId', 'message'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n          message: {\n            type: 'union',\n            refs: [\n              'lex:chat.bsky.convo.defs#messageView',\n              'lex:chat.bsky.convo.defs#deletedMessageView',\n            ],\n          },\n        },\n      },\n      logDeleteMessage: {\n        type: 'object',\n        required: ['rev', 'convoId', 'message'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n          message: {\n            type: 'union',\n            refs: [\n              'lex:chat.bsky.convo.defs#messageView',\n              'lex:chat.bsky.convo.defs#deletedMessageView',\n            ],\n          },\n        },\n      },\n      logReadMessage: {\n        type: 'object',\n        required: ['rev', 'convoId', 'message'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n          message: {\n            type: 'union',\n            refs: [\n              'lex:chat.bsky.convo.defs#messageView',\n              'lex:chat.bsky.convo.defs#deletedMessageView',\n            ],\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoDeleteMessageForSelf: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.deleteMessageForSelf',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId', 'messageId'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n              messageId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:chat.bsky.convo.defs#deletedMessageView',\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoGetConvo: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.getConvo',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: ['convoId'],\n          properties: {\n            convoId: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convo'],\n            properties: {\n              convo: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#convoView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoGetConvoAvailability: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.getConvoAvailability',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get whether the requester and the other members can chat. If an existing convo is found for these members, it is returned.',\n        parameters: {\n          type: 'params',\n          required: ['members'],\n          properties: {\n            members: {\n              type: 'array',\n              minLength: 1,\n              maxLength: 10,\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['canChat'],\n            properties: {\n              canChat: {\n                type: 'boolean',\n              },\n              convo: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#convoView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoGetConvoForMembers: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.getConvoForMembers',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: ['members'],\n          properties: {\n            members: {\n              type: 'array',\n              minLength: 1,\n              maxLength: 10,\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convo'],\n            properties: {\n              convo: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#convoView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoGetLog: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.getLog',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: [],\n          properties: {\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['logs'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              logs: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:chat.bsky.convo.defs#logBeginConvo',\n                    'lex:chat.bsky.convo.defs#logAcceptConvo',\n                    'lex:chat.bsky.convo.defs#logLeaveConvo',\n                    'lex:chat.bsky.convo.defs#logCreateMessage',\n                    'lex:chat.bsky.convo.defs#logDeleteMessage',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoGetMessages: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.getMessages',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: ['convoId'],\n          properties: {\n            convoId: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['messages'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              messages: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:chat.bsky.convo.defs#messageView',\n                    'lex:chat.bsky.convo.defs#deletedMessageView',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoLeaveConvo: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.leaveConvo',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId', 'rev'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n              rev: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoListConvos: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.listConvos',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            readState: {\n              type: 'string',\n              knownValues: ['unread'],\n            },\n            status: {\n              type: 'string',\n              knownValues: ['request', 'accepted'],\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              convos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:chat.bsky.convo.defs#convoView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoMuteConvo: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.muteConvo',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convo'],\n            properties: {\n              convo: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#convoView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoSendMessage: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.sendMessage',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId', 'message'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n              message: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#messageInput',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:chat.bsky.convo.defs#messageView',\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoSendMessageBatch: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.sendMessageBatch',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['items'],\n            properties: {\n              items: {\n                type: 'array',\n                maxLength: 100,\n                items: {\n                  type: 'ref',\n                  ref: 'lex:chat.bsky.convo.sendMessageBatch#batchItem',\n                },\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['items'],\n            properties: {\n              items: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:chat.bsky.convo.defs#messageView',\n                },\n              },\n            },\n          },\n        },\n      },\n      batchItem: {\n        type: 'object',\n        required: ['convoId', 'message'],\n        properties: {\n          convoId: {\n            type: 'string',\n          },\n          message: {\n            type: 'ref',\n            ref: 'lex:chat.bsky.convo.defs#messageInput',\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoUnmuteConvo: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.unmuteConvo',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convo'],\n            properties: {\n              convo: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#convoView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoUpdateAllRead: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.updateAllRead',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              status: {\n                type: 'string',\n                knownValues: ['request', 'accepted'],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['updatedCount'],\n            properties: {\n              updatedCount: {\n                description: 'The count of updated convos.',\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoUpdateRead: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.updateRead',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n              messageId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convo'],\n            properties: {\n              convo: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#convoView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyModerationGetActorMetadata: {\n    lexicon: 1,\n    id: 'chat.bsky.moderation.getActorMetadata',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['day', 'month', 'all'],\n            properties: {\n              day: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.moderation.getActorMetadata#metadata',\n              },\n              month: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.moderation.getActorMetadata#metadata',\n              },\n              all: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.moderation.getActorMetadata#metadata',\n              },\n            },\n          },\n        },\n      },\n      metadata: {\n        type: 'object',\n        required: [\n          'messagesSent',\n          'messagesReceived',\n          'convos',\n          'convosStarted',\n        ],\n        properties: {\n          messagesSent: {\n            type: 'integer',\n          },\n          messagesReceived: {\n            type: 'integer',\n          },\n          convos: {\n            type: 'integer',\n          },\n          convosStarted: {\n            type: 'integer',\n          },\n        },\n      },\n    },\n  },\n  ChatBskyModerationGetMessageContext: {\n    lexicon: 1,\n    id: 'chat.bsky.moderation.getMessageContext',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: ['messageId'],\n          properties: {\n            convoId: {\n              type: 'string',\n              description:\n                'Conversation that the message is from. NOTE: this field will eventually be required.',\n            },\n            messageId: {\n              type: 'string',\n            },\n            before: {\n              type: 'integer',\n              default: 5,\n            },\n            after: {\n              type: 'integer',\n              default: 5,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['messages'],\n            properties: {\n              messages: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:chat.bsky.convo.defs#messageView',\n                    'lex:chat.bsky.convo.defs#deletedMessageView',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyModerationUpdateActorAccess: {\n    lexicon: 1,\n    id: 'chat.bsky.moderation.updateActorAccess',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor', 'allowAccess'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'did',\n              },\n              allowAccess: {\n                type: 'boolean',\n              },\n              ref: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationCreateTemplate: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.createTemplate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Administrative action to create a new, re-usable communication (email for now) template.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'contentMarkdown', 'name'],\n            properties: {\n              name: {\n                type: 'string',\n                description: 'Name of the template.',\n              },\n              contentMarkdown: {\n                type: 'string',\n                description:\n                  'Content of the template, markdown supported, can contain variable placeholders.',\n              },\n              subject: {\n                type: 'string',\n                description: 'Subject of the message, used in emails.',\n              },\n              lang: {\n                type: 'string',\n                format: 'language',\n                description: 'Message language.',\n              },\n              createdBy: {\n                type: 'string',\n                format: 'did',\n                description: 'DID of the user who is creating the template.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.communication.defs#templateView',\n          },\n        },\n        errors: [\n          {\n            name: 'DuplicateTemplateName',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneCommunicationDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.defs',\n    defs: {\n      templateView: {\n        type: 'object',\n        required: [\n          'id',\n          'name',\n          'contentMarkdown',\n          'disabled',\n          'lastUpdatedBy',\n          'createdAt',\n          'updatedAt',\n        ],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          name: {\n            type: 'string',\n            description: 'Name of the template.',\n          },\n          subject: {\n            type: 'string',\n            description:\n              'Content of the template, can contain markdown and variable placeholders.',\n          },\n          contentMarkdown: {\n            type: 'string',\n            description: 'Subject of the message, used in emails.',\n          },\n          disabled: {\n            type: 'boolean',\n          },\n          lang: {\n            type: 'string',\n            format: 'language',\n            description: 'Message language.',\n          },\n          lastUpdatedBy: {\n            type: 'string',\n            format: 'did',\n            description: 'DID of the user who last updated the template.',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationDeleteTemplate: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.deleteTemplate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete a communication template.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['id'],\n            properties: {\n              id: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationListTemplates: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.listTemplates',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get list of all communication templates.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['communicationTemplates'],\n            properties: {\n              communicationTemplates: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.communication.defs#templateView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationUpdateTemplate: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.updateTemplate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Administrative action to update an existing communication template. Allows passing partial fields to patch specific fields only.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['id'],\n            properties: {\n              id: {\n                type: 'string',\n                description: 'ID of the template to be updated.',\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the template.',\n              },\n              lang: {\n                type: 'string',\n                format: 'language',\n                description: 'Message language.',\n              },\n              contentMarkdown: {\n                type: 'string',\n                description:\n                  'Content of the template, markdown supported, can contain variable placeholders.',\n              },\n              subject: {\n                type: 'string',\n                description: 'Subject of the message, used in emails.',\n              },\n              updatedBy: {\n                type: 'string',\n                format: 'did',\n                description: 'DID of the user who is updating the template.',\n              },\n              disabled: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.communication.defs#templateView',\n          },\n        },\n        errors: [\n          {\n            name: 'DuplicateTemplateName',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneModerationDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.defs',\n    defs: {\n      modEventView: {\n        type: 'object',\n        required: [\n          'id',\n          'event',\n          'subject',\n          'subjectBlobCids',\n          'createdBy',\n          'createdAt',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          event: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#modEventTakedown',\n              'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n              'lex:tools.ozone.moderation.defs#modEventComment',\n              'lex:tools.ozone.moderation.defs#modEventReport',\n              'lex:tools.ozone.moderation.defs#modEventLabel',\n              'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n              'lex:tools.ozone.moderation.defs#modEventEscalate',\n              'lex:tools.ozone.moderation.defs#modEventMute',\n              'lex:tools.ozone.moderation.defs#modEventUnmute',\n              'lex:tools.ozone.moderation.defs#modEventMuteReporter',\n              'lex:tools.ozone.moderation.defs#modEventUnmuteReporter',\n              'lex:tools.ozone.moderation.defs#modEventEmail',\n              'lex:tools.ozone.moderation.defs#modEventResolveAppeal',\n              'lex:tools.ozone.moderation.defs#modEventDivert',\n              'lex:tools.ozone.moderation.defs#modEventTag',\n              'lex:tools.ozone.moderation.defs#accountEvent',\n              'lex:tools.ozone.moderation.defs#identityEvent',\n              'lex:tools.ozone.moderation.defs#recordEvent',\n              'lex:tools.ozone.moderation.defs#modEventPriorityScore',\n            ],\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n              'lex:chat.bsky.convo.defs#messageRef',\n            ],\n          },\n          subjectBlobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          creatorHandle: {\n            type: 'string',\n          },\n          subjectHandle: {\n            type: 'string',\n          },\n        },\n      },\n      modEventViewDetail: {\n        type: 'object',\n        required: [\n          'id',\n          'event',\n          'subject',\n          'subjectBlobs',\n          'createdBy',\n          'createdAt',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          event: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#modEventTakedown',\n              'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n              'lex:tools.ozone.moderation.defs#modEventComment',\n              'lex:tools.ozone.moderation.defs#modEventReport',\n              'lex:tools.ozone.moderation.defs#modEventLabel',\n              'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n              'lex:tools.ozone.moderation.defs#modEventEscalate',\n              'lex:tools.ozone.moderation.defs#modEventMute',\n              'lex:tools.ozone.moderation.defs#modEventUnmute',\n              'lex:tools.ozone.moderation.defs#modEventMuteReporter',\n              'lex:tools.ozone.moderation.defs#modEventUnmuteReporter',\n              'lex:tools.ozone.moderation.defs#modEventEmail',\n              'lex:tools.ozone.moderation.defs#modEventResolveAppeal',\n              'lex:tools.ozone.moderation.defs#modEventDivert',\n              'lex:tools.ozone.moderation.defs#modEventTag',\n              'lex:tools.ozone.moderation.defs#accountEvent',\n              'lex:tools.ozone.moderation.defs#identityEvent',\n              'lex:tools.ozone.moderation.defs#recordEvent',\n              'lex:tools.ozone.moderation.defs#modEventPriorityScore',\n            ],\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#repoView',\n              'lex:tools.ozone.moderation.defs#repoViewNotFound',\n              'lex:tools.ozone.moderation.defs#recordView',\n              'lex:tools.ozone.moderation.defs#recordViewNotFound',\n            ],\n          },\n          subjectBlobs: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:tools.ozone.moderation.defs#blobView',\n            },\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      subjectStatusView: {\n        type: 'object',\n        required: ['id', 'subject', 'createdAt', 'updatedAt', 'reviewState'],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n            ],\n          },\n          hosting: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#accountHosting',\n              'lex:tools.ozone.moderation.defs#recordHosting',\n            ],\n          },\n          subjectBlobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n          subjectRepoHandle: {\n            type: 'string',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing when the last update was made to the moderation status of the subject',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing the first moderation status impacting event was emitted on the subject',\n          },\n          reviewState: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#subjectReviewState',\n          },\n          comment: {\n            type: 'string',\n            description: 'Sticky comment on the subject.',\n          },\n          priorityScore: {\n            type: 'integer',\n            description:\n              'Numeric value representing the level of priority. Higher score means higher priority.',\n            minimum: 0,\n            maximum: 100,\n          },\n          muteUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n          muteReportingUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastReviewedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          lastReviewedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastReportedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastAppealedAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing when the author of the subject appealed a moderation action',\n          },\n          takendown: {\n            type: 'boolean',\n          },\n          appealed: {\n            type: 'boolean',\n            description:\n              'True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators.',\n          },\n          suspendUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n          tags: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          accountStats: {\n            description: 'Statistics related to the account subject',\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#accountStats',\n          },\n          recordsStats: {\n            description:\n              \"Statistics related to the record subjects authored by the subject's account\",\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#recordsStats',\n          },\n        },\n      },\n      accountStats: {\n        description: 'Statistics about a particular account subject',\n        type: 'object',\n        properties: {\n          reportCount: {\n            description: 'Total number of reports on the account',\n            type: 'integer',\n          },\n          appealCount: {\n            description:\n              'Total number of appeals against a moderation action on the account',\n            type: 'integer',\n          },\n          suspendCount: {\n            description: 'Number of times the account was suspended',\n            type: 'integer',\n          },\n          escalateCount: {\n            description: 'Number of times the account was escalated',\n            type: 'integer',\n          },\n          takedownCount: {\n            description: 'Number of times the account was taken down',\n            type: 'integer',\n          },\n        },\n      },\n      recordsStats: {\n        description: 'Statistics about a set of record subject items',\n        type: 'object',\n        properties: {\n          totalReports: {\n            description:\n              'Cumulative sum of the number of reports on the items in the set',\n            type: 'integer',\n          },\n          reportedCount: {\n            description: 'Number of items that were reported at least once',\n            type: 'integer',\n          },\n          escalatedCount: {\n            description: 'Number of items that were escalated at least once',\n            type: 'integer',\n          },\n          appealedCount: {\n            description: 'Number of items that were appealed at least once',\n            type: 'integer',\n          },\n          subjectCount: {\n            description: 'Total number of item in the set',\n            type: 'integer',\n          },\n          pendingCount: {\n            description:\n              'Number of item currently in \"reviewOpen\" or \"reviewEscalated\" state',\n            type: 'integer',\n          },\n          processedCount: {\n            description:\n              'Number of item currently in \"reviewNone\" or \"reviewClosed\" state',\n            type: 'integer',\n          },\n          takendownCount: {\n            description: 'Number of item currently taken down',\n            type: 'integer',\n          },\n        },\n      },\n      subjectReviewState: {\n        type: 'string',\n        knownValues: [\n          'lex:tools.ozone.moderation.defs#reviewOpen',\n          'lex:tools.ozone.moderation.defs#reviewEscalated',\n          'lex:tools.ozone.moderation.defs#reviewClosed',\n          'lex:tools.ozone.moderation.defs#reviewNone',\n        ],\n      },\n      reviewOpen: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator',\n      },\n      reviewEscalated: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator',\n      },\n      reviewClosed: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator',\n      },\n      reviewNone: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Unnecessary. Indicates that the subject does not need a review at the moment but there is probably some moderation related metadata available for it',\n      },\n      modEventTakedown: {\n        type: 'object',\n        description: 'Take down a subject permanently or temporarily',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description:\n              'Indicates how long the takedown should be in effect before automatically expiring.',\n          },\n          acknowledgeAccountSubjects: {\n            type: 'boolean',\n            description:\n              'If true, all other reports on content authored by this account will be resolved (acknowledged).',\n          },\n          policies: {\n            type: 'array',\n            maxLength: 5,\n            items: {\n              type: 'string',\n            },\n            description:\n              'Names/Keywords of the policies that drove the decision.',\n          },\n        },\n      },\n      modEventReverseTakedown: {\n        type: 'object',\n        description: 'Revert take down action on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventResolveAppeal: {\n        type: 'object',\n        description: 'Resolve appeal on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe resolution.',\n          },\n        },\n      },\n      modEventComment: {\n        type: 'object',\n        description:\n          'Add a comment to a subject. An empty comment will clear any previously set sticky comment.',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          sticky: {\n            type: 'boolean',\n            description: 'Make the comment persistent on the subject',\n          },\n        },\n      },\n      modEventReport: {\n        type: 'object',\n        description: 'Report a subject',\n        required: ['reportType'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          isReporterMuted: {\n            type: 'boolean',\n            description:\n              \"Set to true if the reporter was muted from reporting at the time of the event. These reports won't impact the reviewState of the subject.\",\n          },\n          reportType: {\n            type: 'ref',\n            ref: 'lex:com.atproto.moderation.defs#reasonType',\n          },\n        },\n      },\n      modEventLabel: {\n        type: 'object',\n        description: 'Apply/Negate labels on a subject',\n        required: ['createLabelVals', 'negateLabelVals'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          createLabelVals: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          negateLabelVals: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          durationInHours: {\n            type: 'integer',\n            description:\n              'Indicates how long the label will remain on the subject. Only applies on labels that are being added.',\n          },\n        },\n      },\n      modEventPriorityScore: {\n        type: 'object',\n        description:\n          'Set priority score of the subject. Higher score means higher priority.',\n        required: ['score'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          score: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 100,\n          },\n        },\n      },\n      modEventAcknowledge: {\n        type: 'object',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          acknowledgeAccountSubjects: {\n            type: 'boolean',\n            description:\n              'If true, all other reports on content authored by this account will be resolved (acknowledged).',\n          },\n        },\n      },\n      modEventEscalate: {\n        type: 'object',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n        },\n      },\n      modEventMute: {\n        type: 'object',\n        description: 'Mute incoming reports on a subject',\n        required: ['durationInHours'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description: 'Indicates how long the subject should remain muted.',\n          },\n        },\n      },\n      modEventUnmute: {\n        type: 'object',\n        description: 'Unmute action on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventMuteReporter: {\n        type: 'object',\n        description: 'Mute incoming reports from an account',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description:\n              'Indicates how long the account should remain muted. Falsy value here means a permanent mute.',\n          },\n        },\n      },\n      modEventUnmuteReporter: {\n        type: 'object',\n        description: 'Unmute incoming reports from an account',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventEmail: {\n        type: 'object',\n        description: 'Keep a log of outgoing email to a user',\n        required: ['subjectLine'],\n        properties: {\n          subjectLine: {\n            type: 'string',\n            description: 'The subject line of the email sent to the user.',\n          },\n          content: {\n            type: 'string',\n            description: 'The content of the email sent to the user.',\n          },\n          comment: {\n            type: 'string',\n            description: 'Additional comment about the outgoing comm.',\n          },\n        },\n      },\n      modEventDivert: {\n        type: 'object',\n        description:\n          \"Divert a record's blobs to a 3rd party service for further scanning/tagging\",\n        properties: {\n          comment: {\n            type: 'string',\n          },\n        },\n      },\n      modEventTag: {\n        type: 'object',\n        description: 'Add/Remove a tag on a subject',\n        required: ['add', 'remove'],\n        properties: {\n          add: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n            description:\n              \"Tags to be added to the subject. If already exists, won't be duplicated.\",\n          },\n          remove: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n            description:\n              \"Tags to be removed to the subject. Ignores a tag If it doesn't exist, won't be duplicated.\",\n          },\n          comment: {\n            type: 'string',\n            description: 'Additional comment about added/removed tags.',\n          },\n        },\n      },\n      accountEvent: {\n        type: 'object',\n        description:\n          'Logs account status related events on a repo subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking.',\n        required: ['timestamp', 'active'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          active: {\n            type: 'boolean',\n            description:\n              'Indicates that the account has a repository which can be fetched from the host that emitted this event.',\n          },\n          status: {\n            type: 'string',\n            knownValues: [\n              'unknown',\n              'deactivated',\n              'deleted',\n              'takendown',\n              'suspended',\n              'tombstoned',\n            ],\n          },\n          timestamp: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      identityEvent: {\n        type: 'object',\n        description:\n          'Logs identity related events on a repo subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking.',\n        required: ['timestamp'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          pdsHost: {\n            type: 'string',\n            format: 'uri',\n          },\n          tombstone: {\n            type: 'boolean',\n          },\n          timestamp: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      recordEvent: {\n        type: 'object',\n        description:\n          'Logs lifecycle event on a record subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking.',\n        required: ['timestamp', 'op'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          op: {\n            type: 'string',\n            knownValues: ['create', 'update', 'delete'],\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          timestamp: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      repoView: {\n        type: 'object',\n        required: [\n          'did',\n          'handle',\n          'relatedRecords',\n          'indexedAt',\n          'moderation',\n        ],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderation',\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n          deactivatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          threatSignatures: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#threatSignature',\n            },\n          },\n        },\n      },\n      repoViewDetail: {\n        type: 'object',\n        required: [\n          'did',\n          'handle',\n          'relatedRecords',\n          'indexedAt',\n          'moderation',\n        ],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderationDetail',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invites: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCode',\n            },\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n          emailConfirmedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          deactivatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          threatSignatures: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#threatSignature',\n            },\n          },\n        },\n      },\n      repoViewNotFound: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      recordView: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'value',\n          'blobCids',\n          'indexedAt',\n          'moderation',\n          'repo',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n          blobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderation',\n          },\n          repo: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#repoView',\n          },\n        },\n      },\n      recordViewDetail: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'value',\n          'blobs',\n          'indexedAt',\n          'moderation',\n          'repo',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n          blobs: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:tools.ozone.moderation.defs#blobView',\n            },\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderationDetail',\n          },\n          repo: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#repoView',\n          },\n        },\n      },\n      recordViewNotFound: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      moderation: {\n        type: 'object',\n        properties: {\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n          },\n        },\n      },\n      moderationDetail: {\n        type: 'object',\n        properties: {\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n          },\n        },\n      },\n      blobView: {\n        type: 'object',\n        required: ['cid', 'mimeType', 'size', 'createdAt'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          mimeType: {\n            type: 'string',\n          },\n          size: {\n            type: 'integer',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          details: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#imageDetails',\n              'lex:tools.ozone.moderation.defs#videoDetails',\n            ],\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderation',\n          },\n        },\n      },\n      imageDetails: {\n        type: 'object',\n        required: ['width', 'height'],\n        properties: {\n          width: {\n            type: 'integer',\n          },\n          height: {\n            type: 'integer',\n          },\n        },\n      },\n      videoDetails: {\n        type: 'object',\n        required: ['width', 'height', 'length'],\n        properties: {\n          width: {\n            type: 'integer',\n          },\n          height: {\n            type: 'integer',\n          },\n          length: {\n            type: 'integer',\n          },\n        },\n      },\n      accountHosting: {\n        type: 'object',\n        required: ['status'],\n        properties: {\n          status: {\n            type: 'string',\n            knownValues: [\n              'takendown',\n              'suspended',\n              'deleted',\n              'deactivated',\n              'unknown',\n            ],\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          deletedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          deactivatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          reactivatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      recordHosting: {\n        type: 'object',\n        required: ['status'],\n        properties: {\n          status: {\n            type: 'string',\n            knownValues: ['deleted', 'unknown'],\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          deletedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      reporterStats: {\n        type: 'object',\n        required: [\n          'did',\n          'accountReportCount',\n          'recordReportCount',\n          'reportedAccountCount',\n          'reportedRecordCount',\n          'takendownAccountCount',\n          'takendownRecordCount',\n          'labeledAccountCount',\n          'labeledRecordCount',\n        ],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          accountReportCount: {\n            type: 'integer',\n            description:\n              'The total number of reports made by the user on accounts.',\n          },\n          recordReportCount: {\n            type: 'integer',\n            description:\n              'The total number of reports made by the user on records.',\n          },\n          reportedAccountCount: {\n            type: 'integer',\n            description: 'The total number of accounts reported by the user.',\n          },\n          reportedRecordCount: {\n            type: 'integer',\n            description: 'The total number of records reported by the user.',\n          },\n          takendownAccountCount: {\n            type: 'integer',\n            description:\n              \"The total number of accounts taken down as a result of the user's reports.\",\n          },\n          takendownRecordCount: {\n            type: 'integer',\n            description:\n              \"The total number of records taken down as a result of the user's reports.\",\n          },\n          labeledAccountCount: {\n            type: 'integer',\n            description:\n              \"The total number of accounts labeled as a result of the user's reports.\",\n          },\n          labeledRecordCount: {\n            type: 'integer',\n            description:\n              \"The total number of records labeled as a result of the user's reports.\",\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationEmitEvent: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.emitEvent',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Take a moderation action on an actor.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['event', 'subject', 'createdBy'],\n            properties: {\n              event: {\n                type: 'union',\n                refs: [\n                  'lex:tools.ozone.moderation.defs#modEventTakedown',\n                  'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n                  'lex:tools.ozone.moderation.defs#modEventEscalate',\n                  'lex:tools.ozone.moderation.defs#modEventComment',\n                  'lex:tools.ozone.moderation.defs#modEventLabel',\n                  'lex:tools.ozone.moderation.defs#modEventReport',\n                  'lex:tools.ozone.moderation.defs#modEventMute',\n                  'lex:tools.ozone.moderation.defs#modEventUnmute',\n                  'lex:tools.ozone.moderation.defs#modEventMuteReporter',\n                  'lex:tools.ozone.moderation.defs#modEventUnmuteReporter',\n                  'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n                  'lex:tools.ozone.moderation.defs#modEventResolveAppeal',\n                  'lex:tools.ozone.moderation.defs#modEventEmail',\n                  'lex:tools.ozone.moderation.defs#modEventDivert',\n                  'lex:tools.ozone.moderation.defs#modEventTag',\n                  'lex:tools.ozone.moderation.defs#accountEvent',\n                  'lex:tools.ozone.moderation.defs#identityEvent',\n                  'lex:tools.ozone.moderation.defs#recordEvent',\n                  'lex:tools.ozone.moderation.defs#modEventPriorityScore',\n                ],\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n              subjectBlobCids: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'cid',\n                },\n              },\n              createdBy: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#modEventView',\n          },\n        },\n        errors: [\n          {\n            name: 'SubjectHasAction',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneModerationGetEvent: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getEvent',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a moderation event.',\n        parameters: {\n          type: 'params',\n          required: ['id'],\n          properties: {\n            id: {\n              type: 'integer',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#modEventViewDetail',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationGetRecord: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a record.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#recordViewDetail',\n          },\n        },\n        errors: [\n          {\n            name: 'RecordNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneModerationGetRecords: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getRecords',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about some records.',\n        parameters: {\n          type: 'params',\n          required: ['uris'],\n          properties: {\n            uris: {\n              type: 'array',\n              maxLength: 100,\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['records'],\n            properties: {\n              records: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:tools.ozone.moderation.defs#recordViewDetail',\n                    'lex:tools.ozone.moderation.defs#recordViewNotFound',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationGetRepo: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a repository.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#repoViewDetail',\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneModerationGetReporterStats: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getReporterStats',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get reporter stats for a list of users.',\n        parameters: {\n          type: 'params',\n          required: ['dids'],\n          properties: {\n            dids: {\n              type: 'array',\n              maxLength: 100,\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['stats'],\n            properties: {\n              stats: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.moderation.defs#reporterStats',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationGetRepos: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about some repositories.',\n        parameters: {\n          type: 'params',\n          required: ['dids'],\n          properties: {\n            dids: {\n              type: 'array',\n              maxLength: 100,\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:tools.ozone.moderation.defs#repoViewDetail',\n                    'lex:tools.ozone.moderation.defs#repoViewNotFound',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationQueryEvents: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.queryEvents',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List moderation events related to a subject.',\n        parameters: {\n          type: 'params',\n          properties: {\n            types: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'The types of events (fully qualified string in the format of tools.ozone.moderation.defs#modEvent<name>) to filter by. If not specified, all events are returned.',\n            },\n            createdBy: {\n              type: 'string',\n              format: 'did',\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'desc',\n              enum: ['asc', 'desc'],\n              description:\n                'Sort direction for the events. Defaults to descending order of created at timestamp.',\n            },\n            createdAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Retrieve events created after a given timestamp',\n            },\n            createdBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Retrieve events created before a given timestamp',\n            },\n            subject: {\n              type: 'string',\n              format: 'uri',\n            },\n            collections: {\n              type: 'array',\n              maxLength: 20,\n              description:\n                \"If specified, only events where the subject belongs to the given collections will be returned. When subjectType is set to 'account', this will be ignored.\",\n              items: {\n                type: 'string',\n                format: 'nsid',\n              },\n            },\n            subjectType: {\n              type: 'string',\n              description:\n                \"If specified, only events where the subject is of the given type (account or record) will be returned. When this is set to 'account' the 'collections' parameter will be ignored. When includeAllUserRecords or subject is set, this will be ignored.\",\n              knownValues: ['account', 'record'],\n            },\n            includeAllUserRecords: {\n              type: 'boolean',\n              default: false,\n              description:\n                \"If true, events on all record types (posts, lists, profile etc.) or records from given 'collections' param, owned by the did are returned.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            hasComment: {\n              type: 'boolean',\n              description: 'If true, only events with comments are returned',\n            },\n            comment: {\n              type: 'string',\n              description:\n                'If specified, only events with comments containing the keyword are returned. Apply || separator to use multiple keywords and match using OR condition.',\n            },\n            addedLabels: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these labels were added are returned',\n            },\n            removedLabels: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these labels were removed are returned',\n            },\n            addedTags: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these tags were added are returned',\n            },\n            removedTags: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these tags were removed are returned',\n            },\n            reportTypes: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            policies: {\n              type: 'array',\n              items: {\n                type: 'string',\n                description:\n                  'If specified, only events where the action policies match any of the given policies are returned',\n              },\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['events'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              events: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.moderation.defs#modEventView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationQueryStatuses: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.queryStatuses',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'View moderation statuses of subjects (record or repo).',\n        parameters: {\n          type: 'params',\n          properties: {\n            queueCount: {\n              type: 'integer',\n              description:\n                'Number of queues being used by moderators. Subjects will be split among all queues.',\n            },\n            queueIndex: {\n              type: 'integer',\n              description:\n                'Index of the queue to fetch subjects from. Works only when queueCount value is specified.',\n            },\n            queueSeed: {\n              type: 'string',\n              description: 'A seeder to shuffle/balance the queue items.',\n            },\n            includeAllUserRecords: {\n              type: 'boolean',\n              description:\n                \"All subjects, or subjects from given 'collections' param, belonging to the account specified in the 'subject' param will be returned.\",\n            },\n            subject: {\n              type: 'string',\n              format: 'uri',\n              description: 'The subject to get the status for.',\n            },\n            comment: {\n              type: 'string',\n              description: 'Search subjects by keyword from comments',\n            },\n            reportedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reported after a given timestamp',\n            },\n            reportedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reported before a given timestamp',\n            },\n            reviewedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reviewed after a given timestamp',\n            },\n            hostingDeletedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description:\n                'Search subjects where the associated record/account was deleted after a given timestamp',\n            },\n            hostingDeletedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description:\n                'Search subjects where the associated record/account was deleted before a given timestamp',\n            },\n            hostingUpdatedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description:\n                'Search subjects where the associated record/account was updated after a given timestamp',\n            },\n            hostingUpdatedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description:\n                'Search subjects where the associated record/account was updated before a given timestamp',\n            },\n            hostingStatuses: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'Search subjects by the status of the associated record/account',\n            },\n            reviewedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reviewed before a given timestamp',\n            },\n            includeMuted: {\n              type: 'boolean',\n              description:\n                \"By default, we don't include muted subjects in the results. Set this to true to include them.\",\n            },\n            onlyMuted: {\n              type: 'boolean',\n              description:\n                'When set to true, only muted subjects and reporters will be returned.',\n            },\n            reviewState: {\n              type: 'string',\n              description: 'Specify when fetching subjects in a certain state',\n            },\n            ignoreSubjects: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'uri',\n              },\n            },\n            lastReviewedBy: {\n              type: 'string',\n              format: 'did',\n              description:\n                'Get all subject statuses that were reviewed by a specific moderator',\n            },\n            sortField: {\n              type: 'string',\n              default: 'lastReportedAt',\n              enum: [\n                'lastReviewedAt',\n                'lastReportedAt',\n                'reportedRecordsCount',\n                'takendownRecordsCount',\n                'priorityScore',\n              ],\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'desc',\n              enum: ['asc', 'desc'],\n            },\n            takendown: {\n              type: 'boolean',\n              description: 'Get subjects that were taken down',\n            },\n            appealed: {\n              type: 'boolean',\n              description: 'Get subjects in unresolved appealed status',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            tags: {\n              type: 'array',\n              maxLength: 25,\n              items: {\n                type: 'string',\n                description:\n                  'Items in this array are applied with OR filters. To apply AND filter, put all tags in the same string and separate using && characters',\n              },\n            },\n            excludeTags: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            cursor: {\n              type: 'string',\n            },\n            collections: {\n              type: 'array',\n              maxLength: 20,\n              description:\n                \"If specified, subjects belonging to the given collections will be returned. When subjectType is set to 'account', this will be ignored.\",\n              items: {\n                type: 'string',\n                format: 'nsid',\n              },\n            },\n            subjectType: {\n              type: 'string',\n              description:\n                \"If specified, subjects of the given type (account or record) will be returned. When this is set to 'account' the 'collections' parameter will be ignored. When includeAllUserRecords or subject is set, this will be ignored.\",\n              knownValues: ['account', 'record'],\n            },\n            minAccountSuspendCount: {\n              type: 'integer',\n              description:\n                'If specified, only subjects that belong to an account that has at least this many suspensions will be returned.',\n            },\n            minReportedRecordsCount: {\n              type: 'integer',\n              description:\n                'If specified, only subjects that belong to an account that has at least this many reported records will be returned.',\n            },\n            minTakendownRecordsCount: {\n              type: 'integer',\n              description:\n                'If specified, only subjects that belong to an account that has at least this many taken down records will be returned.',\n            },\n            minPriorityScore: {\n              minimum: 0,\n              maximum: 100,\n              type: 'integer',\n              description:\n                'If specified, only subjects that have priority score value above the given value will be returned.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subjectStatuses'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              subjectStatuses: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationSearchRepos: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.searchRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find repositories based on a search term.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead\",\n            },\n            q: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.moderation.defs#repoView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneServerGetConfig: {\n    lexicon: 1,\n    id: 'tools.ozone.server.getConfig',\n    defs: {\n      main: {\n        type: 'query',\n        description: \"Get details about ozone's server configuration.\",\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              appview: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n              },\n              pds: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n              },\n              blobDivert: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n              },\n              chat: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n              },\n              viewer: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.server.getConfig#viewerConfig',\n              },\n            },\n          },\n        },\n      },\n      serviceConfig: {\n        type: 'object',\n        properties: {\n          url: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n      viewerConfig: {\n        type: 'object',\n        properties: {\n          role: {\n            type: 'string',\n            knownValues: [\n              'tools.ozone.team.defs#roleAdmin',\n              'tools.ozone.team.defs#roleModerator',\n              'tools.ozone.team.defs#roleTriage',\n            ],\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSetAddValues: {\n    lexicon: 1,\n    id: 'tools.ozone.set.addValues',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Add values to a specific set. Attempting to add values to a set that does not exist will result in an error.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name', 'values'],\n            properties: {\n              name: {\n                type: 'string',\n                description: 'Name of the set to add values to',\n              },\n              values: {\n                type: 'array',\n                minLength: 1,\n                maxLength: 1000,\n                items: {\n                  type: 'string',\n                },\n                description: 'Array of string values to add to the set',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSetDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.set.defs',\n    defs: {\n      set: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            minLength: 3,\n            maxLength: 128,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 1024,\n            maxLength: 10240,\n          },\n        },\n      },\n      setView: {\n        type: 'object',\n        required: ['name', 'setSize', 'createdAt', 'updatedAt'],\n        properties: {\n          name: {\n            type: 'string',\n            minLength: 3,\n            maxLength: 128,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 1024,\n            maxLength: 10240,\n          },\n          setSize: {\n            type: 'integer',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSetDeleteSet: {\n    lexicon: 1,\n    id: 'tools.ozone.set.deleteSet',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Delete an entire set. Attempting to delete a set that does not exist will result in an error.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n                description: 'Name of the set to delete',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {},\n          },\n        },\n        errors: [\n          {\n            name: 'SetNotFound',\n            description: 'set with the given name does not exist',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneSetDeleteValues: {\n    lexicon: 1,\n    id: 'tools.ozone.set.deleteValues',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Delete values from a specific set. Attempting to delete values that are not in the set will not result in an error',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name', 'values'],\n            properties: {\n              name: {\n                type: 'string',\n                description: 'Name of the set to delete values from',\n              },\n              values: {\n                type: 'array',\n                minLength: 1,\n                items: {\n                  type: 'string',\n                },\n                description: 'Array of string values to delete from the set',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'SetNotFound',\n            description: 'set with the given name does not exist',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneSetGetValues: {\n    lexicon: 1,\n    id: 'tools.ozone.set.getValues',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a specific set and its values',\n        parameters: {\n          type: 'params',\n          required: ['name'],\n          properties: {\n            name: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 100,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['set', 'values'],\n            properties: {\n              set: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.set.defs#setView',\n              },\n              values: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              cursor: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'SetNotFound',\n            description: 'set with the given name does not exist',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneSetQuerySets: {\n    lexicon: 1,\n    id: 'tools.ozone.set.querySets',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Query available sets',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            namePrefix: {\n              type: 'string',\n            },\n            sortBy: {\n              type: 'string',\n              enum: ['name', 'createdAt', 'updatedAt'],\n              default: 'name',\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'asc',\n              enum: ['asc', 'desc'],\n              description: 'Defaults to ascending order of name field.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['sets'],\n            properties: {\n              sets: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.set.defs#setView',\n                },\n              },\n              cursor: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSetUpsertSet: {\n    lexicon: 1,\n    id: 'tools.ozone.set.upsertSet',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create or update set metadata',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.set.defs#set',\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.set.defs#setView',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSettingDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.setting.defs',\n    defs: {\n      option: {\n        type: 'object',\n        required: [\n          'key',\n          'value',\n          'did',\n          'scope',\n          'createdBy',\n          'lastUpdatedBy',\n        ],\n        properties: {\n          key: {\n            type: 'string',\n            format: 'nsid',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          value: {\n            type: 'unknown',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 1024,\n            maxLength: 10240,\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          managerRole: {\n            type: 'string',\n            knownValues: [\n              'tools.ozone.team.defs#roleModerator',\n              'tools.ozone.team.defs#roleTriage',\n              'tools.ozone.team.defs#roleAdmin',\n            ],\n          },\n          scope: {\n            type: 'string',\n            knownValues: ['instance', 'personal'],\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          lastUpdatedBy: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSettingListOptions: {\n    lexicon: 1,\n    id: 'tools.ozone.setting.listOptions',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List settings with optional filtering',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            scope: {\n              type: 'string',\n              knownValues: ['instance', 'personal'],\n              default: 'instance',\n            },\n            prefix: {\n              type: 'string',\n              description: 'Filter keys by prefix',\n            },\n            keys: {\n              type: 'array',\n              maxLength: 100,\n              items: {\n                type: 'string',\n                format: 'nsid',\n              },\n              description:\n                'Filter for only the specified keys. Ignored if prefix is provided',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['options'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              options: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.setting.defs#option',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSettingRemoveOptions: {\n    lexicon: 1,\n    id: 'tools.ozone.setting.removeOptions',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete settings by key',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['keys', 'scope'],\n            properties: {\n              keys: {\n                type: 'array',\n                minLength: 1,\n                maxLength: 200,\n                items: {\n                  type: 'string',\n                  format: 'nsid',\n                },\n              },\n              scope: {\n                type: 'string',\n                knownValues: ['instance', 'personal'],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {},\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSettingUpsertOption: {\n    lexicon: 1,\n    id: 'tools.ozone.setting.upsertOption',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create or update setting option',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['key', 'scope', 'value'],\n            properties: {\n              key: {\n                type: 'string',\n                format: 'nsid',\n              },\n              scope: {\n                type: 'string',\n                knownValues: ['instance', 'personal'],\n              },\n              value: {\n                type: 'unknown',\n              },\n              description: {\n                type: 'string',\n                maxLength: 2000,\n              },\n              managerRole: {\n                type: 'string',\n                knownValues: [\n                  'tools.ozone.team.defs#roleModerator',\n                  'tools.ozone.team.defs#roleTriage',\n                  'tools.ozone.team.defs#roleAdmin',\n                ],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['option'],\n            properties: {\n              option: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.setting.defs#option',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSignatureDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.signature.defs',\n    defs: {\n      sigDetail: {\n        type: 'object',\n        required: ['property', 'value'],\n        properties: {\n          property: {\n            type: 'string',\n          },\n          value: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSignatureFindCorrelation: {\n    lexicon: 1,\n    id: 'tools.ozone.signature.findCorrelation',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find all correlated threat signatures between 2 or more accounts.',\n        parameters: {\n          type: 'params',\n          required: ['dids'],\n          properties: {\n            dids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['details'],\n            properties: {\n              details: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.signature.defs#sigDetail',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSignatureFindRelatedAccounts: {\n    lexicon: 1,\n    id: 'tools.ozone.signature.findRelatedAccounts',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get accounts that share some matching threat signatures with the root account.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            cursor: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accounts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              accounts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.signature.findRelatedAccounts#relatedAccount',\n                },\n              },\n            },\n          },\n        },\n      },\n      relatedAccount: {\n        type: 'object',\n        required: ['account'],\n        properties: {\n          account: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#accountView',\n          },\n          similarities: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:tools.ozone.signature.defs#sigDetail',\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSignatureSearchAccounts: {\n    lexicon: 1,\n    id: 'tools.ozone.signature.searchAccounts',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Search for accounts that match one or more threat signature values.',\n        parameters: {\n          type: 'params',\n          required: ['values'],\n          properties: {\n            values: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            cursor: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accounts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              accounts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#accountView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneTeamAddMember: {\n    lexicon: 1,\n    id: 'tools.ozone.team.addMember',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Add a member to the ozone team. Requires admin role.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'role'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              role: {\n                type: 'string',\n                knownValues: [\n                  'tools.ozone.team.defs#roleAdmin',\n                  'tools.ozone.team.defs#roleModerator',\n                  'tools.ozone.team.defs#roleTriage',\n                ],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.team.defs#member',\n          },\n        },\n        errors: [\n          {\n            name: 'MemberAlreadyExists',\n            description: 'Member already exists in the team.',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneTeamDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.team.defs',\n    defs: {\n      member: {\n        type: 'object',\n        required: ['did', 'role'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          disabled: {\n            type: 'boolean',\n          },\n          profile: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastUpdatedBy: {\n            type: 'string',\n          },\n          role: {\n            type: 'string',\n            knownValues: [\n              'lex:tools.ozone.team.defs#roleAdmin',\n              'lex:tools.ozone.team.defs#roleModerator',\n              'lex:tools.ozone.team.defs#roleTriage',\n            ],\n          },\n        },\n      },\n      roleAdmin: {\n        type: 'token',\n        description:\n          'Admin role. Highest level of access, can perform all actions.',\n      },\n      roleModerator: {\n        type: 'token',\n        description: 'Moderator role. Can perform most actions.',\n      },\n      roleTriage: {\n        type: 'token',\n        description:\n          'Triage role. Mostly intended for monitoring and escalating issues.',\n      },\n    },\n  },\n  ToolsOzoneTeamDeleteMember: {\n    lexicon: 1,\n    id: 'tools.ozone.team.deleteMember',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete a member from ozone team. Requires admin role.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'MemberNotFound',\n            description: 'The member being deleted does not exist',\n          },\n          {\n            name: 'CannotDeleteSelf',\n            description: 'You can not delete yourself from the team',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneTeamListMembers: {\n    lexicon: 1,\n    id: 'tools.ozone.team.listMembers',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List all members with access to the ozone service.',\n        parameters: {\n          type: 'params',\n          properties: {\n            disabled: {\n              type: 'boolean',\n            },\n            roles: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['members'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              members: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.team.defs#member',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneTeamUpdateMember: {\n    lexicon: 1,\n    id: 'tools.ozone.team.updateMember',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Update a member in the ozone service. Requires admin role.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              disabled: {\n                type: 'boolean',\n              },\n              role: {\n                type: 'string',\n                knownValues: [\n                  'tools.ozone.team.defs#roleAdmin',\n                  'tools.ozone.team.defs#roleModerator',\n                  'tools.ozone.team.defs#roleTriage',\n                ],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.team.defs#member',\n          },\n        },\n        errors: [\n          {\n            name: 'MemberNotFound',\n            description: 'The member being updated does not exist in the team',\n          },\n        ],\n      },\n    },\n  },\n} as const satisfies Record<string, LexiconDoc>\n\nexport const schemas = Object.values(schemaDict) satisfies LexiconDoc[]\nexport const lexicons: Lexicons = new Lexicons(schemas)\n\nexport function validate<T extends { $type: string }>(\n  v: unknown,\n  id: string,\n  hash: string,\n  requiredType: true,\n): ValidationResult<T>\nexport function validate<T extends { $type?: string }>(\n  v: unknown,\n  id: string,\n  hash: string,\n  requiredType?: false,\n): ValidationResult<T>\nexport function validate(\n  v: unknown,\n  id: string,\n  hash: string,\n  requiredType?: boolean,\n): ValidationResult {\n  return (requiredType ? is$typed : maybe$typed)(v, id, hash)\n    ? lexicons.validate(`${id}#${hash}`, v)\n    : {\n        success: false,\n        error: new ValidationError(\n          `Must be an object with \"${hash === 'main' ? id : `${id}#${hash}`}\" $type property`,\n        ),\n      }\n}\n\nexport const ids = {\n  ComAtprotoAdminDefs: 'com.atproto.admin.defs',\n  ComAtprotoAdminDeleteAccount: 'com.atproto.admin.deleteAccount',\n  ComAtprotoAdminDisableAccountInvites:\n    'com.atproto.admin.disableAccountInvites',\n  ComAtprotoAdminDisableInviteCodes: 'com.atproto.admin.disableInviteCodes',\n  ComAtprotoAdminEnableAccountInvites: 'com.atproto.admin.enableAccountInvites',\n  ComAtprotoAdminGetAccountInfo: 'com.atproto.admin.getAccountInfo',\n  ComAtprotoAdminGetAccountInfos: 'com.atproto.admin.getAccountInfos',\n  ComAtprotoAdminGetInviteCodes: 'com.atproto.admin.getInviteCodes',\n  ComAtprotoAdminGetSubjectStatus: 'com.atproto.admin.getSubjectStatus',\n  ComAtprotoAdminSearchAccounts: 'com.atproto.admin.searchAccounts',\n  ComAtprotoAdminSendEmail: 'com.atproto.admin.sendEmail',\n  ComAtprotoAdminUpdateAccountEmail: 'com.atproto.admin.updateAccountEmail',\n  ComAtprotoAdminUpdateAccountHandle: 'com.atproto.admin.updateAccountHandle',\n  ComAtprotoAdminUpdateAccountPassword:\n    'com.atproto.admin.updateAccountPassword',\n  ComAtprotoAdminUpdateSubjectStatus: 'com.atproto.admin.updateSubjectStatus',\n  ComAtprotoIdentityGetRecommendedDidCredentials:\n    'com.atproto.identity.getRecommendedDidCredentials',\n  ComAtprotoIdentityRequestPlcOperationSignature:\n    'com.atproto.identity.requestPlcOperationSignature',\n  ComAtprotoIdentityResolveHandle: 'com.atproto.identity.resolveHandle',\n  ComAtprotoIdentitySignPlcOperation: 'com.atproto.identity.signPlcOperation',\n  ComAtprotoIdentitySubmitPlcOperation:\n    'com.atproto.identity.submitPlcOperation',\n  ComAtprotoIdentityUpdateHandle: 'com.atproto.identity.updateHandle',\n  ComAtprotoLabelDefs: 'com.atproto.label.defs',\n  ComAtprotoLabelQueryLabels: 'com.atproto.label.queryLabels',\n  ComAtprotoLabelSubscribeLabels: 'com.atproto.label.subscribeLabels',\n  ComAtprotoLexiconSchema: 'com.atproto.lexicon.schema',\n  ComAtprotoModerationCreateReport: 'com.atproto.moderation.createReport',\n  ComAtprotoModerationDefs: 'com.atproto.moderation.defs',\n  ComAtprotoRepoApplyWrites: 'com.atproto.repo.applyWrites',\n  ComAtprotoRepoCreateRecord: 'com.atproto.repo.createRecord',\n  ComAtprotoRepoDefs: 'com.atproto.repo.defs',\n  ComAtprotoRepoDeleteRecord: 'com.atproto.repo.deleteRecord',\n  ComAtprotoRepoDescribeRepo: 'com.atproto.repo.describeRepo',\n  ComAtprotoRepoGetRecord: 'com.atproto.repo.getRecord',\n  ComAtprotoRepoImportRepo: 'com.atproto.repo.importRepo',\n  ComAtprotoRepoListMissingBlobs: 'com.atproto.repo.listMissingBlobs',\n  ComAtprotoRepoListRecords: 'com.atproto.repo.listRecords',\n  ComAtprotoRepoPutRecord: 'com.atproto.repo.putRecord',\n  ComAtprotoRepoStrongRef: 'com.atproto.repo.strongRef',\n  ComAtprotoRepoUploadBlob: 'com.atproto.repo.uploadBlob',\n  ComAtprotoServerActivateAccount: 'com.atproto.server.activateAccount',\n  ComAtprotoServerCheckAccountStatus: 'com.atproto.server.checkAccountStatus',\n  ComAtprotoServerConfirmEmail: 'com.atproto.server.confirmEmail',\n  ComAtprotoServerCreateAccount: 'com.atproto.server.createAccount',\n  ComAtprotoServerCreateAppPassword: 'com.atproto.server.createAppPassword',\n  ComAtprotoServerCreateInviteCode: 'com.atproto.server.createInviteCode',\n  ComAtprotoServerCreateInviteCodes: 'com.atproto.server.createInviteCodes',\n  ComAtprotoServerCreateSession: 'com.atproto.server.createSession',\n  ComAtprotoServerDeactivateAccount: 'com.atproto.server.deactivateAccount',\n  ComAtprotoServerDefs: 'com.atproto.server.defs',\n  ComAtprotoServerDeleteAccount: 'com.atproto.server.deleteAccount',\n  ComAtprotoServerDeleteSession: 'com.atproto.server.deleteSession',\n  ComAtprotoServerDescribeServer: 'com.atproto.server.describeServer',\n  ComAtprotoServerGetAccountInviteCodes:\n    'com.atproto.server.getAccountInviteCodes',\n  ComAtprotoServerGetServiceAuth: 'com.atproto.server.getServiceAuth',\n  ComAtprotoServerGetSession: 'com.atproto.server.getSession',\n  ComAtprotoServerListAppPasswords: 'com.atproto.server.listAppPasswords',\n  ComAtprotoServerRefreshSession: 'com.atproto.server.refreshSession',\n  ComAtprotoServerRequestAccountDelete:\n    'com.atproto.server.requestAccountDelete',\n  ComAtprotoServerRequestEmailConfirmation:\n    'com.atproto.server.requestEmailConfirmation',\n  ComAtprotoServerRequestEmailUpdate: 'com.atproto.server.requestEmailUpdate',\n  ComAtprotoServerRequestPasswordReset:\n    'com.atproto.server.requestPasswordReset',\n  ComAtprotoServerReserveSigningKey: 'com.atproto.server.reserveSigningKey',\n  ComAtprotoServerResetPassword: 'com.atproto.server.resetPassword',\n  ComAtprotoServerRevokeAppPassword: 'com.atproto.server.revokeAppPassword',\n  ComAtprotoServerUpdateEmail: 'com.atproto.server.updateEmail',\n  ComAtprotoSyncGetBlob: 'com.atproto.sync.getBlob',\n  ComAtprotoSyncGetBlocks: 'com.atproto.sync.getBlocks',\n  ComAtprotoSyncGetCheckout: 'com.atproto.sync.getCheckout',\n  ComAtprotoSyncGetHead: 'com.atproto.sync.getHead',\n  ComAtprotoSyncGetLatestCommit: 'com.atproto.sync.getLatestCommit',\n  ComAtprotoSyncGetRecord: 'com.atproto.sync.getRecord',\n  ComAtprotoSyncGetRepo: 'com.atproto.sync.getRepo',\n  ComAtprotoSyncGetRepoStatus: 'com.atproto.sync.getRepoStatus',\n  ComAtprotoSyncListBlobs: 'com.atproto.sync.listBlobs',\n  ComAtprotoSyncListRepos: 'com.atproto.sync.listRepos',\n  ComAtprotoSyncListReposByCollection: 'com.atproto.sync.listReposByCollection',\n  ComAtprotoSyncNotifyOfUpdate: 'com.atproto.sync.notifyOfUpdate',\n  ComAtprotoSyncRequestCrawl: 'com.atproto.sync.requestCrawl',\n  ComAtprotoSyncSubscribeRepos: 'com.atproto.sync.subscribeRepos',\n  ComAtprotoTempAddReservedHandle: 'com.atproto.temp.addReservedHandle',\n  ComAtprotoTempCheckSignupQueue: 'com.atproto.temp.checkSignupQueue',\n  ComAtprotoTempFetchLabels: 'com.atproto.temp.fetchLabels',\n  ComAtprotoTempRequestPhoneVerification:\n    'com.atproto.temp.requestPhoneVerification',\n  AppBskyActorDefs: 'app.bsky.actor.defs',\n  AppBskyActorGetPreferences: 'app.bsky.actor.getPreferences',\n  AppBskyActorGetProfile: 'app.bsky.actor.getProfile',\n  AppBskyActorGetProfiles: 'app.bsky.actor.getProfiles',\n  AppBskyActorGetSuggestions: 'app.bsky.actor.getSuggestions',\n  AppBskyActorProfile: 'app.bsky.actor.profile',\n  AppBskyActorPutPreferences: 'app.bsky.actor.putPreferences',\n  AppBskyActorSearchActors: 'app.bsky.actor.searchActors',\n  AppBskyActorSearchActorsTypeahead: 'app.bsky.actor.searchActorsTypeahead',\n  AppBskyEmbedDefs: 'app.bsky.embed.defs',\n  AppBskyEmbedExternal: 'app.bsky.embed.external',\n  AppBskyEmbedImages: 'app.bsky.embed.images',\n  AppBskyEmbedRecord: 'app.bsky.embed.record',\n  AppBskyEmbedRecordWithMedia: 'app.bsky.embed.recordWithMedia',\n  AppBskyEmbedVideo: 'app.bsky.embed.video',\n  AppBskyFeedDefs: 'app.bsky.feed.defs',\n  AppBskyFeedDescribeFeedGenerator: 'app.bsky.feed.describeFeedGenerator',\n  AppBskyFeedGenerator: 'app.bsky.feed.generator',\n  AppBskyFeedGetActorFeeds: 'app.bsky.feed.getActorFeeds',\n  AppBskyFeedGetActorLikes: 'app.bsky.feed.getActorLikes',\n  AppBskyFeedGetAuthorFeed: 'app.bsky.feed.getAuthorFeed',\n  AppBskyFeedGetFeed: 'app.bsky.feed.getFeed',\n  AppBskyFeedGetFeedGenerator: 'app.bsky.feed.getFeedGenerator',\n  AppBskyFeedGetFeedGenerators: 'app.bsky.feed.getFeedGenerators',\n  AppBskyFeedGetFeedSkeleton: 'app.bsky.feed.getFeedSkeleton',\n  AppBskyFeedGetLikes: 'app.bsky.feed.getLikes',\n  AppBskyFeedGetListFeed: 'app.bsky.feed.getListFeed',\n  AppBskyFeedGetPostThread: 'app.bsky.feed.getPostThread',\n  AppBskyFeedGetPosts: 'app.bsky.feed.getPosts',\n  AppBskyFeedGetQuotes: 'app.bsky.feed.getQuotes',\n  AppBskyFeedGetRepostedBy: 'app.bsky.feed.getRepostedBy',\n  AppBskyFeedGetSuggestedFeeds: 'app.bsky.feed.getSuggestedFeeds',\n  AppBskyFeedGetTimeline: 'app.bsky.feed.getTimeline',\n  AppBskyFeedLike: 'app.bsky.feed.like',\n  AppBskyFeedPost: 'app.bsky.feed.post',\n  AppBskyFeedPostgate: 'app.bsky.feed.postgate',\n  AppBskyFeedRepost: 'app.bsky.feed.repost',\n  AppBskyFeedSearchPosts: 'app.bsky.feed.searchPosts',\n  AppBskyFeedSendInteractions: 'app.bsky.feed.sendInteractions',\n  AppBskyFeedThreadgate: 'app.bsky.feed.threadgate',\n  AppBskyGraphBlock: 'app.bsky.graph.block',\n  AppBskyGraphDefs: 'app.bsky.graph.defs',\n  AppBskyGraphFollow: 'app.bsky.graph.follow',\n  AppBskyGraphGetActorStarterPacks: 'app.bsky.graph.getActorStarterPacks',\n  AppBskyGraphGetBlocks: 'app.bsky.graph.getBlocks',\n  AppBskyGraphGetFollowers: 'app.bsky.graph.getFollowers',\n  AppBskyGraphGetFollows: 'app.bsky.graph.getFollows',\n  AppBskyGraphGetKnownFollowers: 'app.bsky.graph.getKnownFollowers',\n  AppBskyGraphGetList: 'app.bsky.graph.getList',\n  AppBskyGraphGetListBlocks: 'app.bsky.graph.getListBlocks',\n  AppBskyGraphGetListMutes: 'app.bsky.graph.getListMutes',\n  AppBskyGraphGetLists: 'app.bsky.graph.getLists',\n  AppBskyGraphGetMutes: 'app.bsky.graph.getMutes',\n  AppBskyGraphGetRelationships: 'app.bsky.graph.getRelationships',\n  AppBskyGraphGetStarterPack: 'app.bsky.graph.getStarterPack',\n  AppBskyGraphGetStarterPacks: 'app.bsky.graph.getStarterPacks',\n  AppBskyGraphGetSuggestedFollowsByActor:\n    'app.bsky.graph.getSuggestedFollowsByActor',\n  AppBskyGraphList: 'app.bsky.graph.list',\n  AppBskyGraphListblock: 'app.bsky.graph.listblock',\n  AppBskyGraphListitem: 'app.bsky.graph.listitem',\n  AppBskyGraphMuteActor: 'app.bsky.graph.muteActor',\n  AppBskyGraphMuteActorList: 'app.bsky.graph.muteActorList',\n  AppBskyGraphMuteThread: 'app.bsky.graph.muteThread',\n  AppBskyGraphSearchStarterPacks: 'app.bsky.graph.searchStarterPacks',\n  AppBskyGraphStarterpack: 'app.bsky.graph.starterpack',\n  AppBskyGraphUnmuteActor: 'app.bsky.graph.unmuteActor',\n  AppBskyGraphUnmuteActorList: 'app.bsky.graph.unmuteActorList',\n  AppBskyGraphUnmuteThread: 'app.bsky.graph.unmuteThread',\n  AppBskyLabelerDefs: 'app.bsky.labeler.defs',\n  AppBskyLabelerGetServices: 'app.bsky.labeler.getServices',\n  AppBskyLabelerService: 'app.bsky.labeler.service',\n  AppBskyNotificationGetUnreadCount: 'app.bsky.notification.getUnreadCount',\n  AppBskyNotificationListNotifications:\n    'app.bsky.notification.listNotifications',\n  AppBskyNotificationPutPreferences: 'app.bsky.notification.putPreferences',\n  AppBskyNotificationRegisterPush: 'app.bsky.notification.registerPush',\n  AppBskyNotificationUpdateSeen: 'app.bsky.notification.updateSeen',\n  AppBskyRichtextFacet: 'app.bsky.richtext.facet',\n  AppBskyUnspeccedDefs: 'app.bsky.unspecced.defs',\n  AppBskyUnspeccedGetConfig: 'app.bsky.unspecced.getConfig',\n  AppBskyUnspeccedGetPopularFeedGenerators:\n    'app.bsky.unspecced.getPopularFeedGenerators',\n  AppBskyUnspeccedGetSuggestionsSkeleton:\n    'app.bsky.unspecced.getSuggestionsSkeleton',\n  AppBskyUnspeccedGetTaggedSuggestions:\n    'app.bsky.unspecced.getTaggedSuggestions',\n  AppBskyUnspeccedGetTrendingTopics: 'app.bsky.unspecced.getTrendingTopics',\n  AppBskyUnspeccedSearchActorsSkeleton:\n    'app.bsky.unspecced.searchActorsSkeleton',\n  AppBskyUnspeccedSearchPostsSkeleton: 'app.bsky.unspecced.searchPostsSkeleton',\n  AppBskyUnspeccedSearchStarterPacksSkeleton:\n    'app.bsky.unspecced.searchStarterPacksSkeleton',\n  AppBskyVideoDefs: 'app.bsky.video.defs',\n  AppBskyVideoGetJobStatus: 'app.bsky.video.getJobStatus',\n  AppBskyVideoGetUploadLimits: 'app.bsky.video.getUploadLimits',\n  AppBskyVideoUploadVideo: 'app.bsky.video.uploadVideo',\n  ChatBskyActorDeclaration: 'chat.bsky.actor.declaration',\n  ChatBskyActorDefs: 'chat.bsky.actor.defs',\n  ChatBskyActorDeleteAccount: 'chat.bsky.actor.deleteAccount',\n  ChatBskyActorExportAccountData: 'chat.bsky.actor.exportAccountData',\n  ChatBskyConvoAcceptConvo: 'chat.bsky.convo.acceptConvo',\n  ChatBskyConvoDefs: 'chat.bsky.convo.defs',\n  ChatBskyConvoDeleteMessageForSelf: 'chat.bsky.convo.deleteMessageForSelf',\n  ChatBskyConvoGetConvo: 'chat.bsky.convo.getConvo',\n  ChatBskyConvoGetConvoAvailability: 'chat.bsky.convo.getConvoAvailability',\n  ChatBskyConvoGetConvoForMembers: 'chat.bsky.convo.getConvoForMembers',\n  ChatBskyConvoGetLog: 'chat.bsky.convo.getLog',\n  ChatBskyConvoGetMessages: 'chat.bsky.convo.getMessages',\n  ChatBskyConvoLeaveConvo: 'chat.bsky.convo.leaveConvo',\n  ChatBskyConvoListConvos: 'chat.bsky.convo.listConvos',\n  ChatBskyConvoMuteConvo: 'chat.bsky.convo.muteConvo',\n  ChatBskyConvoSendMessage: 'chat.bsky.convo.sendMessage',\n  ChatBskyConvoSendMessageBatch: 'chat.bsky.convo.sendMessageBatch',\n  ChatBskyConvoUnmuteConvo: 'chat.bsky.convo.unmuteConvo',\n  ChatBskyConvoUpdateAllRead: 'chat.bsky.convo.updateAllRead',\n  ChatBskyConvoUpdateRead: 'chat.bsky.convo.updateRead',\n  ChatBskyModerationGetActorMetadata: 'chat.bsky.moderation.getActorMetadata',\n  ChatBskyModerationGetMessageContext: 'chat.bsky.moderation.getMessageContext',\n  ChatBskyModerationUpdateActorAccess: 'chat.bsky.moderation.updateActorAccess',\n  ToolsOzoneCommunicationCreateTemplate:\n    'tools.ozone.communication.createTemplate',\n  ToolsOzoneCommunicationDefs: 'tools.ozone.communication.defs',\n  ToolsOzoneCommunicationDeleteTemplate:\n    'tools.ozone.communication.deleteTemplate',\n  ToolsOzoneCommunicationListTemplates:\n    'tools.ozone.communication.listTemplates',\n  ToolsOzoneCommunicationUpdateTemplate:\n    'tools.ozone.communication.updateTemplate',\n  ToolsOzoneModerationDefs: 'tools.ozone.moderation.defs',\n  ToolsOzoneModerationEmitEvent: 'tools.ozone.moderation.emitEvent',\n  ToolsOzoneModerationGetEvent: 'tools.ozone.moderation.getEvent',\n  ToolsOzoneModerationGetRecord: 'tools.ozone.moderation.getRecord',\n  ToolsOzoneModerationGetRecords: 'tools.ozone.moderation.getRecords',\n  ToolsOzoneModerationGetRepo: 'tools.ozone.moderation.getRepo',\n  ToolsOzoneModerationGetReporterStats:\n    'tools.ozone.moderation.getReporterStats',\n  ToolsOzoneModerationGetRepos: 'tools.ozone.moderation.getRepos',\n  ToolsOzoneModerationQueryEvents: 'tools.ozone.moderation.queryEvents',\n  ToolsOzoneModerationQueryStatuses: 'tools.ozone.moderation.queryStatuses',\n  ToolsOzoneModerationSearchRepos: 'tools.ozone.moderation.searchRepos',\n  ToolsOzoneServerGetConfig: 'tools.ozone.server.getConfig',\n  ToolsOzoneSetAddValues: 'tools.ozone.set.addValues',\n  ToolsOzoneSetDefs: 'tools.ozone.set.defs',\n  ToolsOzoneSetDeleteSet: 'tools.ozone.set.deleteSet',\n  ToolsOzoneSetDeleteValues: 'tools.ozone.set.deleteValues',\n  ToolsOzoneSetGetValues: 'tools.ozone.set.getValues',\n  ToolsOzoneSetQuerySets: 'tools.ozone.set.querySets',\n  ToolsOzoneSetUpsertSet: 'tools.ozone.set.upsertSet',\n  ToolsOzoneSettingDefs: 'tools.ozone.setting.defs',\n  ToolsOzoneSettingListOptions: 'tools.ozone.setting.listOptions',\n  ToolsOzoneSettingRemoveOptions: 'tools.ozone.setting.removeOptions',\n  ToolsOzoneSettingUpsertOption: 'tools.ozone.setting.upsertOption',\n  ToolsOzoneSignatureDefs: 'tools.ozone.signature.defs',\n  ToolsOzoneSignatureFindCorrelation: 'tools.ozone.signature.findCorrelation',\n  ToolsOzoneSignatureFindRelatedAccounts:\n    'tools.ozone.signature.findRelatedAccounts',\n  ToolsOzoneSignatureSearchAccounts: 'tools.ozone.signature.searchAccounts',\n  ToolsOzoneTeamAddMember: 'tools.ozone.team.addMember',\n  ToolsOzoneTeamDefs: 'tools.ozone.team.defs',\n  ToolsOzoneTeamDeleteMember: 'tools.ozone.team.deleteMember',\n  ToolsOzoneTeamListMembers: 'tools.ozone.team.listMembers',\n  ToolsOzoneTeamUpdateMember: 'tools.ozone.team.updateMember',\n} as const\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "export const BSKY_LABELER_DID = 'did:plc:ar7c4by46qjdydhdevvrndac'\n", "import { z } from 'zod'\nimport { TID } from '@atproto/common-web'\nimport { AtUri } from '@atproto/syntax'\nimport { AppBskyActorDefs } from './client'\nimport { Nux } from './client/types/app/bsky/actor/defs'\n\nexport function sanitizeMutedWordValue(value: string) {\n  return (\n    value\n      .trim()\n      .replace(/^#(?!\\ufe0f)/, '')\n      // eslint-disable-next-line no-misleading-character-class\n      .replace(/[\\r\\n\\u00AD\\u2060\\u200D\\u200C\\u200B]+/, '')\n  )\n}\n\nexport function savedFeedsToUriArrays(\n  savedFeeds: AppBskyActorDefs.SavedFeed[],\n): {\n  pinned: string[]\n  saved: string[]\n} {\n  const pinned: string[] = []\n  const saved: string[] = []\n\n  for (const feed of savedFeeds) {\n    if (feed.pinned) {\n      pinned.push(feed.value)\n      // saved in v1 includes pinned\n      saved.push(feed.value)\n    } else {\n      saved.push(feed.value)\n    }\n  }\n\n  return {\n    pinned,\n    saved,\n  }\n}\n\n/**\n * Get the type of a saved feed, used by deprecated methods for backwards\n * compat. Should not be used moving forward. *Invalid URIs will throw.*\n *\n * @param uri - The AT URI of the saved feed\n */\nexport function getSavedFeedType(\n  uri: string,\n): AppBskyActorDefs.SavedFeed['type'] {\n  const urip = new AtUri(uri)\n\n  switch (urip.collection) {\n    case 'app.bsky.feed.generator':\n      return 'feed'\n    case 'app.bsky.graph.list':\n      return 'list'\n    default:\n      return 'unknown'\n  }\n}\n\nexport function validateSavedFeed(savedFeed: AppBskyActorDefs.SavedFeed) {\n  new TID(savedFeed.id)\n\n  if (['feed', 'list'].includes(savedFeed.type)) {\n    const uri = new AtUri(savedFeed.value)\n    const isFeed = uri.collection === 'app.bsky.feed.generator'\n    const isList = uri.collection === 'app.bsky.graph.list'\n\n    if (savedFeed.type === 'feed' && !isFeed) {\n      throw new Error(\n        `Saved feed of type 'feed' must be a feed, got ${uri.collection}`,\n      )\n    }\n    if (savedFeed.type === 'list' && !isList) {\n      throw new Error(\n        `Saved feed of type 'list' must be a list, got ${uri.collection}`,\n      )\n    }\n  }\n}\n\nexport type Did = `did:${string}`\n\n// @TODO use tools from @atproto/did\nexport const isDid = (str: unknown): str is Did =>\n  typeof str === 'string' &&\n  str.startsWith('did:') &&\n  str.includes(':', 4) &&\n  str.length > 8 &&\n  str.length <= 2048\n\nexport const asDid = (value: string): Did => {\n  if (isDid(value)) return value\n  throw new TypeError(`Invalid DID: ${value}`)\n}\n\nexport const nuxSchema = z\n  .object({\n    id: z.string().max(64),\n    completed: z.boolean(),\n    data: z.string().max(300).optional(),\n    expiresAt: z.string().datetime().optional(),\n  })\n  .strict()\n\nexport function validateNux(nux: Nux) {\n  nuxSchema.parse(nux)\n}\n", "import { z } from 'zod'\nimport { ValidationError } from '@atproto/lexicon'\n\nexport type QueryParams = Record<string, any>\nexport type HeadersMap = Record<string, string | undefined>\n\nexport type {\n  /** @deprecated not to be confused with the WHATWG Headers constructor */\n  HeadersMap as Headers,\n}\n\nexport type Gettable<T> = T | (() => T)\n\nexport interface CallOptions {\n  encoding?: string\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport const errorResponseBody = z.object({\n  error: z.string().optional(),\n  message: z.string().optional(),\n})\nexport type ErrorResponseBody = z.infer<typeof errorResponseBody>\n\nexport enum ResponseType {\n  Unknown = 1,\n  InvalidResponse = 2,\n  Success = 200,\n  InvalidRequest = 400,\n  AuthRequired = 401,\n  Forbidden = 403,\n  XRPCNotSupported = 404,\n  NotAcceptable = 406,\n  PayloadTooLarge = 413,\n  UnsupportedMediaType = 415,\n  RateLimitExceeded = 429,\n  InternalServerError = 500,\n  MethodNotImplemented = 501,\n  UpstreamFailure = 502,\n  NotEnoughResources = 503,\n  UpstreamTimeout = 504,\n}\n\nexport function httpResponseCodeToEnum(status: number): ResponseType {\n  if (status in ResponseType) {\n    return status\n  } else if (status >= 100 && status < 200) {\n    return ResponseType.XRPCNotSupported\n  } else if (status >= 200 && status < 300) {\n    return ResponseType.Success\n  } else if (status >= 300 && status < 400) {\n    return ResponseType.XRPCNotSupported\n  } else if (status >= 400 && status < 500) {\n    return ResponseType.InvalidRequest\n  } else {\n    return ResponseType.InternalServerError\n  }\n}\n\nexport const ResponseTypeNames = {\n  [ResponseType.Unknown]: 'Unknown',\n  [ResponseType.InvalidResponse]: 'InvalidResponse',\n  [ResponseType.Success]: 'Success',\n  [ResponseType.InvalidRequest]: 'InvalidRequest',\n  [ResponseType.AuthRequired]: 'AuthenticationRequired',\n  [ResponseType.Forbidden]: 'Forbidden',\n  [ResponseType.XRPCNotSupported]: 'XRPCNotSupported',\n  [ResponseType.PayloadTooLarge]: 'PayloadTooLarge',\n  [ResponseType.UnsupportedMediaType]: 'UnsupportedMediaType',\n  [ResponseType.RateLimitExceeded]: 'RateLimitExceeded',\n  [ResponseType.InternalServerError]: 'InternalServerError',\n  [ResponseType.MethodNotImplemented]: 'MethodNotImplemented',\n  [ResponseType.UpstreamFailure]: 'UpstreamFailure',\n  [ResponseType.NotEnoughResources]: 'NotEnoughResources',\n  [ResponseType.UpstreamTimeout]: 'UpstreamTimeout',\n}\n\nexport function httpResponseCodeToName(status: number): string {\n  return ResponseTypeNames[httpResponseCodeToEnum(status)]\n}\n\nexport const ResponseTypeStrings = {\n  [ResponseType.Unknown]: 'Unknown',\n  [ResponseType.InvalidResponse]: 'Invalid Response',\n  [ResponseType.Success]: 'Success',\n  [ResponseType.InvalidRequest]: 'Invalid Request',\n  [ResponseType.AuthRequired]: 'Authentication Required',\n  [ResponseType.Forbidden]: 'Forbidden',\n  [ResponseType.XRPCNotSupported]: 'XRPC Not Supported',\n  [ResponseType.PayloadTooLarge]: 'Payload Too Large',\n  [ResponseType.UnsupportedMediaType]: 'Unsupported Media Type',\n  [ResponseType.RateLimitExceeded]: 'Rate Limit Exceeded',\n  [ResponseType.InternalServerError]: 'Internal Server Error',\n  [ResponseType.MethodNotImplemented]: 'Method Not Implemented',\n  [ResponseType.UpstreamFailure]: 'Upstream Failure',\n  [ResponseType.NotEnoughResources]: 'Not Enough Resources',\n  [ResponseType.UpstreamTimeout]: 'Upstream Timeout',\n}\n\nexport function httpResponseCodeToString(status: number): string {\n  return ResponseTypeStrings[httpResponseCodeToEnum(status)]\n}\n\nexport class XRPCResponse {\n  success = true\n\n  constructor(\n    public data: any,\n    public headers: HeadersMap,\n  ) {}\n}\n\nexport class XRPCError extends Error {\n  success = false\n\n  public status: ResponseType\n\n  constructor(\n    statusCode: number,\n    public error: string = httpResponseCodeToName(statusCode),\n    message?: string,\n    public headers?: HeadersMap,\n    options?: ErrorOptions,\n  ) {\n    super(message || error || httpResponseCodeToString(statusCode), options)\n\n    this.status = httpResponseCodeToEnum(statusCode)\n\n    // Pre 2022 runtimes won't handle the \"options\" constructor argument\n    const cause = options?.cause\n    if (this.cause === undefined && cause !== undefined) {\n      this.cause = cause\n    }\n  }\n\n  static from(cause: unknown, fallbackStatus?: ResponseType): XRPCError {\n    if (cause instanceof XRPCError) {\n      return cause\n    }\n\n    // Type cast the cause to an Error if it is one\n    const causeErr = cause instanceof Error ? cause : undefined\n\n    // Try and find a Response object in the cause\n    const causeResponse: Response | undefined =\n      cause instanceof Response\n        ? cause\n        : cause?.['response'] instanceof Response\n          ? cause['response']\n          : undefined\n\n    const statusCode: unknown =\n      // Extract status code from \"http-errors\" like errors\n      causeErr?.['statusCode'] ??\n      causeErr?.['status'] ??\n      // Use the status code from the response object as fallback\n      causeResponse?.status\n\n    // Convert the status code to a ResponseType\n    const status: ResponseType =\n      typeof statusCode === 'number'\n        ? httpResponseCodeToEnum(statusCode)\n        : fallbackStatus ?? ResponseType.Unknown\n\n    const message = causeErr?.message ?? String(cause)\n\n    const headers = causeResponse\n      ? Object.fromEntries(causeResponse.headers.entries())\n      : undefined\n\n    return new XRPCError(status, undefined, message, headers, { cause })\n  }\n}\n\nexport class XRPCInvalidResponseError extends XRPCError {\n  constructor(\n    public lexiconNsid: string,\n    public validationError: ValidationError,\n    public responseBody: unknown,\n  ) {\n    super(\n      ResponseType.InvalidResponse,\n      ResponseTypeStrings[ResponseType.InvalidResponse],\n      `The server gave an invalid response and may be out of date.`,\n      undefined,\n      { cause: validationError },\n    )\n  }\n}\n", "import {\n  LexXrpcProcedure,\n  LexXrpcQuery,\n  jsonStringToLex,\n  stringifyLex,\n} from '@atproto/lexicon'\nimport {\n  CallOptions,\n  ErrorResponseBody,\n  Gettable,\n  QueryParams,\n  ResponseType,\n  XRPCError,\n  errorResponseBody,\n} from './types'\n\nconst ReadableStream =\n  globalThis.ReadableStream ||\n  (class {\n    constructor() {\n      // This anonymous class will never pass any \"instanceof\" check and cannot\n      // be instantiated.\n      throw new Error('ReadableStream is not supported in this environment')\n    }\n  } as typeof globalThis.ReadableStream)\n\nexport function isErrorResponseBody(v: unknown): v is ErrorResponseBody {\n  return errorResponseBody.safeParse(v).success\n}\n\nexport function getMethodSchemaHTTPMethod(\n  schema: LexXrpcProcedure | LexXrpcQuery,\n) {\n  if (schema.type === 'procedure') {\n    return 'post'\n  }\n  return 'get'\n}\n\nexport function constructMethodCallUri(\n  nsid: string,\n  schema: LexXrpcProcedure | LexXrpcQuery,\n  serviceUri: URL,\n  params?: QueryParams,\n): string {\n  const uri = new URL(constructMethodCallUrl(nsid, schema, params), serviceUri)\n  return uri.toString()\n}\n\nexport function constructMethodCallUrl(\n  nsid: string,\n  schema: LexXrpcProcedure | LexXrpcQuery,\n  params?: QueryParams,\n): string {\n  const pathname = `/xrpc/${encodeURIComponent(nsid)}`\n  if (!params) return pathname\n\n  const searchParams: [string, string][] = []\n\n  for (const [key, value] of Object.entries(params)) {\n    const paramSchema = schema.parameters?.properties?.[key]\n    if (!paramSchema) {\n      throw new Error(`Invalid query parameter: ${key}`)\n    }\n    if (value !== undefined) {\n      if (paramSchema.type === 'array') {\n        const values = Array.isArray(value) ? value : [value]\n        for (const val of values) {\n          searchParams.push([\n            key,\n            encodeQueryParam(paramSchema.items.type, val),\n          ])\n        }\n      } else {\n        searchParams.push([key, encodeQueryParam(paramSchema.type, value)])\n      }\n    }\n  }\n\n  if (!searchParams.length) return pathname\n\n  return `${pathname}?${new URLSearchParams(searchParams).toString()}`\n}\n\nexport function encodeQueryParam(\n  type:\n    | 'string'\n    | 'float'\n    | 'integer'\n    | 'boolean'\n    | 'datetime'\n    | 'array'\n    | 'unknown',\n  value: any,\n): string {\n  if (type === 'string' || type === 'unknown') {\n    return String(value)\n  }\n  if (type === 'float') {\n    return String(Number(value))\n  } else if (type === 'integer') {\n    return String(Number(value) | 0)\n  } else if (type === 'boolean') {\n    return value ? 'true' : 'false'\n  } else if (type === 'datetime') {\n    if (value instanceof Date) {\n      return value.toISOString()\n    }\n    return String(value)\n  }\n  throw new Error(`Unsupported query param type: ${type}`)\n}\n\nexport function constructMethodCallHeaders(\n  schema: LexXrpcProcedure | LexXrpcQuery,\n  data?: unknown,\n  opts?: CallOptions,\n): Headers {\n  // Not using `new Headers(opts?.headers)` to avoid duplicating headers values\n  // due to inconsistent casing in headers name. In case of multiple headers\n  // with the same name (but using a different case), the last one will be used.\n\n  // new Headers({ 'content-type': 'foo', 'Content-Type': 'bar' }).get('content-type')\n  // => 'foo, bar'\n  const headers = new Headers()\n\n  if (opts?.headers) {\n    for (const name in opts.headers) {\n      if (headers.has(name)) {\n        throw new TypeError(`Duplicate header: ${name}`)\n      }\n\n      const value = opts.headers[name]\n      if (value != null) {\n        headers.set(name, value)\n      }\n    }\n  }\n\n  if (schema.type === 'procedure') {\n    if (opts?.encoding) {\n      headers.set('content-type', opts.encoding)\n    } else if (!headers.has('content-type') && typeof data !== 'undefined') {\n      // Special handling of BodyInit types before falling back to JSON encoding\n      if (\n        data instanceof ArrayBuffer ||\n        data instanceof ReadableStream ||\n        ArrayBuffer.isView(data)\n      ) {\n        headers.set('content-type', 'application/octet-stream')\n      } else if (data instanceof FormData) {\n        // Note: The multipart form data boundary is missing from the header\n        // we set here, making that header invalid. This special case will be\n        // handled in encodeMethodCallBody()\n        headers.set('content-type', 'multipart/form-data')\n      } else if (data instanceof URLSearchParams) {\n        headers.set(\n          'content-type',\n          'application/x-www-form-urlencoded;charset=UTF-8',\n        )\n      } else if (isBlobLike(data)) {\n        headers.set('content-type', data.type || 'application/octet-stream')\n      } else if (typeof data === 'string') {\n        headers.set('content-type', 'text/plain;charset=UTF-8')\n      }\n      // At this point, data is not a valid BodyInit type.\n      else if (isIterable(data)) {\n        headers.set('content-type', 'application/octet-stream')\n      } else if (\n        typeof data === 'boolean' ||\n        typeof data === 'number' ||\n        typeof data === 'string' ||\n        typeof data === 'object' // covers \"null\"\n      ) {\n        headers.set('content-type', 'application/json')\n      } else {\n        // symbol, function, bigint\n        throw new XRPCError(\n          ResponseType.InvalidRequest,\n          `Unsupported data type: ${typeof data}`,\n        )\n      }\n    }\n  }\n  return headers\n}\n\nexport function combineHeaders(\n  headersInit: undefined | HeadersInit,\n  defaultHeaders?: Iterable<[string, undefined | Gettable<null | string>]>,\n): undefined | HeadersInit {\n  if (!defaultHeaders) return headersInit\n\n  let headers: Headers | undefined = undefined\n\n  for (const [name, definition] of defaultHeaders) {\n    // Ignore undefined values (allowed for convenience when using\n    // Object.entries).\n    if (definition === undefined) continue\n\n    // Lazy initialization of the headers object\n    headers ??= new Headers(headersInit)\n\n    if (headers.has(name)) continue\n\n    const value = typeof definition === 'function' ? definition() : definition\n\n    if (typeof value === 'string') headers.set(name, value)\n    else if (value === null) headers.delete(name)\n    else throw new TypeError(`Invalid \"${name}\" header value: ${typeof value}`)\n  }\n\n  return headers ?? headersInit\n}\n\nfunction isBlobLike(value: unknown): value is Blob {\n  if (value == null) return false\n  if (typeof value !== 'object') return false\n  if (typeof Blob === 'function' && value instanceof Blob) return true\n\n  // Support for Blobs provided by libraries that don't use the native Blob\n  // (e.g. fetch-blob from node-fetch).\n  // https://github.com/node-fetch/fetch-blob/blob/a1a182e5978811407bef4ea1632b517567dda01f/index.js#L233-L244\n\n  const tag = value[Symbol.toStringTag]\n  if (tag === 'Blob' || tag === 'File') {\n    return 'stream' in value && typeof value.stream === 'function'\n  }\n\n  return false\n}\n\nexport function isBodyInit(value: unknown): value is BodyInit {\n  switch (typeof value) {\n    case 'string':\n      return true\n    case 'object':\n      return (\n        value instanceof ArrayBuffer ||\n        value instanceof FormData ||\n        value instanceof URLSearchParams ||\n        value instanceof ReadableStream ||\n        ArrayBuffer.isView(value) ||\n        isBlobLike(value)\n      )\n    default:\n      return false\n  }\n}\n\nexport function isIterable(\n  value: unknown,\n): value is Iterable<unknown> | AsyncIterable<unknown> {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    (Symbol.iterator in value || Symbol.asyncIterator in value)\n  )\n}\n\nexport function encodeMethodCallBody(\n  headers: Headers,\n  data?: unknown,\n): BodyInit | undefined {\n  // Silently ignore the body if there is no content-type header.\n  const contentType = headers.get('content-type')\n  if (!contentType) {\n    return undefined\n  }\n\n  if (typeof data === 'undefined') {\n    // This error would be returned by the server, but we can catch it earlier\n    // to avoid un-necessary requests. Note that a content-length of 0 does not\n    // necessary mean that the body is \"empty\" (e.g. an empty txt file).\n    throw new XRPCError(\n      ResponseType.InvalidRequest,\n      `A request body is expected but none was provided`,\n    )\n  }\n\n  if (isBodyInit(data)) {\n    if (data instanceof FormData && contentType === 'multipart/form-data') {\n      // fetch() will encode FormData payload itself, but it won't override the\n      // content-type header if already present. This would cause the boundary\n      // to be missing from the content-type header, resulting in a 400 error.\n      // Deleting the content-type header here to let fetch() re-create it.\n      headers.delete('content-type')\n    }\n\n    // Will be encoded by the fetch API.\n    return data\n  }\n\n  if (isIterable(data)) {\n    // Note that some environments support using Iterable & AsyncIterable as the\n    // body (e.g. Node's fetch), but not all of them do (browsers).\n    return iterableToReadableStream(data)\n  }\n\n  if (contentType.startsWith('text/')) {\n    return new TextEncoder().encode(String(data))\n  }\n  if (contentType.startsWith('application/json')) {\n    const json = stringifyLex(data)\n    // Server would return a 400 error if the JSON is invalid (e.g. trying to\n    // JSONify a function, or an object that implements toJSON() poorly).\n    if (json === undefined) {\n      throw new XRPCError(\n        ResponseType.InvalidRequest,\n        `Failed to encode request body as JSON`,\n      )\n    }\n    return new TextEncoder().encode(json)\n  }\n\n  // At this point, \"data\" is not a valid BodyInit value, and we don't know how\n  // to encode it into one. Passing it to fetch would result in an error. Let's\n  // throw our own error instead.\n\n  const type =\n    !data || typeof data !== 'object'\n      ? typeof data\n      : data.constructor !== Object &&\n          typeof data.constructor === 'function' &&\n          typeof data.constructor?.name === 'string'\n        ? data.constructor.name\n        : 'object'\n\n  throw new XRPCError(\n    ResponseType.InvalidRequest,\n    `Unable to encode ${type} as ${contentType} data`,\n  )\n}\n\n/**\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/from_static}\n */\nfunction iterableToReadableStream(\n  iterable: Iterable<unknown> | AsyncIterable<unknown>,\n): ReadableStream<Uint8Array> {\n  // Use the native ReadableStream.from() if available.\n  if ('from' in ReadableStream && typeof ReadableStream.from === 'function') {\n    return ReadableStream.from(iterable)\n  }\n\n  // If you see this error, consider using a polyfill for ReadableStream. For\n  // example, the \"web-streams-polyfill\" package:\n  // https://github.com/MattiasBuelens/web-streams-polyfill\n\n  throw new TypeError(\n    'ReadableStream.from() is not supported in this environment. ' +\n      'It is required to support using iterables as the request body. ' +\n      'Consider using a polyfill or re-write your code to use a different body type.',\n  )\n}\n\nexport function httpResponseBodyParse(\n  mimeType: string | null,\n  data: ArrayBuffer | undefined,\n): any {\n  try {\n    if (mimeType) {\n      if (mimeType.includes('application/json')) {\n        const str = new TextDecoder().decode(data)\n        return jsonStringToLex(str)\n      }\n      if (mimeType.startsWith('text/')) {\n        return new TextDecoder().decode(data)\n      }\n    }\n    if (data instanceof ArrayBuffer) {\n      return new Uint8Array(data)\n    }\n    return data\n  } catch (cause) {\n    throw new XRPCError(\n      ResponseType.InvalidResponse,\n      undefined,\n      `Failed to parse response body: ${String(cause)}`,\n      undefined,\n      { cause },\n    )\n  }\n}\n", "import { Gettable } from './types'\nimport { combineHeaders } from './util'\n\nexport type FetchHandler = (\n  this: void,\n  /**\n   * The URL (pathname + query parameters) to make the request to, without the\n   * origin. The origin (protocol, hostname, and port) must be added by this\n   * {@link FetchHandler}, typically based on authentication or other factors.\n   */\n  url: string,\n  init: RequestInit,\n) => Promise<Response>\n\nexport type FetchHandlerOptions = BuildFetchHandlerOptions | string | URL\n\nexport type BuildFetchHandlerOptions = {\n  /**\n   * The service URL to make requests to. This can be a string, URL, or a\n   * function that returns a string or URL. This is useful for dynamic URLs,\n   * such as a service URL that changes based on authentication.\n   */\n  service: Gettable<string | URL>\n\n  /**\n   * Headers to be added to every request. If a function is provided, it will be\n   * called on each request to get the headers. This is useful for dynamic\n   * headers, such as authentication tokens that may expire.\n   */\n  headers?: {\n    [_ in string]?: Gettable<null | string>\n  }\n\n  /**\n   * Bring your own fetch implementation. Typically useful for testing, logging,\n   * mocking, or adding retries, session management, signatures, proof of\n   * possession (DPoP), etc. Defaults to the global `fetch` function.\n   */\n  fetch?: typeof globalThis.fetch\n}\n\nexport interface FetchHandlerObject {\n  fetchHandler: (\n    this: FetchHandlerObject,\n    /**\n     * The URL (pathname + query parameters) to make the request to, without the\n     * origin. The origin (protocol, hostname, and port) must be added by this\n     * {@link FetchHandler}, typically based on authentication or other factors.\n     */\n    url: string,\n    init: RequestInit,\n  ) => Promise<Response>\n}\n\nexport function buildFetchHandler(\n  options: FetchHandler | FetchHandlerObject | FetchHandlerOptions,\n): FetchHandler {\n  // Already a fetch handler (allowed for convenience)\n  if (typeof options === 'function') return options\n  if (typeof options === 'object' && 'fetchHandler' in options) {\n    return options.fetchHandler.bind(options)\n  }\n\n  const {\n    service,\n    headers: defaultHeaders = undefined,\n    fetch = globalThis.fetch,\n  } = typeof options === 'string' || options instanceof URL\n    ? { service: options }\n    : options\n\n  if (typeof fetch !== 'function') {\n    throw new TypeError(\n      'XrpcDispatcher requires fetch() to be available in your environment.',\n    )\n  }\n\n  const defaultHeadersEntries =\n    defaultHeaders != null ? Object.entries(defaultHeaders) : undefined\n\n  return async function (url, init) {\n    const base = typeof service === 'function' ? service() : service\n    const fullUrl = new URL(url, base)\n\n    const headers = combineHeaders(init.headers, defaultHeadersEntries)\n\n    return fetch(fullUrl, { ...init, headers })\n  }\n}\n", "import { LexiconDoc, Lexicons, ValidationError } from '@atproto/lexicon'\nimport {\n  FetchHandler,\n  FetchHandlerObject,\n  FetchHandlerOptions,\n  buildFetchHandler,\n} from './fetch-handler'\nimport {\n  CallOptions,\n  Gettable,\n  QueryParams,\n  ResponseType,\n  XRPCError,\n  XRPCInvalidResponseError,\n  XRPCResponse,\n  httpResponseCodeToEnum,\n} from './types'\nimport {\n  combineHeaders,\n  constructMethodCallHeaders,\n  constructMethodCallUrl,\n  encodeMethodCallBody,\n  getMethodSchemaHTTPMethod,\n  httpResponseBodyParse,\n  isErrorResponseBody,\n} from './util'\n\nexport class XrpcClient {\n  readonly fetchHandler: FetchHandler\n  readonly headers = new Map<string, Gettable<null | string>>()\n  readonly lex: Lexicons\n\n  constructor(\n    fetchHandlerOpts: FetchHandler | FetchHandlerObject | FetchHandlerOptions,\n    // \"Lexicons\" is redundant here (because that class implements\n    // \"Iterable<LexiconDoc>\") but we keep it for explicitness:\n    lex: Lexicons | Iterable<LexiconDoc>,\n  ) {\n    this.fetchHandler = buildFetchHandler(fetchHandlerOpts)\n\n    this.lex = lex instanceof Lexicons ? lex : new Lexicons(lex)\n  }\n\n  setHeader(key: string, value: Gettable<null | string>): void {\n    this.headers.set(key.toLowerCase(), value)\n  }\n\n  unsetHeader(key: string): void {\n    this.headers.delete(key.toLowerCase())\n  }\n\n  clearHeaders(): void {\n    this.headers.clear()\n  }\n\n  async call(\n    methodNsid: string,\n    params?: QueryParams,\n    data?: unknown,\n    opts?: CallOptions,\n  ): Promise<XRPCResponse> {\n    const def = this.lex.getDefOrThrow(methodNsid)\n    if (!def || (def.type !== 'query' && def.type !== 'procedure')) {\n      throw new TypeError(\n        `Invalid lexicon: ${methodNsid}. Must be a query or procedure.`,\n      )\n    }\n\n    // @TODO: should we validate the params and data here?\n    // this.lex.assertValidXrpcParams(methodNsid, params)\n    // if (data !== undefined) {\n    //   this.lex.assertValidXrpcInput(methodNsid, data)\n    // }\n\n    const reqUrl = constructMethodCallUrl(methodNsid, def, params)\n    const reqMethod = getMethodSchemaHTTPMethod(def)\n    const reqHeaders = constructMethodCallHeaders(def, data, opts)\n    const reqBody = encodeMethodCallBody(reqHeaders, data)\n\n    // The duplex field is required for streaming bodies, but not yet reflected\n    // anywhere in docs or types. See whatwg/fetch#1438, nodejs/node#46221.\n    const init: RequestInit & { duplex: 'half' } = {\n      method: reqMethod,\n      headers: combineHeaders(reqHeaders, this.headers),\n      body: reqBody,\n      duplex: 'half',\n      signal: opts?.signal,\n    }\n\n    try {\n      const response = await this.fetchHandler.call(undefined, reqUrl, init)\n\n      const resStatus = response.status\n      const resHeaders = Object.fromEntries(response.headers.entries())\n      const resBodyBytes = await response.arrayBuffer()\n      const resBody = httpResponseBodyParse(\n        response.headers.get('content-type'),\n        resBodyBytes,\n      )\n\n      const resCode = httpResponseCodeToEnum(resStatus)\n      if (resCode !== ResponseType.Success) {\n        const { error = undefined, message = undefined } =\n          resBody && isErrorResponseBody(resBody) ? resBody : {}\n        throw new XRPCError(resCode, error, message, resHeaders)\n      }\n\n      try {\n        this.lex.assertValidXrpcOutput(methodNsid, resBody)\n      } catch (e: unknown) {\n        if (e instanceof ValidationError) {\n          throw new XRPCInvalidResponseError(methodNsid, e, resBody)\n        }\n\n        throw e\n      }\n\n      return new XRPCResponse(resBody, resHeaders)\n    } catch (err) {\n      throw XRPCError.from(err)\n    }\n  }\n}\n", "import { LexiconDoc, Lexicons } from '@atproto/lexicon'\nimport { CallOptions, QueryParams } from './types'\nimport { combineHeaders } from './util'\nimport { XrpcClient } from './xrpc-client'\n\n/** @deprecated Use {@link XrpcClient} instead */\nexport class Client {\n  /** @deprecated */\n  get fetch(): never {\n    throw new Error(\n      'Client.fetch is no longer supported. Use an XrpcClient instead.',\n    )\n  }\n\n  /** @deprecated */\n  set fetch(_: never) {\n    throw new Error(\n      'Client.fetch is no longer supported. Use an XrpcClient instead.',\n    )\n  }\n\n  lex = new Lexicons()\n\n  // method calls\n  //\n\n  async call(\n    serviceUri: string | URL,\n    methodNsid: string,\n    params?: QueryParams,\n    data?: BodyInit | null,\n    opts?: CallOptions,\n  ) {\n    return this.service(serviceUri).call(methodNsid, params, data, opts)\n  }\n\n  service(serviceUri: string | URL) {\n    return new ServiceClient(this, serviceUri)\n  }\n\n  // schemas\n  // =\n\n  addLexicon(doc: LexiconDoc) {\n    this.lex.add(doc)\n  }\n\n  addLexicons(docs: LexiconDoc[]) {\n    for (const doc of docs) {\n      this.addLexicon(doc)\n    }\n  }\n\n  removeLexicon(uri: string) {\n    this.lex.remove(uri)\n  }\n}\n\n/** @deprecated Use {@link XrpcClient} instead */\nexport class ServiceClient extends XrpcClient {\n  uri: URL\n\n  constructor(\n    public baseClient: Client,\n    serviceUri: string | URL,\n  ) {\n    super(async (input, init) => {\n      const headers = combineHeaders(init.headers, Object.entries(this.headers))\n      return fetch(new URL(input, this.uri), { ...init, headers })\n    }, baseClient.lex)\n    this.uri = typeof serviceUri === 'string' ? new URL(serviceUri) : serviceUri\n  }\n}\n", "export * from './client'\nexport * from './fetch-handler'\nexport * from './types'\nexport * from './util'\nexport * from './xrpc-client'\n\n/* eslint-disable import/no-deprecated */\nimport { Client } from './client'\n/** @deprecated create a local {@link XrpcClient} instance instead */\nconst defaultInst = new Client()\nexport default defaultInst\n/* eslint-enable import/no-deprecated */\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoRepoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.applyWrites'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** Can be set to 'false' to skip Lexicon schema validation of record data across all operations, 'true' to require it, or leave unset to validate only for known Lexicons. */\n  validate?: boolean\n  writes: ($Typed<Create> | $Typed<Update> | $Typed<Delete>)[]\n  /** If provided, the entire operation will fail if the current repo commit CID does not match this value. Used to prevent conflicting repo mutations. */\n  swapCommit?: string\n}\n\nexport interface OutputSchema {\n  commit?: ComAtprotoRepoDefs.CommitMeta\n  results?: (\n    | $Typed<CreateResult>\n    | $Typed<UpdateResult>\n    | $Typed<DeleteResult>\n  )[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n\n  return e\n}\n\n/** Operation which creates a new record. */\nexport interface Create {\n  $type?: 'com.atproto.repo.applyWrites#create'\n  collection: string\n  /** NOTE: maxLength is redundant with record-key format. Keeping it temporarily to ensure backwards compatibility. */\n  rkey?: string\n  value: { [_ in string]: unknown }\n}\n\nconst hashCreate = 'create'\n\nexport function isCreate<V>(v: V) {\n  return is$typed(v, id, hashCreate)\n}\n\nexport function validateCreate<V>(v: V) {\n  return validate<Create & V>(v, id, hashCreate)\n}\n\n/** Operation which updates an existing record. */\nexport interface Update {\n  $type?: 'com.atproto.repo.applyWrites#update'\n  collection: string\n  rkey: string\n  value: { [_ in string]: unknown }\n}\n\nconst hashUpdate = 'update'\n\nexport function isUpdate<V>(v: V) {\n  return is$typed(v, id, hashUpdate)\n}\n\nexport function validateUpdate<V>(v: V) {\n  return validate<Update & V>(v, id, hashUpdate)\n}\n\n/** Operation which deletes an existing record. */\nexport interface Delete {\n  $type?: 'com.atproto.repo.applyWrites#delete'\n  collection: string\n  rkey: string\n}\n\nconst hashDelete = 'delete'\n\nexport function isDelete<V>(v: V) {\n  return is$typed(v, id, hashDelete)\n}\n\nexport function validateDelete<V>(v: V) {\n  return validate<Delete & V>(v, id, hashDelete)\n}\n\nexport interface CreateResult {\n  $type?: 'com.atproto.repo.applyWrites#createResult'\n  uri: string\n  cid: string\n  validationStatus?: 'valid' | 'unknown' | (string & {})\n}\n\nconst hashCreateResult = 'createResult'\n\nexport function isCreateResult<V>(v: V) {\n  return is$typed(v, id, hashCreateResult)\n}\n\nexport function validateCreateResult<V>(v: V) {\n  return validate<CreateResult & V>(v, id, hashCreateResult)\n}\n\nexport interface UpdateResult {\n  $type?: 'com.atproto.repo.applyWrites#updateResult'\n  uri: string\n  cid: string\n  validationStatus?: 'valid' | 'unknown' | (string & {})\n}\n\nconst hashUpdateResult = 'updateResult'\n\nexport function isUpdateResult<V>(v: V) {\n  return is$typed(v, id, hashUpdateResult)\n}\n\nexport function validateUpdateResult<V>(v: V) {\n  return validate<UpdateResult & V>(v, id, hashUpdateResult)\n}\n\nexport interface DeleteResult {\n  $type?: 'com.atproto.repo.applyWrites#deleteResult'\n}\n\nconst hashDeleteResult = 'deleteResult'\n\nexport function isDeleteResult<V>(v: V) {\n  return is$typed(v, id, hashDeleteResult)\n}\n\nexport function validateDeleteResult<V>(v: V) {\n  return validate<DeleteResult & V>(v, id, hashDeleteResult)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoRepoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.createRecord'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey?: string\n  /** Can be set to 'false' to skip Lexicon schema validation of record data, 'true' to require it, or leave unset to validate only for known Lexicons. */\n  validate?: boolean\n  /** The record itself. Must contain a $type field. */\n  record: { [_ in string]: unknown }\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n}\n\nexport interface OutputSchema {\n  uri: string\n  cid: string\n  commit?: ComAtprotoRepoDefs.CommitMeta\n  validationStatus?: 'valid' | 'unknown' | (string & {})\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoRepoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.deleteRecord'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey: string\n  /** Compare and swap with the previous record by CID. */\n  swapRecord?: string\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n}\n\nexport interface OutputSchema {\n  commit?: ComAtprotoRepoDefs.CommitMeta\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.getRecord'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey: string\n  /** The CID of the version of the record. If not specified, then return the most recent version. */\n  cid?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  value: { [_ in string]: unknown }\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RecordNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RecordNotFound') return new RecordNotFoundError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoRepoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.putRecord'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey: string\n  /** Can be set to 'false' to skip Lexicon schema validation of record data, 'true' to require it, or leave unset to validate only for known Lexicons. */\n  validate?: boolean\n  /** The record to write. */\n  record: { [_ in string]: unknown }\n  /** Compare and swap with the previous record by CID. WARNING: nullable and optional field; may cause problems with golang implementation */\n  swapRecord?: string | null\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n}\n\nexport interface OutputSchema {\n  uri: string\n  cid: string\n  commit?: ComAtprotoRepoDefs.CommitMeta\n  validationStatus?: 'valid' | 'unknown' | (string & {})\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.confirmEmail'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  token: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class AccountNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidEmailError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountNotFound') return new AccountNotFoundError(e)\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n    if (e.error === 'InvalidEmail') return new InvalidEmailError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.createAccount'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email?: string\n  /** Requested handle for the account. */\n  handle: string\n  /** Pre-existing atproto DID, being imported to a new account. */\n  did?: string\n  inviteCode?: string\n  verificationCode?: string\n  verificationPhone?: string\n  /** Initial account password. May need to meet instance-specific password strength requirements. */\n  password?: string\n  /** DID PLC rotation key (aka, recovery key) to be included in PLC creation operation. */\n  recoveryKey?: string\n  /** A signed DID PLC operation to be submitted as part of importing an existing account to this instance. NOTE: this optional field may be updated when full account migration is implemented. */\n  plcOp?: { [_ in string]: unknown }\n}\n\n/** Account login session returned on successful account creation. */\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  /** The DID of the new account. */\n  did: string\n  /** Complete DID document. */\n  didDoc?: { [_ in string]: unknown }\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class InvalidHandleError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidPasswordError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidInviteCodeError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class HandleNotAvailableError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class UnsupportedDomainError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class UnresolvableDidError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class IncompatibleDidDocError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidHandle') return new InvalidHandleError(e)\n    if (e.error === 'InvalidPassword') return new InvalidPasswordError(e)\n    if (e.error === 'InvalidInviteCode') return new InvalidInviteCodeError(e)\n    if (e.error === 'HandleNotAvailable') return new HandleNotAvailableError(e)\n    if (e.error === 'UnsupportedDomain') return new UnsupportedDomainError(e)\n    if (e.error === 'UnresolvableDid') return new UnresolvableDidError(e)\n    if (e.error === 'IncompatibleDidDoc') return new IncompatibleDidDocError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.createAppPassword'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** A short name for the App Password, to help distinguish them. */\n  name: string\n  /** If an app password has 'privileged' access to possibly sensitive account state. Meant for use with trusted clients. */\n  privileged?: boolean\n}\n\nexport type OutputSchema = AppPassword\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n\n  return e\n}\n\nexport interface AppPassword {\n  $type?: 'com.atproto.server.createAppPassword#appPassword'\n  name: string\n  password: string\n  createdAt: string\n  privileged?: boolean\n}\n\nconst hashAppPassword = 'appPassword'\n\nexport function isAppPassword<V>(v: V) {\n  return is$typed(v, id, hashAppPassword)\n}\n\nexport function validateAppPassword<V>(v: V) {\n  return validate<AppPassword & V>(v, id, hashAppPassword)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.createSession'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Handle or other identifier supported by the server for the authenticating user. */\n  identifier: string\n  password: string\n  authFactorToken?: string\n  /** When true, instead of throwing error for takendown accounts, a valid response with a narrow scoped token will be returned */\n  allowTakendown?: boolean\n}\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: { [_ in string]: unknown }\n  email?: string\n  emailConfirmed?: boolean\n  emailAuthFactor?: boolean\n  active?: boolean\n  /** If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted. */\n  status?: 'takendown' | 'suspended' | 'deactivated' | (string & {})\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class AuthFactorTokenRequiredError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n    if (e.error === 'AuthFactorTokenRequired')\n      return new AuthFactorTokenRequiredError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.deleteAccount'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  password: string\n  token: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoServerDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.getAccountInviteCodes'\n\nexport interface QueryParams {\n  includeUsed?: boolean\n  /** Controls whether any new 'earned' but not 'created' invites should be created. */\n  createAvailable?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  codes: ComAtprotoServerDefs.InviteCode[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class DuplicateCreateError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'DuplicateCreate') return new DuplicateCreateError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.getServiceAuth'\n\nexport interface QueryParams {\n  /** The DID of the service that the token will be used to authenticate with */\n  aud: string\n  /** The time in Unix Epoch seconds that the JWT expires. Defaults to 60 seconds in the future. The service may enforce certain time bounds on tokens depending on the requested scope. */\n  exp?: number\n  /** Lexicon (XRPC) method to bind the requested token to */\n  lxm?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  token: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BadExpirationError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadExpiration') return new BadExpirationError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.listAppPasswords'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  passwords: AppPassword[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n\n  return e\n}\n\nexport interface AppPassword {\n  $type?: 'com.atproto.server.listAppPasswords#appPassword'\n  name: string\n  createdAt: string\n  privileged?: boolean\n}\n\nconst hashAppPassword = 'appPassword'\n\nexport function isAppPassword<V>(v: V) {\n  return is$typed(v, id, hashAppPassword)\n}\n\nexport function validateAppPassword<V>(v: V) {\n  return validate<AppPassword & V>(v, id, hashAppPassword)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.refreshSession'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: { [_ in string]: unknown }\n  active?: boolean\n  /** Hosting status of the account. If not specified, then assume 'active'. */\n  status?: 'takendown' | 'suspended' | 'deactivated' | (string & {})\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.resetPassword'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  token: string\n  password: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.updateEmail'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  emailAuthFactor?: boolean\n  /** Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed. */\n  token?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class TokenRequiredError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n    if (e.error === 'TokenRequired') return new TokenRequiredError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.getBlob'\n\nexport interface QueryParams {\n  /** The DID of the account. */\n  did: string\n  /** The CID of the blob to fetch */\n  cid: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport class BlobNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlobNotFound') return new BlobNotFoundError(e)\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.getBlocks'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  cids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport class BlockNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockNotFound') return new BlockNotFoundError(e)\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.getHead'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  root: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class HeadNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'HeadNotFound') return new HeadNotFoundError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.getLatestCommit'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cid: string\n  rev: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.getRecord'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  collection: string\n  /** Record Key */\n  rkey: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport class RecordNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RecordNotFound') return new RecordNotFoundError(e)\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.getRepo'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** The revision ('rev') of the repo to create a diff from. */\n  since?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.getRepoStatus'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  active: boolean\n  /** If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted. */\n  status?:\n    | 'takendown'\n    | 'suspended'\n    | 'deleted'\n    | 'deactivated'\n    | 'desynchronized'\n    | 'throttled'\n    | (string & {})\n  /** Optional field, the current rev of the repo, if active=true */\n  rev?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.listBlobs'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** Optional revision of the repo to list blobs since. */\n  since?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  cids: string[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getActorLikes'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BlockedActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class BlockedByActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockedActor') return new BlockedActorError(e)\n    if (e.error === 'BlockedByActor') return new BlockedByActorError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getAuthorFeed'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n  /** Combinations of post/repost types to include in response. */\n  filter?:\n    | 'posts_with_replies'\n    | 'posts_no_replies'\n    | 'posts_with_media'\n    | 'posts_and_author_threads'\n    | 'posts_with_video'\n    | (string & {})\n  includePins?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BlockedActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class BlockedByActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockedActor') return new BlockedActorError(e)\n    if (e.error === 'BlockedByActor') return new BlockedByActorError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getFeed'\n\nexport interface QueryParams {\n  feed: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getFeedSkeleton'\n\nexport interface QueryParams {\n  /** Reference to feed generator record describing the specific feed being requested. */\n  feed: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.SkeletonFeedPost[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getListFeed'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) to the list record. */\n  list: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class UnknownListError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownList') return new UnknownListError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getPostThread'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) to post record. */\n  uri: string\n  /** How many levels of reply depth should be included in response. */\n  depth?: number\n  /** How many levels of parent (and grandparent, etc) post to include. */\n  parentHeight?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  thread:\n    | $Typed<AppBskyFeedDefs.ThreadViewPost>\n    | $Typed<AppBskyFeedDefs.NotFoundPost>\n    | $Typed<AppBskyFeedDefs.BlockedPost>\n    | { $type: string }\n  threadgate?: AppBskyFeedDefs.ThreadgateView\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class NotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'NotFound') return new NotFoundError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.searchPosts'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  /** Specifies the ranking order of results. */\n  sort?: 'top' | 'latest' | (string & {})\n  /** Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD). */\n  since?: string\n  /** Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD). */\n  until?: string\n  /** Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions. */\n  mentions?: string\n  /** Filter to posts by the given account. Handles are resolved to DID before query-time. */\n  author?: string\n  /** Filter to posts in the given language. Expected to be based on post language field, though server may override language detection. */\n  lang?: string\n  /** Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization. */\n  domain?: string\n  /** Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching. */\n  url?: string\n  /** Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching. */\n  tag?: string[]\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  posts: AppBskyFeedDefs.PostView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyGraphDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getRelationships'\n\nexport interface QueryParams {\n  /** Primary account requesting relationships for. */\n  actor: string\n  /** List of 'other' accounts to be related back to the primary. */\n  others?: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  actor?: string\n  relationships: (\n    | $Typed<AppBskyGraphDefs.Relationship>\n    | $Typed<AppBskyGraphDefs.NotFoundActor>\n    | { $type: string }\n  )[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class ActorNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ActorNotFound') return new ActorNotFoundError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyUnspeccedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.unspecced.searchActorsSkeleton'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax. */\n  q: string\n  /** DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking. */\n  viewer?: string\n  /** If true, acts as fast/simple 'typeahead' query. */\n  typeahead?: boolean\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  actors: AppBskyUnspeccedDefs.SkeletonSearchActor[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyUnspeccedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.unspecced.searchPostsSkeleton'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  /** Specifies the ranking order of results. */\n  sort?: 'top' | 'latest' | (string & {})\n  /** Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD). */\n  since?: string\n  /** Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD). */\n  until?: string\n  /** Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions. */\n  mentions?: string\n  /** Filter to posts by the given account. Handles are resolved to DID before query-time. */\n  author?: string\n  /** Filter to posts in the given language. Expected to be based on post language field, though server may override language detection. */\n  lang?: string\n  /** Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization. */\n  domain?: string\n  /** Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching. */\n  url?: string\n  /** Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching. */\n  tag?: string[]\n  /** DID of the account making the request (not included for public/unauthenticated queries). Used for 'from:me' queries. */\n  viewer?: string\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  posts: AppBskyUnspeccedDefs.SkeletonSearchPost[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyUnspeccedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.unspecced.searchStarterPacksSkeleton'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  /** DID of the account making the request (not included for public/unauthenticated queries). */\n  viewer?: string\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  starterPacks: AppBskyUnspeccedDefs.SkeletonSearchStarterPack[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneCommunicationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.communication.createTemplate'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Name of the template. */\n  name: string\n  /** Content of the template, markdown supported, can contain variable placeholders. */\n  contentMarkdown: string\n  /** Subject of the message, used in emails. */\n  subject: string\n  /** Message language. */\n  lang?: string\n  /** DID of the user who is creating the template. */\n  createdBy?: string\n}\n\nexport type OutputSchema = ToolsOzoneCommunicationDefs.TemplateView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class DuplicateTemplateNameError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'DuplicateTemplateName')\n      return new DuplicateTemplateNameError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneCommunicationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.communication.updateTemplate'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** ID of the template to be updated. */\n  id: string\n  /** Name of the template. */\n  name?: string\n  /** Message language. */\n  lang?: string\n  /** Content of the template, markdown supported, can contain variable placeholders. */\n  contentMarkdown?: string\n  /** Subject of the message, used in emails. */\n  subject?: string\n  /** DID of the user who is updating the template. */\n  updatedBy?: string\n  disabled?: boolean\n}\n\nexport type OutputSchema = ToolsOzoneCommunicationDefs.TemplateView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class DuplicateTemplateNameError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'DuplicateTemplateName')\n      return new DuplicateTemplateNameError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneModerationDefs from './defs.js'\nimport type * as ComAtprotoAdminDefs from '../../../com/atproto/admin/defs.js'\nimport type * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.emitEvent'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  event:\n    | $Typed<ToolsOzoneModerationDefs.ModEventTakedown>\n    | $Typed<ToolsOzoneModerationDefs.ModEventAcknowledge>\n    | $Typed<ToolsOzoneModerationDefs.ModEventEscalate>\n    | $Typed<ToolsOzoneModerationDefs.ModEventComment>\n    | $Typed<ToolsOzoneModerationDefs.ModEventLabel>\n    | $Typed<ToolsOzoneModerationDefs.ModEventReport>\n    | $Typed<ToolsOzoneModerationDefs.ModEventMute>\n    | $Typed<ToolsOzoneModerationDefs.ModEventUnmute>\n    | $Typed<ToolsOzoneModerationDefs.ModEventMuteReporter>\n    | $Typed<ToolsOzoneModerationDefs.ModEventUnmuteReporter>\n    | $Typed<ToolsOzoneModerationDefs.ModEventReverseTakedown>\n    | $Typed<ToolsOzoneModerationDefs.ModEventResolveAppeal>\n    | $Typed<ToolsOzoneModerationDefs.ModEventEmail>\n    | $Typed<ToolsOzoneModerationDefs.ModEventDivert>\n    | $Typed<ToolsOzoneModerationDefs.ModEventTag>\n    | $Typed<ToolsOzoneModerationDefs.AccountEvent>\n    | $Typed<ToolsOzoneModerationDefs.IdentityEvent>\n    | $Typed<ToolsOzoneModerationDefs.RecordEvent>\n    | $Typed<ToolsOzoneModerationDefs.ModEventPriorityScore>\n    | { $type: string }\n  subject:\n    | $Typed<ComAtprotoAdminDefs.RepoRef>\n    | $Typed<ComAtprotoRepoStrongRef.Main>\n    | { $type: string }\n  subjectBlobCids?: string[]\n  createdBy: string\n}\n\nexport type OutputSchema = ToolsOzoneModerationDefs.ModEventView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class SubjectHasActionError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'SubjectHasAction') return new SubjectHasActionError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneModerationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.getRecord'\n\nexport interface QueryParams {\n  uri: string\n  cid?: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ToolsOzoneModerationDefs.RecordViewDetail\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RecordNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RecordNotFound') return new RecordNotFoundError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneModerationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.getRepo'\n\nexport interface QueryParams {\n  did: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ToolsOzoneModerationDefs.RepoViewDetail\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.set.deleteSet'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Name of the set to delete */\n  name: string\n}\n\nexport interface OutputSchema {}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class SetNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'SetNotFound') return new SetNotFoundError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.set.deleteValues'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Name of the set to delete values from */\n  name: string\n  /** Array of string values to delete from the set */\n  values: string[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class SetNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'SetNotFound') return new SetNotFoundError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneSetDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.set.getValues'\n\nexport interface QueryParams {\n  name: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  set: ToolsOzoneSetDefs.SetView\n  values: string[]\n  cursor?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class SetNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'SetNotFound') return new SetNotFoundError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneTeamDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.team.addMember'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  role:\n    | 'tools.ozone.team.defs#roleAdmin'\n    | 'tools.ozone.team.defs#roleModerator'\n    | 'tools.ozone.team.defs#roleTriage'\n    | (string & {})\n}\n\nexport type OutputSchema = ToolsOzoneTeamDefs.Member\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class MemberAlreadyExistsError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'MemberAlreadyExists')\n      return new MemberAlreadyExistsError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.team.deleteMember'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class MemberNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class CannotDeleteSelfError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'MemberNotFound') return new MemberNotFoundError(e)\n    if (e.error === 'CannotDeleteSelf') return new CannotDeleteSelfError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneTeamDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.team.updateMember'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  disabled?: boolean\n  role?:\n    | 'tools.ozone.team.defs#roleAdmin'\n    | 'tools.ozone.team.defs#roleModerator'\n    | 'tools.ozone.team.defs#roleTriage'\n    | (string & {})\n}\n\nexport type OutputSchema = ToolsOzoneTeamDefs.Member\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class MemberNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'MemberNotFound') return new MemberNotFoundError(e)\n  }\n\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoServerDefs from '../server/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.defs'\n\nexport interface StatusAttr {\n  $type?: 'com.atproto.admin.defs#statusAttr'\n  applied: boolean\n  ref?: string\n}\n\nconst hashStatusAttr = 'statusAttr'\n\nexport function isStatusAttr<V>(v: V) {\n  return is$typed(v, id, hashStatusAttr)\n}\n\nexport function validateStatusAttr<V>(v: V) {\n  return validate<StatusAttr & V>(v, id, hashStatusAttr)\n}\n\nexport interface AccountView {\n  $type?: 'com.atproto.admin.defs#accountView'\n  did: string\n  handle: string\n  email?: string\n  relatedRecords?: { [_ in string]: unknown }[]\n  indexedAt: string\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invites?: ComAtprotoServerDefs.InviteCode[]\n  invitesDisabled?: boolean\n  emailConfirmedAt?: string\n  inviteNote?: string\n  deactivatedAt?: string\n  threatSignatures?: ThreatSignature[]\n}\n\nconst hashAccountView = 'accountView'\n\nexport function isAccountView<V>(v: V) {\n  return is$typed(v, id, hashAccountView)\n}\n\nexport function validateAccountView<V>(v: V) {\n  return validate<AccountView & V>(v, id, hashAccountView)\n}\n\nexport interface RepoRef {\n  $type?: 'com.atproto.admin.defs#repoRef'\n  did: string\n}\n\nconst hashRepoRef = 'repoRef'\n\nexport function isRepoRef<V>(v: V) {\n  return is$typed(v, id, hashRepoRef)\n}\n\nexport function validateRepoRef<V>(v: V) {\n  return validate<RepoRef & V>(v, id, hashRepoRef)\n}\n\nexport interface RepoBlobRef {\n  $type?: 'com.atproto.admin.defs#repoBlobRef'\n  did: string\n  cid: string\n  recordUri?: string\n}\n\nconst hashRepoBlobRef = 'repoBlobRef'\n\nexport function isRepoBlobRef<V>(v: V) {\n  return is$typed(v, id, hashRepoBlobRef)\n}\n\nexport function validateRepoBlobRef<V>(v: V) {\n  return validate<RepoBlobRef & V>(v, id, hashRepoBlobRef)\n}\n\nexport interface ThreatSignature {\n  $type?: 'com.atproto.admin.defs#threatSignature'\n  property: string\n  value: string\n}\n\nconst hashThreatSignature = 'threatSignature'\n\nexport function isThreatSignature<V>(v: V) {\n  return is$typed(v, id, hashThreatSignature)\n}\n\nexport function validateThreatSignature<V>(v: V) {\n  return validate<ThreatSignature & V>(v, id, hashThreatSignature)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.deleteAccount'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.disableAccountInvites'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  account: string\n  /** Optional reason for disabled invites. */\n  note?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.disableInviteCodes'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  codes?: string[]\n  accounts?: string[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.enableAccountInvites'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  account: string\n  /** Optional reason for enabled invites. */\n  note?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoAdminDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.getAccountInfo'\n\nexport interface QueryParams {\n  did: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ComAtprotoAdminDefs.AccountView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoAdminDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.getAccountInfos'\n\nexport interface QueryParams {\n  dids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  infos: ComAtprotoAdminDefs.AccountView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoServerDefs from '../server/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.getInviteCodes'\n\nexport interface QueryParams {\n  sort?: 'recent' | 'usage' | (string & {})\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  codes: ComAtprotoServerDefs.InviteCode[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoAdminDefs from './defs.js'\nimport type * as ComAtprotoRepoStrongRef from '../repo/strongRef.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.getSubjectStatus'\n\nexport interface QueryParams {\n  did?: string\n  uri?: string\n  blob?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject:\n    | $Typed<ComAtprotoAdminDefs.RepoRef>\n    | $Typed<ComAtprotoRepoStrongRef.Main>\n    | $Typed<ComAtprotoAdminDefs.RepoBlobRef>\n    | { $type: string }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  deactivated?: ComAtprotoAdminDefs.StatusAttr\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoAdminDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.searchAccounts'\n\nexport interface QueryParams {\n  email?: string\n  cursor?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  accounts: ComAtprotoAdminDefs.AccountView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.sendEmail'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  recipientDid: string\n  content: string\n  subject?: string\n  senderDid: string\n  /** Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers */\n  comment?: string\n}\n\nexport interface OutputSchema {\n  sent: boolean\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.updateAccountEmail'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  account: string\n  email: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.updateAccountHandle'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  handle: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.updateAccountPassword'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  password: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoAdminDefs from './defs.js'\nimport type * as ComAtprotoRepoStrongRef from '../repo/strongRef.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.admin.updateSubjectStatus'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  subject:\n    | $Typed<ComAtprotoAdminDefs.RepoRef>\n    | $Typed<ComAtprotoRepoStrongRef.Main>\n    | $Typed<ComAtprotoAdminDefs.RepoBlobRef>\n    | { $type: string }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  deactivated?: ComAtprotoAdminDefs.StatusAttr\n}\n\nexport interface OutputSchema {\n  subject:\n    | $Typed<ComAtprotoAdminDefs.RepoRef>\n    | $Typed<ComAtprotoRepoStrongRef.Main>\n    | $Typed<ComAtprotoAdminDefs.RepoBlobRef>\n    | { $type: string }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.identity.getRecommendedDidCredentials'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  /** Recommended rotation keys for PLC dids. Should be undefined (or ignored) for did:webs. */\n  rotationKeys?: string[]\n  alsoKnownAs?: string[]\n  verificationMethods?: { [_ in string]: unknown }\n  services?: { [_ in string]: unknown }\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.identity.requestPlcOperationSignature'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.identity.resolveHandle'\n\nexport interface QueryParams {\n  /** The handle to resolve. */\n  handle: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.identity.signPlcOperation'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** A token received through com.atproto.identity.requestPlcOperationSignature */\n  token?: string\n  rotationKeys?: string[]\n  alsoKnownAs?: string[]\n  verificationMethods?: { [_ in string]: unknown }\n  services?: { [_ in string]: unknown }\n}\n\nexport interface OutputSchema {\n  /** A signed DID PLC operation. */\n  operation: { [_ in string]: unknown }\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.identity.submitPlcOperation'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  operation: { [_ in string]: unknown }\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.identity.updateHandle'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The new handle. */\n  handle: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.label.defs'\n\n/** Metadata tag on an atproto resource (eg, repo or record). */\nexport interface Label {\n  $type?: 'com.atproto.label.defs#label'\n  /** The AT Protocol version of the label object. */\n  ver?: number\n  /** DID of the actor who created this label. */\n  src: string\n  /** AT URI of the record, repository (account), or other resource that this label applies to. */\n  uri: string\n  /** Optionally, CID specifying the specific version of 'uri' resource this label applies to. */\n  cid?: string\n  /** The short string name of the value or type of this label. */\n  val: string\n  /** If true, this is a negation label, overwriting a previous label. */\n  neg?: boolean\n  /** Timestamp when this label was created. */\n  cts: string\n  /** Timestamp at which this label expires (no longer applies). */\n  exp?: string\n  /** Signature of dag-cbor encoded label. */\n  sig?: Uint8Array\n}\n\nconst hashLabel = 'label'\n\nexport function isLabel<V>(v: V) {\n  return is$typed(v, id, hashLabel)\n}\n\nexport function validateLabel<V>(v: V) {\n  return validate<Label & V>(v, id, hashLabel)\n}\n\n/** Metadata tags on an atproto record, published by the author within the record. */\nexport interface SelfLabels {\n  $type?: 'com.atproto.label.defs#selfLabels'\n  values: SelfLabel[]\n}\n\nconst hashSelfLabels = 'selfLabels'\n\nexport function isSelfLabels<V>(v: V) {\n  return is$typed(v, id, hashSelfLabels)\n}\n\nexport function validateSelfLabels<V>(v: V) {\n  return validate<SelfLabels & V>(v, id, hashSelfLabels)\n}\n\n/** Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel. */\nexport interface SelfLabel {\n  $type?: 'com.atproto.label.defs#selfLabel'\n  /** The short string name of the value or type of this label. */\n  val: string\n}\n\nconst hashSelfLabel = 'selfLabel'\n\nexport function isSelfLabel<V>(v: V) {\n  return is$typed(v, id, hashSelfLabel)\n}\n\nexport function validateSelfLabel<V>(v: V) {\n  return validate<SelfLabel & V>(v, id, hashSelfLabel)\n}\n\n/** Declares a label value and its expected interpretations and behaviors. */\nexport interface LabelValueDefinition {\n  $type?: 'com.atproto.label.defs#labelValueDefinition'\n  /** The value of the label being defined. Must only include lowercase ascii and the '-' character ([a-z-]+). */\n  identifier: string\n  /** How should a client visually convey this label? 'inform' means neutral and informational; 'alert' means negative and warning; 'none' means show nothing. */\n  severity: 'inform' | 'alert' | 'none' | (string & {})\n  /** What should this label hide in the UI, if applied? 'content' hides all of the target; 'media' hides the images/video/audio; 'none' hides nothing. */\n  blurs: 'content' | 'media' | 'none' | (string & {})\n  /** The default setting for this label. */\n  defaultSetting: 'ignore' | 'warn' | 'hide' | (string & {})\n  /** Does the user need to have adult content enabled in order to configure this label? */\n  adultOnly?: boolean\n  locales: LabelValueDefinitionStrings[]\n}\n\nconst hashLabelValueDefinition = 'labelValueDefinition'\n\nexport function isLabelValueDefinition<V>(v: V) {\n  return is$typed(v, id, hashLabelValueDefinition)\n}\n\nexport function validateLabelValueDefinition<V>(v: V) {\n  return validate<LabelValueDefinition & V>(v, id, hashLabelValueDefinition)\n}\n\n/** Strings which describe the label in the UI, localized into a specific language. */\nexport interface LabelValueDefinitionStrings {\n  $type?: 'com.atproto.label.defs#labelValueDefinitionStrings'\n  /** The code of the language these strings are written in. */\n  lang: string\n  /** A short human-readable name for the label. */\n  name: string\n  /** A longer description of what the label means and why it might be applied. */\n  description: string\n}\n\nconst hashLabelValueDefinitionStrings = 'labelValueDefinitionStrings'\n\nexport function isLabelValueDefinitionStrings<V>(v: V) {\n  return is$typed(v, id, hashLabelValueDefinitionStrings)\n}\n\nexport function validateLabelValueDefinitionStrings<V>(v: V) {\n  return validate<LabelValueDefinitionStrings & V>(\n    v,\n    id,\n    hashLabelValueDefinitionStrings,\n  )\n}\n\nexport type LabelValue =\n  | '!hide'\n  | '!no-promote'\n  | '!warn'\n  | '!no-unauthenticated'\n  | 'dmca-violation'\n  | 'doxxing'\n  | 'porn'\n  | 'sexual'\n  | 'nudity'\n  | 'nsfl'\n  | 'gore'\n  | (string & {})\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoLabelDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.label.queryLabels'\n\nexport interface QueryParams {\n  /** List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI. */\n  uriPatterns: string[]\n  /** Optional list of label sources (DIDs) to filter on. */\n  sources?: string[]\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  labels: ComAtprotoLabelDefs.Label[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoLabelDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.label.subscribeLabels'\n\nexport interface Labels {\n  $type?: 'com.atproto.label.subscribeLabels#labels'\n  seq: number\n  labels: ComAtprotoLabelDefs.Label[]\n}\n\nconst hashLabels = 'labels'\n\nexport function isLabels<V>(v: V) {\n  return is$typed(v, id, hashLabels)\n}\n\nexport function validateLabels<V>(v: V) {\n  return validate<Labels & V>(v, id, hashLabels)\n}\n\nexport interface Info {\n  $type?: 'com.atproto.label.subscribeLabels#info'\n  name: 'OutdatedCursor' | (string & {})\n  message?: string\n}\n\nconst hashInfo = 'info'\n\nexport function isInfo<V>(v: V) {\n  return is$typed(v, id, hashInfo)\n}\n\nexport function validateInfo<V>(v: V) {\n  return validate<Info & V>(v, id, hashInfo)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.lexicon.schema'\n\nexport interface Record {\n  $type: 'com.atproto.lexicon.schema'\n  /** Indicates the 'version' of the Lexicon language. Must be '1' for the current atproto/Lexicon schema system. */\n  lexicon: number\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoModerationDefs from './defs.js'\nimport type * as ComAtprotoAdminDefs from '../admin/defs.js'\nimport type * as ComAtprotoRepoStrongRef from '../repo/strongRef.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.moderation.createReport'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  /** Additional context about the content and violation. */\n  reason?: string\n  subject:\n    | $Typed<ComAtprotoAdminDefs.RepoRef>\n    | $Typed<ComAtprotoRepoStrongRef.Main>\n    | { $type: string }\n}\n\nexport interface OutputSchema {\n  id: number\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  reason?: string\n  subject:\n    | $Typed<ComAtprotoAdminDefs.RepoRef>\n    | $Typed<ComAtprotoRepoStrongRef.Main>\n    | { $type: string }\n  reportedBy: string\n  createdAt: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.moderation.defs'\n\nexport type ReasonType =\n  | 'com.atproto.moderation.defs#reasonSpam'\n  | 'com.atproto.moderation.defs#reasonViolation'\n  | 'com.atproto.moderation.defs#reasonMisleading'\n  | 'com.atproto.moderation.defs#reasonSexual'\n  | 'com.atproto.moderation.defs#reasonRude'\n  | 'com.atproto.moderation.defs#reasonOther'\n  | 'com.atproto.moderation.defs#reasonAppeal'\n  | (string & {})\n\n/** Spam: frequent unwanted promotion, replies, mentions */\nexport const REASONSPAM = `${id}#reasonSpam`\n/** Direct violation of server rules, laws, terms of service */\nexport const REASONVIOLATION = `${id}#reasonViolation`\n/** Misleading identity, affiliation, or content */\nexport const REASONMISLEADING = `${id}#reasonMisleading`\n/** Unwanted or mislabeled sexual content */\nexport const REASONSEXUAL = `${id}#reasonSexual`\n/** Rude, harassing, explicit, or otherwise unwelcoming behavior */\nexport const REASONRUDE = `${id}#reasonRude`\n/** Other: reports not falling under another report category */\nexport const REASONOTHER = `${id}#reasonOther`\n/** Appeal: appeal a previously taken moderation action */\nexport const REASONAPPEAL = `${id}#reasonAppeal`\n\n/** Tag describing a type of subject that might be reported. */\nexport type SubjectType = 'account' | 'record' | 'chat' | (string & {})\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.defs'\n\nexport interface CommitMeta {\n  $type?: 'com.atproto.repo.defs#commitMeta'\n  cid: string\n  rev: string\n}\n\nconst hashCommitMeta = 'commitMeta'\n\nexport function isCommitMeta<V>(v: V) {\n  return is$typed(v, id, hashCommitMeta)\n}\n\nexport function validateCommitMeta<V>(v: V) {\n  return validate<CommitMeta & V>(v, id, hashCommitMeta)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.describeRepo'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  handle: string\n  did: string\n  /** The complete DID document for this account. */\n  didDoc: { [_ in string]: unknown }\n  /** List of all the collections (NSIDs) for which this repo contains at least one record. */\n  collections: string[]\n  /** Indicates if handle is currently valid (resolves bi-directionally) */\n  handleIsCorrect: boolean\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.importRepo'\n\nexport interface QueryParams {}\n\nexport type InputSchema = string | Uint8Array | Blob\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/vnd.ipld.car'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.listMissingBlobs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  blobs: RecordBlob[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface RecordBlob {\n  $type?: 'com.atproto.repo.listMissingBlobs#recordBlob'\n  cid: string\n  recordUri: string\n}\n\nconst hashRecordBlob = 'recordBlob'\n\nexport function isRecordBlob<V>(v: V) {\n  return is$typed(v, id, hashRecordBlob)\n}\n\nexport function validateRecordBlob<V>(v: V) {\n  return validate<RecordBlob & V>(v, id, hashRecordBlob)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.listRecords'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record type. */\n  collection: string\n  /** The number of records to return. */\n  limit?: number\n  cursor?: string\n  /** Flag to reverse the order of the returned records. */\n  reverse?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  records: Record[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Record {\n  $type?: 'com.atproto.repo.listRecords#record'\n  uri: string\n  cid: string\n  value: { [_ in string]: unknown }\n}\n\nconst hashRecord = 'record'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.strongRef'\n\nexport interface Main {\n  $type?: 'com.atproto.repo.strongRef'\n  uri: string\n  cid: string\n}\n\nconst hashMain = 'main'\n\nexport function isMain<V>(v: V) {\n  return is$typed(v, id, hashMain)\n}\n\nexport function validateMain<V>(v: V) {\n  return validate<Main & V>(v, id, hashMain)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.repo.uploadBlob'\n\nexport interface QueryParams {}\n\nexport type InputSchema = string | Uint8Array | Blob\n\nexport interface OutputSchema {\n  blob: BlobRef\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: string\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.activateAccount'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.checkAccountStatus'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  activated: boolean\n  validDid: boolean\n  repoCommit: string\n  repoRev: string\n  repoBlocks: number\n  indexedRecords: number\n  privateStateValues: number\n  expectedBlobs: number\n  importedBlobs: number\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.createInviteCode'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  useCount: number\n  forAccount?: string\n}\n\nexport interface OutputSchema {\n  code: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.createInviteCodes'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  codeCount: number\n  useCount: number\n  forAccounts?: string[]\n}\n\nexport interface OutputSchema {\n  codes: AccountCodes[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface AccountCodes {\n  $type?: 'com.atproto.server.createInviteCodes#accountCodes'\n  account: string\n  codes: string[]\n}\n\nconst hashAccountCodes = 'accountCodes'\n\nexport function isAccountCodes<V>(v: V) {\n  return is$typed(v, id, hashAccountCodes)\n}\n\nexport function validateAccountCodes<V>(v: V) {\n  return validate<AccountCodes & V>(v, id, hashAccountCodes)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.deactivateAccount'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** A recommendation to server as to how long they should hold onto the deactivated account before deleting. */\n  deleteAfter?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.defs'\n\nexport interface InviteCode {\n  $type?: 'com.atproto.server.defs#inviteCode'\n  code: string\n  available: number\n  disabled: boolean\n  forAccount: string\n  createdBy: string\n  createdAt: string\n  uses: InviteCodeUse[]\n}\n\nconst hashInviteCode = 'inviteCode'\n\nexport function isInviteCode<V>(v: V) {\n  return is$typed(v, id, hashInviteCode)\n}\n\nexport function validateInviteCode<V>(v: V) {\n  return validate<InviteCode & V>(v, id, hashInviteCode)\n}\n\nexport interface InviteCodeUse {\n  $type?: 'com.atproto.server.defs#inviteCodeUse'\n  usedBy: string\n  usedAt: string\n}\n\nconst hashInviteCodeUse = 'inviteCodeUse'\n\nexport function isInviteCodeUse<V>(v: V) {\n  return is$typed(v, id, hashInviteCodeUse)\n}\n\nexport function validateInviteCodeUse<V>(v: V) {\n  return validate<InviteCodeUse & V>(v, id, hashInviteCodeUse)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.deleteSession'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.describeServer'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  /** If true, an invite code must be supplied to create an account on this instance. */\n  inviteCodeRequired?: boolean\n  /** If true, a phone verification token must be supplied to create an account on this instance. */\n  phoneVerificationRequired?: boolean\n  /** List of domain suffixes that can be used in account handles. */\n  availableUserDomains: string[]\n  links?: Links\n  contact?: Contact\n  did: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Links {\n  $type?: 'com.atproto.server.describeServer#links'\n  privacyPolicy?: string\n  termsOfService?: string\n}\n\nconst hashLinks = 'links'\n\nexport function isLinks<V>(v: V) {\n  return is$typed(v, id, hashLinks)\n}\n\nexport function validateLinks<V>(v: V) {\n  return validate<Links & V>(v, id, hashLinks)\n}\n\nexport interface Contact {\n  $type?: 'com.atproto.server.describeServer#contact'\n  email?: string\n}\n\nconst hashContact = 'contact'\n\nexport function isContact<V>(v: V) {\n  return is$typed(v, id, hashContact)\n}\n\nexport function validateContact<V>(v: V) {\n  return validate<Contact & V>(v, id, hashContact)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.getSession'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  handle: string\n  did: string\n  email?: string\n  emailConfirmed?: boolean\n  emailAuthFactor?: boolean\n  didDoc?: { [_ in string]: unknown }\n  active?: boolean\n  /** If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted. */\n  status?: 'takendown' | 'suspended' | 'deactivated' | (string & {})\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.requestAccountDelete'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.requestEmailConfirmation'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.requestEmailUpdate'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  tokenRequired: boolean\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.requestPasswordReset'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.reserveSigningKey'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The DID to reserve a key for. */\n  did?: string\n}\n\nexport interface OutputSchema {\n  /** The public key for the reserved signing key, in did:key serialization. */\n  signingKey: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.server.revokeAppPassword'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  name: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.getCheckout'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.listRepos'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: Repo[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Repo {\n  $type?: 'com.atproto.sync.listRepos#repo'\n  did: string\n  /** Current repo commit CID */\n  head: string\n  rev: string\n  active?: boolean\n  /** If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted. */\n  status?:\n    | 'takendown'\n    | 'suspended'\n    | 'deleted'\n    | 'deactivated'\n    | 'desynchronized'\n    | 'throttled'\n    | (string & {})\n}\n\nconst hashRepo = 'repo'\n\nexport function isRepo<V>(v: V) {\n  return is$typed(v, id, hashRepo)\n}\n\nexport function validateRepo<V>(v: V) {\n  return validate<Repo & V>(v, id, hashRepo)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.listReposByCollection'\n\nexport interface QueryParams {\n  collection: string\n  /** Maximum size of response set. Recommend setting a large maximum (1000+) when enumerating large DID lists. */\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: Repo[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Repo {\n  $type?: 'com.atproto.sync.listReposByCollection#repo'\n  did: string\n}\n\nconst hashRepo = 'repo'\n\nexport function isRepo<V>(v: V) {\n  return is$typed(v, id, hashRepo)\n}\n\nexport function validateRepo<V>(v: V) {\n  return validate<Repo & V>(v, id, hashRepo)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.notifyOfUpdate'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Hostname of the current service (usually a PDS) that is notifying of update. */\n  hostname: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.requestCrawl'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Hostname of the current service (eg, PDS) that is requesting to be crawled. */\n  hostname: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.sync.subscribeRepos'\n\n/** Represents an update of repository state. Note that empty commits are allowed, which include no repo data changes, but an update to rev and signature. */\nexport interface Commit {\n  $type?: 'com.atproto.sync.subscribeRepos#commit'\n  /** The stream sequence number of this message. */\n  seq: number\n  /** DEPRECATED -- unused */\n  rebase: boolean\n  /** DEPRECATED -- replaced by #sync event and data limits. Indicates that this commit contained too many ops, or data size was too large. Consumers will need to make a separate request to get missing data. */\n  tooBig: boolean\n  /** The repo this event comes from. Note that all other message types name this field 'did'. */\n  repo: string\n  /** Repo commit object CID. */\n  commit: CID\n  /** The rev of the emitted commit. Note that this information is also in the commit object included in blocks, unless this is a tooBig event. */\n  rev: string\n  /** The rev of the last emitted commit from this repo (if any). */\n  since: string | null\n  /** CAR file containing relevant blocks, as a diff since the previous repo state. The commit must be included as a block, and the commit block CID must be the first entry in the CAR header 'roots' list. */\n  blocks: Uint8Array\n  ops: RepoOp[]\n  blobs: CID[]\n  /** The root CID of the MST tree for the previous commit from this repo (indicated by the 'since' revision field in this message). Corresponds to the 'data' field in the repo commit object. NOTE: this field is effectively required for the 'inductive' version of firehose. */\n  prevData?: CID\n  /** Timestamp of when this message was originally broadcast. */\n  time: string\n}\n\nconst hashCommit = 'commit'\n\nexport function isCommit<V>(v: V) {\n  return is$typed(v, id, hashCommit)\n}\n\nexport function validateCommit<V>(v: V) {\n  return validate<Commit & V>(v, id, hashCommit)\n}\n\n/** Updates the repo to a new state, without necessarily including that state on the firehose. Used to recover from broken commit streams, data loss incidents, or in situations where upstream host does not know recent state of the repository. */\nexport interface Sync {\n  $type?: 'com.atproto.sync.subscribeRepos#sync'\n  /** The stream sequence number of this message. */\n  seq: number\n  /** The account this repo event corresponds to. Must match that in the commit object. */\n  did: string\n  /** CAR file containing the commit, as a block. The CAR header must include the commit block CID as the first 'root'. */\n  blocks: Uint8Array\n  /** The rev of the commit. This value must match that in the commit object. */\n  rev: string\n  /** Timestamp of when this message was originally broadcast. */\n  time: string\n}\n\nconst hashSync = 'sync'\n\nexport function isSync<V>(v: V) {\n  return is$typed(v, id, hashSync)\n}\n\nexport function validateSync<V>(v: V) {\n  return validate<Sync & V>(v, id, hashSync)\n}\n\n/** Represents a change to an account's identity. Could be an updated handle, signing key, or pds hosting endpoint. Serves as a prod to all downstream services to refresh their identity cache. */\nexport interface Identity {\n  $type?: 'com.atproto.sync.subscribeRepos#identity'\n  seq: number\n  did: string\n  time: string\n  /** The current handle for the account, or 'handle.invalid' if validation fails. This field is optional, might have been validated or passed-through from an upstream source. Semantics and behaviors for PDS vs Relay may evolve in the future; see atproto specs for more details. */\n  handle?: string\n}\n\nconst hashIdentity = 'identity'\n\nexport function isIdentity<V>(v: V) {\n  return is$typed(v, id, hashIdentity)\n}\n\nexport function validateIdentity<V>(v: V) {\n  return validate<Identity & V>(v, id, hashIdentity)\n}\n\n/** Represents a change to an account's status on a host (eg, PDS or Relay). The semantics of this event are that the status is at the host which emitted the event, not necessarily that at the currently active PDS. Eg, a Relay takedown would emit a takedown with active=false, even if the PDS is still active. */\nexport interface Account {\n  $type?: 'com.atproto.sync.subscribeRepos#account'\n  seq: number\n  did: string\n  time: string\n  /** Indicates that the account has a repository which can be fetched from the host that emitted this event. */\n  active: boolean\n  /** If active=false, this optional field indicates a reason for why the account is not active. */\n  status?:\n    | 'takendown'\n    | 'suspended'\n    | 'deleted'\n    | 'deactivated'\n    | 'desynchronized'\n    | 'throttled'\n    | (string & {})\n}\n\nconst hashAccount = 'account'\n\nexport function isAccount<V>(v: V) {\n  return is$typed(v, id, hashAccount)\n}\n\nexport function validateAccount<V>(v: V) {\n  return validate<Account & V>(v, id, hashAccount)\n}\n\n/** DEPRECATED -- Use #identity event instead */\nexport interface Handle {\n  $type?: 'com.atproto.sync.subscribeRepos#handle'\n  seq: number\n  did: string\n  handle: string\n  time: string\n}\n\nconst hashHandle = 'handle'\n\nexport function isHandle<V>(v: V) {\n  return is$typed(v, id, hashHandle)\n}\n\nexport function validateHandle<V>(v: V) {\n  return validate<Handle & V>(v, id, hashHandle)\n}\n\n/** DEPRECATED -- Use #account event instead */\nexport interface Migrate {\n  $type?: 'com.atproto.sync.subscribeRepos#migrate'\n  seq: number\n  did: string\n  migrateTo: string | null\n  time: string\n}\n\nconst hashMigrate = 'migrate'\n\nexport function isMigrate<V>(v: V) {\n  return is$typed(v, id, hashMigrate)\n}\n\nexport function validateMigrate<V>(v: V) {\n  return validate<Migrate & V>(v, id, hashMigrate)\n}\n\n/** DEPRECATED -- Use #account event instead */\nexport interface Tombstone {\n  $type?: 'com.atproto.sync.subscribeRepos#tombstone'\n  seq: number\n  did: string\n  time: string\n}\n\nconst hashTombstone = 'tombstone'\n\nexport function isTombstone<V>(v: V) {\n  return is$typed(v, id, hashTombstone)\n}\n\nexport function validateTombstone<V>(v: V) {\n  return validate<Tombstone & V>(v, id, hashTombstone)\n}\n\nexport interface Info {\n  $type?: 'com.atproto.sync.subscribeRepos#info'\n  name: 'OutdatedCursor' | (string & {})\n  message?: string\n}\n\nconst hashInfo = 'info'\n\nexport function isInfo<V>(v: V) {\n  return is$typed(v, id, hashInfo)\n}\n\nexport function validateInfo<V>(v: V) {\n  return validate<Info & V>(v, id, hashInfo)\n}\n\n/** A repo operation, ie a mutation of a single record. */\nexport interface RepoOp {\n  $type?: 'com.atproto.sync.subscribeRepos#repoOp'\n  action: 'create' | 'update' | 'delete' | (string & {})\n  path: string\n  /** For creates and updates, the new record CID. For deletions, null. */\n  cid: CID | null\n  /** For updates and deletes, the previous record CID (required for inductive firehose). For creations, field should not be defined. */\n  prev?: CID\n}\n\nconst hashRepoOp = 'repoOp'\n\nexport function isRepoOp<V>(v: V) {\n  return is$typed(v, id, hashRepoOp)\n}\n\nexport function validateRepoOp<V>(v: V) {\n  return validate<RepoOp & V>(v, id, hashRepoOp)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.temp.addReservedHandle'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  handle: string\n}\n\nexport interface OutputSchema {}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.temp.checkSignupQueue'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  activated: boolean\n  placeInQueue?: number\n  estimatedTimeMs?: number\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoLabelDefs from '../label/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.temp.fetchLabels'\n\nexport interface QueryParams {\n  since?: number\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  labels: ComAtprotoLabelDefs.Label[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'com.atproto.temp.requestPhoneVerification'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  phoneNumber: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\nimport type * as AppBskyGraphDefs from '../graph/defs.js'\nimport type * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef.js'\nimport type * as AppBskyFeedThreadgate from '../feed/threadgate.js'\nimport type * as AppBskyFeedPostgate from '../feed/postgate.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.actor.defs'\n\nexport interface ProfileViewBasic {\n  $type?: 'app.bsky.actor.defs#profileViewBasic'\n  did: string\n  handle: string\n  displayName?: string\n  avatar?: string\n  associated?: ProfileAssociated\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  createdAt?: string\n}\n\nconst hashProfileViewBasic = 'profileViewBasic'\n\nexport function isProfileViewBasic<V>(v: V) {\n  return is$typed(v, id, hashProfileViewBasic)\n}\n\nexport function validateProfileViewBasic<V>(v: V) {\n  return validate<ProfileViewBasic & V>(v, id, hashProfileViewBasic)\n}\n\nexport interface ProfileView {\n  $type?: 'app.bsky.actor.defs#profileView'\n  did: string\n  handle: string\n  displayName?: string\n  description?: string\n  avatar?: string\n  associated?: ProfileAssociated\n  indexedAt?: string\n  createdAt?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n}\n\nconst hashProfileView = 'profileView'\n\nexport function isProfileView<V>(v: V) {\n  return is$typed(v, id, hashProfileView)\n}\n\nexport function validateProfileView<V>(v: V) {\n  return validate<ProfileView & V>(v, id, hashProfileView)\n}\n\nexport interface ProfileViewDetailed {\n  $type?: 'app.bsky.actor.defs#profileViewDetailed'\n  did: string\n  handle: string\n  displayName?: string\n  description?: string\n  avatar?: string\n  banner?: string\n  followersCount?: number\n  followsCount?: number\n  postsCount?: number\n  associated?: ProfileAssociated\n  joinedViaStarterPack?: AppBskyGraphDefs.StarterPackViewBasic\n  indexedAt?: string\n  createdAt?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  pinnedPost?: ComAtprotoRepoStrongRef.Main\n}\n\nconst hashProfileViewDetailed = 'profileViewDetailed'\n\nexport function isProfileViewDetailed<V>(v: V) {\n  return is$typed(v, id, hashProfileViewDetailed)\n}\n\nexport function validateProfileViewDetailed<V>(v: V) {\n  return validate<ProfileViewDetailed & V>(v, id, hashProfileViewDetailed)\n}\n\nexport interface ProfileAssociated {\n  $type?: 'app.bsky.actor.defs#profileAssociated'\n  lists?: number\n  feedgens?: number\n  starterPacks?: number\n  labeler?: boolean\n  chat?: ProfileAssociatedChat\n}\n\nconst hashProfileAssociated = 'profileAssociated'\n\nexport function isProfileAssociated<V>(v: V) {\n  return is$typed(v, id, hashProfileAssociated)\n}\n\nexport function validateProfileAssociated<V>(v: V) {\n  return validate<ProfileAssociated & V>(v, id, hashProfileAssociated)\n}\n\nexport interface ProfileAssociatedChat {\n  $type?: 'app.bsky.actor.defs#profileAssociatedChat'\n  allowIncoming: 'all' | 'none' | 'following' | (string & {})\n}\n\nconst hashProfileAssociatedChat = 'profileAssociatedChat'\n\nexport function isProfileAssociatedChat<V>(v: V) {\n  return is$typed(v, id, hashProfileAssociatedChat)\n}\n\nexport function validateProfileAssociatedChat<V>(v: V) {\n  return validate<ProfileAssociatedChat & V>(v, id, hashProfileAssociatedChat)\n}\n\n/** Metadata about the requesting account's relationship with the subject account. Only has meaningful content for authed requests. */\nexport interface ViewerState {\n  $type?: 'app.bsky.actor.defs#viewerState'\n  muted?: boolean\n  mutedByList?: AppBskyGraphDefs.ListViewBasic\n  blockedBy?: boolean\n  blocking?: string\n  blockingByList?: AppBskyGraphDefs.ListViewBasic\n  following?: string\n  followedBy?: string\n  knownFollowers?: KnownFollowers\n}\n\nconst hashViewerState = 'viewerState'\n\nexport function isViewerState<V>(v: V) {\n  return is$typed(v, id, hashViewerState)\n}\n\nexport function validateViewerState<V>(v: V) {\n  return validate<ViewerState & V>(v, id, hashViewerState)\n}\n\n/** The subject's followers whom you also follow */\nexport interface KnownFollowers {\n  $type?: 'app.bsky.actor.defs#knownFollowers'\n  count: number\n  followers: ProfileViewBasic[]\n}\n\nconst hashKnownFollowers = 'knownFollowers'\n\nexport function isKnownFollowers<V>(v: V) {\n  return is$typed(v, id, hashKnownFollowers)\n}\n\nexport function validateKnownFollowers<V>(v: V) {\n  return validate<KnownFollowers & V>(v, id, hashKnownFollowers)\n}\n\nexport type Preferences = (\n  | $Typed<AdultContentPref>\n  | $Typed<ContentLabelPref>\n  | $Typed<SavedFeedsPref>\n  | $Typed<SavedFeedsPrefV2>\n  | $Typed<PersonalDetailsPref>\n  | $Typed<FeedViewPref>\n  | $Typed<ThreadViewPref>\n  | $Typed<InterestsPref>\n  | $Typed<MutedWordsPref>\n  | $Typed<HiddenPostsPref>\n  | $Typed<BskyAppStatePref>\n  | $Typed<LabelersPref>\n  | $Typed<PostInteractionSettingsPref>\n  | { $type: string }\n)[]\n\nexport interface AdultContentPref {\n  $type?: 'app.bsky.actor.defs#adultContentPref'\n  enabled: boolean\n}\n\nconst hashAdultContentPref = 'adultContentPref'\n\nexport function isAdultContentPref<V>(v: V) {\n  return is$typed(v, id, hashAdultContentPref)\n}\n\nexport function validateAdultContentPref<V>(v: V) {\n  return validate<AdultContentPref & V>(v, id, hashAdultContentPref)\n}\n\nexport interface ContentLabelPref {\n  $type?: 'app.bsky.actor.defs#contentLabelPref'\n  /** Which labeler does this preference apply to? If undefined, applies globally. */\n  labelerDid?: string\n  label: string\n  visibility: 'ignore' | 'show' | 'warn' | 'hide' | (string & {})\n}\n\nconst hashContentLabelPref = 'contentLabelPref'\n\nexport function isContentLabelPref<V>(v: V) {\n  return is$typed(v, id, hashContentLabelPref)\n}\n\nexport function validateContentLabelPref<V>(v: V) {\n  return validate<ContentLabelPref & V>(v, id, hashContentLabelPref)\n}\n\nexport interface SavedFeed {\n  $type?: 'app.bsky.actor.defs#savedFeed'\n  id: string\n  type: 'feed' | 'list' | 'timeline' | (string & {})\n  value: string\n  pinned: boolean\n}\n\nconst hashSavedFeed = 'savedFeed'\n\nexport function isSavedFeed<V>(v: V) {\n  return is$typed(v, id, hashSavedFeed)\n}\n\nexport function validateSavedFeed<V>(v: V) {\n  return validate<SavedFeed & V>(v, id, hashSavedFeed)\n}\n\nexport interface SavedFeedsPrefV2 {\n  $type?: 'app.bsky.actor.defs#savedFeedsPrefV2'\n  items: SavedFeed[]\n}\n\nconst hashSavedFeedsPrefV2 = 'savedFeedsPrefV2'\n\nexport function isSavedFeedsPrefV2<V>(v: V) {\n  return is$typed(v, id, hashSavedFeedsPrefV2)\n}\n\nexport function validateSavedFeedsPrefV2<V>(v: V) {\n  return validate<SavedFeedsPrefV2 & V>(v, id, hashSavedFeedsPrefV2)\n}\n\nexport interface SavedFeedsPref {\n  $type?: 'app.bsky.actor.defs#savedFeedsPref'\n  pinned: string[]\n  saved: string[]\n  timelineIndex?: number\n}\n\nconst hashSavedFeedsPref = 'savedFeedsPref'\n\nexport function isSavedFeedsPref<V>(v: V) {\n  return is$typed(v, id, hashSavedFeedsPref)\n}\n\nexport function validateSavedFeedsPref<V>(v: V) {\n  return validate<SavedFeedsPref & V>(v, id, hashSavedFeedsPref)\n}\n\nexport interface PersonalDetailsPref {\n  $type?: 'app.bsky.actor.defs#personalDetailsPref'\n  /** The birth date of account owner. */\n  birthDate?: string\n}\n\nconst hashPersonalDetailsPref = 'personalDetailsPref'\n\nexport function isPersonalDetailsPref<V>(v: V) {\n  return is$typed(v, id, hashPersonalDetailsPref)\n}\n\nexport function validatePersonalDetailsPref<V>(v: V) {\n  return validate<PersonalDetailsPref & V>(v, id, hashPersonalDetailsPref)\n}\n\nexport interface FeedViewPref {\n  $type?: 'app.bsky.actor.defs#feedViewPref'\n  /** The URI of the feed, or an identifier which describes the feed. */\n  feed: string\n  /** Hide replies in the feed. */\n  hideReplies?: boolean\n  /** Hide replies in the feed if they are not by followed users. */\n  hideRepliesByUnfollowed: boolean\n  /** Hide replies in the feed if they do not have this number of likes. */\n  hideRepliesByLikeCount?: number\n  /** Hide reposts in the feed. */\n  hideReposts?: boolean\n  /** Hide quote posts in the feed. */\n  hideQuotePosts?: boolean\n}\n\nconst hashFeedViewPref = 'feedViewPref'\n\nexport function isFeedViewPref<V>(v: V) {\n  return is$typed(v, id, hashFeedViewPref)\n}\n\nexport function validateFeedViewPref<V>(v: V) {\n  return validate<FeedViewPref & V>(v, id, hashFeedViewPref)\n}\n\nexport interface ThreadViewPref {\n  $type?: 'app.bsky.actor.defs#threadViewPref'\n  /** Sorting mode for threads. */\n  sort?:\n    | 'oldest'\n    | 'newest'\n    | 'most-likes'\n    | 'random'\n    | 'hotness'\n    | (string & {})\n  /** Show followed users at the top of all replies. */\n  prioritizeFollowedUsers?: boolean\n}\n\nconst hashThreadViewPref = 'threadViewPref'\n\nexport function isThreadViewPref<V>(v: V) {\n  return is$typed(v, id, hashThreadViewPref)\n}\n\nexport function validateThreadViewPref<V>(v: V) {\n  return validate<ThreadViewPref & V>(v, id, hashThreadViewPref)\n}\n\nexport interface InterestsPref {\n  $type?: 'app.bsky.actor.defs#interestsPref'\n  /** A list of tags which describe the account owner's interests gathered during onboarding. */\n  tags: string[]\n}\n\nconst hashInterestsPref = 'interestsPref'\n\nexport function isInterestsPref<V>(v: V) {\n  return is$typed(v, id, hashInterestsPref)\n}\n\nexport function validateInterestsPref<V>(v: V) {\n  return validate<InterestsPref & V>(v, id, hashInterestsPref)\n}\n\nexport type MutedWordTarget = 'content' | 'tag' | (string & {})\n\n/** A word that the account owner has muted. */\nexport interface MutedWord {\n  $type?: 'app.bsky.actor.defs#mutedWord'\n  id?: string\n  /** The muted word itself. */\n  value: string\n  /** The intended targets of the muted word. */\n  targets: MutedWordTarget[]\n  /** Groups of users to apply the muted word to. If undefined, applies to all users. */\n  actorTarget: 'all' | 'exclude-following' | (string & {})\n  /** The date and time at which the muted word will expire and no longer be applied. */\n  expiresAt?: string\n}\n\nconst hashMutedWord = 'mutedWord'\n\nexport function isMutedWord<V>(v: V) {\n  return is$typed(v, id, hashMutedWord)\n}\n\nexport function validateMutedWord<V>(v: V) {\n  return validate<MutedWord & V>(v, id, hashMutedWord)\n}\n\nexport interface MutedWordsPref {\n  $type?: 'app.bsky.actor.defs#mutedWordsPref'\n  /** A list of words the account owner has muted. */\n  items: MutedWord[]\n}\n\nconst hashMutedWordsPref = 'mutedWordsPref'\n\nexport function isMutedWordsPref<V>(v: V) {\n  return is$typed(v, id, hashMutedWordsPref)\n}\n\nexport function validateMutedWordsPref<V>(v: V) {\n  return validate<MutedWordsPref & V>(v, id, hashMutedWordsPref)\n}\n\nexport interface HiddenPostsPref {\n  $type?: 'app.bsky.actor.defs#hiddenPostsPref'\n  /** A list of URIs of posts the account owner has hidden. */\n  items: string[]\n}\n\nconst hashHiddenPostsPref = 'hiddenPostsPref'\n\nexport function isHiddenPostsPref<V>(v: V) {\n  return is$typed(v, id, hashHiddenPostsPref)\n}\n\nexport function validateHiddenPostsPref<V>(v: V) {\n  return validate<HiddenPostsPref & V>(v, id, hashHiddenPostsPref)\n}\n\nexport interface LabelersPref {\n  $type?: 'app.bsky.actor.defs#labelersPref'\n  labelers: LabelerPrefItem[]\n}\n\nconst hashLabelersPref = 'labelersPref'\n\nexport function isLabelersPref<V>(v: V) {\n  return is$typed(v, id, hashLabelersPref)\n}\n\nexport function validateLabelersPref<V>(v: V) {\n  return validate<LabelersPref & V>(v, id, hashLabelersPref)\n}\n\nexport interface LabelerPrefItem {\n  $type?: 'app.bsky.actor.defs#labelerPrefItem'\n  did: string\n}\n\nconst hashLabelerPrefItem = 'labelerPrefItem'\n\nexport function isLabelerPrefItem<V>(v: V) {\n  return is$typed(v, id, hashLabelerPrefItem)\n}\n\nexport function validateLabelerPrefItem<V>(v: V) {\n  return validate<LabelerPrefItem & V>(v, id, hashLabelerPrefItem)\n}\n\n/** A grab bag of state that's specific to the bsky.app program. Third-party apps shouldn't use this. */\nexport interface BskyAppStatePref {\n  $type?: 'app.bsky.actor.defs#bskyAppStatePref'\n  activeProgressGuide?: BskyAppProgressGuide\n  /** An array of tokens which identify nudges (modals, popups, tours, highlight dots) that should be shown to the user. */\n  queuedNudges?: string[]\n  /** Storage for NUXs the user has encountered. */\n  nuxs?: Nux[]\n}\n\nconst hashBskyAppStatePref = 'bskyAppStatePref'\n\nexport function isBskyAppStatePref<V>(v: V) {\n  return is$typed(v, id, hashBskyAppStatePref)\n}\n\nexport function validateBskyAppStatePref<V>(v: V) {\n  return validate<BskyAppStatePref & V>(v, id, hashBskyAppStatePref)\n}\n\n/** If set, an active progress guide. Once completed, can be set to undefined. Should have unspecced fields tracking progress. */\nexport interface BskyAppProgressGuide {\n  $type?: 'app.bsky.actor.defs#bskyAppProgressGuide'\n  guide: string\n}\n\nconst hashBskyAppProgressGuide = 'bskyAppProgressGuide'\n\nexport function isBskyAppProgressGuide<V>(v: V) {\n  return is$typed(v, id, hashBskyAppProgressGuide)\n}\n\nexport function validateBskyAppProgressGuide<V>(v: V) {\n  return validate<BskyAppProgressGuide & V>(v, id, hashBskyAppProgressGuide)\n}\n\n/** A new user experiences (NUX) storage object */\nexport interface Nux {\n  $type?: 'app.bsky.actor.defs#nux'\n  id: string\n  completed: boolean\n  /** Arbitrary data for the NUX. The structure is defined by the NUX itself. Limited to 300 characters. */\n  data?: string\n  /** The date and time at which the NUX will expire and should be considered completed. */\n  expiresAt?: string\n}\n\nconst hashNux = 'nux'\n\nexport function isNux<V>(v: V) {\n  return is$typed(v, id, hashNux)\n}\n\nexport function validateNux<V>(v: V) {\n  return validate<Nux & V>(v, id, hashNux)\n}\n\n/** Default post interaction settings for the account. These values should be applied as default values when creating new posts. These refs should mirror the threadgate and postgate records exactly. */\nexport interface PostInteractionSettingsPref {\n  $type?: 'app.bsky.actor.defs#postInteractionSettingsPref'\n  /** Matches threadgate record. List of rules defining who can reply to this users posts. If value is an empty array, no one can reply. If value is undefined, anyone can reply. */\n  threadgateAllowRules?: (\n    | $Typed<AppBskyFeedThreadgate.MentionRule>\n    | $Typed<AppBskyFeedThreadgate.FollowerRule>\n    | $Typed<AppBskyFeedThreadgate.FollowingRule>\n    | $Typed<AppBskyFeedThreadgate.ListRule>\n    | { $type: string }\n  )[]\n  /** Matches postgate record. List of rules defining who can embed this users posts. If value is an empty array or is undefined, no particular rules apply and anyone can embed. */\n  postgateEmbeddingRules?: (\n    | $Typed<AppBskyFeedPostgate.DisableRule>\n    | { $type: string }\n  )[]\n}\n\nconst hashPostInteractionSettingsPref = 'postInteractionSettingsPref'\n\nexport function isPostInteractionSettingsPref<V>(v: V) {\n  return is$typed(v, id, hashPostInteractionSettingsPref)\n}\n\nexport function validatePostInteractionSettingsPref<V>(v: V) {\n  return validate<PostInteractionSettingsPref & V>(\n    v,\n    id,\n    hashPostInteractionSettingsPref,\n  )\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.actor.getPreferences'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  preferences: AppBskyActorDefs.Preferences\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.actor.getProfile'\n\nexport interface QueryParams {\n  /** Handle or DID of account to fetch profile of. */\n  actor: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = AppBskyActorDefs.ProfileViewDetailed\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.actor.getProfiles'\n\nexport interface QueryParams {\n  actors: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  profiles: AppBskyActorDefs.ProfileViewDetailed[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.actor.getSuggestions'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyActorDefs.ProfileView[]\n  /** Snowflake for this recommendation, use when submitting recommendation events. */\n  recId?: number\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\nimport type * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.actor.profile'\n\nexport interface Record {\n  $type: 'app.bsky.actor.profile'\n  displayName?: string\n  /** Free-form profile description text. */\n  description?: string\n  /** Small image to be displayed next to posts from account. AKA, 'profile picture' */\n  avatar?: BlobRef\n  /** Larger horizontal image to display behind profile view. */\n  banner?: BlobRef\n  labels?: $Typed<ComAtprotoLabelDefs.SelfLabels> | { $type: string }\n  joinedViaStarterPack?: ComAtprotoRepoStrongRef.Main\n  pinnedPost?: ComAtprotoRepoStrongRef.Main\n  createdAt?: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.actor.putPreferences'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  preferences: AppBskyActorDefs.Preferences\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.actor.searchActors'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead. */\n  term?: string\n  /** Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyActorDefs.ProfileView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.actor.searchActorsTypeahead'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead. */\n  term?: string\n  /** Search query prefix; not a full query string. */\n  q?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  actors: AppBskyActorDefs.ProfileViewBasic[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.embed.defs'\n\n/** width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit. */\nexport interface AspectRatio {\n  $type?: 'app.bsky.embed.defs#aspectRatio'\n  width: number\n  height: number\n}\n\nconst hashAspectRatio = 'aspectRatio'\n\nexport function isAspectRatio<V>(v: V) {\n  return is$typed(v, id, hashAspectRatio)\n}\n\nexport function validateAspectRatio<V>(v: V) {\n  return validate<AspectRatio & V>(v, id, hashAspectRatio)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.embed.external'\n\n/** A representation of some externally linked content (eg, a URL and 'card'), embedded in a Bluesky record (eg, a post). */\nexport interface Main {\n  $type?: 'app.bsky.embed.external'\n  external: External\n}\n\nconst hashMain = 'main'\n\nexport function isMain<V>(v: V) {\n  return is$typed(v, id, hashMain)\n}\n\nexport function validateMain<V>(v: V) {\n  return validate<Main & V>(v, id, hashMain)\n}\n\nexport interface External {\n  $type?: 'app.bsky.embed.external#external'\n  uri: string\n  title: string\n  description: string\n  thumb?: BlobRef\n}\n\nconst hashExternal = 'external'\n\nexport function isExternal<V>(v: V) {\n  return is$typed(v, id, hashExternal)\n}\n\nexport function validateExternal<V>(v: V) {\n  return validate<External & V>(v, id, hashExternal)\n}\n\nexport interface View {\n  $type?: 'app.bsky.embed.external#view'\n  external: ViewExternal\n}\n\nconst hashView = 'view'\n\nexport function isView<V>(v: V) {\n  return is$typed(v, id, hashView)\n}\n\nexport function validateView<V>(v: V) {\n  return validate<View & V>(v, id, hashView)\n}\n\nexport interface ViewExternal {\n  $type?: 'app.bsky.embed.external#viewExternal'\n  uri: string\n  title: string\n  description: string\n  thumb?: string\n}\n\nconst hashViewExternal = 'viewExternal'\n\nexport function isViewExternal<V>(v: V) {\n  return is$typed(v, id, hashViewExternal)\n}\n\nexport function validateViewExternal<V>(v: V) {\n  return validate<ViewExternal & V>(v, id, hashViewExternal)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyEmbedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.embed.images'\n\nexport interface Main {\n  $type?: 'app.bsky.embed.images'\n  images: Image[]\n}\n\nconst hashMain = 'main'\n\nexport function isMain<V>(v: V) {\n  return is$typed(v, id, hashMain)\n}\n\nexport function validateMain<V>(v: V) {\n  return validate<Main & V>(v, id, hashMain)\n}\n\nexport interface Image {\n  $type?: 'app.bsky.embed.images#image'\n  image: BlobRef\n  /** Alt text description of the image, for accessibility. */\n  alt: string\n  aspectRatio?: AppBskyEmbedDefs.AspectRatio\n}\n\nconst hashImage = 'image'\n\nexport function isImage<V>(v: V) {\n  return is$typed(v, id, hashImage)\n}\n\nexport function validateImage<V>(v: V) {\n  return validate<Image & V>(v, id, hashImage)\n}\n\nexport interface View {\n  $type?: 'app.bsky.embed.images#view'\n  images: ViewImage[]\n}\n\nconst hashView = 'view'\n\nexport function isView<V>(v: V) {\n  return is$typed(v, id, hashView)\n}\n\nexport function validateView<V>(v: V) {\n  return validate<View & V>(v, id, hashView)\n}\n\nexport interface ViewImage {\n  $type?: 'app.bsky.embed.images#viewImage'\n  /** Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View. */\n  thumb: string\n  /** Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View. */\n  fullsize: string\n  /** Alt text description of the image, for accessibility. */\n  alt: string\n  aspectRatio?: AppBskyEmbedDefs.AspectRatio\n}\n\nconst hashViewImage = 'viewImage'\n\nexport function isViewImage<V>(v: V) {\n  return is$typed(v, id, hashViewImage)\n}\n\nexport function validateViewImage<V>(v: V) {\n  return validate<ViewImage & V>(v, id, hashViewImage)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef.js'\nimport type * as AppBskyFeedDefs from '../feed/defs.js'\nimport type * as AppBskyGraphDefs from '../graph/defs.js'\nimport type * as AppBskyLabelerDefs from '../labeler/defs.js'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\nimport type * as AppBskyEmbedImages from './images.js'\nimport type * as AppBskyEmbedVideo from './video.js'\nimport type * as AppBskyEmbedExternal from './external.js'\nimport type * as AppBskyEmbedRecordWithMedia from './recordWithMedia.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.embed.record'\n\nexport interface Main {\n  $type?: 'app.bsky.embed.record'\n  record: ComAtprotoRepoStrongRef.Main\n}\n\nconst hashMain = 'main'\n\nexport function isMain<V>(v: V) {\n  return is$typed(v, id, hashMain)\n}\n\nexport function validateMain<V>(v: V) {\n  return validate<Main & V>(v, id, hashMain)\n}\n\nexport interface View {\n  $type?: 'app.bsky.embed.record#view'\n  record:\n    | $Typed<ViewRecord>\n    | $Typed<ViewNotFound>\n    | $Typed<ViewBlocked>\n    | $Typed<ViewDetached>\n    | $Typed<AppBskyFeedDefs.GeneratorView>\n    | $Typed<AppBskyGraphDefs.ListView>\n    | $Typed<AppBskyLabelerDefs.LabelerView>\n    | $Typed<AppBskyGraphDefs.StarterPackViewBasic>\n    | { $type: string }\n}\n\nconst hashView = 'view'\n\nexport function isView<V>(v: V) {\n  return is$typed(v, id, hashView)\n}\n\nexport function validateView<V>(v: V) {\n  return validate<View & V>(v, id, hashView)\n}\n\nexport interface ViewRecord {\n  $type?: 'app.bsky.embed.record#viewRecord'\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileViewBasic\n  /** The record data itself. */\n  value: { [_ in string]: unknown }\n  labels?: ComAtprotoLabelDefs.Label[]\n  replyCount?: number\n  repostCount?: number\n  likeCount?: number\n  quoteCount?: number\n  embeds?: (\n    | $Typed<AppBskyEmbedImages.View>\n    | $Typed<AppBskyEmbedVideo.View>\n    | $Typed<AppBskyEmbedExternal.View>\n    | $Typed<View>\n    | $Typed<AppBskyEmbedRecordWithMedia.View>\n    | { $type: string }\n  )[]\n  indexedAt: string\n}\n\nconst hashViewRecord = 'viewRecord'\n\nexport function isViewRecord<V>(v: V) {\n  return is$typed(v, id, hashViewRecord)\n}\n\nexport function validateViewRecord<V>(v: V) {\n  return validate<ViewRecord & V>(v, id, hashViewRecord)\n}\n\nexport interface ViewNotFound {\n  $type?: 'app.bsky.embed.record#viewNotFound'\n  uri: string\n  notFound: true\n}\n\nconst hashViewNotFound = 'viewNotFound'\n\nexport function isViewNotFound<V>(v: V) {\n  return is$typed(v, id, hashViewNotFound)\n}\n\nexport function validateViewNotFound<V>(v: V) {\n  return validate<ViewNotFound & V>(v, id, hashViewNotFound)\n}\n\nexport interface ViewBlocked {\n  $type?: 'app.bsky.embed.record#viewBlocked'\n  uri: string\n  blocked: true\n  author: AppBskyFeedDefs.BlockedAuthor\n}\n\nconst hashViewBlocked = 'viewBlocked'\n\nexport function isViewBlocked<V>(v: V) {\n  return is$typed(v, id, hashViewBlocked)\n}\n\nexport function validateViewBlocked<V>(v: V) {\n  return validate<ViewBlocked & V>(v, id, hashViewBlocked)\n}\n\nexport interface ViewDetached {\n  $type?: 'app.bsky.embed.record#viewDetached'\n  uri: string\n  detached: true\n}\n\nconst hashViewDetached = 'viewDetached'\n\nexport function isViewDetached<V>(v: V) {\n  return is$typed(v, id, hashViewDetached)\n}\n\nexport function validateViewDetached<V>(v: V) {\n  return validate<ViewDetached & V>(v, id, hashViewDetached)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyEmbedRecord from './record.js'\nimport type * as AppBskyEmbedImages from './images.js'\nimport type * as AppBskyEmbedVideo from './video.js'\nimport type * as AppBskyEmbedExternal from './external.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.embed.recordWithMedia'\n\nexport interface Main {\n  $type?: 'app.bsky.embed.recordWithMedia'\n  record: AppBskyEmbedRecord.Main\n  media:\n    | $Typed<AppBskyEmbedImages.Main>\n    | $Typed<AppBskyEmbedVideo.Main>\n    | $Typed<AppBskyEmbedExternal.Main>\n    | { $type: string }\n}\n\nconst hashMain = 'main'\n\nexport function isMain<V>(v: V) {\n  return is$typed(v, id, hashMain)\n}\n\nexport function validateMain<V>(v: V) {\n  return validate<Main & V>(v, id, hashMain)\n}\n\nexport interface View {\n  $type?: 'app.bsky.embed.recordWithMedia#view'\n  record: AppBskyEmbedRecord.View\n  media:\n    | $Typed<AppBskyEmbedImages.View>\n    | $Typed<AppBskyEmbedVideo.View>\n    | $Typed<AppBskyEmbedExternal.View>\n    | { $type: string }\n}\n\nconst hashView = 'view'\n\nexport function isView<V>(v: V) {\n  return is$typed(v, id, hashView)\n}\n\nexport function validateView<V>(v: V) {\n  return validate<View & V>(v, id, hashView)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyEmbedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.embed.video'\n\nexport interface Main {\n  $type?: 'app.bsky.embed.video'\n  video: BlobRef\n  captions?: Caption[]\n  /** Alt text description of the video, for accessibility. */\n  alt?: string\n  aspectRatio?: AppBskyEmbedDefs.AspectRatio\n}\n\nconst hashMain = 'main'\n\nexport function isMain<V>(v: V) {\n  return is$typed(v, id, hashMain)\n}\n\nexport function validateMain<V>(v: V) {\n  return validate<Main & V>(v, id, hashMain)\n}\n\nexport interface Caption {\n  $type?: 'app.bsky.embed.video#caption'\n  lang: string\n  file: BlobRef\n}\n\nconst hashCaption = 'caption'\n\nexport function isCaption<V>(v: V) {\n  return is$typed(v, id, hashCaption)\n}\n\nexport function validateCaption<V>(v: V) {\n  return validate<Caption & V>(v, id, hashCaption)\n}\n\nexport interface View {\n  $type?: 'app.bsky.embed.video#view'\n  cid: string\n  playlist: string\n  thumbnail?: string\n  alt?: string\n  aspectRatio?: AppBskyEmbedDefs.AspectRatio\n}\n\nconst hashView = 'view'\n\nexport function isView<V>(v: V) {\n  return is$typed(v, id, hashView)\n}\n\nexport function validateView<V>(v: V) {\n  return validate<View & V>(v, id, hashView)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\nimport type * as AppBskyEmbedImages from '../embed/images.js'\nimport type * as AppBskyEmbedVideo from '../embed/video.js'\nimport type * as AppBskyEmbedExternal from '../embed/external.js'\nimport type * as AppBskyEmbedRecord from '../embed/record.js'\nimport type * as AppBskyEmbedRecordWithMedia from '../embed/recordWithMedia.js'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\nimport type * as AppBskyRichtextFacet from '../richtext/facet.js'\nimport type * as AppBskyGraphDefs from '../graph/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.defs'\n\nexport interface PostView {\n  $type?: 'app.bsky.feed.defs#postView'\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileViewBasic\n  record: { [_ in string]: unknown }\n  embed?:\n    | $Typed<AppBskyEmbedImages.View>\n    | $Typed<AppBskyEmbedVideo.View>\n    | $Typed<AppBskyEmbedExternal.View>\n    | $Typed<AppBskyEmbedRecord.View>\n    | $Typed<AppBskyEmbedRecordWithMedia.View>\n    | { $type: string }\n  replyCount?: number\n  repostCount?: number\n  likeCount?: number\n  quoteCount?: number\n  indexedAt: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  threadgate?: ThreadgateView\n}\n\nconst hashPostView = 'postView'\n\nexport function isPostView<V>(v: V) {\n  return is$typed(v, id, hashPostView)\n}\n\nexport function validatePostView<V>(v: V) {\n  return validate<PostView & V>(v, id, hashPostView)\n}\n\n/** Metadata about the requesting account's relationship with the subject content. Only has meaningful content for authed requests. */\nexport interface ViewerState {\n  $type?: 'app.bsky.feed.defs#viewerState'\n  repost?: string\n  like?: string\n  threadMuted?: boolean\n  replyDisabled?: boolean\n  embeddingDisabled?: boolean\n  pinned?: boolean\n}\n\nconst hashViewerState = 'viewerState'\n\nexport function isViewerState<V>(v: V) {\n  return is$typed(v, id, hashViewerState)\n}\n\nexport function validateViewerState<V>(v: V) {\n  return validate<ViewerState & V>(v, id, hashViewerState)\n}\n\n/** Metadata about this post within the context of the thread it is in. */\nexport interface ThreadContext {\n  $type?: 'app.bsky.feed.defs#threadContext'\n  rootAuthorLike?: string\n}\n\nconst hashThreadContext = 'threadContext'\n\nexport function isThreadContext<V>(v: V) {\n  return is$typed(v, id, hashThreadContext)\n}\n\nexport function validateThreadContext<V>(v: V) {\n  return validate<ThreadContext & V>(v, id, hashThreadContext)\n}\n\nexport interface FeedViewPost {\n  $type?: 'app.bsky.feed.defs#feedViewPost'\n  post: PostView\n  reply?: ReplyRef\n  reason?: $Typed<ReasonRepost> | $Typed<ReasonPin> | { $type: string }\n  /** Context provided by feed generator that may be passed back alongside interactions. */\n  feedContext?: string\n}\n\nconst hashFeedViewPost = 'feedViewPost'\n\nexport function isFeedViewPost<V>(v: V) {\n  return is$typed(v, id, hashFeedViewPost)\n}\n\nexport function validateFeedViewPost<V>(v: V) {\n  return validate<FeedViewPost & V>(v, id, hashFeedViewPost)\n}\n\nexport interface ReplyRef {\n  $type?: 'app.bsky.feed.defs#replyRef'\n  root:\n    | $Typed<PostView>\n    | $Typed<NotFoundPost>\n    | $Typed<BlockedPost>\n    | { $type: string }\n  parent:\n    | $Typed<PostView>\n    | $Typed<NotFoundPost>\n    | $Typed<BlockedPost>\n    | { $type: string }\n  grandparentAuthor?: AppBskyActorDefs.ProfileViewBasic\n}\n\nconst hashReplyRef = 'replyRef'\n\nexport function isReplyRef<V>(v: V) {\n  return is$typed(v, id, hashReplyRef)\n}\n\nexport function validateReplyRef<V>(v: V) {\n  return validate<ReplyRef & V>(v, id, hashReplyRef)\n}\n\nexport interface ReasonRepost {\n  $type?: 'app.bsky.feed.defs#reasonRepost'\n  by: AppBskyActorDefs.ProfileViewBasic\n  indexedAt: string\n}\n\nconst hashReasonRepost = 'reasonRepost'\n\nexport function isReasonRepost<V>(v: V) {\n  return is$typed(v, id, hashReasonRepost)\n}\n\nexport function validateReasonRepost<V>(v: V) {\n  return validate<ReasonRepost & V>(v, id, hashReasonRepost)\n}\n\nexport interface ReasonPin {\n  $type?: 'app.bsky.feed.defs#reasonPin'\n}\n\nconst hashReasonPin = 'reasonPin'\n\nexport function isReasonPin<V>(v: V) {\n  return is$typed(v, id, hashReasonPin)\n}\n\nexport function validateReasonPin<V>(v: V) {\n  return validate<ReasonPin & V>(v, id, hashReasonPin)\n}\n\nexport interface ThreadViewPost {\n  $type?: 'app.bsky.feed.defs#threadViewPost'\n  post: PostView\n  parent?:\n    | $Typed<ThreadViewPost>\n    | $Typed<NotFoundPost>\n    | $Typed<BlockedPost>\n    | { $type: string }\n  replies?: (\n    | $Typed<ThreadViewPost>\n    | $Typed<NotFoundPost>\n    | $Typed<BlockedPost>\n    | { $type: string }\n  )[]\n  threadContext?: ThreadContext\n}\n\nconst hashThreadViewPost = 'threadViewPost'\n\nexport function isThreadViewPost<V>(v: V) {\n  return is$typed(v, id, hashThreadViewPost)\n}\n\nexport function validateThreadViewPost<V>(v: V) {\n  return validate<ThreadViewPost & V>(v, id, hashThreadViewPost)\n}\n\nexport interface NotFoundPost {\n  $type?: 'app.bsky.feed.defs#notFoundPost'\n  uri: string\n  notFound: true\n}\n\nconst hashNotFoundPost = 'notFoundPost'\n\nexport function isNotFoundPost<V>(v: V) {\n  return is$typed(v, id, hashNotFoundPost)\n}\n\nexport function validateNotFoundPost<V>(v: V) {\n  return validate<NotFoundPost & V>(v, id, hashNotFoundPost)\n}\n\nexport interface BlockedPost {\n  $type?: 'app.bsky.feed.defs#blockedPost'\n  uri: string\n  blocked: true\n  author: BlockedAuthor\n}\n\nconst hashBlockedPost = 'blockedPost'\n\nexport function isBlockedPost<V>(v: V) {\n  return is$typed(v, id, hashBlockedPost)\n}\n\nexport function validateBlockedPost<V>(v: V) {\n  return validate<BlockedPost & V>(v, id, hashBlockedPost)\n}\n\nexport interface BlockedAuthor {\n  $type?: 'app.bsky.feed.defs#blockedAuthor'\n  did: string\n  viewer?: AppBskyActorDefs.ViewerState\n}\n\nconst hashBlockedAuthor = 'blockedAuthor'\n\nexport function isBlockedAuthor<V>(v: V) {\n  return is$typed(v, id, hashBlockedAuthor)\n}\n\nexport function validateBlockedAuthor<V>(v: V) {\n  return validate<BlockedAuthor & V>(v, id, hashBlockedAuthor)\n}\n\nexport interface GeneratorView {\n  $type?: 'app.bsky.feed.defs#generatorView'\n  uri: string\n  cid: string\n  did: string\n  creator: AppBskyActorDefs.ProfileView\n  displayName: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: string\n  likeCount?: number\n  acceptsInteractions?: boolean\n  labels?: ComAtprotoLabelDefs.Label[]\n  viewer?: GeneratorViewerState\n  contentMode?:\n    | 'app.bsky.feed.defs#contentModeUnspecified'\n    | 'app.bsky.feed.defs#contentModeVideo'\n    | (string & {})\n  indexedAt: string\n}\n\nconst hashGeneratorView = 'generatorView'\n\nexport function isGeneratorView<V>(v: V) {\n  return is$typed(v, id, hashGeneratorView)\n}\n\nexport function validateGeneratorView<V>(v: V) {\n  return validate<GeneratorView & V>(v, id, hashGeneratorView)\n}\n\nexport interface GeneratorViewerState {\n  $type?: 'app.bsky.feed.defs#generatorViewerState'\n  like?: string\n}\n\nconst hashGeneratorViewerState = 'generatorViewerState'\n\nexport function isGeneratorViewerState<V>(v: V) {\n  return is$typed(v, id, hashGeneratorViewerState)\n}\n\nexport function validateGeneratorViewerState<V>(v: V) {\n  return validate<GeneratorViewerState & V>(v, id, hashGeneratorViewerState)\n}\n\nexport interface SkeletonFeedPost {\n  $type?: 'app.bsky.feed.defs#skeletonFeedPost'\n  post: string\n  reason?:\n    | $Typed<SkeletonReasonRepost>\n    | $Typed<SkeletonReasonPin>\n    | { $type: string }\n  /** Context that will be passed through to client and may be passed to feed generator back alongside interactions. */\n  feedContext?: string\n}\n\nconst hashSkeletonFeedPost = 'skeletonFeedPost'\n\nexport function isSkeletonFeedPost<V>(v: V) {\n  return is$typed(v, id, hashSkeletonFeedPost)\n}\n\nexport function validateSkeletonFeedPost<V>(v: V) {\n  return validate<SkeletonFeedPost & V>(v, id, hashSkeletonFeedPost)\n}\n\nexport interface SkeletonReasonRepost {\n  $type?: 'app.bsky.feed.defs#skeletonReasonRepost'\n  repost: string\n}\n\nconst hashSkeletonReasonRepost = 'skeletonReasonRepost'\n\nexport function isSkeletonReasonRepost<V>(v: V) {\n  return is$typed(v, id, hashSkeletonReasonRepost)\n}\n\nexport function validateSkeletonReasonRepost<V>(v: V) {\n  return validate<SkeletonReasonRepost & V>(v, id, hashSkeletonReasonRepost)\n}\n\nexport interface SkeletonReasonPin {\n  $type?: 'app.bsky.feed.defs#skeletonReasonPin'\n}\n\nconst hashSkeletonReasonPin = 'skeletonReasonPin'\n\nexport function isSkeletonReasonPin<V>(v: V) {\n  return is$typed(v, id, hashSkeletonReasonPin)\n}\n\nexport function validateSkeletonReasonPin<V>(v: V) {\n  return validate<SkeletonReasonPin & V>(v, id, hashSkeletonReasonPin)\n}\n\nexport interface ThreadgateView {\n  $type?: 'app.bsky.feed.defs#threadgateView'\n  uri?: string\n  cid?: string\n  record?: { [_ in string]: unknown }\n  lists?: AppBskyGraphDefs.ListViewBasic[]\n}\n\nconst hashThreadgateView = 'threadgateView'\n\nexport function isThreadgateView<V>(v: V) {\n  return is$typed(v, id, hashThreadgateView)\n}\n\nexport function validateThreadgateView<V>(v: V) {\n  return validate<ThreadgateView & V>(v, id, hashThreadgateView)\n}\n\nexport interface Interaction {\n  $type?: 'app.bsky.feed.defs#interaction'\n  item?: string\n  event?:\n    | 'app.bsky.feed.defs#requestLess'\n    | 'app.bsky.feed.defs#requestMore'\n    | 'app.bsky.feed.defs#clickthroughItem'\n    | 'app.bsky.feed.defs#clickthroughAuthor'\n    | 'app.bsky.feed.defs#clickthroughReposter'\n    | 'app.bsky.feed.defs#clickthroughEmbed'\n    | 'app.bsky.feed.defs#interactionSeen'\n    | 'app.bsky.feed.defs#interactionLike'\n    | 'app.bsky.feed.defs#interactionRepost'\n    | 'app.bsky.feed.defs#interactionReply'\n    | 'app.bsky.feed.defs#interactionQuote'\n    | 'app.bsky.feed.defs#interactionShare'\n    | (string & {})\n  /** Context on a feed item that was originally supplied by the feed generator on getFeedSkeleton. */\n  feedContext?: string\n}\n\nconst hashInteraction = 'interaction'\n\nexport function isInteraction<V>(v: V) {\n  return is$typed(v, id, hashInteraction)\n}\n\nexport function validateInteraction<V>(v: V) {\n  return validate<Interaction & V>(v, id, hashInteraction)\n}\n\n/** Request that less content like the given feed item be shown in the feed */\nexport const REQUESTLESS = `${id}#requestLess`\n/** Request that more content like the given feed item be shown in the feed */\nexport const REQUESTMORE = `${id}#requestMore`\n/** User clicked through to the feed item */\nexport const CLICKTHROUGHITEM = `${id}#clickthroughItem`\n/** User clicked through to the author of the feed item */\nexport const CLICKTHROUGHAUTHOR = `${id}#clickthroughAuthor`\n/** User clicked through to the reposter of the feed item */\nexport const CLICKTHROUGHREPOSTER = `${id}#clickthroughReposter`\n/** User clicked through to the embedded content of the feed item */\nexport const CLICKTHROUGHEMBED = `${id}#clickthroughEmbed`\n/** Declares the feed generator returns any types of posts. */\nexport const CONTENTMODEUNSPECIFIED = `${id}#contentModeUnspecified`\n/** Declares the feed generator returns posts containing app.bsky.embed.video embeds. */\nexport const CONTENTMODEVIDEO = `${id}#contentModeVideo`\n/** Feed item was seen by user */\nexport const INTERACTIONSEEN = `${id}#interactionSeen`\n/** User liked the feed item */\nexport const INTERACTIONLIKE = `${id}#interactionLike`\n/** User reposted the feed item */\nexport const INTERACTIONREPOST = `${id}#interactionRepost`\n/** User replied to the feed item */\nexport const INTERACTIONREPLY = `${id}#interactionReply`\n/** User quoted the feed item */\nexport const INTERACTIONQUOTE = `${id}#interactionQuote`\n/** User shared the feed item */\nexport const INTERACTIONSHARE = `${id}#interactionShare`\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.describeFeedGenerator'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  feeds: Feed[]\n  links?: Links\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Feed {\n  $type?: 'app.bsky.feed.describeFeedGenerator#feed'\n  uri: string\n}\n\nconst hashFeed = 'feed'\n\nexport function isFeed<V>(v: V) {\n  return is$typed(v, id, hashFeed)\n}\n\nexport function validateFeed<V>(v: V) {\n  return validate<Feed & V>(v, id, hashFeed)\n}\n\nexport interface Links {\n  $type?: 'app.bsky.feed.describeFeedGenerator#links'\n  privacyPolicy?: string\n  termsOfService?: string\n}\n\nconst hashLinks = 'links'\n\nexport function isLinks<V>(v: V) {\n  return is$typed(v, id, hashLinks)\n}\n\nexport function validateLinks<V>(v: V) {\n  return validate<Links & V>(v, id, hashLinks)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyRichtextFacet from '../richtext/facet.js'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.generator'\n\nexport interface Record {\n  $type: 'app.bsky.feed.generator'\n  did: string\n  displayName: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: BlobRef\n  /** Declaration that a feed accepts feedback interactions from a client through app.bsky.feed.sendInteractions */\n  acceptsInteractions?: boolean\n  labels?: $Typed<ComAtprotoLabelDefs.SelfLabels> | { $type: string }\n  contentMode?:\n    | 'app.bsky.feed.defs#contentModeUnspecified'\n    | 'app.bsky.feed.defs#contentModeVideo'\n    | (string & {})\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getActorFeeds'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getFeedGenerator'\n\nexport interface QueryParams {\n  /** AT-URI of the feed generator record. */\n  feed: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  view: AppBskyFeedDefs.GeneratorView\n  /** Indicates whether the feed generator service has been online recently, or else seems to be inactive. */\n  isOnline: boolean\n  /** Indicates whether the feed generator service is compatible with the record declaration. */\n  isValid: boolean\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getFeedGenerators'\n\nexport interface QueryParams {\n  feeds: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  feeds: AppBskyFeedDefs.GeneratorView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getLikes'\n\nexport interface QueryParams {\n  /** AT-URI of the subject (eg, a post record). */\n  uri: string\n  /** CID of the subject record (aka, specific version of record), to filter likes. */\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  likes: Like[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Like {\n  $type?: 'app.bsky.feed.getLikes#like'\n  indexedAt: string\n  createdAt: string\n  actor: AppBskyActorDefs.ProfileView\n}\n\nconst hashLike = 'like'\n\nexport function isLike<V>(v: V) {\n  return is$typed(v, id, hashLike)\n}\n\nexport function validateLike<V>(v: V) {\n  return validate<Like & V>(v, id, hashLike)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getPosts'\n\nexport interface QueryParams {\n  /** List of post AT-URIs to return hydrated views for. */\n  uris: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  posts: AppBskyFeedDefs.PostView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getQuotes'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) of post record */\n  uri: string\n  /** If supplied, filters to quotes of specific version (by CID) of the post record. */\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  posts: AppBskyFeedDefs.PostView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getRepostedBy'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) of post record */\n  uri: string\n  /** If supplied, filters to reposts of specific version (by CID) of the post record. */\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  repostedBy: AppBskyActorDefs.ProfileView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getSuggestedFeeds'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.getTimeline'\n\nexport interface QueryParams {\n  /** Variant 'algorithm' for timeline. Implementation-specific. NOTE: most feed flexibility has been moved to feed generator mechanism. */\n  algorithm?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.like'\n\nexport interface Record {\n  $type: 'app.bsky.feed.like'\n  subject: ComAtprotoRepoStrongRef.Main\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyRichtextFacet from '../richtext/facet.js'\nimport type * as AppBskyEmbedImages from '../embed/images.js'\nimport type * as AppBskyEmbedVideo from '../embed/video.js'\nimport type * as AppBskyEmbedExternal from '../embed/external.js'\nimport type * as AppBskyEmbedRecord from '../embed/record.js'\nimport type * as AppBskyEmbedRecordWithMedia from '../embed/recordWithMedia.js'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\nimport type * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.post'\n\nexport interface Record {\n  $type: 'app.bsky.feed.post'\n  /** The primary post content. May be an empty string, if there are embeds. */\n  text: string\n  /** DEPRECATED: replaced by app.bsky.richtext.facet. */\n  entities?: Entity[]\n  /** Annotations of text (mentions, URLs, hashtags, etc) */\n  facets?: AppBskyRichtextFacet.Main[]\n  reply?: ReplyRef\n  embed?:\n    | $Typed<AppBskyEmbedImages.Main>\n    | $Typed<AppBskyEmbedVideo.Main>\n    | $Typed<AppBskyEmbedExternal.Main>\n    | $Typed<AppBskyEmbedRecord.Main>\n    | $Typed<AppBskyEmbedRecordWithMedia.Main>\n    | { $type: string }\n  /** Indicates human language of post primary text content. */\n  langs?: string[]\n  labels?: $Typed<ComAtprotoLabelDefs.SelfLabels> | { $type: string }\n  /** Additional hashtags, in addition to any included in post text and facets. */\n  tags?: string[]\n  /** Client-declared timestamp when this post was originally created. */\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n\nexport interface ReplyRef {\n  $type?: 'app.bsky.feed.post#replyRef'\n  root: ComAtprotoRepoStrongRef.Main\n  parent: ComAtprotoRepoStrongRef.Main\n}\n\nconst hashReplyRef = 'replyRef'\n\nexport function isReplyRef<V>(v: V) {\n  return is$typed(v, id, hashReplyRef)\n}\n\nexport function validateReplyRef<V>(v: V) {\n  return validate<ReplyRef & V>(v, id, hashReplyRef)\n}\n\n/** Deprecated: use facets instead. */\nexport interface Entity {\n  $type?: 'app.bsky.feed.post#entity'\n  index: TextSlice\n  /** Expected values are 'mention' and 'link'. */\n  type: string\n  value: string\n}\n\nconst hashEntity = 'entity'\n\nexport function isEntity<V>(v: V) {\n  return is$typed(v, id, hashEntity)\n}\n\nexport function validateEntity<V>(v: V) {\n  return validate<Entity & V>(v, id, hashEntity)\n}\n\n/** Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings. */\nexport interface TextSlice {\n  $type?: 'app.bsky.feed.post#textSlice'\n  start: number\n  end: number\n}\n\nconst hashTextSlice = 'textSlice'\n\nexport function isTextSlice<V>(v: V) {\n  return is$typed(v, id, hashTextSlice)\n}\n\nexport function validateTextSlice<V>(v: V) {\n  return validate<TextSlice & V>(v, id, hashTextSlice)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.postgate'\n\nexport interface Record {\n  $type: 'app.bsky.feed.postgate'\n  createdAt: string\n  /** Reference (AT-URI) to the post record. */\n  post: string\n  /** List of AT-URIs embedding this post that the author has detached from. */\n  detachedEmbeddingUris?: string[]\n  /** List of rules defining who can embed this post. If value is an empty array or is undefined, no particular rules apply and anyone can embed. */\n  embeddingRules?: ($Typed<DisableRule> | { $type: string })[]\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n\n/** Disables embedding of this post. */\nexport interface DisableRule {\n  $type?: 'app.bsky.feed.postgate#disableRule'\n}\n\nconst hashDisableRule = 'disableRule'\n\nexport function isDisableRule<V>(v: V) {\n  return is$typed(v, id, hashDisableRule)\n}\n\nexport function validateDisableRule<V>(v: V) {\n  return validate<DisableRule & V>(v, id, hashDisableRule)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.repost'\n\nexport interface Record {\n  $type: 'app.bsky.feed.repost'\n  subject: ComAtprotoRepoStrongRef.Main\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.sendInteractions'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  interactions: AppBskyFeedDefs.Interaction[]\n}\n\nexport interface OutputSchema {}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.feed.threadgate'\n\nexport interface Record {\n  $type: 'app.bsky.feed.threadgate'\n  /** Reference (AT-URI) to the post record. */\n  post: string\n  /** List of rules defining who can reply to this post. If value is an empty array, no one can reply. If value is undefined, anyone can reply. */\n  allow?: (\n    | $Typed<MentionRule>\n    | $Typed<FollowerRule>\n    | $Typed<FollowingRule>\n    | $Typed<ListRule>\n    | { $type: string }\n  )[]\n  createdAt: string\n  /** List of hidden reply URIs. */\n  hiddenReplies?: string[]\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n\n/** Allow replies from actors mentioned in your post. */\nexport interface MentionRule {\n  $type?: 'app.bsky.feed.threadgate#mentionRule'\n}\n\nconst hashMentionRule = 'mentionRule'\n\nexport function isMentionRule<V>(v: V) {\n  return is$typed(v, id, hashMentionRule)\n}\n\nexport function validateMentionRule<V>(v: V) {\n  return validate<MentionRule & V>(v, id, hashMentionRule)\n}\n\n/** Allow replies from actors who follow you. */\nexport interface FollowerRule {\n  $type?: 'app.bsky.feed.threadgate#followerRule'\n}\n\nconst hashFollowerRule = 'followerRule'\n\nexport function isFollowerRule<V>(v: V) {\n  return is$typed(v, id, hashFollowerRule)\n}\n\nexport function validateFollowerRule<V>(v: V) {\n  return validate<FollowerRule & V>(v, id, hashFollowerRule)\n}\n\n/** Allow replies from actors you follow. */\nexport interface FollowingRule {\n  $type?: 'app.bsky.feed.threadgate#followingRule'\n}\n\nconst hashFollowingRule = 'followingRule'\n\nexport function isFollowingRule<V>(v: V) {\n  return is$typed(v, id, hashFollowingRule)\n}\n\nexport function validateFollowingRule<V>(v: V) {\n  return validate<FollowingRule & V>(v, id, hashFollowingRule)\n}\n\n/** Allow replies from actors on a list. */\nexport interface ListRule {\n  $type?: 'app.bsky.feed.threadgate#listRule'\n  list: string\n}\n\nconst hashListRule = 'listRule'\n\nexport function isListRule<V>(v: V) {\n  return is$typed(v, id, hashListRule)\n}\n\nexport function validateListRule<V>(v: V) {\n  return validate<ListRule & V>(v, id, hashListRule)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.block'\n\nexport interface Record {\n  $type: 'app.bsky.graph.block'\n  /** DID of the account to be blocked. */\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\nimport type * as AppBskyRichtextFacet from '../richtext/facet.js'\nimport type * as AppBskyFeedDefs from '../feed/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.defs'\n\nexport interface ListViewBasic {\n  $type?: 'app.bsky.graph.defs#listViewBasic'\n  uri: string\n  cid: string\n  name: string\n  purpose: ListPurpose\n  avatar?: string\n  listItemCount?: number\n  labels?: ComAtprotoLabelDefs.Label[]\n  viewer?: ListViewerState\n  indexedAt?: string\n}\n\nconst hashListViewBasic = 'listViewBasic'\n\nexport function isListViewBasic<V>(v: V) {\n  return is$typed(v, id, hashListViewBasic)\n}\n\nexport function validateListViewBasic<V>(v: V) {\n  return validate<ListViewBasic & V>(v, id, hashListViewBasic)\n}\n\nexport interface ListView {\n  $type?: 'app.bsky.graph.defs#listView'\n  uri: string\n  cid: string\n  creator: AppBskyActorDefs.ProfileView\n  name: string\n  purpose: ListPurpose\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: string\n  listItemCount?: number\n  labels?: ComAtprotoLabelDefs.Label[]\n  viewer?: ListViewerState\n  indexedAt: string\n}\n\nconst hashListView = 'listView'\n\nexport function isListView<V>(v: V) {\n  return is$typed(v, id, hashListView)\n}\n\nexport function validateListView<V>(v: V) {\n  return validate<ListView & V>(v, id, hashListView)\n}\n\nexport interface ListItemView {\n  $type?: 'app.bsky.graph.defs#listItemView'\n  uri: string\n  subject: AppBskyActorDefs.ProfileView\n}\n\nconst hashListItemView = 'listItemView'\n\nexport function isListItemView<V>(v: V) {\n  return is$typed(v, id, hashListItemView)\n}\n\nexport function validateListItemView<V>(v: V) {\n  return validate<ListItemView & V>(v, id, hashListItemView)\n}\n\nexport interface StarterPackView {\n  $type?: 'app.bsky.graph.defs#starterPackView'\n  uri: string\n  cid: string\n  record: { [_ in string]: unknown }\n  creator: AppBskyActorDefs.ProfileViewBasic\n  list?: ListViewBasic\n  listItemsSample?: ListItemView[]\n  feeds?: AppBskyFeedDefs.GeneratorView[]\n  joinedWeekCount?: number\n  joinedAllTimeCount?: number\n  labels?: ComAtprotoLabelDefs.Label[]\n  indexedAt: string\n}\n\nconst hashStarterPackView = 'starterPackView'\n\nexport function isStarterPackView<V>(v: V) {\n  return is$typed(v, id, hashStarterPackView)\n}\n\nexport function validateStarterPackView<V>(v: V) {\n  return validate<StarterPackView & V>(v, id, hashStarterPackView)\n}\n\nexport interface StarterPackViewBasic {\n  $type?: 'app.bsky.graph.defs#starterPackViewBasic'\n  uri: string\n  cid: string\n  record: { [_ in string]: unknown }\n  creator: AppBskyActorDefs.ProfileViewBasic\n  listItemCount?: number\n  joinedWeekCount?: number\n  joinedAllTimeCount?: number\n  labels?: ComAtprotoLabelDefs.Label[]\n  indexedAt: string\n}\n\nconst hashStarterPackViewBasic = 'starterPackViewBasic'\n\nexport function isStarterPackViewBasic<V>(v: V) {\n  return is$typed(v, id, hashStarterPackViewBasic)\n}\n\nexport function validateStarterPackViewBasic<V>(v: V) {\n  return validate<StarterPackViewBasic & V>(v, id, hashStarterPackViewBasic)\n}\n\nexport type ListPurpose =\n  | 'app.bsky.graph.defs#modlist'\n  | 'app.bsky.graph.defs#curatelist'\n  | 'app.bsky.graph.defs#referencelist'\n  | (string & {})\n\n/** A list of actors to apply an aggregate moderation action (mute/block) on. */\nexport const MODLIST = `${id}#modlist`\n/** A list of actors used for curation purposes such as list feeds or interaction gating. */\nexport const CURATELIST = `${id}#curatelist`\n/** A list of actors used for only for reference purposes such as within a starter pack. */\nexport const REFERENCELIST = `${id}#referencelist`\n\nexport interface ListViewerState {\n  $type?: 'app.bsky.graph.defs#listViewerState'\n  muted?: boolean\n  blocked?: string\n}\n\nconst hashListViewerState = 'listViewerState'\n\nexport function isListViewerState<V>(v: V) {\n  return is$typed(v, id, hashListViewerState)\n}\n\nexport function validateListViewerState<V>(v: V) {\n  return validate<ListViewerState & V>(v, id, hashListViewerState)\n}\n\n/** indicates that a handle or DID could not be resolved */\nexport interface NotFoundActor {\n  $type?: 'app.bsky.graph.defs#notFoundActor'\n  actor: string\n  notFound: true\n}\n\nconst hashNotFoundActor = 'notFoundActor'\n\nexport function isNotFoundActor<V>(v: V) {\n  return is$typed(v, id, hashNotFoundActor)\n}\n\nexport function validateNotFoundActor<V>(v: V) {\n  return validate<NotFoundActor & V>(v, id, hashNotFoundActor)\n}\n\n/** lists the bi-directional graph relationships between one actor (not indicated in the object), and the target actors (the DID included in the object) */\nexport interface Relationship {\n  $type?: 'app.bsky.graph.defs#relationship'\n  did: string\n  /** if the actor follows this DID, this is the AT-URI of the follow record */\n  following?: string\n  /** if the actor is followed by this DID, contains the AT-URI of the follow record */\n  followedBy?: string\n}\n\nconst hashRelationship = 'relationship'\n\nexport function isRelationship<V>(v: V) {\n  return is$typed(v, id, hashRelationship)\n}\n\nexport function validateRelationship<V>(v: V) {\n  return validate<Relationship & V>(v, id, hashRelationship)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.follow'\n\nexport interface Record {\n  $type: 'app.bsky.graph.follow'\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyGraphDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getActorStarterPacks'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  starterPacks: AppBskyGraphDefs.StarterPackViewBasic[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getBlocks'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  blocks: AppBskyActorDefs.ProfileView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getFollowers'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  followers: AppBskyActorDefs.ProfileView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getFollows'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  follows: AppBskyActorDefs.ProfileView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getKnownFollowers'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  followers: AppBskyActorDefs.ProfileView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyGraphDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getList'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) of the list record to hydrate. */\n  list: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  list: AppBskyGraphDefs.ListView\n  items: AppBskyGraphDefs.ListItemView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyGraphDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getListBlocks'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyGraphDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getListMutes'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyGraphDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getLists'\n\nexport interface QueryParams {\n  /** The account (actor) to enumerate lists from. */\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getMutes'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  mutes: AppBskyActorDefs.ProfileView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyGraphDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getStarterPack'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) of the starter pack record. */\n  starterPack: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  starterPack: AppBskyGraphDefs.StarterPackView\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyGraphDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getStarterPacks'\n\nexport interface QueryParams {\n  uris: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  starterPacks: AppBskyGraphDefs.StarterPackViewBasic[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.getSuggestedFollowsByActor'\n\nexport interface QueryParams {\n  actor: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  suggestions: AppBskyActorDefs.ProfileView[]\n  /** If true, response has fallen-back to generic results, and is not scoped using relativeToDid */\n  isFallback: boolean\n  /** Snowflake for this recommendation, use when submitting recommendation events. */\n  recId?: number\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyGraphDefs from './defs.js'\nimport type * as AppBskyRichtextFacet from '../richtext/facet.js'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.list'\n\nexport interface Record {\n  $type: 'app.bsky.graph.list'\n  purpose: AppBskyGraphDefs.ListPurpose\n  /** Display name for list; can not be empty. */\n  name: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: BlobRef\n  labels?: $Typed<ComAtprotoLabelDefs.SelfLabels> | { $type: string }\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.listblock'\n\nexport interface Record {\n  $type: 'app.bsky.graph.listblock'\n  /** Reference (AT-URI) to the mod list record. */\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.listitem'\n\nexport interface Record {\n  $type: 'app.bsky.graph.listitem'\n  /** The account which is included on the list. */\n  subject: string\n  /** Reference (AT-URI) to the list record (app.bsky.graph.list). */\n  list: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.muteActor'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.muteActorList'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  list: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.muteThread'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  root: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyGraphDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.searchStarterPacks'\n\nexport interface QueryParams {\n  /** Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  starterPacks: AppBskyGraphDefs.StarterPackViewBasic[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyRichtextFacet from '../richtext/facet.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.starterpack'\n\nexport interface Record {\n  $type: 'app.bsky.graph.starterpack'\n  /** Display name for starter pack; can not be empty. */\n  name: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  /** Reference (AT-URI) to the list record. */\n  list: string\n  feeds?: FeedItem[]\n  createdAt: string\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n\nexport interface FeedItem {\n  $type?: 'app.bsky.graph.starterpack#feedItem'\n  uri: string\n}\n\nconst hashFeedItem = 'feedItem'\n\nexport function isFeedItem<V>(v: V) {\n  return is$typed(v, id, hashFeedItem)\n}\n\nexport function validateFeedItem<V>(v: V) {\n  return validate<FeedItem & V>(v, id, hashFeedItem)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.unmuteActor'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.unmuteActorList'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  list: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.graph.unmuteThread'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  root: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\nimport type * as ComAtprotoModerationDefs from '../../../com/atproto/moderation/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.labeler.defs'\n\nexport interface LabelerView {\n  $type?: 'app.bsky.labeler.defs#labelerView'\n  uri: string\n  cid: string\n  creator: AppBskyActorDefs.ProfileView\n  likeCount?: number\n  viewer?: LabelerViewerState\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n}\n\nconst hashLabelerView = 'labelerView'\n\nexport function isLabelerView<V>(v: V) {\n  return is$typed(v, id, hashLabelerView)\n}\n\nexport function validateLabelerView<V>(v: V) {\n  return validate<LabelerView & V>(v, id, hashLabelerView)\n}\n\nexport interface LabelerViewDetailed {\n  $type?: 'app.bsky.labeler.defs#labelerViewDetailed'\n  uri: string\n  cid: string\n  creator: AppBskyActorDefs.ProfileView\n  policies: LabelerPolicies\n  likeCount?: number\n  viewer?: LabelerViewerState\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n  /** The set of report reason 'codes' which are in-scope for this service to review and action. These usually align to policy categories. If not defined (distinct from empty array), all reason types are allowed. */\n  reasonTypes?: ComAtprotoModerationDefs.ReasonType[]\n  /** The set of subject types (account, record, etc) this service accepts reports on. */\n  subjectTypes?: ComAtprotoModerationDefs.SubjectType[]\n  /** Set of record types (collection NSIDs) which can be reported to this service. If not defined (distinct from empty array), default is any record type. */\n  subjectCollections?: string[]\n}\n\nconst hashLabelerViewDetailed = 'labelerViewDetailed'\n\nexport function isLabelerViewDetailed<V>(v: V) {\n  return is$typed(v, id, hashLabelerViewDetailed)\n}\n\nexport function validateLabelerViewDetailed<V>(v: V) {\n  return validate<LabelerViewDetailed & V>(v, id, hashLabelerViewDetailed)\n}\n\nexport interface LabelerViewerState {\n  $type?: 'app.bsky.labeler.defs#labelerViewerState'\n  like?: string\n}\n\nconst hashLabelerViewerState = 'labelerViewerState'\n\nexport function isLabelerViewerState<V>(v: V) {\n  return is$typed(v, id, hashLabelerViewerState)\n}\n\nexport function validateLabelerViewerState<V>(v: V) {\n  return validate<LabelerViewerState & V>(v, id, hashLabelerViewerState)\n}\n\nexport interface LabelerPolicies {\n  $type?: 'app.bsky.labeler.defs#labelerPolicies'\n  /** The label values which this labeler publishes. May include global or custom labels. */\n  labelValues: ComAtprotoLabelDefs.LabelValue[]\n  /** Label values created by this labeler and scoped exclusively to it. Labels defined here will override global label definitions for this labeler. */\n  labelValueDefinitions?: ComAtprotoLabelDefs.LabelValueDefinition[]\n}\n\nconst hashLabelerPolicies = 'labelerPolicies'\n\nexport function isLabelerPolicies<V>(v: V) {\n  return is$typed(v, id, hashLabelerPolicies)\n}\n\nexport function validateLabelerPolicies<V>(v: V) {\n  return validate<LabelerPolicies & V>(v, id, hashLabelerPolicies)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyLabelerDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.labeler.getServices'\n\nexport interface QueryParams {\n  dids: string[]\n  detailed?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  views: (\n    | $Typed<AppBskyLabelerDefs.LabelerView>\n    | $Typed<AppBskyLabelerDefs.LabelerViewDetailed>\n    | { $type: string }\n  )[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyLabelerDefs from './defs.js'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\nimport type * as ComAtprotoModerationDefs from '../../../com/atproto/moderation/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.labeler.service'\n\nexport interface Record {\n  $type: 'app.bsky.labeler.service'\n  policies: AppBskyLabelerDefs.LabelerPolicies\n  labels?: $Typed<ComAtprotoLabelDefs.SelfLabels> | { $type: string }\n  createdAt: string\n  /** The set of report reason 'codes' which are in-scope for this service to review and action. These usually align to policy categories. If not defined (distinct from empty array), all reason types are allowed. */\n  reasonTypes?: ComAtprotoModerationDefs.ReasonType[]\n  /** The set of subject types (account, record, etc) this service accepts reports on. */\n  subjectTypes?: ComAtprotoModerationDefs.SubjectType[]\n  /** Set of record types (collection NSIDs) which can be reported to this service. If not defined (distinct from empty array), default is any record type. */\n  subjectCollections?: string[]\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.notification.getUnreadCount'\n\nexport interface QueryParams {\n  priority?: boolean\n  seenAt?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  count: number\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../actor/defs.js'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.notification.listNotifications'\n\nexport interface QueryParams {\n  /** Notification reasons to include in response. */\n  reasons?: string[]\n  limit?: number\n  priority?: boolean\n  cursor?: string\n  seenAt?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  notifications: Notification[]\n  priority?: boolean\n  seenAt?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Notification {\n  $type?: 'app.bsky.notification.listNotifications#notification'\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileView\n  /** Expected values are 'like', 'repost', 'follow', 'mention', 'reply', 'quote', and 'starterpack-joined'. */\n  reason:\n    | 'like'\n    | 'repost'\n    | 'follow'\n    | 'mention'\n    | 'reply'\n    | 'quote'\n    | 'starterpack-joined'\n    | (string & {})\n  reasonSubject?: string\n  record: { [_ in string]: unknown }\n  isRead: boolean\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n}\n\nconst hashNotification = 'notification'\n\nexport function isNotification<V>(v: V) {\n  return is$typed(v, id, hashNotification)\n}\n\nexport function validateNotification<V>(v: V) {\n  return validate<Notification & V>(v, id, hashNotification)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.notification.putPreferences'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  priority: boolean\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.notification.registerPush'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  serviceDid: string\n  token: string\n  platform: 'ios' | 'android' | 'web' | (string & {})\n  appId: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.notification.updateSeen'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  seenAt: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.richtext.facet'\n\n/** Annotation of a sub-string within rich text. */\nexport interface Main {\n  $type?: 'app.bsky.richtext.facet'\n  index: ByteSlice\n  features: ($Typed<Mention> | $Typed<Link> | $Typed<Tag> | { $type: string })[]\n}\n\nconst hashMain = 'main'\n\nexport function isMain<V>(v: V) {\n  return is$typed(v, id, hashMain)\n}\n\nexport function validateMain<V>(v: V) {\n  return validate<Main & V>(v, id, hashMain)\n}\n\n/** Facet feature for mention of another account. The text is usually a handle, including a '@' prefix, but the facet reference is a DID. */\nexport interface Mention {\n  $type?: 'app.bsky.richtext.facet#mention'\n  did: string\n}\n\nconst hashMention = 'mention'\n\nexport function isMention<V>(v: V) {\n  return is$typed(v, id, hashMention)\n}\n\nexport function validateMention<V>(v: V) {\n  return validate<Mention & V>(v, id, hashMention)\n}\n\n/** Facet feature for a URL. The text URL may have been simplified or truncated, but the facet reference should be a complete URL. */\nexport interface Link {\n  $type?: 'app.bsky.richtext.facet#link'\n  uri: string\n}\n\nconst hashLink = 'link'\n\nexport function isLink<V>(v: V) {\n  return is$typed(v, id, hashLink)\n}\n\nexport function validateLink<V>(v: V) {\n  return validate<Link & V>(v, id, hashLink)\n}\n\n/** Facet feature for a hashtag. The text usually includes a '#' prefix, but the facet reference should not (except in the case of 'double hash tags'). */\nexport interface Tag {\n  $type?: 'app.bsky.richtext.facet#tag'\n  tag: string\n}\n\nconst hashTag = 'tag'\n\nexport function isTag<V>(v: V) {\n  return is$typed(v, id, hashTag)\n}\n\nexport function validateTag<V>(v: V) {\n  return validate<Tag & V>(v, id, hashTag)\n}\n\n/** Specifies the sub-string range a facet feature applies to. Start index is inclusive, end index is exclusive. Indices are zero-indexed, counting bytes of the UTF-8 encoded text. NOTE: some languages, like Javascript, use UTF-16 or Unicode codepoints for string slice indexing; in these languages, convert to byte arrays before working with facets. */\nexport interface ByteSlice {\n  $type?: 'app.bsky.richtext.facet#byteSlice'\n  byteStart: number\n  byteEnd: number\n}\n\nconst hashByteSlice = 'byteSlice'\n\nexport function isByteSlice<V>(v: V) {\n  return is$typed(v, id, hashByteSlice)\n}\n\nexport function validateByteSlice<V>(v: V) {\n  return validate<ByteSlice & V>(v, id, hashByteSlice)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.unspecced.defs'\n\nexport interface SkeletonSearchPost {\n  $type?: 'app.bsky.unspecced.defs#skeletonSearchPost'\n  uri: string\n}\n\nconst hashSkeletonSearchPost = 'skeletonSearchPost'\n\nexport function isSkeletonSearchPost<V>(v: V) {\n  return is$typed(v, id, hashSkeletonSearchPost)\n}\n\nexport function validateSkeletonSearchPost<V>(v: V) {\n  return validate<SkeletonSearchPost & V>(v, id, hashSkeletonSearchPost)\n}\n\nexport interface SkeletonSearchActor {\n  $type?: 'app.bsky.unspecced.defs#skeletonSearchActor'\n  did: string\n}\n\nconst hashSkeletonSearchActor = 'skeletonSearchActor'\n\nexport function isSkeletonSearchActor<V>(v: V) {\n  return is$typed(v, id, hashSkeletonSearchActor)\n}\n\nexport function validateSkeletonSearchActor<V>(v: V) {\n  return validate<SkeletonSearchActor & V>(v, id, hashSkeletonSearchActor)\n}\n\nexport interface SkeletonSearchStarterPack {\n  $type?: 'app.bsky.unspecced.defs#skeletonSearchStarterPack'\n  uri: string\n}\n\nconst hashSkeletonSearchStarterPack = 'skeletonSearchStarterPack'\n\nexport function isSkeletonSearchStarterPack<V>(v: V) {\n  return is$typed(v, id, hashSkeletonSearchStarterPack)\n}\n\nexport function validateSkeletonSearchStarterPack<V>(v: V) {\n  return validate<SkeletonSearchStarterPack & V>(\n    v,\n    id,\n    hashSkeletonSearchStarterPack,\n  )\n}\n\nexport interface TrendingTopic {\n  $type?: 'app.bsky.unspecced.defs#trendingTopic'\n  topic: string\n  displayName?: string\n  description?: string\n  link: string\n}\n\nconst hashTrendingTopic = 'trendingTopic'\n\nexport function isTrendingTopic<V>(v: V) {\n  return is$typed(v, id, hashTrendingTopic)\n}\n\nexport function validateTrendingTopic<V>(v: V) {\n  return validate<TrendingTopic & V>(v, id, hashTrendingTopic)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.unspecced.getConfig'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  checkEmailConfirmed?: boolean\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyFeedDefs from '../feed/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.unspecced.getPopularFeedGenerators'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  query?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyUnspeccedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.unspecced.getSuggestionsSkeleton'\n\nexport interface QueryParams {\n  /** DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking. */\n  viewer?: string\n  limit?: number\n  cursor?: string\n  /** DID of the account to get suggestions relative to. If not provided, suggestions will be based on the viewer. */\n  relativeToDid?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyUnspeccedDefs.SkeletonSearchActor[]\n  /** DID of the account these suggestions are relative to. If this is returned undefined, suggestions are based on the viewer. */\n  relativeToDid?: string\n  /** Snowflake for this recommendation, use when submitting recommendation events. */\n  recId?: number\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.unspecced.getTaggedSuggestions'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  suggestions: Suggestion[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Suggestion {\n  $type?: 'app.bsky.unspecced.getTaggedSuggestions#suggestion'\n  tag: string\n  subjectType: 'actor' | 'feed' | (string & {})\n  subject: string\n}\n\nconst hashSuggestion = 'suggestion'\n\nexport function isSuggestion<V>(v: V) {\n  return is$typed(v, id, hashSuggestion)\n}\n\nexport function validateSuggestion<V>(v: V) {\n  return validate<Suggestion & V>(v, id, hashSuggestion)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyUnspeccedDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.unspecced.getTrendingTopics'\n\nexport interface QueryParams {\n  /** DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking. */\n  viewer?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  topics: AppBskyUnspeccedDefs.TrendingTopic[]\n  suggested: AppBskyUnspeccedDefs.TrendingTopic[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.video.defs'\n\nexport interface JobStatus {\n  $type?: 'app.bsky.video.defs#jobStatus'\n  jobId: string\n  did: string\n  /** The state of the video processing job. All values not listed as a known value indicate that the job is in process. */\n  state: 'JOB_STATE_COMPLETED' | 'JOB_STATE_FAILED' | (string & {})\n  /** Progress within the current processing state. */\n  progress?: number\n  blob?: BlobRef\n  error?: string\n  message?: string\n}\n\nconst hashJobStatus = 'jobStatus'\n\nexport function isJobStatus<V>(v: V) {\n  return is$typed(v, id, hashJobStatus)\n}\n\nexport function validateJobStatus<V>(v: V) {\n  return validate<JobStatus & V>(v, id, hashJobStatus)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyVideoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.video.getJobStatus'\n\nexport interface QueryParams {\n  jobId: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  jobStatus: AppBskyVideoDefs.JobStatus\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.video.getUploadLimits'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  canUpload: boolean\n  remainingDailyVideos?: number\n  remainingDailyBytes?: number\n  message?: string\n  error?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyVideoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'app.bsky.video.uploadVideo'\n\nexport interface QueryParams {}\n\nexport type InputSchema = string | Uint8Array | Blob\n\nexport interface OutputSchema {\n  jobStatus: AppBskyVideoDefs.JobStatus\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'video/mp4'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.actor.declaration'\n\nexport interface Record {\n  $type: 'chat.bsky.actor.declaration'\n  allowIncoming: 'all' | 'none' | 'following' | (string & {})\n  [k: string]: unknown\n}\n\nconst hashRecord = 'main'\n\nexport function isRecord<V>(v: V) {\n  return is$typed(v, id, hashRecord)\n}\n\nexport function validateRecord<V>(v: V) {\n  return validate<Record & V>(v, id, hashRecord, true)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../../../app/bsky/actor/defs.js'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.actor.defs'\n\nexport interface ProfileViewBasic {\n  $type?: 'chat.bsky.actor.defs#profileViewBasic'\n  did: string\n  handle: string\n  displayName?: string\n  avatar?: string\n  associated?: AppBskyActorDefs.ProfileAssociated\n  viewer?: AppBskyActorDefs.ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  /** Set to true when the actor cannot actively participate in converations */\n  chatDisabled?: boolean\n}\n\nconst hashProfileViewBasic = 'profileViewBasic'\n\nexport function isProfileViewBasic<V>(v: V) {\n  return is$typed(v, id, hashProfileViewBasic)\n}\n\nexport function validateProfileViewBasic<V>(v: V) {\n  return validate<ProfileViewBasic & V>(v, id, hashProfileViewBasic)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.actor.deleteAccount'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.actor.exportAccountData'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.acceptConvo'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n}\n\nexport interface OutputSchema {\n  /** Rev when the convo was accepted. If not present, the convo was already accepted. */\n  rev?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyRichtextFacet from '../../../app/bsky/richtext/facet.js'\nimport type * as AppBskyEmbedRecord from '../../../app/bsky/embed/record.js'\nimport type * as ChatBskyActorDefs from '../actor/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.defs'\n\nexport interface MessageRef {\n  $type?: 'chat.bsky.convo.defs#messageRef'\n  did: string\n  convoId: string\n  messageId: string\n}\n\nconst hashMessageRef = 'messageRef'\n\nexport function isMessageRef<V>(v: V) {\n  return is$typed(v, id, hashMessageRef)\n}\n\nexport function validateMessageRef<V>(v: V) {\n  return validate<MessageRef & V>(v, id, hashMessageRef)\n}\n\nexport interface MessageInput {\n  $type?: 'chat.bsky.convo.defs#messageInput'\n  text: string\n  /** Annotations of text (mentions, URLs, hashtags, etc) */\n  facets?: AppBskyRichtextFacet.Main[]\n  embed?: $Typed<AppBskyEmbedRecord.Main> | { $type: string }\n}\n\nconst hashMessageInput = 'messageInput'\n\nexport function isMessageInput<V>(v: V) {\n  return is$typed(v, id, hashMessageInput)\n}\n\nexport function validateMessageInput<V>(v: V) {\n  return validate<MessageInput & V>(v, id, hashMessageInput)\n}\n\nexport interface MessageView {\n  $type?: 'chat.bsky.convo.defs#messageView'\n  id: string\n  rev: string\n  text: string\n  /** Annotations of text (mentions, URLs, hashtags, etc) */\n  facets?: AppBskyRichtextFacet.Main[]\n  embed?: $Typed<AppBskyEmbedRecord.View> | { $type: string }\n  sender: MessageViewSender\n  sentAt: string\n}\n\nconst hashMessageView = 'messageView'\n\nexport function isMessageView<V>(v: V) {\n  return is$typed(v, id, hashMessageView)\n}\n\nexport function validateMessageView<V>(v: V) {\n  return validate<MessageView & V>(v, id, hashMessageView)\n}\n\nexport interface DeletedMessageView {\n  $type?: 'chat.bsky.convo.defs#deletedMessageView'\n  id: string\n  rev: string\n  sender: MessageViewSender\n  sentAt: string\n}\n\nconst hashDeletedMessageView = 'deletedMessageView'\n\nexport function isDeletedMessageView<V>(v: V) {\n  return is$typed(v, id, hashDeletedMessageView)\n}\n\nexport function validateDeletedMessageView<V>(v: V) {\n  return validate<DeletedMessageView & V>(v, id, hashDeletedMessageView)\n}\n\nexport interface MessageViewSender {\n  $type?: 'chat.bsky.convo.defs#messageViewSender'\n  did: string\n}\n\nconst hashMessageViewSender = 'messageViewSender'\n\nexport function isMessageViewSender<V>(v: V) {\n  return is$typed(v, id, hashMessageViewSender)\n}\n\nexport function validateMessageViewSender<V>(v: V) {\n  return validate<MessageViewSender & V>(v, id, hashMessageViewSender)\n}\n\nexport interface ConvoView {\n  $type?: 'chat.bsky.convo.defs#convoView'\n  id: string\n  rev: string\n  members: ChatBskyActorDefs.ProfileViewBasic[]\n  lastMessage?:\n    | $Typed<MessageView>\n    | $Typed<DeletedMessageView>\n    | { $type: string }\n  muted: boolean\n  status?: 'request' | 'accepted' | (string & {})\n  unreadCount: number\n}\n\nconst hashConvoView = 'convoView'\n\nexport function isConvoView<V>(v: V) {\n  return is$typed(v, id, hashConvoView)\n}\n\nexport function validateConvoView<V>(v: V) {\n  return validate<ConvoView & V>(v, id, hashConvoView)\n}\n\nexport interface LogBeginConvo {\n  $type?: 'chat.bsky.convo.defs#logBeginConvo'\n  rev: string\n  convoId: string\n}\n\nconst hashLogBeginConvo = 'logBeginConvo'\n\nexport function isLogBeginConvo<V>(v: V) {\n  return is$typed(v, id, hashLogBeginConvo)\n}\n\nexport function validateLogBeginConvo<V>(v: V) {\n  return validate<LogBeginConvo & V>(v, id, hashLogBeginConvo)\n}\n\nexport interface LogAcceptConvo {\n  $type?: 'chat.bsky.convo.defs#logAcceptConvo'\n  rev: string\n  convoId: string\n}\n\nconst hashLogAcceptConvo = 'logAcceptConvo'\n\nexport function isLogAcceptConvo<V>(v: V) {\n  return is$typed(v, id, hashLogAcceptConvo)\n}\n\nexport function validateLogAcceptConvo<V>(v: V) {\n  return validate<LogAcceptConvo & V>(v, id, hashLogAcceptConvo)\n}\n\nexport interface LogLeaveConvo {\n  $type?: 'chat.bsky.convo.defs#logLeaveConvo'\n  rev: string\n  convoId: string\n}\n\nconst hashLogLeaveConvo = 'logLeaveConvo'\n\nexport function isLogLeaveConvo<V>(v: V) {\n  return is$typed(v, id, hashLogLeaveConvo)\n}\n\nexport function validateLogLeaveConvo<V>(v: V) {\n  return validate<LogLeaveConvo & V>(v, id, hashLogLeaveConvo)\n}\n\nexport interface LogMuteConvo {\n  $type?: 'chat.bsky.convo.defs#logMuteConvo'\n  rev: string\n  convoId: string\n}\n\nconst hashLogMuteConvo = 'logMuteConvo'\n\nexport function isLogMuteConvo<V>(v: V) {\n  return is$typed(v, id, hashLogMuteConvo)\n}\n\nexport function validateLogMuteConvo<V>(v: V) {\n  return validate<LogMuteConvo & V>(v, id, hashLogMuteConvo)\n}\n\nexport interface LogUnmuteConvo {\n  $type?: 'chat.bsky.convo.defs#logUnmuteConvo'\n  rev: string\n  convoId: string\n}\n\nconst hashLogUnmuteConvo = 'logUnmuteConvo'\n\nexport function isLogUnmuteConvo<V>(v: V) {\n  return is$typed(v, id, hashLogUnmuteConvo)\n}\n\nexport function validateLogUnmuteConvo<V>(v: V) {\n  return validate<LogUnmuteConvo & V>(v, id, hashLogUnmuteConvo)\n}\n\nexport interface LogCreateMessage {\n  $type?: 'chat.bsky.convo.defs#logCreateMessage'\n  rev: string\n  convoId: string\n  message: $Typed<MessageView> | $Typed<DeletedMessageView> | { $type: string }\n}\n\nconst hashLogCreateMessage = 'logCreateMessage'\n\nexport function isLogCreateMessage<V>(v: V) {\n  return is$typed(v, id, hashLogCreateMessage)\n}\n\nexport function validateLogCreateMessage<V>(v: V) {\n  return validate<LogCreateMessage & V>(v, id, hashLogCreateMessage)\n}\n\nexport interface LogDeleteMessage {\n  $type?: 'chat.bsky.convo.defs#logDeleteMessage'\n  rev: string\n  convoId: string\n  message: $Typed<MessageView> | $Typed<DeletedMessageView> | { $type: string }\n}\n\nconst hashLogDeleteMessage = 'logDeleteMessage'\n\nexport function isLogDeleteMessage<V>(v: V) {\n  return is$typed(v, id, hashLogDeleteMessage)\n}\n\nexport function validateLogDeleteMessage<V>(v: V) {\n  return validate<LogDeleteMessage & V>(v, id, hashLogDeleteMessage)\n}\n\nexport interface LogReadMessage {\n  $type?: 'chat.bsky.convo.defs#logReadMessage'\n  rev: string\n  convoId: string\n  message: $Typed<MessageView> | $Typed<DeletedMessageView> | { $type: string }\n}\n\nconst hashLogReadMessage = 'logReadMessage'\n\nexport function isLogReadMessage<V>(v: V) {\n  return is$typed(v, id, hashLogReadMessage)\n}\n\nexport function validateLogReadMessage<V>(v: V) {\n  return validate<LogReadMessage & V>(v, id, hashLogReadMessage)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.deleteMessageForSelf'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n  messageId: string\n}\n\nexport type OutputSchema = ChatBskyConvoDefs.DeletedMessageView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.getConvo'\n\nexport interface QueryParams {\n  convoId: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  convo: ChatBskyConvoDefs.ConvoView\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.getConvoAvailability'\n\nexport interface QueryParams {\n  members: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  canChat: boolean\n  convo?: ChatBskyConvoDefs.ConvoView\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.getConvoForMembers'\n\nexport interface QueryParams {\n  members: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  convo: ChatBskyConvoDefs.ConvoView\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.getLog'\n\nexport interface QueryParams {\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  logs: (\n    | $Typed<ChatBskyConvoDefs.LogBeginConvo>\n    | $Typed<ChatBskyConvoDefs.LogAcceptConvo>\n    | $Typed<ChatBskyConvoDefs.LogLeaveConvo>\n    | $Typed<ChatBskyConvoDefs.LogCreateMessage>\n    | $Typed<ChatBskyConvoDefs.LogDeleteMessage>\n    | { $type: string }\n  )[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.getMessages'\n\nexport interface QueryParams {\n  convoId: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  messages: (\n    | $Typed<ChatBskyConvoDefs.MessageView>\n    | $Typed<ChatBskyConvoDefs.DeletedMessageView>\n    | { $type: string }\n  )[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.leaveConvo'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n}\n\nexport interface OutputSchema {\n  convoId: string\n  rev: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.listConvos'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  readState?: 'unread' | (string & {})\n  status?: 'request' | 'accepted' | (string & {})\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  convos: ChatBskyConvoDefs.ConvoView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.muteConvo'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n}\n\nexport interface OutputSchema {\n  convo: ChatBskyConvoDefs.ConvoView\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.sendMessage'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n  message: ChatBskyConvoDefs.MessageInput\n}\n\nexport type OutputSchema = ChatBskyConvoDefs.MessageView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.sendMessageBatch'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  items: BatchItem[]\n}\n\nexport interface OutputSchema {\n  items: ChatBskyConvoDefs.MessageView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface BatchItem {\n  $type?: 'chat.bsky.convo.sendMessageBatch#batchItem'\n  convoId: string\n  message: ChatBskyConvoDefs.MessageInput\n}\n\nconst hashBatchItem = 'batchItem'\n\nexport function isBatchItem<V>(v: V) {\n  return is$typed(v, id, hashBatchItem)\n}\n\nexport function validateBatchItem<V>(v: V) {\n  return validate<BatchItem & V>(v, id, hashBatchItem)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.unmuteConvo'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n}\n\nexport interface OutputSchema {\n  convo: ChatBskyConvoDefs.ConvoView\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.updateAllRead'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  status?: 'request' | 'accepted' | (string & {})\n}\n\nexport interface OutputSchema {\n  /** The count of updated convos. */\n  updatedCount: number\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.convo.updateRead'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n  messageId?: string\n}\n\nexport interface OutputSchema {\n  convo: ChatBskyConvoDefs.ConvoView\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.moderation.getActorMetadata'\n\nexport interface QueryParams {\n  actor: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  day: Metadata\n  month: Metadata\n  all: Metadata\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Metadata {\n  $type?: 'chat.bsky.moderation.getActorMetadata#metadata'\n  messagesSent: number\n  messagesReceived: number\n  convos: number\n  convosStarted: number\n}\n\nconst hashMetadata = 'metadata'\n\nexport function isMetadata<V>(v: V) {\n  return is$typed(v, id, hashMetadata)\n}\n\nexport function validateMetadata<V>(v: V) {\n  return validate<Metadata & V>(v, id, hashMetadata)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ChatBskyConvoDefs from '../convo/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.moderation.getMessageContext'\n\nexport interface QueryParams {\n  /** Conversation that the message is from. NOTE: this field will eventually be required. */\n  convoId?: string\n  messageId: string\n  before?: number\n  after?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  messages: (\n    | $Typed<ChatBskyConvoDefs.MessageView>\n    | $Typed<ChatBskyConvoDefs.DeletedMessageView>\n    | { $type: string }\n  )[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'chat.bsky.moderation.updateActorAccess'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n  allowAccess: boolean\n  ref?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.communication.defs'\n\nexport interface TemplateView {\n  $type?: 'tools.ozone.communication.defs#templateView'\n  id: string\n  /** Name of the template. */\n  name: string\n  /** Content of the template, can contain markdown and variable placeholders. */\n  subject?: string\n  /** Subject of the message, used in emails. */\n  contentMarkdown: string\n  disabled: boolean\n  /** Message language. */\n  lang?: string\n  /** DID of the user who last updated the template. */\n  lastUpdatedBy: string\n  createdAt: string\n  updatedAt: string\n}\n\nconst hashTemplateView = 'templateView'\n\nexport function isTemplateView<V>(v: V) {\n  return is$typed(v, id, hashTemplateView)\n}\n\nexport function validateTemplateView<V>(v: V) {\n  return validate<TemplateView & V>(v, id, hashTemplateView)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.communication.deleteTemplate'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  id: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneCommunicationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.communication.listTemplates'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  communicationTemplates: ToolsOzoneCommunicationDefs.TemplateView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoAdminDefs from '../../../com/atproto/admin/defs.js'\nimport type * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef.js'\nimport type * as ChatBskyConvoDefs from '../../../chat/bsky/convo/defs.js'\nimport type * as ComAtprotoModerationDefs from '../../../com/atproto/moderation/defs.js'\nimport type * as ComAtprotoServerDefs from '../../../com/atproto/server/defs.js'\nimport type * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.defs'\n\nexport interface ModEventView {\n  $type?: 'tools.ozone.moderation.defs#modEventView'\n  id: number\n  event:\n    | $Typed<ModEventTakedown>\n    | $Typed<ModEventReverseTakedown>\n    | $Typed<ModEventComment>\n    | $Typed<ModEventReport>\n    | $Typed<ModEventLabel>\n    | $Typed<ModEventAcknowledge>\n    | $Typed<ModEventEscalate>\n    | $Typed<ModEventMute>\n    | $Typed<ModEventUnmute>\n    | $Typed<ModEventMuteReporter>\n    | $Typed<ModEventUnmuteReporter>\n    | $Typed<ModEventEmail>\n    | $Typed<ModEventResolveAppeal>\n    | $Typed<ModEventDivert>\n    | $Typed<ModEventTag>\n    | $Typed<AccountEvent>\n    | $Typed<IdentityEvent>\n    | $Typed<RecordEvent>\n    | $Typed<ModEventPriorityScore>\n    | { $type: string }\n  subject:\n    | $Typed<ComAtprotoAdminDefs.RepoRef>\n    | $Typed<ComAtprotoRepoStrongRef.Main>\n    | $Typed<ChatBskyConvoDefs.MessageRef>\n    | { $type: string }\n  subjectBlobCids: string[]\n  createdBy: string\n  createdAt: string\n  creatorHandle?: string\n  subjectHandle?: string\n}\n\nconst hashModEventView = 'modEventView'\n\nexport function isModEventView<V>(v: V) {\n  return is$typed(v, id, hashModEventView)\n}\n\nexport function validateModEventView<V>(v: V) {\n  return validate<ModEventView & V>(v, id, hashModEventView)\n}\n\nexport interface ModEventViewDetail {\n  $type?: 'tools.ozone.moderation.defs#modEventViewDetail'\n  id: number\n  event:\n    | $Typed<ModEventTakedown>\n    | $Typed<ModEventReverseTakedown>\n    | $Typed<ModEventComment>\n    | $Typed<ModEventReport>\n    | $Typed<ModEventLabel>\n    | $Typed<ModEventAcknowledge>\n    | $Typed<ModEventEscalate>\n    | $Typed<ModEventMute>\n    | $Typed<ModEventUnmute>\n    | $Typed<ModEventMuteReporter>\n    | $Typed<ModEventUnmuteReporter>\n    | $Typed<ModEventEmail>\n    | $Typed<ModEventResolveAppeal>\n    | $Typed<ModEventDivert>\n    | $Typed<ModEventTag>\n    | $Typed<AccountEvent>\n    | $Typed<IdentityEvent>\n    | $Typed<RecordEvent>\n    | $Typed<ModEventPriorityScore>\n    | { $type: string }\n  subject:\n    | $Typed<RepoView>\n    | $Typed<RepoViewNotFound>\n    | $Typed<RecordView>\n    | $Typed<RecordViewNotFound>\n    | { $type: string }\n  subjectBlobs: BlobView[]\n  createdBy: string\n  createdAt: string\n}\n\nconst hashModEventViewDetail = 'modEventViewDetail'\n\nexport function isModEventViewDetail<V>(v: V) {\n  return is$typed(v, id, hashModEventViewDetail)\n}\n\nexport function validateModEventViewDetail<V>(v: V) {\n  return validate<ModEventViewDetail & V>(v, id, hashModEventViewDetail)\n}\n\nexport interface SubjectStatusView {\n  $type?: 'tools.ozone.moderation.defs#subjectStatusView'\n  id: number\n  subject:\n    | $Typed<ComAtprotoAdminDefs.RepoRef>\n    | $Typed<ComAtprotoRepoStrongRef.Main>\n    | { $type: string }\n  hosting?: $Typed<AccountHosting> | $Typed<RecordHosting> | { $type: string }\n  subjectBlobCids?: string[]\n  subjectRepoHandle?: string\n  /** Timestamp referencing when the last update was made to the moderation status of the subject */\n  updatedAt: string\n  /** Timestamp referencing the first moderation status impacting event was emitted on the subject */\n  createdAt: string\n  reviewState: SubjectReviewState\n  /** Sticky comment on the subject. */\n  comment?: string\n  /** Numeric value representing the level of priority. Higher score means higher priority. */\n  priorityScore?: number\n  muteUntil?: string\n  muteReportingUntil?: string\n  lastReviewedBy?: string\n  lastReviewedAt?: string\n  lastReportedAt?: string\n  /** Timestamp referencing when the author of the subject appealed a moderation action */\n  lastAppealedAt?: string\n  takendown?: boolean\n  /** True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators. */\n  appealed?: boolean\n  suspendUntil?: string\n  tags?: string[]\n  accountStats?: AccountStats\n  recordsStats?: RecordsStats\n}\n\nconst hashSubjectStatusView = 'subjectStatusView'\n\nexport function isSubjectStatusView<V>(v: V) {\n  return is$typed(v, id, hashSubjectStatusView)\n}\n\nexport function validateSubjectStatusView<V>(v: V) {\n  return validate<SubjectStatusView & V>(v, id, hashSubjectStatusView)\n}\n\n/** Statistics about a particular account subject */\nexport interface AccountStats {\n  $type?: 'tools.ozone.moderation.defs#accountStats'\n  /** Total number of reports on the account */\n  reportCount?: number\n  /** Total number of appeals against a moderation action on the account */\n  appealCount?: number\n  /** Number of times the account was suspended */\n  suspendCount?: number\n  /** Number of times the account was escalated */\n  escalateCount?: number\n  /** Number of times the account was taken down */\n  takedownCount?: number\n}\n\nconst hashAccountStats = 'accountStats'\n\nexport function isAccountStats<V>(v: V) {\n  return is$typed(v, id, hashAccountStats)\n}\n\nexport function validateAccountStats<V>(v: V) {\n  return validate<AccountStats & V>(v, id, hashAccountStats)\n}\n\n/** Statistics about a set of record subject items */\nexport interface RecordsStats {\n  $type?: 'tools.ozone.moderation.defs#recordsStats'\n  /** Cumulative sum of the number of reports on the items in the set */\n  totalReports?: number\n  /** Number of items that were reported at least once */\n  reportedCount?: number\n  /** Number of items that were escalated at least once */\n  escalatedCount?: number\n  /** Number of items that were appealed at least once */\n  appealedCount?: number\n  /** Total number of item in the set */\n  subjectCount?: number\n  /** Number of item currently in \"reviewOpen\" or \"reviewEscalated\" state */\n  pendingCount?: number\n  /** Number of item currently in \"reviewNone\" or \"reviewClosed\" state */\n  processedCount?: number\n  /** Number of item currently taken down */\n  takendownCount?: number\n}\n\nconst hashRecordsStats = 'recordsStats'\n\nexport function isRecordsStats<V>(v: V) {\n  return is$typed(v, id, hashRecordsStats)\n}\n\nexport function validateRecordsStats<V>(v: V) {\n  return validate<RecordsStats & V>(v, id, hashRecordsStats)\n}\n\nexport type SubjectReviewState =\n  | 'lex:tools.ozone.moderation.defs#reviewOpen'\n  | 'lex:tools.ozone.moderation.defs#reviewEscalated'\n  | 'lex:tools.ozone.moderation.defs#reviewClosed'\n  | 'lex:tools.ozone.moderation.defs#reviewNone'\n  | (string & {})\n\n/** Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator */\nexport const REVIEWOPEN = `${id}#reviewOpen`\n/** Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator */\nexport const REVIEWESCALATED = `${id}#reviewEscalated`\n/** Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator */\nexport const REVIEWCLOSED = `${id}#reviewClosed`\n/** Moderator review status of a subject: Unnecessary. Indicates that the subject does not need a review at the moment but there is probably some moderation related metadata available for it */\nexport const REVIEWNONE = `${id}#reviewNone`\n\n/** Take down a subject permanently or temporarily */\nexport interface ModEventTakedown {\n  $type?: 'tools.ozone.moderation.defs#modEventTakedown'\n  comment?: string\n  /** Indicates how long the takedown should be in effect before automatically expiring. */\n  durationInHours?: number\n  /** If true, all other reports on content authored by this account will be resolved (acknowledged). */\n  acknowledgeAccountSubjects?: boolean\n  /** Names/Keywords of the policies that drove the decision. */\n  policies?: string[]\n}\n\nconst hashModEventTakedown = 'modEventTakedown'\n\nexport function isModEventTakedown<V>(v: V) {\n  return is$typed(v, id, hashModEventTakedown)\n}\n\nexport function validateModEventTakedown<V>(v: V) {\n  return validate<ModEventTakedown & V>(v, id, hashModEventTakedown)\n}\n\n/** Revert take down action on a subject */\nexport interface ModEventReverseTakedown {\n  $type?: 'tools.ozone.moderation.defs#modEventReverseTakedown'\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n}\n\nconst hashModEventReverseTakedown = 'modEventReverseTakedown'\n\nexport function isModEventReverseTakedown<V>(v: V) {\n  return is$typed(v, id, hashModEventReverseTakedown)\n}\n\nexport function validateModEventReverseTakedown<V>(v: V) {\n  return validate<ModEventReverseTakedown & V>(\n    v,\n    id,\n    hashModEventReverseTakedown,\n  )\n}\n\n/** Resolve appeal on a subject */\nexport interface ModEventResolveAppeal {\n  $type?: 'tools.ozone.moderation.defs#modEventResolveAppeal'\n  /** Describe resolution. */\n  comment?: string\n}\n\nconst hashModEventResolveAppeal = 'modEventResolveAppeal'\n\nexport function isModEventResolveAppeal<V>(v: V) {\n  return is$typed(v, id, hashModEventResolveAppeal)\n}\n\nexport function validateModEventResolveAppeal<V>(v: V) {\n  return validate<ModEventResolveAppeal & V>(v, id, hashModEventResolveAppeal)\n}\n\n/** Add a comment to a subject. An empty comment will clear any previously set sticky comment. */\nexport interface ModEventComment {\n  $type?: 'tools.ozone.moderation.defs#modEventComment'\n  comment?: string\n  /** Make the comment persistent on the subject */\n  sticky?: boolean\n}\n\nconst hashModEventComment = 'modEventComment'\n\nexport function isModEventComment<V>(v: V) {\n  return is$typed(v, id, hashModEventComment)\n}\n\nexport function validateModEventComment<V>(v: V) {\n  return validate<ModEventComment & V>(v, id, hashModEventComment)\n}\n\n/** Report a subject */\nexport interface ModEventReport {\n  $type?: 'tools.ozone.moderation.defs#modEventReport'\n  comment?: string\n  /** Set to true if the reporter was muted from reporting at the time of the event. These reports won't impact the reviewState of the subject. */\n  isReporterMuted?: boolean\n  reportType: ComAtprotoModerationDefs.ReasonType\n}\n\nconst hashModEventReport = 'modEventReport'\n\nexport function isModEventReport<V>(v: V) {\n  return is$typed(v, id, hashModEventReport)\n}\n\nexport function validateModEventReport<V>(v: V) {\n  return validate<ModEventReport & V>(v, id, hashModEventReport)\n}\n\n/** Apply/Negate labels on a subject */\nexport interface ModEventLabel {\n  $type?: 'tools.ozone.moderation.defs#modEventLabel'\n  comment?: string\n  createLabelVals: string[]\n  negateLabelVals: string[]\n  /** Indicates how long the label will remain on the subject. Only applies on labels that are being added. */\n  durationInHours?: number\n}\n\nconst hashModEventLabel = 'modEventLabel'\n\nexport function isModEventLabel<V>(v: V) {\n  return is$typed(v, id, hashModEventLabel)\n}\n\nexport function validateModEventLabel<V>(v: V) {\n  return validate<ModEventLabel & V>(v, id, hashModEventLabel)\n}\n\n/** Set priority score of the subject. Higher score means higher priority. */\nexport interface ModEventPriorityScore {\n  $type?: 'tools.ozone.moderation.defs#modEventPriorityScore'\n  comment?: string\n  score: number\n}\n\nconst hashModEventPriorityScore = 'modEventPriorityScore'\n\nexport function isModEventPriorityScore<V>(v: V) {\n  return is$typed(v, id, hashModEventPriorityScore)\n}\n\nexport function validateModEventPriorityScore<V>(v: V) {\n  return validate<ModEventPriorityScore & V>(v, id, hashModEventPriorityScore)\n}\n\nexport interface ModEventAcknowledge {\n  $type?: 'tools.ozone.moderation.defs#modEventAcknowledge'\n  comment?: string\n  /** If true, all other reports on content authored by this account will be resolved (acknowledged). */\n  acknowledgeAccountSubjects?: boolean\n}\n\nconst hashModEventAcknowledge = 'modEventAcknowledge'\n\nexport function isModEventAcknowledge<V>(v: V) {\n  return is$typed(v, id, hashModEventAcknowledge)\n}\n\nexport function validateModEventAcknowledge<V>(v: V) {\n  return validate<ModEventAcknowledge & V>(v, id, hashModEventAcknowledge)\n}\n\nexport interface ModEventEscalate {\n  $type?: 'tools.ozone.moderation.defs#modEventEscalate'\n  comment?: string\n}\n\nconst hashModEventEscalate = 'modEventEscalate'\n\nexport function isModEventEscalate<V>(v: V) {\n  return is$typed(v, id, hashModEventEscalate)\n}\n\nexport function validateModEventEscalate<V>(v: V) {\n  return validate<ModEventEscalate & V>(v, id, hashModEventEscalate)\n}\n\n/** Mute incoming reports on a subject */\nexport interface ModEventMute {\n  $type?: 'tools.ozone.moderation.defs#modEventMute'\n  comment?: string\n  /** Indicates how long the subject should remain muted. */\n  durationInHours: number\n}\n\nconst hashModEventMute = 'modEventMute'\n\nexport function isModEventMute<V>(v: V) {\n  return is$typed(v, id, hashModEventMute)\n}\n\nexport function validateModEventMute<V>(v: V) {\n  return validate<ModEventMute & V>(v, id, hashModEventMute)\n}\n\n/** Unmute action on a subject */\nexport interface ModEventUnmute {\n  $type?: 'tools.ozone.moderation.defs#modEventUnmute'\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n}\n\nconst hashModEventUnmute = 'modEventUnmute'\n\nexport function isModEventUnmute<V>(v: V) {\n  return is$typed(v, id, hashModEventUnmute)\n}\n\nexport function validateModEventUnmute<V>(v: V) {\n  return validate<ModEventUnmute & V>(v, id, hashModEventUnmute)\n}\n\n/** Mute incoming reports from an account */\nexport interface ModEventMuteReporter {\n  $type?: 'tools.ozone.moderation.defs#modEventMuteReporter'\n  comment?: string\n  /** Indicates how long the account should remain muted. Falsy value here means a permanent mute. */\n  durationInHours?: number\n}\n\nconst hashModEventMuteReporter = 'modEventMuteReporter'\n\nexport function isModEventMuteReporter<V>(v: V) {\n  return is$typed(v, id, hashModEventMuteReporter)\n}\n\nexport function validateModEventMuteReporter<V>(v: V) {\n  return validate<ModEventMuteReporter & V>(v, id, hashModEventMuteReporter)\n}\n\n/** Unmute incoming reports from an account */\nexport interface ModEventUnmuteReporter {\n  $type?: 'tools.ozone.moderation.defs#modEventUnmuteReporter'\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n}\n\nconst hashModEventUnmuteReporter = 'modEventUnmuteReporter'\n\nexport function isModEventUnmuteReporter<V>(v: V) {\n  return is$typed(v, id, hashModEventUnmuteReporter)\n}\n\nexport function validateModEventUnmuteReporter<V>(v: V) {\n  return validate<ModEventUnmuteReporter & V>(v, id, hashModEventUnmuteReporter)\n}\n\n/** Keep a log of outgoing email to a user */\nexport interface ModEventEmail {\n  $type?: 'tools.ozone.moderation.defs#modEventEmail'\n  /** The subject line of the email sent to the user. */\n  subjectLine: string\n  /** The content of the email sent to the user. */\n  content?: string\n  /** Additional comment about the outgoing comm. */\n  comment?: string\n}\n\nconst hashModEventEmail = 'modEventEmail'\n\nexport function isModEventEmail<V>(v: V) {\n  return is$typed(v, id, hashModEventEmail)\n}\n\nexport function validateModEventEmail<V>(v: V) {\n  return validate<ModEventEmail & V>(v, id, hashModEventEmail)\n}\n\n/** Divert a record's blobs to a 3rd party service for further scanning/tagging */\nexport interface ModEventDivert {\n  $type?: 'tools.ozone.moderation.defs#modEventDivert'\n  comment?: string\n}\n\nconst hashModEventDivert = 'modEventDivert'\n\nexport function isModEventDivert<V>(v: V) {\n  return is$typed(v, id, hashModEventDivert)\n}\n\nexport function validateModEventDivert<V>(v: V) {\n  return validate<ModEventDivert & V>(v, id, hashModEventDivert)\n}\n\n/** Add/Remove a tag on a subject */\nexport interface ModEventTag {\n  $type?: 'tools.ozone.moderation.defs#modEventTag'\n  /** Tags to be added to the subject. If already exists, won't be duplicated. */\n  add: string[]\n  /** Tags to be removed to the subject. Ignores a tag If it doesn't exist, won't be duplicated. */\n  remove: string[]\n  /** Additional comment about added/removed tags. */\n  comment?: string\n}\n\nconst hashModEventTag = 'modEventTag'\n\nexport function isModEventTag<V>(v: V) {\n  return is$typed(v, id, hashModEventTag)\n}\n\nexport function validateModEventTag<V>(v: V) {\n  return validate<ModEventTag & V>(v, id, hashModEventTag)\n}\n\n/** Logs account status related events on a repo subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking. */\nexport interface AccountEvent {\n  $type?: 'tools.ozone.moderation.defs#accountEvent'\n  comment?: string\n  /** Indicates that the account has a repository which can be fetched from the host that emitted this event. */\n  active: boolean\n  status?:\n    | 'unknown'\n    | 'deactivated'\n    | 'deleted'\n    | 'takendown'\n    | 'suspended'\n    | 'tombstoned'\n    | (string & {})\n  timestamp: string\n}\n\nconst hashAccountEvent = 'accountEvent'\n\nexport function isAccountEvent<V>(v: V) {\n  return is$typed(v, id, hashAccountEvent)\n}\n\nexport function validateAccountEvent<V>(v: V) {\n  return validate<AccountEvent & V>(v, id, hashAccountEvent)\n}\n\n/** Logs identity related events on a repo subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking. */\nexport interface IdentityEvent {\n  $type?: 'tools.ozone.moderation.defs#identityEvent'\n  comment?: string\n  handle?: string\n  pdsHost?: string\n  tombstone?: boolean\n  timestamp: string\n}\n\nconst hashIdentityEvent = 'identityEvent'\n\nexport function isIdentityEvent<V>(v: V) {\n  return is$typed(v, id, hashIdentityEvent)\n}\n\nexport function validateIdentityEvent<V>(v: V) {\n  return validate<IdentityEvent & V>(v, id, hashIdentityEvent)\n}\n\n/** Logs lifecycle event on a record subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking. */\nexport interface RecordEvent {\n  $type?: 'tools.ozone.moderation.defs#recordEvent'\n  comment?: string\n  op: 'create' | 'update' | 'delete' | (string & {})\n  cid?: string\n  timestamp: string\n}\n\nconst hashRecordEvent = 'recordEvent'\n\nexport function isRecordEvent<V>(v: V) {\n  return is$typed(v, id, hashRecordEvent)\n}\n\nexport function validateRecordEvent<V>(v: V) {\n  return validate<RecordEvent & V>(v, id, hashRecordEvent)\n}\n\nexport interface RepoView {\n  $type?: 'tools.ozone.moderation.defs#repoView'\n  did: string\n  handle: string\n  email?: string\n  relatedRecords: { [_ in string]: unknown }[]\n  indexedAt: string\n  moderation: Moderation\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invitesDisabled?: boolean\n  inviteNote?: string\n  deactivatedAt?: string\n  threatSignatures?: ComAtprotoAdminDefs.ThreatSignature[]\n}\n\nconst hashRepoView = 'repoView'\n\nexport function isRepoView<V>(v: V) {\n  return is$typed(v, id, hashRepoView)\n}\n\nexport function validateRepoView<V>(v: V) {\n  return validate<RepoView & V>(v, id, hashRepoView)\n}\n\nexport interface RepoViewDetail {\n  $type?: 'tools.ozone.moderation.defs#repoViewDetail'\n  did: string\n  handle: string\n  email?: string\n  relatedRecords: { [_ in string]: unknown }[]\n  indexedAt: string\n  moderation: ModerationDetail\n  labels?: ComAtprotoLabelDefs.Label[]\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invites?: ComAtprotoServerDefs.InviteCode[]\n  invitesDisabled?: boolean\n  inviteNote?: string\n  emailConfirmedAt?: string\n  deactivatedAt?: string\n  threatSignatures?: ComAtprotoAdminDefs.ThreatSignature[]\n}\n\nconst hashRepoViewDetail = 'repoViewDetail'\n\nexport function isRepoViewDetail<V>(v: V) {\n  return is$typed(v, id, hashRepoViewDetail)\n}\n\nexport function validateRepoViewDetail<V>(v: V) {\n  return validate<RepoViewDetail & V>(v, id, hashRepoViewDetail)\n}\n\nexport interface RepoViewNotFound {\n  $type?: 'tools.ozone.moderation.defs#repoViewNotFound'\n  did: string\n}\n\nconst hashRepoViewNotFound = 'repoViewNotFound'\n\nexport function isRepoViewNotFound<V>(v: V) {\n  return is$typed(v, id, hashRepoViewNotFound)\n}\n\nexport function validateRepoViewNotFound<V>(v: V) {\n  return validate<RepoViewNotFound & V>(v, id, hashRepoViewNotFound)\n}\n\nexport interface RecordView {\n  $type?: 'tools.ozone.moderation.defs#recordView'\n  uri: string\n  cid: string\n  value: { [_ in string]: unknown }\n  blobCids: string[]\n  indexedAt: string\n  moderation: Moderation\n  repo: RepoView\n}\n\nconst hashRecordView = 'recordView'\n\nexport function isRecordView<V>(v: V) {\n  return is$typed(v, id, hashRecordView)\n}\n\nexport function validateRecordView<V>(v: V) {\n  return validate<RecordView & V>(v, id, hashRecordView)\n}\n\nexport interface RecordViewDetail {\n  $type?: 'tools.ozone.moderation.defs#recordViewDetail'\n  uri: string\n  cid: string\n  value: { [_ in string]: unknown }\n  blobs: BlobView[]\n  labels?: ComAtprotoLabelDefs.Label[]\n  indexedAt: string\n  moderation: ModerationDetail\n  repo: RepoView\n}\n\nconst hashRecordViewDetail = 'recordViewDetail'\n\nexport function isRecordViewDetail<V>(v: V) {\n  return is$typed(v, id, hashRecordViewDetail)\n}\n\nexport function validateRecordViewDetail<V>(v: V) {\n  return validate<RecordViewDetail & V>(v, id, hashRecordViewDetail)\n}\n\nexport interface RecordViewNotFound {\n  $type?: 'tools.ozone.moderation.defs#recordViewNotFound'\n  uri: string\n}\n\nconst hashRecordViewNotFound = 'recordViewNotFound'\n\nexport function isRecordViewNotFound<V>(v: V) {\n  return is$typed(v, id, hashRecordViewNotFound)\n}\n\nexport function validateRecordViewNotFound<V>(v: V) {\n  return validate<RecordViewNotFound & V>(v, id, hashRecordViewNotFound)\n}\n\nexport interface Moderation {\n  $type?: 'tools.ozone.moderation.defs#moderation'\n  subjectStatus?: SubjectStatusView\n}\n\nconst hashModeration = 'moderation'\n\nexport function isModeration<V>(v: V) {\n  return is$typed(v, id, hashModeration)\n}\n\nexport function validateModeration<V>(v: V) {\n  return validate<Moderation & V>(v, id, hashModeration)\n}\n\nexport interface ModerationDetail {\n  $type?: 'tools.ozone.moderation.defs#moderationDetail'\n  subjectStatus?: SubjectStatusView\n}\n\nconst hashModerationDetail = 'moderationDetail'\n\nexport function isModerationDetail<V>(v: V) {\n  return is$typed(v, id, hashModerationDetail)\n}\n\nexport function validateModerationDetail<V>(v: V) {\n  return validate<ModerationDetail & V>(v, id, hashModerationDetail)\n}\n\nexport interface BlobView {\n  $type?: 'tools.ozone.moderation.defs#blobView'\n  cid: string\n  mimeType: string\n  size: number\n  createdAt: string\n  details?: $Typed<ImageDetails> | $Typed<VideoDetails> | { $type: string }\n  moderation?: Moderation\n}\n\nconst hashBlobView = 'blobView'\n\nexport function isBlobView<V>(v: V) {\n  return is$typed(v, id, hashBlobView)\n}\n\nexport function validateBlobView<V>(v: V) {\n  return validate<BlobView & V>(v, id, hashBlobView)\n}\n\nexport interface ImageDetails {\n  $type?: 'tools.ozone.moderation.defs#imageDetails'\n  width: number\n  height: number\n}\n\nconst hashImageDetails = 'imageDetails'\n\nexport function isImageDetails<V>(v: V) {\n  return is$typed(v, id, hashImageDetails)\n}\n\nexport function validateImageDetails<V>(v: V) {\n  return validate<ImageDetails & V>(v, id, hashImageDetails)\n}\n\nexport interface VideoDetails {\n  $type?: 'tools.ozone.moderation.defs#videoDetails'\n  width: number\n  height: number\n  length: number\n}\n\nconst hashVideoDetails = 'videoDetails'\n\nexport function isVideoDetails<V>(v: V) {\n  return is$typed(v, id, hashVideoDetails)\n}\n\nexport function validateVideoDetails<V>(v: V) {\n  return validate<VideoDetails & V>(v, id, hashVideoDetails)\n}\n\nexport interface AccountHosting {\n  $type?: 'tools.ozone.moderation.defs#accountHosting'\n  status:\n    | 'takendown'\n    | 'suspended'\n    | 'deleted'\n    | 'deactivated'\n    | 'unknown'\n    | (string & {})\n  updatedAt?: string\n  createdAt?: string\n  deletedAt?: string\n  deactivatedAt?: string\n  reactivatedAt?: string\n}\n\nconst hashAccountHosting = 'accountHosting'\n\nexport function isAccountHosting<V>(v: V) {\n  return is$typed(v, id, hashAccountHosting)\n}\n\nexport function validateAccountHosting<V>(v: V) {\n  return validate<AccountHosting & V>(v, id, hashAccountHosting)\n}\n\nexport interface RecordHosting {\n  $type?: 'tools.ozone.moderation.defs#recordHosting'\n  status: 'deleted' | 'unknown' | (string & {})\n  updatedAt?: string\n  createdAt?: string\n  deletedAt?: string\n}\n\nconst hashRecordHosting = 'recordHosting'\n\nexport function isRecordHosting<V>(v: V) {\n  return is$typed(v, id, hashRecordHosting)\n}\n\nexport function validateRecordHosting<V>(v: V) {\n  return validate<RecordHosting & V>(v, id, hashRecordHosting)\n}\n\nexport interface ReporterStats {\n  $type?: 'tools.ozone.moderation.defs#reporterStats'\n  did: string\n  /** The total number of reports made by the user on accounts. */\n  accountReportCount: number\n  /** The total number of reports made by the user on records. */\n  recordReportCount: number\n  /** The total number of accounts reported by the user. */\n  reportedAccountCount: number\n  /** The total number of records reported by the user. */\n  reportedRecordCount: number\n  /** The total number of accounts taken down as a result of the user's reports. */\n  takendownAccountCount: number\n  /** The total number of records taken down as a result of the user's reports. */\n  takendownRecordCount: number\n  /** The total number of accounts labeled as a result of the user's reports. */\n  labeledAccountCount: number\n  /** The total number of records labeled as a result of the user's reports. */\n  labeledRecordCount: number\n}\n\nconst hashReporterStats = 'reporterStats'\n\nexport function isReporterStats<V>(v: V) {\n  return is$typed(v, id, hashReporterStats)\n}\n\nexport function validateReporterStats<V>(v: V) {\n  return validate<ReporterStats & V>(v, id, hashReporterStats)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneModerationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.getEvent'\n\nexport interface QueryParams {\n  id: number\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ToolsOzoneModerationDefs.ModEventViewDetail\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneModerationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.getRecords'\n\nexport interface QueryParams {\n  uris: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  records: (\n    | $Typed<ToolsOzoneModerationDefs.RecordViewDetail>\n    | $Typed<ToolsOzoneModerationDefs.RecordViewNotFound>\n    | { $type: string }\n  )[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneModerationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.getReporterStats'\n\nexport interface QueryParams {\n  dids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  stats: ToolsOzoneModerationDefs.ReporterStats[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneModerationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.getRepos'\n\nexport interface QueryParams {\n  dids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  repos: (\n    | $Typed<ToolsOzoneModerationDefs.RepoViewDetail>\n    | $Typed<ToolsOzoneModerationDefs.RepoViewNotFound>\n    | { $type: string }\n  )[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneModerationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.queryEvents'\n\nexport interface QueryParams {\n  /** The types of events (fully qualified string in the format of tools.ozone.moderation.defs#modEvent<name>) to filter by. If not specified, all events are returned. */\n  types?: string[]\n  createdBy?: string\n  /** Sort direction for the events. Defaults to descending order of created at timestamp. */\n  sortDirection?: 'asc' | 'desc'\n  /** Retrieve events created after a given timestamp */\n  createdAfter?: string\n  /** Retrieve events created before a given timestamp */\n  createdBefore?: string\n  subject?: string\n  /** If specified, only events where the subject belongs to the given collections will be returned. When subjectType is set to 'account', this will be ignored. */\n  collections?: string[]\n  /** If specified, only events where the subject is of the given type (account or record) will be returned. When this is set to 'account' the 'collections' parameter will be ignored. When includeAllUserRecords or subject is set, this will be ignored. */\n  subjectType?: 'account' | 'record' | (string & {})\n  /** If true, events on all record types (posts, lists, profile etc.) or records from given 'collections' param, owned by the did are returned. */\n  includeAllUserRecords?: boolean\n  limit?: number\n  /** If true, only events with comments are returned */\n  hasComment?: boolean\n  /** If specified, only events with comments containing the keyword are returned. Apply || separator to use multiple keywords and match using OR condition. */\n  comment?: string\n  /** If specified, only events where all of these labels were added are returned */\n  addedLabels?: string[]\n  /** If specified, only events where all of these labels were removed are returned */\n  removedLabels?: string[]\n  /** If specified, only events where all of these tags were added are returned */\n  addedTags?: string[]\n  /** If specified, only events where all of these tags were removed are returned */\n  removedTags?: string[]\n  reportTypes?: string[]\n  policies?: string[]\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  events: ToolsOzoneModerationDefs.ModEventView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneModerationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.queryStatuses'\n\nexport interface QueryParams {\n  /** Number of queues being used by moderators. Subjects will be split among all queues. */\n  queueCount?: number\n  /** Index of the queue to fetch subjects from. Works only when queueCount value is specified. */\n  queueIndex?: number\n  /** A seeder to shuffle/balance the queue items. */\n  queueSeed?: string\n  /** All subjects, or subjects from given 'collections' param, belonging to the account specified in the 'subject' param will be returned. */\n  includeAllUserRecords?: boolean\n  /** The subject to get the status for. */\n  subject?: string\n  /** Search subjects by keyword from comments */\n  comment?: string\n  /** Search subjects reported after a given timestamp */\n  reportedAfter?: string\n  /** Search subjects reported before a given timestamp */\n  reportedBefore?: string\n  /** Search subjects reviewed after a given timestamp */\n  reviewedAfter?: string\n  /** Search subjects where the associated record/account was deleted after a given timestamp */\n  hostingDeletedAfter?: string\n  /** Search subjects where the associated record/account was deleted before a given timestamp */\n  hostingDeletedBefore?: string\n  /** Search subjects where the associated record/account was updated after a given timestamp */\n  hostingUpdatedAfter?: string\n  /** Search subjects where the associated record/account was updated before a given timestamp */\n  hostingUpdatedBefore?: string\n  /** Search subjects by the status of the associated record/account */\n  hostingStatuses?: string[]\n  /** Search subjects reviewed before a given timestamp */\n  reviewedBefore?: string\n  /** By default, we don't include muted subjects in the results. Set this to true to include them. */\n  includeMuted?: boolean\n  /** When set to true, only muted subjects and reporters will be returned. */\n  onlyMuted?: boolean\n  /** Specify when fetching subjects in a certain state */\n  reviewState?: string\n  ignoreSubjects?: string[]\n  /** Get all subject statuses that were reviewed by a specific moderator */\n  lastReviewedBy?: string\n  sortField?:\n    | 'lastReviewedAt'\n    | 'lastReportedAt'\n    | 'reportedRecordsCount'\n    | 'takendownRecordsCount'\n    | 'priorityScore'\n  sortDirection?: 'asc' | 'desc'\n  /** Get subjects that were taken down */\n  takendown?: boolean\n  /** Get subjects in unresolved appealed status */\n  appealed?: boolean\n  limit?: number\n  tags?: string[]\n  excludeTags?: string[]\n  cursor?: string\n  /** If specified, subjects belonging to the given collections will be returned. When subjectType is set to 'account', this will be ignored. */\n  collections?: string[]\n  /** If specified, subjects of the given type (account or record) will be returned. When this is set to 'account' the 'collections' parameter will be ignored. When includeAllUserRecords or subject is set, this will be ignored. */\n  subjectType?: 'account' | 'record' | (string & {})\n  /** If specified, only subjects that belong to an account that has at least this many suspensions will be returned. */\n  minAccountSuspendCount?: number\n  /** If specified, only subjects that belong to an account that has at least this many reported records will be returned. */\n  minReportedRecordsCount?: number\n  /** If specified, only subjects that belong to an account that has at least this many taken down records will be returned. */\n  minTakendownRecordsCount?: number\n  /** If specified, only subjects that have priority score value above the given value will be returned. */\n  minPriorityScore?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  subjectStatuses: ToolsOzoneModerationDefs.SubjectStatusView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneModerationDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.moderation.searchRepos'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead */\n  term?: string\n  q?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: ToolsOzoneModerationDefs.RepoView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.server.getConfig'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  appview?: ServiceConfig\n  pds?: ServiceConfig\n  blobDivert?: ServiceConfig\n  chat?: ServiceConfig\n  viewer?: ViewerConfig\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface ServiceConfig {\n  $type?: 'tools.ozone.server.getConfig#serviceConfig'\n  url?: string\n}\n\nconst hashServiceConfig = 'serviceConfig'\n\nexport function isServiceConfig<V>(v: V) {\n  return is$typed(v, id, hashServiceConfig)\n}\n\nexport function validateServiceConfig<V>(v: V) {\n  return validate<ServiceConfig & V>(v, id, hashServiceConfig)\n}\n\nexport interface ViewerConfig {\n  $type?: 'tools.ozone.server.getConfig#viewerConfig'\n  role?:\n    | 'tools.ozone.team.defs#roleAdmin'\n    | 'tools.ozone.team.defs#roleModerator'\n    | 'tools.ozone.team.defs#roleTriage'\n    | (string & {})\n}\n\nconst hashViewerConfig = 'viewerConfig'\n\nexport function isViewerConfig<V>(v: V) {\n  return is$typed(v, id, hashViewerConfig)\n}\n\nexport function validateViewerConfig<V>(v: V) {\n  return validate<ViewerConfig & V>(v, id, hashViewerConfig)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.set.addValues'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Name of the set to add values to */\n  name: string\n  /** Array of string values to add to the set */\n  values: string[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.set.defs'\n\nexport interface Set {\n  $type?: 'tools.ozone.set.defs#set'\n  name: string\n  description?: string\n}\n\nconst hashSet = 'set'\n\nexport function isSet<V>(v: V) {\n  return is$typed(v, id, hashSet)\n}\n\nexport function validateSet<V>(v: V) {\n  return validate<Set & V>(v, id, hashSet)\n}\n\nexport interface SetView {\n  $type?: 'tools.ozone.set.defs#setView'\n  name: string\n  description?: string\n  setSize: number\n  createdAt: string\n  updatedAt: string\n}\n\nconst hashSetView = 'setView'\n\nexport function isSetView<V>(v: V) {\n  return is$typed(v, id, hashSetView)\n}\n\nexport function validateSetView<V>(v: V) {\n  return validate<SetView & V>(v, id, hashSetView)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneSetDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.set.querySets'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  namePrefix?: string\n  sortBy?: 'name' | 'createdAt' | 'updatedAt'\n  /** Defaults to ascending order of name field. */\n  sortDirection?: 'asc' | 'desc'\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  sets: ToolsOzoneSetDefs.SetView[]\n  cursor?: string\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneSetDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.set.upsertSet'\n\nexport interface QueryParams {}\n\nexport type InputSchema = ToolsOzoneSetDefs.Set\nexport type OutputSchema = ToolsOzoneSetDefs.SetView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.setting.defs'\n\nexport interface Option {\n  $type?: 'tools.ozone.setting.defs#option'\n  key: string\n  did: string\n  value: { [_ in string]: unknown }\n  description?: string\n  createdAt?: string\n  updatedAt?: string\n  managerRole?:\n    | 'tools.ozone.team.defs#roleModerator'\n    | 'tools.ozone.team.defs#roleTriage'\n    | 'tools.ozone.team.defs#roleAdmin'\n    | (string & {})\n  scope: 'instance' | 'personal' | (string & {})\n  createdBy: string\n  lastUpdatedBy: string\n}\n\nconst hashOption = 'option'\n\nexport function isOption<V>(v: V) {\n  return is$typed(v, id, hashOption)\n}\n\nexport function validateOption<V>(v: V) {\n  return validate<Option & V>(v, id, hashOption)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneSettingDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.setting.listOptions'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  scope?: 'instance' | 'personal' | (string & {})\n  /** Filter keys by prefix */\n  prefix?: string\n  /** Filter for only the specified keys. Ignored if prefix is provided */\n  keys?: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  options: ToolsOzoneSettingDefs.Option[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.setting.removeOptions'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  keys: string[]\n  scope: 'instance' | 'personal' | (string & {})\n}\n\nexport interface OutputSchema {}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneSettingDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.setting.upsertOption'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  key: string\n  scope: 'instance' | 'personal' | (string & {})\n  value: { [_ in string]: unknown }\n  description?: string\n  managerRole?:\n    | 'tools.ozone.team.defs#roleModerator'\n    | 'tools.ozone.team.defs#roleTriage'\n    | 'tools.ozone.team.defs#roleAdmin'\n    | (string & {})\n}\n\nexport interface OutputSchema {\n  option: ToolsOzoneSettingDefs.Option\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.signature.defs'\n\nexport interface SigDetail {\n  $type?: 'tools.ozone.signature.defs#sigDetail'\n  property: string\n  value: string\n}\n\nconst hashSigDetail = 'sigDetail'\n\nexport function isSigDetail<V>(v: V) {\n  return is$typed(v, id, hashSigDetail)\n}\n\nexport function validateSigDetail<V>(v: V) {\n  return validate<SigDetail & V>(v, id, hashSigDetail)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneSignatureDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.signature.findCorrelation'\n\nexport interface QueryParams {\n  dids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  details: ToolsOzoneSignatureDefs.SigDetail[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoAdminDefs from '../../../com/atproto/admin/defs.js'\nimport type * as ToolsOzoneSignatureDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.signature.findRelatedAccounts'\n\nexport interface QueryParams {\n  did: string\n  cursor?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  accounts: RelatedAccount[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface RelatedAccount {\n  $type?: 'tools.ozone.signature.findRelatedAccounts#relatedAccount'\n  account: ComAtprotoAdminDefs.AccountView\n  similarities?: ToolsOzoneSignatureDefs.SigDetail[]\n}\n\nconst hashRelatedAccount = 'relatedAccount'\n\nexport function isRelatedAccount<V>(v: V) {\n  return is$typed(v, id, hashRelatedAccount)\n}\n\nexport function validateRelatedAccount<V>(v: V) {\n  return validate<RelatedAccount & V>(v, id, hashRelatedAccount)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ComAtprotoAdminDefs from '../../../com/atproto/admin/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.signature.searchAccounts'\n\nexport interface QueryParams {\n  values: string[]\n  cursor?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  accounts: ComAtprotoAdminDefs.AccountView[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as AppBskyActorDefs from '../../../app/bsky/actor/defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.team.defs'\n\nexport interface Member {\n  $type?: 'tools.ozone.team.defs#member'\n  did: string\n  disabled?: boolean\n  profile?: AppBskyActorDefs.ProfileViewDetailed\n  createdAt?: string\n  updatedAt?: string\n  lastUpdatedBy?: string\n  role:\n    | 'lex:tools.ozone.team.defs#roleAdmin'\n    | 'lex:tools.ozone.team.defs#roleModerator'\n    | 'lex:tools.ozone.team.defs#roleTriage'\n    | (string & {})\n}\n\nconst hashMember = 'member'\n\nexport function isMember<V>(v: V) {\n  return is$typed(v, id, hashMember)\n}\n\nexport function validateMember<V>(v: V) {\n  return validate<Member & V>(v, id, hashMember)\n}\n\n/** Admin role. Highest level of access, can perform all actions. */\nexport const ROLEADMIN = `${id}#roleAdmin`\n/** Moderator role. Can perform most actions. */\nexport const ROLEMODERATOR = `${id}#roleModerator`\n/** Triage role. Mostly intended for monitoring and escalating issues. */\nexport const ROLETRIAGE = `${id}#roleTriage`\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { CID } from 'multiformats/cid'\nimport { validate as _validate } from '../../../../lexicons'\nimport { $Typed, is$typed as _is$typed, OmitKey } from '../../../../util'\nimport type * as ToolsOzoneTeamDefs from './defs.js'\n\nconst is$typed = _is$typed,\n  validate = _validate\nconst id = 'tools.ozone.team.listMembers'\n\nexport interface QueryParams {\n  disabled?: boolean\n  roles?: string[]\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  members: ToolsOzoneTeamDefs.Member[]\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { XrpcClient, FetchHandler, FetchHandlerOptions } from '@atproto/xrpc'\nimport { schemas } from './lexicons.js'\nimport { CID } from 'multiformats/cid'\nimport { OmitKey, Un$Typed } from './util.js'\nimport * as ComAtprotoAdminDefs from './types/com/atproto/admin/defs.js'\nimport * as ComAtprotoAdminDeleteAccount from './types/com/atproto/admin/deleteAccount.js'\nimport * as ComAtprotoAdminDisableAccountInvites from './types/com/atproto/admin/disableAccountInvites.js'\nimport * as ComAtprotoAdminDisableInviteCodes from './types/com/atproto/admin/disableInviteCodes.js'\nimport * as ComAtprotoAdminEnableAccountInvites from './types/com/atproto/admin/enableAccountInvites.js'\nimport * as ComAtprotoAdminGetAccountInfo from './types/com/atproto/admin/getAccountInfo.js'\nimport * as ComAtprotoAdminGetAccountInfos from './types/com/atproto/admin/getAccountInfos.js'\nimport * as ComAtprotoAdminGetInviteCodes from './types/com/atproto/admin/getInviteCodes.js'\nimport * as ComAtprotoAdminGetSubjectStatus from './types/com/atproto/admin/getSubjectStatus.js'\nimport * as ComAtprotoAdminSearchAccounts from './types/com/atproto/admin/searchAccounts.js'\nimport * as ComAtprotoAdminSendEmail from './types/com/atproto/admin/sendEmail.js'\nimport * as ComAtprotoAdminUpdateAccountEmail from './types/com/atproto/admin/updateAccountEmail.js'\nimport * as ComAtprotoAdminUpdateAccountHandle from './types/com/atproto/admin/updateAccountHandle.js'\nimport * as ComAtprotoAdminUpdateAccountPassword from './types/com/atproto/admin/updateAccountPassword.js'\nimport * as ComAtprotoAdminUpdateSubjectStatus from './types/com/atproto/admin/updateSubjectStatus.js'\nimport * as ComAtprotoIdentityGetRecommendedDidCredentials from './types/com/atproto/identity/getRecommendedDidCredentials.js'\nimport * as ComAtprotoIdentityRequestPlcOperationSignature from './types/com/atproto/identity/requestPlcOperationSignature.js'\nimport * as ComAtprotoIdentityResolveHandle from './types/com/atproto/identity/resolveHandle.js'\nimport * as ComAtprotoIdentitySignPlcOperation from './types/com/atproto/identity/signPlcOperation.js'\nimport * as ComAtprotoIdentitySubmitPlcOperation from './types/com/atproto/identity/submitPlcOperation.js'\nimport * as ComAtprotoIdentityUpdateHandle from './types/com/atproto/identity/updateHandle.js'\nimport * as ComAtprotoLabelDefs from './types/com/atproto/label/defs.js'\nimport * as ComAtprotoLabelQueryLabels from './types/com/atproto/label/queryLabels.js'\nimport * as ComAtprotoLabelSubscribeLabels from './types/com/atproto/label/subscribeLabels.js'\nimport * as ComAtprotoLexiconSchema from './types/com/atproto/lexicon/schema.js'\nimport * as ComAtprotoModerationCreateReport from './types/com/atproto/moderation/createReport.js'\nimport * as ComAtprotoModerationDefs from './types/com/atproto/moderation/defs.js'\nimport * as ComAtprotoRepoApplyWrites from './types/com/atproto/repo/applyWrites.js'\nimport * as ComAtprotoRepoCreateRecord from './types/com/atproto/repo/createRecord.js'\nimport * as ComAtprotoRepoDefs from './types/com/atproto/repo/defs.js'\nimport * as ComAtprotoRepoDeleteRecord from './types/com/atproto/repo/deleteRecord.js'\nimport * as ComAtprotoRepoDescribeRepo from './types/com/atproto/repo/describeRepo.js'\nimport * as ComAtprotoRepoGetRecord from './types/com/atproto/repo/getRecord.js'\nimport * as ComAtprotoRepoImportRepo from './types/com/atproto/repo/importRepo.js'\nimport * as ComAtprotoRepoListMissingBlobs from './types/com/atproto/repo/listMissingBlobs.js'\nimport * as ComAtprotoRepoListRecords from './types/com/atproto/repo/listRecords.js'\nimport * as ComAtprotoRepoPutRecord from './types/com/atproto/repo/putRecord.js'\nimport * as ComAtprotoRepoStrongRef from './types/com/atproto/repo/strongRef.js'\nimport * as ComAtprotoRepoUploadBlob from './types/com/atproto/repo/uploadBlob.js'\nimport * as ComAtprotoServerActivateAccount from './types/com/atproto/server/activateAccount.js'\nimport * as ComAtprotoServerCheckAccountStatus from './types/com/atproto/server/checkAccountStatus.js'\nimport * as ComAtprotoServerConfirmEmail from './types/com/atproto/server/confirmEmail.js'\nimport * as ComAtprotoServerCreateAccount from './types/com/atproto/server/createAccount.js'\nimport * as ComAtprotoServerCreateAppPassword from './types/com/atproto/server/createAppPassword.js'\nimport * as ComAtprotoServerCreateInviteCode from './types/com/atproto/server/createInviteCode.js'\nimport * as ComAtprotoServerCreateInviteCodes from './types/com/atproto/server/createInviteCodes.js'\nimport * as ComAtprotoServerCreateSession from './types/com/atproto/server/createSession.js'\nimport * as ComAtprotoServerDeactivateAccount from './types/com/atproto/server/deactivateAccount.js'\nimport * as ComAtprotoServerDefs from './types/com/atproto/server/defs.js'\nimport * as ComAtprotoServerDeleteAccount from './types/com/atproto/server/deleteAccount.js'\nimport * as ComAtprotoServerDeleteSession from './types/com/atproto/server/deleteSession.js'\nimport * as ComAtprotoServerDescribeServer from './types/com/atproto/server/describeServer.js'\nimport * as ComAtprotoServerGetAccountInviteCodes from './types/com/atproto/server/getAccountInviteCodes.js'\nimport * as ComAtprotoServerGetServiceAuth from './types/com/atproto/server/getServiceAuth.js'\nimport * as ComAtprotoServerGetSession from './types/com/atproto/server/getSession.js'\nimport * as ComAtprotoServerListAppPasswords from './types/com/atproto/server/listAppPasswords.js'\nimport * as ComAtprotoServerRefreshSession from './types/com/atproto/server/refreshSession.js'\nimport * as ComAtprotoServerRequestAccountDelete from './types/com/atproto/server/requestAccountDelete.js'\nimport * as ComAtprotoServerRequestEmailConfirmation from './types/com/atproto/server/requestEmailConfirmation.js'\nimport * as ComAtprotoServerRequestEmailUpdate from './types/com/atproto/server/requestEmailUpdate.js'\nimport * as ComAtprotoServerRequestPasswordReset from './types/com/atproto/server/requestPasswordReset.js'\nimport * as ComAtprotoServerReserveSigningKey from './types/com/atproto/server/reserveSigningKey.js'\nimport * as ComAtprotoServerResetPassword from './types/com/atproto/server/resetPassword.js'\nimport * as ComAtprotoServerRevokeAppPassword from './types/com/atproto/server/revokeAppPassword.js'\nimport * as ComAtprotoServerUpdateEmail from './types/com/atproto/server/updateEmail.js'\nimport * as ComAtprotoSyncGetBlob from './types/com/atproto/sync/getBlob.js'\nimport * as ComAtprotoSyncGetBlocks from './types/com/atproto/sync/getBlocks.js'\nimport * as ComAtprotoSyncGetCheckout from './types/com/atproto/sync/getCheckout.js'\nimport * as ComAtprotoSyncGetHead from './types/com/atproto/sync/getHead.js'\nimport * as ComAtprotoSyncGetLatestCommit from './types/com/atproto/sync/getLatestCommit.js'\nimport * as ComAtprotoSyncGetRecord from './types/com/atproto/sync/getRecord.js'\nimport * as ComAtprotoSyncGetRepo from './types/com/atproto/sync/getRepo.js'\nimport * as ComAtprotoSyncGetRepoStatus from './types/com/atproto/sync/getRepoStatus.js'\nimport * as ComAtprotoSyncListBlobs from './types/com/atproto/sync/listBlobs.js'\nimport * as ComAtprotoSyncListRepos from './types/com/atproto/sync/listRepos.js'\nimport * as ComAtprotoSyncListReposByCollection from './types/com/atproto/sync/listReposByCollection.js'\nimport * as ComAtprotoSyncNotifyOfUpdate from './types/com/atproto/sync/notifyOfUpdate.js'\nimport * as ComAtprotoSyncRequestCrawl from './types/com/atproto/sync/requestCrawl.js'\nimport * as ComAtprotoSyncSubscribeRepos from './types/com/atproto/sync/subscribeRepos.js'\nimport * as ComAtprotoTempAddReservedHandle from './types/com/atproto/temp/addReservedHandle.js'\nimport * as ComAtprotoTempCheckSignupQueue from './types/com/atproto/temp/checkSignupQueue.js'\nimport * as ComAtprotoTempFetchLabels from './types/com/atproto/temp/fetchLabels.js'\nimport * as ComAtprotoTempRequestPhoneVerification from './types/com/atproto/temp/requestPhoneVerification.js'\nimport * as AppBskyActorDefs from './types/app/bsky/actor/defs.js'\nimport * as AppBskyActorGetPreferences from './types/app/bsky/actor/getPreferences.js'\nimport * as AppBskyActorGetProfile from './types/app/bsky/actor/getProfile.js'\nimport * as AppBskyActorGetProfiles from './types/app/bsky/actor/getProfiles.js'\nimport * as AppBskyActorGetSuggestions from './types/app/bsky/actor/getSuggestions.js'\nimport * as AppBskyActorProfile from './types/app/bsky/actor/profile.js'\nimport * as AppBskyActorPutPreferences from './types/app/bsky/actor/putPreferences.js'\nimport * as AppBskyActorSearchActors from './types/app/bsky/actor/searchActors.js'\nimport * as AppBskyActorSearchActorsTypeahead from './types/app/bsky/actor/searchActorsTypeahead.js'\nimport * as AppBskyEmbedDefs from './types/app/bsky/embed/defs.js'\nimport * as AppBskyEmbedExternal from './types/app/bsky/embed/external.js'\nimport * as AppBskyEmbedImages from './types/app/bsky/embed/images.js'\nimport * as AppBskyEmbedRecord from './types/app/bsky/embed/record.js'\nimport * as AppBskyEmbedRecordWithMedia from './types/app/bsky/embed/recordWithMedia.js'\nimport * as AppBskyEmbedVideo from './types/app/bsky/embed/video.js'\nimport * as AppBskyFeedDefs from './types/app/bsky/feed/defs.js'\nimport * as AppBskyFeedDescribeFeedGenerator from './types/app/bsky/feed/describeFeedGenerator.js'\nimport * as AppBskyFeedGenerator from './types/app/bsky/feed/generator.js'\nimport * as AppBskyFeedGetActorFeeds from './types/app/bsky/feed/getActorFeeds.js'\nimport * as AppBskyFeedGetActorLikes from './types/app/bsky/feed/getActorLikes.js'\nimport * as AppBskyFeedGetAuthorFeed from './types/app/bsky/feed/getAuthorFeed.js'\nimport * as AppBskyFeedGetFeed from './types/app/bsky/feed/getFeed.js'\nimport * as AppBskyFeedGetFeedGenerator from './types/app/bsky/feed/getFeedGenerator.js'\nimport * as AppBskyFeedGetFeedGenerators from './types/app/bsky/feed/getFeedGenerators.js'\nimport * as AppBskyFeedGetFeedSkeleton from './types/app/bsky/feed/getFeedSkeleton.js'\nimport * as AppBskyFeedGetLikes from './types/app/bsky/feed/getLikes.js'\nimport * as AppBskyFeedGetListFeed from './types/app/bsky/feed/getListFeed.js'\nimport * as AppBskyFeedGetPostThread from './types/app/bsky/feed/getPostThread.js'\nimport * as AppBskyFeedGetPosts from './types/app/bsky/feed/getPosts.js'\nimport * as AppBskyFeedGetQuotes from './types/app/bsky/feed/getQuotes.js'\nimport * as AppBskyFeedGetRepostedBy from './types/app/bsky/feed/getRepostedBy.js'\nimport * as AppBskyFeedGetSuggestedFeeds from './types/app/bsky/feed/getSuggestedFeeds.js'\nimport * as AppBskyFeedGetTimeline from './types/app/bsky/feed/getTimeline.js'\nimport * as AppBskyFeedLike from './types/app/bsky/feed/like.js'\nimport * as AppBskyFeedPost from './types/app/bsky/feed/post.js'\nimport * as AppBskyFeedPostgate from './types/app/bsky/feed/postgate.js'\nimport * as AppBskyFeedRepost from './types/app/bsky/feed/repost.js'\nimport * as AppBskyFeedSearchPosts from './types/app/bsky/feed/searchPosts.js'\nimport * as AppBskyFeedSendInteractions from './types/app/bsky/feed/sendInteractions.js'\nimport * as AppBskyFeedThreadgate from './types/app/bsky/feed/threadgate.js'\nimport * as AppBskyGraphBlock from './types/app/bsky/graph/block.js'\nimport * as AppBskyGraphDefs from './types/app/bsky/graph/defs.js'\nimport * as AppBskyGraphFollow from './types/app/bsky/graph/follow.js'\nimport * as AppBskyGraphGetActorStarterPacks from './types/app/bsky/graph/getActorStarterPacks.js'\nimport * as AppBskyGraphGetBlocks from './types/app/bsky/graph/getBlocks.js'\nimport * as AppBskyGraphGetFollowers from './types/app/bsky/graph/getFollowers.js'\nimport * as AppBskyGraphGetFollows from './types/app/bsky/graph/getFollows.js'\nimport * as AppBskyGraphGetKnownFollowers from './types/app/bsky/graph/getKnownFollowers.js'\nimport * as AppBskyGraphGetList from './types/app/bsky/graph/getList.js'\nimport * as AppBskyGraphGetListBlocks from './types/app/bsky/graph/getListBlocks.js'\nimport * as AppBskyGraphGetListMutes from './types/app/bsky/graph/getListMutes.js'\nimport * as AppBskyGraphGetLists from './types/app/bsky/graph/getLists.js'\nimport * as AppBskyGraphGetMutes from './types/app/bsky/graph/getMutes.js'\nimport * as AppBskyGraphGetRelationships from './types/app/bsky/graph/getRelationships.js'\nimport * as AppBskyGraphGetStarterPack from './types/app/bsky/graph/getStarterPack.js'\nimport * as AppBskyGraphGetStarterPacks from './types/app/bsky/graph/getStarterPacks.js'\nimport * as AppBskyGraphGetSuggestedFollowsByActor from './types/app/bsky/graph/getSuggestedFollowsByActor.js'\nimport * as AppBskyGraphList from './types/app/bsky/graph/list.js'\nimport * as AppBskyGraphListblock from './types/app/bsky/graph/listblock.js'\nimport * as AppBskyGraphListitem from './types/app/bsky/graph/listitem.js'\nimport * as AppBskyGraphMuteActor from './types/app/bsky/graph/muteActor.js'\nimport * as AppBskyGraphMuteActorList from './types/app/bsky/graph/muteActorList.js'\nimport * as AppBskyGraphMuteThread from './types/app/bsky/graph/muteThread.js'\nimport * as AppBskyGraphSearchStarterPacks from './types/app/bsky/graph/searchStarterPacks.js'\nimport * as AppBskyGraphStarterpack from './types/app/bsky/graph/starterpack.js'\nimport * as AppBskyGraphUnmuteActor from './types/app/bsky/graph/unmuteActor.js'\nimport * as AppBskyGraphUnmuteActorList from './types/app/bsky/graph/unmuteActorList.js'\nimport * as AppBskyGraphUnmuteThread from './types/app/bsky/graph/unmuteThread.js'\nimport * as AppBskyLabelerDefs from './types/app/bsky/labeler/defs.js'\nimport * as AppBskyLabelerGetServices from './types/app/bsky/labeler/getServices.js'\nimport * as AppBskyLabelerService from './types/app/bsky/labeler/service.js'\nimport * as AppBskyNotificationGetUnreadCount from './types/app/bsky/notification/getUnreadCount.js'\nimport * as AppBskyNotificationListNotifications from './types/app/bsky/notification/listNotifications.js'\nimport * as AppBskyNotificationPutPreferences from './types/app/bsky/notification/putPreferences.js'\nimport * as AppBskyNotificationRegisterPush from './types/app/bsky/notification/registerPush.js'\nimport * as AppBskyNotificationUpdateSeen from './types/app/bsky/notification/updateSeen.js'\nimport * as AppBskyRichtextFacet from './types/app/bsky/richtext/facet.js'\nimport * as AppBskyUnspeccedDefs from './types/app/bsky/unspecced/defs.js'\nimport * as AppBskyUnspeccedGetConfig from './types/app/bsky/unspecced/getConfig.js'\nimport * as AppBskyUnspeccedGetPopularFeedGenerators from './types/app/bsky/unspecced/getPopularFeedGenerators.js'\nimport * as AppBskyUnspeccedGetSuggestionsSkeleton from './types/app/bsky/unspecced/getSuggestionsSkeleton.js'\nimport * as AppBskyUnspeccedGetTaggedSuggestions from './types/app/bsky/unspecced/getTaggedSuggestions.js'\nimport * as AppBskyUnspeccedGetTrendingTopics from './types/app/bsky/unspecced/getTrendingTopics.js'\nimport * as AppBskyUnspeccedSearchActorsSkeleton from './types/app/bsky/unspecced/searchActorsSkeleton.js'\nimport * as AppBskyUnspeccedSearchPostsSkeleton from './types/app/bsky/unspecced/searchPostsSkeleton.js'\nimport * as AppBskyUnspeccedSearchStarterPacksSkeleton from './types/app/bsky/unspecced/searchStarterPacksSkeleton.js'\nimport * as AppBskyVideoDefs from './types/app/bsky/video/defs.js'\nimport * as AppBskyVideoGetJobStatus from './types/app/bsky/video/getJobStatus.js'\nimport * as AppBskyVideoGetUploadLimits from './types/app/bsky/video/getUploadLimits.js'\nimport * as AppBskyVideoUploadVideo from './types/app/bsky/video/uploadVideo.js'\nimport * as ChatBskyActorDeclaration from './types/chat/bsky/actor/declaration.js'\nimport * as ChatBskyActorDefs from './types/chat/bsky/actor/defs.js'\nimport * as ChatBskyActorDeleteAccount from './types/chat/bsky/actor/deleteAccount.js'\nimport * as ChatBskyActorExportAccountData from './types/chat/bsky/actor/exportAccountData.js'\nimport * as ChatBskyConvoAcceptConvo from './types/chat/bsky/convo/acceptConvo.js'\nimport * as ChatBskyConvoDefs from './types/chat/bsky/convo/defs.js'\nimport * as ChatBskyConvoDeleteMessageForSelf from './types/chat/bsky/convo/deleteMessageForSelf.js'\nimport * as ChatBskyConvoGetConvo from './types/chat/bsky/convo/getConvo.js'\nimport * as ChatBskyConvoGetConvoAvailability from './types/chat/bsky/convo/getConvoAvailability.js'\nimport * as ChatBskyConvoGetConvoForMembers from './types/chat/bsky/convo/getConvoForMembers.js'\nimport * as ChatBskyConvoGetLog from './types/chat/bsky/convo/getLog.js'\nimport * as ChatBskyConvoGetMessages from './types/chat/bsky/convo/getMessages.js'\nimport * as ChatBskyConvoLeaveConvo from './types/chat/bsky/convo/leaveConvo.js'\nimport * as ChatBskyConvoListConvos from './types/chat/bsky/convo/listConvos.js'\nimport * as ChatBskyConvoMuteConvo from './types/chat/bsky/convo/muteConvo.js'\nimport * as ChatBskyConvoSendMessage from './types/chat/bsky/convo/sendMessage.js'\nimport * as ChatBskyConvoSendMessageBatch from './types/chat/bsky/convo/sendMessageBatch.js'\nimport * as ChatBskyConvoUnmuteConvo from './types/chat/bsky/convo/unmuteConvo.js'\nimport * as ChatBskyConvoUpdateAllRead from './types/chat/bsky/convo/updateAllRead.js'\nimport * as ChatBskyConvoUpdateRead from './types/chat/bsky/convo/updateRead.js'\nimport * as ChatBskyModerationGetActorMetadata from './types/chat/bsky/moderation/getActorMetadata.js'\nimport * as ChatBskyModerationGetMessageContext from './types/chat/bsky/moderation/getMessageContext.js'\nimport * as ChatBskyModerationUpdateActorAccess from './types/chat/bsky/moderation/updateActorAccess.js'\nimport * as ToolsOzoneCommunicationCreateTemplate from './types/tools/ozone/communication/createTemplate.js'\nimport * as ToolsOzoneCommunicationDefs from './types/tools/ozone/communication/defs.js'\nimport * as ToolsOzoneCommunicationDeleteTemplate from './types/tools/ozone/communication/deleteTemplate.js'\nimport * as ToolsOzoneCommunicationListTemplates from './types/tools/ozone/communication/listTemplates.js'\nimport * as ToolsOzoneCommunicationUpdateTemplate from './types/tools/ozone/communication/updateTemplate.js'\nimport * as ToolsOzoneModerationDefs from './types/tools/ozone/moderation/defs.js'\nimport * as ToolsOzoneModerationEmitEvent from './types/tools/ozone/moderation/emitEvent.js'\nimport * as ToolsOzoneModerationGetEvent from './types/tools/ozone/moderation/getEvent.js'\nimport * as ToolsOzoneModerationGetRecord from './types/tools/ozone/moderation/getRecord.js'\nimport * as ToolsOzoneModerationGetRecords from './types/tools/ozone/moderation/getRecords.js'\nimport * as ToolsOzoneModerationGetRepo from './types/tools/ozone/moderation/getRepo.js'\nimport * as ToolsOzoneModerationGetReporterStats from './types/tools/ozone/moderation/getReporterStats.js'\nimport * as ToolsOzoneModerationGetRepos from './types/tools/ozone/moderation/getRepos.js'\nimport * as ToolsOzoneModerationQueryEvents from './types/tools/ozone/moderation/queryEvents.js'\nimport * as ToolsOzoneModerationQueryStatuses from './types/tools/ozone/moderation/queryStatuses.js'\nimport * as ToolsOzoneModerationSearchRepos from './types/tools/ozone/moderation/searchRepos.js'\nimport * as ToolsOzoneServerGetConfig from './types/tools/ozone/server/getConfig.js'\nimport * as ToolsOzoneSetAddValues from './types/tools/ozone/set/addValues.js'\nimport * as ToolsOzoneSetDefs from './types/tools/ozone/set/defs.js'\nimport * as ToolsOzoneSetDeleteSet from './types/tools/ozone/set/deleteSet.js'\nimport * as ToolsOzoneSetDeleteValues from './types/tools/ozone/set/deleteValues.js'\nimport * as ToolsOzoneSetGetValues from './types/tools/ozone/set/getValues.js'\nimport * as ToolsOzoneSetQuerySets from './types/tools/ozone/set/querySets.js'\nimport * as ToolsOzoneSetUpsertSet from './types/tools/ozone/set/upsertSet.js'\nimport * as ToolsOzoneSettingDefs from './types/tools/ozone/setting/defs.js'\nimport * as ToolsOzoneSettingListOptions from './types/tools/ozone/setting/listOptions.js'\nimport * as ToolsOzoneSettingRemoveOptions from './types/tools/ozone/setting/removeOptions.js'\nimport * as ToolsOzoneSettingUpsertOption from './types/tools/ozone/setting/upsertOption.js'\nimport * as ToolsOzoneSignatureDefs from './types/tools/ozone/signature/defs.js'\nimport * as ToolsOzoneSignatureFindCorrelation from './types/tools/ozone/signature/findCorrelation.js'\nimport * as ToolsOzoneSignatureFindRelatedAccounts from './types/tools/ozone/signature/findRelatedAccounts.js'\nimport * as ToolsOzoneSignatureSearchAccounts from './types/tools/ozone/signature/searchAccounts.js'\nimport * as ToolsOzoneTeamAddMember from './types/tools/ozone/team/addMember.js'\nimport * as ToolsOzoneTeamDefs from './types/tools/ozone/team/defs.js'\nimport * as ToolsOzoneTeamDeleteMember from './types/tools/ozone/team/deleteMember.js'\nimport * as ToolsOzoneTeamListMembers from './types/tools/ozone/team/listMembers.js'\nimport * as ToolsOzoneTeamUpdateMember from './types/tools/ozone/team/updateMember.js'\n\nexport * as ComAtprotoAdminDefs from './types/com/atproto/admin/defs.js'\nexport * as ComAtprotoAdminDeleteAccount from './types/com/atproto/admin/deleteAccount.js'\nexport * as ComAtprotoAdminDisableAccountInvites from './types/com/atproto/admin/disableAccountInvites.js'\nexport * as ComAtprotoAdminDisableInviteCodes from './types/com/atproto/admin/disableInviteCodes.js'\nexport * as ComAtprotoAdminEnableAccountInvites from './types/com/atproto/admin/enableAccountInvites.js'\nexport * as ComAtprotoAdminGetAccountInfo from './types/com/atproto/admin/getAccountInfo.js'\nexport * as ComAtprotoAdminGetAccountInfos from './types/com/atproto/admin/getAccountInfos.js'\nexport * as ComAtprotoAdminGetInviteCodes from './types/com/atproto/admin/getInviteCodes.js'\nexport * as ComAtprotoAdminGetSubjectStatus from './types/com/atproto/admin/getSubjectStatus.js'\nexport * as ComAtprotoAdminSearchAccounts from './types/com/atproto/admin/searchAccounts.js'\nexport * as ComAtprotoAdminSendEmail from './types/com/atproto/admin/sendEmail.js'\nexport * as ComAtprotoAdminUpdateAccountEmail from './types/com/atproto/admin/updateAccountEmail.js'\nexport * as ComAtprotoAdminUpdateAccountHandle from './types/com/atproto/admin/updateAccountHandle.js'\nexport * as ComAtprotoAdminUpdateAccountPassword from './types/com/atproto/admin/updateAccountPassword.js'\nexport * as ComAtprotoAdminUpdateSubjectStatus from './types/com/atproto/admin/updateSubjectStatus.js'\nexport * as ComAtprotoIdentityGetRecommendedDidCredentials from './types/com/atproto/identity/getRecommendedDidCredentials.js'\nexport * as ComAtprotoIdentityRequestPlcOperationSignature from './types/com/atproto/identity/requestPlcOperationSignature.js'\nexport * as ComAtprotoIdentityResolveHandle from './types/com/atproto/identity/resolveHandle.js'\nexport * as ComAtprotoIdentitySignPlcOperation from './types/com/atproto/identity/signPlcOperation.js'\nexport * as ComAtprotoIdentitySubmitPlcOperation from './types/com/atproto/identity/submitPlcOperation.js'\nexport * as ComAtprotoIdentityUpdateHandle from './types/com/atproto/identity/updateHandle.js'\nexport * as ComAtprotoLabelDefs from './types/com/atproto/label/defs.js'\nexport * as ComAtprotoLabelQueryLabels from './types/com/atproto/label/queryLabels.js'\nexport * as ComAtprotoLabelSubscribeLabels from './types/com/atproto/label/subscribeLabels.js'\nexport * as ComAtprotoLexiconSchema from './types/com/atproto/lexicon/schema.js'\nexport * as ComAtprotoModerationCreateReport from './types/com/atproto/moderation/createReport.js'\nexport * as ComAtprotoModerationDefs from './types/com/atproto/moderation/defs.js'\nexport * as ComAtprotoRepoApplyWrites from './types/com/atproto/repo/applyWrites.js'\nexport * as ComAtprotoRepoCreateRecord from './types/com/atproto/repo/createRecord.js'\nexport * as ComAtprotoRepoDefs from './types/com/atproto/repo/defs.js'\nexport * as ComAtprotoRepoDeleteRecord from './types/com/atproto/repo/deleteRecord.js'\nexport * as ComAtprotoRepoDescribeRepo from './types/com/atproto/repo/describeRepo.js'\nexport * as ComAtprotoRepoGetRecord from './types/com/atproto/repo/getRecord.js'\nexport * as ComAtprotoRepoImportRepo from './types/com/atproto/repo/importRepo.js'\nexport * as ComAtprotoRepoListMissingBlobs from './types/com/atproto/repo/listMissingBlobs.js'\nexport * as ComAtprotoRepoListRecords from './types/com/atproto/repo/listRecords.js'\nexport * as ComAtprotoRepoPutRecord from './types/com/atproto/repo/putRecord.js'\nexport * as ComAtprotoRepoStrongRef from './types/com/atproto/repo/strongRef.js'\nexport * as ComAtprotoRepoUploadBlob from './types/com/atproto/repo/uploadBlob.js'\nexport * as ComAtprotoServerActivateAccount from './types/com/atproto/server/activateAccount.js'\nexport * as ComAtprotoServerCheckAccountStatus from './types/com/atproto/server/checkAccountStatus.js'\nexport * as ComAtprotoServerConfirmEmail from './types/com/atproto/server/confirmEmail.js'\nexport * as ComAtprotoServerCreateAccount from './types/com/atproto/server/createAccount.js'\nexport * as ComAtprotoServerCreateAppPassword from './types/com/atproto/server/createAppPassword.js'\nexport * as ComAtprotoServerCreateInviteCode from './types/com/atproto/server/createInviteCode.js'\nexport * as ComAtprotoServerCreateInviteCodes from './types/com/atproto/server/createInviteCodes.js'\nexport * as ComAtprotoServerCreateSession from './types/com/atproto/server/createSession.js'\nexport * as ComAtprotoServerDeactivateAccount from './types/com/atproto/server/deactivateAccount.js'\nexport * as ComAtprotoServerDefs from './types/com/atproto/server/defs.js'\nexport * as ComAtprotoServerDeleteAccount from './types/com/atproto/server/deleteAccount.js'\nexport * as ComAtprotoServerDeleteSession from './types/com/atproto/server/deleteSession.js'\nexport * as ComAtprotoServerDescribeServer from './types/com/atproto/server/describeServer.js'\nexport * as ComAtprotoServerGetAccountInviteCodes from './types/com/atproto/server/getAccountInviteCodes.js'\nexport * as ComAtprotoServerGetServiceAuth from './types/com/atproto/server/getServiceAuth.js'\nexport * as ComAtprotoServerGetSession from './types/com/atproto/server/getSession.js'\nexport * as ComAtprotoServerListAppPasswords from './types/com/atproto/server/listAppPasswords.js'\nexport * as ComAtprotoServerRefreshSession from './types/com/atproto/server/refreshSession.js'\nexport * as ComAtprotoServerRequestAccountDelete from './types/com/atproto/server/requestAccountDelete.js'\nexport * as ComAtprotoServerRequestEmailConfirmation from './types/com/atproto/server/requestEmailConfirmation.js'\nexport * as ComAtprotoServerRequestEmailUpdate from './types/com/atproto/server/requestEmailUpdate.js'\nexport * as ComAtprotoServerRequestPasswordReset from './types/com/atproto/server/requestPasswordReset.js'\nexport * as ComAtprotoServerReserveSigningKey from './types/com/atproto/server/reserveSigningKey.js'\nexport * as ComAtprotoServerResetPassword from './types/com/atproto/server/resetPassword.js'\nexport * as ComAtprotoServerRevokeAppPassword from './types/com/atproto/server/revokeAppPassword.js'\nexport * as ComAtprotoServerUpdateEmail from './types/com/atproto/server/updateEmail.js'\nexport * as ComAtprotoSyncGetBlob from './types/com/atproto/sync/getBlob.js'\nexport * as ComAtprotoSyncGetBlocks from './types/com/atproto/sync/getBlocks.js'\nexport * as ComAtprotoSyncGetCheckout from './types/com/atproto/sync/getCheckout.js'\nexport * as ComAtprotoSyncGetHead from './types/com/atproto/sync/getHead.js'\nexport * as ComAtprotoSyncGetLatestCommit from './types/com/atproto/sync/getLatestCommit.js'\nexport * as ComAtprotoSyncGetRecord from './types/com/atproto/sync/getRecord.js'\nexport * as ComAtprotoSyncGetRepo from './types/com/atproto/sync/getRepo.js'\nexport * as ComAtprotoSyncGetRepoStatus from './types/com/atproto/sync/getRepoStatus.js'\nexport * as ComAtprotoSyncListBlobs from './types/com/atproto/sync/listBlobs.js'\nexport * as ComAtprotoSyncListRepos from './types/com/atproto/sync/listRepos.js'\nexport * as ComAtprotoSyncListReposByCollection from './types/com/atproto/sync/listReposByCollection.js'\nexport * as ComAtprotoSyncNotifyOfUpdate from './types/com/atproto/sync/notifyOfUpdate.js'\nexport * as ComAtprotoSyncRequestCrawl from './types/com/atproto/sync/requestCrawl.js'\nexport * as ComAtprotoSyncSubscribeRepos from './types/com/atproto/sync/subscribeRepos.js'\nexport * as ComAtprotoTempAddReservedHandle from './types/com/atproto/temp/addReservedHandle.js'\nexport * as ComAtprotoTempCheckSignupQueue from './types/com/atproto/temp/checkSignupQueue.js'\nexport * as ComAtprotoTempFetchLabels from './types/com/atproto/temp/fetchLabels.js'\nexport * as ComAtprotoTempRequestPhoneVerification from './types/com/atproto/temp/requestPhoneVerification.js'\nexport * as AppBskyActorDefs from './types/app/bsky/actor/defs.js'\nexport * as AppBskyActorGetPreferences from './types/app/bsky/actor/getPreferences.js'\nexport * as AppBskyActorGetProfile from './types/app/bsky/actor/getProfile.js'\nexport * as AppBskyActorGetProfiles from './types/app/bsky/actor/getProfiles.js'\nexport * as AppBskyActorGetSuggestions from './types/app/bsky/actor/getSuggestions.js'\nexport * as AppBskyActorProfile from './types/app/bsky/actor/profile.js'\nexport * as AppBskyActorPutPreferences from './types/app/bsky/actor/putPreferences.js'\nexport * as AppBskyActorSearchActors from './types/app/bsky/actor/searchActors.js'\nexport * as AppBskyActorSearchActorsTypeahead from './types/app/bsky/actor/searchActorsTypeahead.js'\nexport * as AppBskyEmbedDefs from './types/app/bsky/embed/defs.js'\nexport * as AppBskyEmbedExternal from './types/app/bsky/embed/external.js'\nexport * as AppBskyEmbedImages from './types/app/bsky/embed/images.js'\nexport * as AppBskyEmbedRecord from './types/app/bsky/embed/record.js'\nexport * as AppBskyEmbedRecordWithMedia from './types/app/bsky/embed/recordWithMedia.js'\nexport * as AppBskyEmbedVideo from './types/app/bsky/embed/video.js'\nexport * as AppBskyFeedDefs from './types/app/bsky/feed/defs.js'\nexport * as AppBskyFeedDescribeFeedGenerator from './types/app/bsky/feed/describeFeedGenerator.js'\nexport * as AppBskyFeedGenerator from './types/app/bsky/feed/generator.js'\nexport * as AppBskyFeedGetActorFeeds from './types/app/bsky/feed/getActorFeeds.js'\nexport * as AppBskyFeedGetActorLikes from './types/app/bsky/feed/getActorLikes.js'\nexport * as AppBskyFeedGetAuthorFeed from './types/app/bsky/feed/getAuthorFeed.js'\nexport * as AppBskyFeedGetFeed from './types/app/bsky/feed/getFeed.js'\nexport * as AppBskyFeedGetFeedGenerator from './types/app/bsky/feed/getFeedGenerator.js'\nexport * as AppBskyFeedGetFeedGenerators from './types/app/bsky/feed/getFeedGenerators.js'\nexport * as AppBskyFeedGetFeedSkeleton from './types/app/bsky/feed/getFeedSkeleton.js'\nexport * as AppBskyFeedGetLikes from './types/app/bsky/feed/getLikes.js'\nexport * as AppBskyFeedGetListFeed from './types/app/bsky/feed/getListFeed.js'\nexport * as AppBskyFeedGetPostThread from './types/app/bsky/feed/getPostThread.js'\nexport * as AppBskyFeedGetPosts from './types/app/bsky/feed/getPosts.js'\nexport * as AppBskyFeedGetQuotes from './types/app/bsky/feed/getQuotes.js'\nexport * as AppBskyFeedGetRepostedBy from './types/app/bsky/feed/getRepostedBy.js'\nexport * as AppBskyFeedGetSuggestedFeeds from './types/app/bsky/feed/getSuggestedFeeds.js'\nexport * as AppBskyFeedGetTimeline from './types/app/bsky/feed/getTimeline.js'\nexport * as AppBskyFeedLike from './types/app/bsky/feed/like.js'\nexport * as AppBskyFeedPost from './types/app/bsky/feed/post.js'\nexport * as AppBskyFeedPostgate from './types/app/bsky/feed/postgate.js'\nexport * as AppBskyFeedRepost from './types/app/bsky/feed/repost.js'\nexport * as AppBskyFeedSearchPosts from './types/app/bsky/feed/searchPosts.js'\nexport * as AppBskyFeedSendInteractions from './types/app/bsky/feed/sendInteractions.js'\nexport * as AppBskyFeedThreadgate from './types/app/bsky/feed/threadgate.js'\nexport * as AppBskyGraphBlock from './types/app/bsky/graph/block.js'\nexport * as AppBskyGraphDefs from './types/app/bsky/graph/defs.js'\nexport * as AppBskyGraphFollow from './types/app/bsky/graph/follow.js'\nexport * as AppBskyGraphGetActorStarterPacks from './types/app/bsky/graph/getActorStarterPacks.js'\nexport * as AppBskyGraphGetBlocks from './types/app/bsky/graph/getBlocks.js'\nexport * as AppBskyGraphGetFollowers from './types/app/bsky/graph/getFollowers.js'\nexport * as AppBskyGraphGetFollows from './types/app/bsky/graph/getFollows.js'\nexport * as AppBskyGraphGetKnownFollowers from './types/app/bsky/graph/getKnownFollowers.js'\nexport * as AppBskyGraphGetList from './types/app/bsky/graph/getList.js'\nexport * as AppBskyGraphGetListBlocks from './types/app/bsky/graph/getListBlocks.js'\nexport * as AppBskyGraphGetListMutes from './types/app/bsky/graph/getListMutes.js'\nexport * as AppBskyGraphGetLists from './types/app/bsky/graph/getLists.js'\nexport * as AppBskyGraphGetMutes from './types/app/bsky/graph/getMutes.js'\nexport * as AppBskyGraphGetRelationships from './types/app/bsky/graph/getRelationships.js'\nexport * as AppBskyGraphGetStarterPack from './types/app/bsky/graph/getStarterPack.js'\nexport * as AppBskyGraphGetStarterPacks from './types/app/bsky/graph/getStarterPacks.js'\nexport * as AppBskyGraphGetSuggestedFollowsByActor from './types/app/bsky/graph/getSuggestedFollowsByActor.js'\nexport * as AppBskyGraphList from './types/app/bsky/graph/list.js'\nexport * as AppBskyGraphListblock from './types/app/bsky/graph/listblock.js'\nexport * as AppBskyGraphListitem from './types/app/bsky/graph/listitem.js'\nexport * as AppBskyGraphMuteActor from './types/app/bsky/graph/muteActor.js'\nexport * as AppBskyGraphMuteActorList from './types/app/bsky/graph/muteActorList.js'\nexport * as AppBskyGraphMuteThread from './types/app/bsky/graph/muteThread.js'\nexport * as AppBskyGraphSearchStarterPacks from './types/app/bsky/graph/searchStarterPacks.js'\nexport * as AppBskyGraphStarterpack from './types/app/bsky/graph/starterpack.js'\nexport * as AppBskyGraphUnmuteActor from './types/app/bsky/graph/unmuteActor.js'\nexport * as AppBskyGraphUnmuteActorList from './types/app/bsky/graph/unmuteActorList.js'\nexport * as AppBskyGraphUnmuteThread from './types/app/bsky/graph/unmuteThread.js'\nexport * as AppBskyLabelerDefs from './types/app/bsky/labeler/defs.js'\nexport * as AppBskyLabelerGetServices from './types/app/bsky/labeler/getServices.js'\nexport * as AppBskyLabelerService from './types/app/bsky/labeler/service.js'\nexport * as AppBskyNotificationGetUnreadCount from './types/app/bsky/notification/getUnreadCount.js'\nexport * as AppBskyNotificationListNotifications from './types/app/bsky/notification/listNotifications.js'\nexport * as AppBskyNotificationPutPreferences from './types/app/bsky/notification/putPreferences.js'\nexport * as AppBskyNotificationRegisterPush from './types/app/bsky/notification/registerPush.js'\nexport * as AppBskyNotificationUpdateSeen from './types/app/bsky/notification/updateSeen.js'\nexport * as AppBskyRichtextFacet from './types/app/bsky/richtext/facet.js'\nexport * as AppBskyUnspeccedDefs from './types/app/bsky/unspecced/defs.js'\nexport * as AppBskyUnspeccedGetConfig from './types/app/bsky/unspecced/getConfig.js'\nexport * as AppBskyUnspeccedGetPopularFeedGenerators from './types/app/bsky/unspecced/getPopularFeedGenerators.js'\nexport * as AppBskyUnspeccedGetSuggestionsSkeleton from './types/app/bsky/unspecced/getSuggestionsSkeleton.js'\nexport * as AppBskyUnspeccedGetTaggedSuggestions from './types/app/bsky/unspecced/getTaggedSuggestions.js'\nexport * as AppBskyUnspeccedGetTrendingTopics from './types/app/bsky/unspecced/getTrendingTopics.js'\nexport * as AppBskyUnspeccedSearchActorsSkeleton from './types/app/bsky/unspecced/searchActorsSkeleton.js'\nexport * as AppBskyUnspeccedSearchPostsSkeleton from './types/app/bsky/unspecced/searchPostsSkeleton.js'\nexport * as AppBskyUnspeccedSearchStarterPacksSkeleton from './types/app/bsky/unspecced/searchStarterPacksSkeleton.js'\nexport * as AppBskyVideoDefs from './types/app/bsky/video/defs.js'\nexport * as AppBskyVideoGetJobStatus from './types/app/bsky/video/getJobStatus.js'\nexport * as AppBskyVideoGetUploadLimits from './types/app/bsky/video/getUploadLimits.js'\nexport * as AppBskyVideoUploadVideo from './types/app/bsky/video/uploadVideo.js'\nexport * as ChatBskyActorDeclaration from './types/chat/bsky/actor/declaration.js'\nexport * as ChatBskyActorDefs from './types/chat/bsky/actor/defs.js'\nexport * as ChatBskyActorDeleteAccount from './types/chat/bsky/actor/deleteAccount.js'\nexport * as ChatBskyActorExportAccountData from './types/chat/bsky/actor/exportAccountData.js'\nexport * as ChatBskyConvoAcceptConvo from './types/chat/bsky/convo/acceptConvo.js'\nexport * as ChatBskyConvoDefs from './types/chat/bsky/convo/defs.js'\nexport * as ChatBskyConvoDeleteMessageForSelf from './types/chat/bsky/convo/deleteMessageForSelf.js'\nexport * as ChatBskyConvoGetConvo from './types/chat/bsky/convo/getConvo.js'\nexport * as ChatBskyConvoGetConvoAvailability from './types/chat/bsky/convo/getConvoAvailability.js'\nexport * as ChatBskyConvoGetConvoForMembers from './types/chat/bsky/convo/getConvoForMembers.js'\nexport * as ChatBskyConvoGetLog from './types/chat/bsky/convo/getLog.js'\nexport * as ChatBskyConvoGetMessages from './types/chat/bsky/convo/getMessages.js'\nexport * as ChatBskyConvoLeaveConvo from './types/chat/bsky/convo/leaveConvo.js'\nexport * as ChatBskyConvoListConvos from './types/chat/bsky/convo/listConvos.js'\nexport * as ChatBskyConvoMuteConvo from './types/chat/bsky/convo/muteConvo.js'\nexport * as ChatBskyConvoSendMessage from './types/chat/bsky/convo/sendMessage.js'\nexport * as ChatBskyConvoSendMessageBatch from './types/chat/bsky/convo/sendMessageBatch.js'\nexport * as ChatBskyConvoUnmuteConvo from './types/chat/bsky/convo/unmuteConvo.js'\nexport * as ChatBskyConvoUpdateAllRead from './types/chat/bsky/convo/updateAllRead.js'\nexport * as ChatBskyConvoUpdateRead from './types/chat/bsky/convo/updateRead.js'\nexport * as ChatBskyModerationGetActorMetadata from './types/chat/bsky/moderation/getActorMetadata.js'\nexport * as ChatBskyModerationGetMessageContext from './types/chat/bsky/moderation/getMessageContext.js'\nexport * as ChatBskyModerationUpdateActorAccess from './types/chat/bsky/moderation/updateActorAccess.js'\nexport * as ToolsOzoneCommunicationCreateTemplate from './types/tools/ozone/communication/createTemplate.js'\nexport * as ToolsOzoneCommunicationDefs from './types/tools/ozone/communication/defs.js'\nexport * as ToolsOzoneCommunicationDeleteTemplate from './types/tools/ozone/communication/deleteTemplate.js'\nexport * as ToolsOzoneCommunicationListTemplates from './types/tools/ozone/communication/listTemplates.js'\nexport * as ToolsOzoneCommunicationUpdateTemplate from './types/tools/ozone/communication/updateTemplate.js'\nexport * as ToolsOzoneModerationDefs from './types/tools/ozone/moderation/defs.js'\nexport * as ToolsOzoneModerationEmitEvent from './types/tools/ozone/moderation/emitEvent.js'\nexport * as ToolsOzoneModerationGetEvent from './types/tools/ozone/moderation/getEvent.js'\nexport * as ToolsOzoneModerationGetRecord from './types/tools/ozone/moderation/getRecord.js'\nexport * as ToolsOzoneModerationGetRecords from './types/tools/ozone/moderation/getRecords.js'\nexport * as ToolsOzoneModerationGetRepo from './types/tools/ozone/moderation/getRepo.js'\nexport * as ToolsOzoneModerationGetReporterStats from './types/tools/ozone/moderation/getReporterStats.js'\nexport * as ToolsOzoneModerationGetRepos from './types/tools/ozone/moderation/getRepos.js'\nexport * as ToolsOzoneModerationQueryEvents from './types/tools/ozone/moderation/queryEvents.js'\nexport * as ToolsOzoneModerationQueryStatuses from './types/tools/ozone/moderation/queryStatuses.js'\nexport * as ToolsOzoneModerationSearchRepos from './types/tools/ozone/moderation/searchRepos.js'\nexport * as ToolsOzoneServerGetConfig from './types/tools/ozone/server/getConfig.js'\nexport * as ToolsOzoneSetAddValues from './types/tools/ozone/set/addValues.js'\nexport * as ToolsOzoneSetDefs from './types/tools/ozone/set/defs.js'\nexport * as ToolsOzoneSetDeleteSet from './types/tools/ozone/set/deleteSet.js'\nexport * as ToolsOzoneSetDeleteValues from './types/tools/ozone/set/deleteValues.js'\nexport * as ToolsOzoneSetGetValues from './types/tools/ozone/set/getValues.js'\nexport * as ToolsOzoneSetQuerySets from './types/tools/ozone/set/querySets.js'\nexport * as ToolsOzoneSetUpsertSet from './types/tools/ozone/set/upsertSet.js'\nexport * as ToolsOzoneSettingDefs from './types/tools/ozone/setting/defs.js'\nexport * as ToolsOzoneSettingListOptions from './types/tools/ozone/setting/listOptions.js'\nexport * as ToolsOzoneSettingRemoveOptions from './types/tools/ozone/setting/removeOptions.js'\nexport * as ToolsOzoneSettingUpsertOption from './types/tools/ozone/setting/upsertOption.js'\nexport * as ToolsOzoneSignatureDefs from './types/tools/ozone/signature/defs.js'\nexport * as ToolsOzoneSignatureFindCorrelation from './types/tools/ozone/signature/findCorrelation.js'\nexport * as ToolsOzoneSignatureFindRelatedAccounts from './types/tools/ozone/signature/findRelatedAccounts.js'\nexport * as ToolsOzoneSignatureSearchAccounts from './types/tools/ozone/signature/searchAccounts.js'\nexport * as ToolsOzoneTeamAddMember from './types/tools/ozone/team/addMember.js'\nexport * as ToolsOzoneTeamDefs from './types/tools/ozone/team/defs.js'\nexport * as ToolsOzoneTeamDeleteMember from './types/tools/ozone/team/deleteMember.js'\nexport * as ToolsOzoneTeamListMembers from './types/tools/ozone/team/listMembers.js'\nexport * as ToolsOzoneTeamUpdateMember from './types/tools/ozone/team/updateMember.js'\n\nexport const COM_ATPROTO_MODERATION = {\n  DefsReasonSpam: 'com.atproto.moderation.defs#reasonSpam',\n  DefsReasonViolation: 'com.atproto.moderation.defs#reasonViolation',\n  DefsReasonMisleading: 'com.atproto.moderation.defs#reasonMisleading',\n  DefsReasonSexual: 'com.atproto.moderation.defs#reasonSexual',\n  DefsReasonRude: 'com.atproto.moderation.defs#reasonRude',\n  DefsReasonOther: 'com.atproto.moderation.defs#reasonOther',\n  DefsReasonAppeal: 'com.atproto.moderation.defs#reasonAppeal',\n}\nexport const APP_BSKY_FEED = {\n  DefsRequestLess: 'app.bsky.feed.defs#requestLess',\n  DefsRequestMore: 'app.bsky.feed.defs#requestMore',\n  DefsClickthroughItem: 'app.bsky.feed.defs#clickthroughItem',\n  DefsClickthroughAuthor: 'app.bsky.feed.defs#clickthroughAuthor',\n  DefsClickthroughReposter: 'app.bsky.feed.defs#clickthroughReposter',\n  DefsClickthroughEmbed: 'app.bsky.feed.defs#clickthroughEmbed',\n  DefsContentModeUnspecified: 'app.bsky.feed.defs#contentModeUnspecified',\n  DefsContentModeVideo: 'app.bsky.feed.defs#contentModeVideo',\n  DefsInteractionSeen: 'app.bsky.feed.defs#interactionSeen',\n  DefsInteractionLike: 'app.bsky.feed.defs#interactionLike',\n  DefsInteractionRepost: 'app.bsky.feed.defs#interactionRepost',\n  DefsInteractionReply: 'app.bsky.feed.defs#interactionReply',\n  DefsInteractionQuote: 'app.bsky.feed.defs#interactionQuote',\n  DefsInteractionShare: 'app.bsky.feed.defs#interactionShare',\n}\nexport const APP_BSKY_GRAPH = {\n  DefsModlist: 'app.bsky.graph.defs#modlist',\n  DefsCuratelist: 'app.bsky.graph.defs#curatelist',\n  DefsReferencelist: 'app.bsky.graph.defs#referencelist',\n}\nexport const TOOLS_OZONE_MODERATION = {\n  DefsReviewOpen: 'tools.ozone.moderation.defs#reviewOpen',\n  DefsReviewEscalated: 'tools.ozone.moderation.defs#reviewEscalated',\n  DefsReviewClosed: 'tools.ozone.moderation.defs#reviewClosed',\n  DefsReviewNone: 'tools.ozone.moderation.defs#reviewNone',\n}\nexport const TOOLS_OZONE_TEAM = {\n  DefsRoleAdmin: 'tools.ozone.team.defs#roleAdmin',\n  DefsRoleModerator: 'tools.ozone.team.defs#roleModerator',\n  DefsRoleTriage: 'tools.ozone.team.defs#roleTriage',\n}\n\nexport class AtpBaseClient extends XrpcClient {\n  com: ComNS\n  app: AppNS\n  chat: ChatNS\n  tools: ToolsNS\n\n  constructor(options: FetchHandler | FetchHandlerOptions) {\n    super(options, schemas)\n    this.com = new ComNS(this)\n    this.app = new AppNS(this)\n    this.chat = new ChatNS(this)\n    this.tools = new ToolsNS(this)\n  }\n\n  /** @deprecated use `this` instead */\n  get xrpc(): XrpcClient {\n    return this\n  }\n}\n\nexport class ComNS {\n  _client: XrpcClient\n  atproto: ComAtprotoNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.atproto = new ComAtprotoNS(client)\n  }\n}\n\nexport class ComAtprotoNS {\n  _client: XrpcClient\n  admin: ComAtprotoAdminNS\n  identity: ComAtprotoIdentityNS\n  label: ComAtprotoLabelNS\n  lexicon: ComAtprotoLexiconNS\n  moderation: ComAtprotoModerationNS\n  repo: ComAtprotoRepoNS\n  server: ComAtprotoServerNS\n  sync: ComAtprotoSyncNS\n  temp: ComAtprotoTempNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.admin = new ComAtprotoAdminNS(client)\n    this.identity = new ComAtprotoIdentityNS(client)\n    this.label = new ComAtprotoLabelNS(client)\n    this.lexicon = new ComAtprotoLexiconNS(client)\n    this.moderation = new ComAtprotoModerationNS(client)\n    this.repo = new ComAtprotoRepoNS(client)\n    this.server = new ComAtprotoServerNS(client)\n    this.sync = new ComAtprotoSyncNS(client)\n    this.temp = new ComAtprotoTempNS(client)\n  }\n}\n\nexport class ComAtprotoAdminNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  deleteAccount(\n    data?: ComAtprotoAdminDeleteAccount.InputSchema,\n    opts?: ComAtprotoAdminDeleteAccount.CallOptions,\n  ): Promise<ComAtprotoAdminDeleteAccount.Response> {\n    return this._client.call(\n      'com.atproto.admin.deleteAccount',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  disableAccountInvites(\n    data?: ComAtprotoAdminDisableAccountInvites.InputSchema,\n    opts?: ComAtprotoAdminDisableAccountInvites.CallOptions,\n  ): Promise<ComAtprotoAdminDisableAccountInvites.Response> {\n    return this._client.call(\n      'com.atproto.admin.disableAccountInvites',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  disableInviteCodes(\n    data?: ComAtprotoAdminDisableInviteCodes.InputSchema,\n    opts?: ComAtprotoAdminDisableInviteCodes.CallOptions,\n  ): Promise<ComAtprotoAdminDisableInviteCodes.Response> {\n    return this._client.call(\n      'com.atproto.admin.disableInviteCodes',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  enableAccountInvites(\n    data?: ComAtprotoAdminEnableAccountInvites.InputSchema,\n    opts?: ComAtprotoAdminEnableAccountInvites.CallOptions,\n  ): Promise<ComAtprotoAdminEnableAccountInvites.Response> {\n    return this._client.call(\n      'com.atproto.admin.enableAccountInvites',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  getAccountInfo(\n    params?: ComAtprotoAdminGetAccountInfo.QueryParams,\n    opts?: ComAtprotoAdminGetAccountInfo.CallOptions,\n  ): Promise<ComAtprotoAdminGetAccountInfo.Response> {\n    return this._client.call(\n      'com.atproto.admin.getAccountInfo',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getAccountInfos(\n    params?: ComAtprotoAdminGetAccountInfos.QueryParams,\n    opts?: ComAtprotoAdminGetAccountInfos.CallOptions,\n  ): Promise<ComAtprotoAdminGetAccountInfos.Response> {\n    return this._client.call(\n      'com.atproto.admin.getAccountInfos',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getInviteCodes(\n    params?: ComAtprotoAdminGetInviteCodes.QueryParams,\n    opts?: ComAtprotoAdminGetInviteCodes.CallOptions,\n  ): Promise<ComAtprotoAdminGetInviteCodes.Response> {\n    return this._client.call(\n      'com.atproto.admin.getInviteCodes',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getSubjectStatus(\n    params?: ComAtprotoAdminGetSubjectStatus.QueryParams,\n    opts?: ComAtprotoAdminGetSubjectStatus.CallOptions,\n  ): Promise<ComAtprotoAdminGetSubjectStatus.Response> {\n    return this._client.call(\n      'com.atproto.admin.getSubjectStatus',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchAccounts(\n    params?: ComAtprotoAdminSearchAccounts.QueryParams,\n    opts?: ComAtprotoAdminSearchAccounts.CallOptions,\n  ): Promise<ComAtprotoAdminSearchAccounts.Response> {\n    return this._client.call(\n      'com.atproto.admin.searchAccounts',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  sendEmail(\n    data?: ComAtprotoAdminSendEmail.InputSchema,\n    opts?: ComAtprotoAdminSendEmail.CallOptions,\n  ): Promise<ComAtprotoAdminSendEmail.Response> {\n    return this._client.call(\n      'com.atproto.admin.sendEmail',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateAccountEmail(\n    data?: ComAtprotoAdminUpdateAccountEmail.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountEmail.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountEmail.Response> {\n    return this._client.call(\n      'com.atproto.admin.updateAccountEmail',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateAccountHandle(\n    data?: ComAtprotoAdminUpdateAccountHandle.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountHandle.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountHandle.Response> {\n    return this._client.call(\n      'com.atproto.admin.updateAccountHandle',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateAccountPassword(\n    data?: ComAtprotoAdminUpdateAccountPassword.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountPassword.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountPassword.Response> {\n    return this._client.call(\n      'com.atproto.admin.updateAccountPassword',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateSubjectStatus(\n    data?: ComAtprotoAdminUpdateSubjectStatus.InputSchema,\n    opts?: ComAtprotoAdminUpdateSubjectStatus.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateSubjectStatus.Response> {\n    return this._client.call(\n      'com.atproto.admin.updateSubjectStatus',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoIdentityNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getRecommendedDidCredentials(\n    params?: ComAtprotoIdentityGetRecommendedDidCredentials.QueryParams,\n    opts?: ComAtprotoIdentityGetRecommendedDidCredentials.CallOptions,\n  ): Promise<ComAtprotoIdentityGetRecommendedDidCredentials.Response> {\n    return this._client.call(\n      'com.atproto.identity.getRecommendedDidCredentials',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  requestPlcOperationSignature(\n    data?: ComAtprotoIdentityRequestPlcOperationSignature.InputSchema,\n    opts?: ComAtprotoIdentityRequestPlcOperationSignature.CallOptions,\n  ): Promise<ComAtprotoIdentityRequestPlcOperationSignature.Response> {\n    return this._client.call(\n      'com.atproto.identity.requestPlcOperationSignature',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  resolveHandle(\n    params?: ComAtprotoIdentityResolveHandle.QueryParams,\n    opts?: ComAtprotoIdentityResolveHandle.CallOptions,\n  ): Promise<ComAtprotoIdentityResolveHandle.Response> {\n    return this._client.call(\n      'com.atproto.identity.resolveHandle',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  signPlcOperation(\n    data?: ComAtprotoIdentitySignPlcOperation.InputSchema,\n    opts?: ComAtprotoIdentitySignPlcOperation.CallOptions,\n  ): Promise<ComAtprotoIdentitySignPlcOperation.Response> {\n    return this._client.call(\n      'com.atproto.identity.signPlcOperation',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  submitPlcOperation(\n    data?: ComAtprotoIdentitySubmitPlcOperation.InputSchema,\n    opts?: ComAtprotoIdentitySubmitPlcOperation.CallOptions,\n  ): Promise<ComAtprotoIdentitySubmitPlcOperation.Response> {\n    return this._client.call(\n      'com.atproto.identity.submitPlcOperation',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateHandle(\n    data?: ComAtprotoIdentityUpdateHandle.InputSchema,\n    opts?: ComAtprotoIdentityUpdateHandle.CallOptions,\n  ): Promise<ComAtprotoIdentityUpdateHandle.Response> {\n    return this._client.call(\n      'com.atproto.identity.updateHandle',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoLabelNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  queryLabels(\n    params?: ComAtprotoLabelQueryLabels.QueryParams,\n    opts?: ComAtprotoLabelQueryLabels.CallOptions,\n  ): Promise<ComAtprotoLabelQueryLabels.Response> {\n    return this._client.call(\n      'com.atproto.label.queryLabels',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoLexiconNS {\n  _client: XrpcClient\n  schema: SchemaRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.schema = new SchemaRecord(client)\n  }\n}\n\nexport class SchemaRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: ComAtprotoLexiconSchema.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'com.atproto.lexicon.schema',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: ComAtprotoLexiconSchema.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'com.atproto.lexicon.schema',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<ComAtprotoLexiconSchema.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'com.atproto.lexicon.schema'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'com.atproto.lexicon.schema', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ComAtprotoModerationNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  createReport(\n    data?: ComAtprotoModerationCreateReport.InputSchema,\n    opts?: ComAtprotoModerationCreateReport.CallOptions,\n  ): Promise<ComAtprotoModerationCreateReport.Response> {\n    return this._client.call(\n      'com.atproto.moderation.createReport',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoRepoNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  applyWrites(\n    data?: ComAtprotoRepoApplyWrites.InputSchema,\n    opts?: ComAtprotoRepoApplyWrites.CallOptions,\n  ): Promise<ComAtprotoRepoApplyWrites.Response> {\n    return this._client\n      .call('com.atproto.repo.applyWrites', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoApplyWrites.toKnownErr(e)\n      })\n  }\n\n  createRecord(\n    data?: ComAtprotoRepoCreateRecord.InputSchema,\n    opts?: ComAtprotoRepoCreateRecord.CallOptions,\n  ): Promise<ComAtprotoRepoCreateRecord.Response> {\n    return this._client\n      .call('com.atproto.repo.createRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoCreateRecord.toKnownErr(e)\n      })\n  }\n\n  deleteRecord(\n    data?: ComAtprotoRepoDeleteRecord.InputSchema,\n    opts?: ComAtprotoRepoDeleteRecord.CallOptions,\n  ): Promise<ComAtprotoRepoDeleteRecord.Response> {\n    return this._client\n      .call('com.atproto.repo.deleteRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoDeleteRecord.toKnownErr(e)\n      })\n  }\n\n  describeRepo(\n    params?: ComAtprotoRepoDescribeRepo.QueryParams,\n    opts?: ComAtprotoRepoDescribeRepo.CallOptions,\n  ): Promise<ComAtprotoRepoDescribeRepo.Response> {\n    return this._client.call(\n      'com.atproto.repo.describeRepo',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getRecord(\n    params?: ComAtprotoRepoGetRecord.QueryParams,\n    opts?: ComAtprotoRepoGetRecord.CallOptions,\n  ): Promise<ComAtprotoRepoGetRecord.Response> {\n    return this._client\n      .call('com.atproto.repo.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoGetRecord.toKnownErr(e)\n      })\n  }\n\n  importRepo(\n    data?: ComAtprotoRepoImportRepo.InputSchema,\n    opts?: ComAtprotoRepoImportRepo.CallOptions,\n  ): Promise<ComAtprotoRepoImportRepo.Response> {\n    return this._client.call(\n      'com.atproto.repo.importRepo',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  listMissingBlobs(\n    params?: ComAtprotoRepoListMissingBlobs.QueryParams,\n    opts?: ComAtprotoRepoListMissingBlobs.CallOptions,\n  ): Promise<ComAtprotoRepoListMissingBlobs.Response> {\n    return this._client.call(\n      'com.atproto.repo.listMissingBlobs',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  listRecords(\n    params?: ComAtprotoRepoListRecords.QueryParams,\n    opts?: ComAtprotoRepoListRecords.CallOptions,\n  ): Promise<ComAtprotoRepoListRecords.Response> {\n    return this._client.call(\n      'com.atproto.repo.listRecords',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  putRecord(\n    data?: ComAtprotoRepoPutRecord.InputSchema,\n    opts?: ComAtprotoRepoPutRecord.CallOptions,\n  ): Promise<ComAtprotoRepoPutRecord.Response> {\n    return this._client\n      .call('com.atproto.repo.putRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoPutRecord.toKnownErr(e)\n      })\n  }\n\n  uploadBlob(\n    data?: ComAtprotoRepoUploadBlob.InputSchema,\n    opts?: ComAtprotoRepoUploadBlob.CallOptions,\n  ): Promise<ComAtprotoRepoUploadBlob.Response> {\n    return this._client.call(\n      'com.atproto.repo.uploadBlob',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoServerNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  activateAccount(\n    data?: ComAtprotoServerActivateAccount.InputSchema,\n    opts?: ComAtprotoServerActivateAccount.CallOptions,\n  ): Promise<ComAtprotoServerActivateAccount.Response> {\n    return this._client.call(\n      'com.atproto.server.activateAccount',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  checkAccountStatus(\n    params?: ComAtprotoServerCheckAccountStatus.QueryParams,\n    opts?: ComAtprotoServerCheckAccountStatus.CallOptions,\n  ): Promise<ComAtprotoServerCheckAccountStatus.Response> {\n    return this._client.call(\n      'com.atproto.server.checkAccountStatus',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  confirmEmail(\n    data?: ComAtprotoServerConfirmEmail.InputSchema,\n    opts?: ComAtprotoServerConfirmEmail.CallOptions,\n  ): Promise<ComAtprotoServerConfirmEmail.Response> {\n    return this._client\n      .call('com.atproto.server.confirmEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerConfirmEmail.toKnownErr(e)\n      })\n  }\n\n  createAccount(\n    data?: ComAtprotoServerCreateAccount.InputSchema,\n    opts?: ComAtprotoServerCreateAccount.CallOptions,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    return this._client\n      .call('com.atproto.server.createAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateAccount.toKnownErr(e)\n      })\n  }\n\n  createAppPassword(\n    data?: ComAtprotoServerCreateAppPassword.InputSchema,\n    opts?: ComAtprotoServerCreateAppPassword.CallOptions,\n  ): Promise<ComAtprotoServerCreateAppPassword.Response> {\n    return this._client\n      .call('com.atproto.server.createAppPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateAppPassword.toKnownErr(e)\n      })\n  }\n\n  createInviteCode(\n    data?: ComAtprotoServerCreateInviteCode.InputSchema,\n    opts?: ComAtprotoServerCreateInviteCode.CallOptions,\n  ): Promise<ComAtprotoServerCreateInviteCode.Response> {\n    return this._client.call(\n      'com.atproto.server.createInviteCode',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  createInviteCodes(\n    data?: ComAtprotoServerCreateInviteCodes.InputSchema,\n    opts?: ComAtprotoServerCreateInviteCodes.CallOptions,\n  ): Promise<ComAtprotoServerCreateInviteCodes.Response> {\n    return this._client.call(\n      'com.atproto.server.createInviteCodes',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  createSession(\n    data?: ComAtprotoServerCreateSession.InputSchema,\n    opts?: ComAtprotoServerCreateSession.CallOptions,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    return this._client\n      .call('com.atproto.server.createSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateSession.toKnownErr(e)\n      })\n  }\n\n  deactivateAccount(\n    data?: ComAtprotoServerDeactivateAccount.InputSchema,\n    opts?: ComAtprotoServerDeactivateAccount.CallOptions,\n  ): Promise<ComAtprotoServerDeactivateAccount.Response> {\n    return this._client.call(\n      'com.atproto.server.deactivateAccount',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  deleteAccount(\n    data?: ComAtprotoServerDeleteAccount.InputSchema,\n    opts?: ComAtprotoServerDeleteAccount.CallOptions,\n  ): Promise<ComAtprotoServerDeleteAccount.Response> {\n    return this._client\n      .call('com.atproto.server.deleteAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDeleteAccount.toKnownErr(e)\n      })\n  }\n\n  deleteSession(\n    data?: ComAtprotoServerDeleteSession.InputSchema,\n    opts?: ComAtprotoServerDeleteSession.CallOptions,\n  ): Promise<ComAtprotoServerDeleteSession.Response> {\n    return this._client.call(\n      'com.atproto.server.deleteSession',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  describeServer(\n    params?: ComAtprotoServerDescribeServer.QueryParams,\n    opts?: ComAtprotoServerDescribeServer.CallOptions,\n  ): Promise<ComAtprotoServerDescribeServer.Response> {\n    return this._client.call(\n      'com.atproto.server.describeServer',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getAccountInviteCodes(\n    params?: ComAtprotoServerGetAccountInviteCodes.QueryParams,\n    opts?: ComAtprotoServerGetAccountInviteCodes.CallOptions,\n  ): Promise<ComAtprotoServerGetAccountInviteCodes.Response> {\n    return this._client\n      .call('com.atproto.server.getAccountInviteCodes', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerGetAccountInviteCodes.toKnownErr(e)\n      })\n  }\n\n  getServiceAuth(\n    params?: ComAtprotoServerGetServiceAuth.QueryParams,\n    opts?: ComAtprotoServerGetServiceAuth.CallOptions,\n  ): Promise<ComAtprotoServerGetServiceAuth.Response> {\n    return this._client\n      .call('com.atproto.server.getServiceAuth', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerGetServiceAuth.toKnownErr(e)\n      })\n  }\n\n  getSession(\n    params?: ComAtprotoServerGetSession.QueryParams,\n    opts?: ComAtprotoServerGetSession.CallOptions,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    return this._client.call(\n      'com.atproto.server.getSession',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  listAppPasswords(\n    params?: ComAtprotoServerListAppPasswords.QueryParams,\n    opts?: ComAtprotoServerListAppPasswords.CallOptions,\n  ): Promise<ComAtprotoServerListAppPasswords.Response> {\n    return this._client\n      .call('com.atproto.server.listAppPasswords', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerListAppPasswords.toKnownErr(e)\n      })\n  }\n\n  refreshSession(\n    data?: ComAtprotoServerRefreshSession.InputSchema,\n    opts?: ComAtprotoServerRefreshSession.CallOptions,\n  ): Promise<ComAtprotoServerRefreshSession.Response> {\n    return this._client\n      .call('com.atproto.server.refreshSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRefreshSession.toKnownErr(e)\n      })\n  }\n\n  requestAccountDelete(\n    data?: ComAtprotoServerRequestAccountDelete.InputSchema,\n    opts?: ComAtprotoServerRequestAccountDelete.CallOptions,\n  ): Promise<ComAtprotoServerRequestAccountDelete.Response> {\n    return this._client.call(\n      'com.atproto.server.requestAccountDelete',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  requestEmailConfirmation(\n    data?: ComAtprotoServerRequestEmailConfirmation.InputSchema,\n    opts?: ComAtprotoServerRequestEmailConfirmation.CallOptions,\n  ): Promise<ComAtprotoServerRequestEmailConfirmation.Response> {\n    return this._client.call(\n      'com.atproto.server.requestEmailConfirmation',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  requestEmailUpdate(\n    data?: ComAtprotoServerRequestEmailUpdate.InputSchema,\n    opts?: ComAtprotoServerRequestEmailUpdate.CallOptions,\n  ): Promise<ComAtprotoServerRequestEmailUpdate.Response> {\n    return this._client.call(\n      'com.atproto.server.requestEmailUpdate',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  requestPasswordReset(\n    data?: ComAtprotoServerRequestPasswordReset.InputSchema,\n    opts?: ComAtprotoServerRequestPasswordReset.CallOptions,\n  ): Promise<ComAtprotoServerRequestPasswordReset.Response> {\n    return this._client.call(\n      'com.atproto.server.requestPasswordReset',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  reserveSigningKey(\n    data?: ComAtprotoServerReserveSigningKey.InputSchema,\n    opts?: ComAtprotoServerReserveSigningKey.CallOptions,\n  ): Promise<ComAtprotoServerReserveSigningKey.Response> {\n    return this._client.call(\n      'com.atproto.server.reserveSigningKey',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  resetPassword(\n    data?: ComAtprotoServerResetPassword.InputSchema,\n    opts?: ComAtprotoServerResetPassword.CallOptions,\n  ): Promise<ComAtprotoServerResetPassword.Response> {\n    return this._client\n      .call('com.atproto.server.resetPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerResetPassword.toKnownErr(e)\n      })\n  }\n\n  revokeAppPassword(\n    data?: ComAtprotoServerRevokeAppPassword.InputSchema,\n    opts?: ComAtprotoServerRevokeAppPassword.CallOptions,\n  ): Promise<ComAtprotoServerRevokeAppPassword.Response> {\n    return this._client.call(\n      'com.atproto.server.revokeAppPassword',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateEmail(\n    data?: ComAtprotoServerUpdateEmail.InputSchema,\n    opts?: ComAtprotoServerUpdateEmail.CallOptions,\n  ): Promise<ComAtprotoServerUpdateEmail.Response> {\n    return this._client\n      .call('com.atproto.server.updateEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerUpdateEmail.toKnownErr(e)\n      })\n  }\n}\n\nexport class ComAtprotoSyncNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getBlob(\n    params?: ComAtprotoSyncGetBlob.QueryParams,\n    opts?: ComAtprotoSyncGetBlob.CallOptions,\n  ): Promise<ComAtprotoSyncGetBlob.Response> {\n    return this._client\n      .call('com.atproto.sync.getBlob', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetBlob.toKnownErr(e)\n      })\n  }\n\n  getBlocks(\n    params?: ComAtprotoSyncGetBlocks.QueryParams,\n    opts?: ComAtprotoSyncGetBlocks.CallOptions,\n  ): Promise<ComAtprotoSyncGetBlocks.Response> {\n    return this._client\n      .call('com.atproto.sync.getBlocks', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetBlocks.toKnownErr(e)\n      })\n  }\n\n  getCheckout(\n    params?: ComAtprotoSyncGetCheckout.QueryParams,\n    opts?: ComAtprotoSyncGetCheckout.CallOptions,\n  ): Promise<ComAtprotoSyncGetCheckout.Response> {\n    return this._client.call(\n      'com.atproto.sync.getCheckout',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getHead(\n    params?: ComAtprotoSyncGetHead.QueryParams,\n    opts?: ComAtprotoSyncGetHead.CallOptions,\n  ): Promise<ComAtprotoSyncGetHead.Response> {\n    return this._client\n      .call('com.atproto.sync.getHead', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetHead.toKnownErr(e)\n      })\n  }\n\n  getLatestCommit(\n    params?: ComAtprotoSyncGetLatestCommit.QueryParams,\n    opts?: ComAtprotoSyncGetLatestCommit.CallOptions,\n  ): Promise<ComAtprotoSyncGetLatestCommit.Response> {\n    return this._client\n      .call('com.atproto.sync.getLatestCommit', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetLatestCommit.toKnownErr(e)\n      })\n  }\n\n  getRecord(\n    params?: ComAtprotoSyncGetRecord.QueryParams,\n    opts?: ComAtprotoSyncGetRecord.CallOptions,\n  ): Promise<ComAtprotoSyncGetRecord.Response> {\n    return this._client\n      .call('com.atproto.sync.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRecord.toKnownErr(e)\n      })\n  }\n\n  getRepo(\n    params?: ComAtprotoSyncGetRepo.QueryParams,\n    opts?: ComAtprotoSyncGetRepo.CallOptions,\n  ): Promise<ComAtprotoSyncGetRepo.Response> {\n    return this._client\n      .call('com.atproto.sync.getRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRepo.toKnownErr(e)\n      })\n  }\n\n  getRepoStatus(\n    params?: ComAtprotoSyncGetRepoStatus.QueryParams,\n    opts?: ComAtprotoSyncGetRepoStatus.CallOptions,\n  ): Promise<ComAtprotoSyncGetRepoStatus.Response> {\n    return this._client\n      .call('com.atproto.sync.getRepoStatus', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRepoStatus.toKnownErr(e)\n      })\n  }\n\n  listBlobs(\n    params?: ComAtprotoSyncListBlobs.QueryParams,\n    opts?: ComAtprotoSyncListBlobs.CallOptions,\n  ): Promise<ComAtprotoSyncListBlobs.Response> {\n    return this._client\n      .call('com.atproto.sync.listBlobs', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncListBlobs.toKnownErr(e)\n      })\n  }\n\n  listRepos(\n    params?: ComAtprotoSyncListRepos.QueryParams,\n    opts?: ComAtprotoSyncListRepos.CallOptions,\n  ): Promise<ComAtprotoSyncListRepos.Response> {\n    return this._client.call(\n      'com.atproto.sync.listRepos',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  listReposByCollection(\n    params?: ComAtprotoSyncListReposByCollection.QueryParams,\n    opts?: ComAtprotoSyncListReposByCollection.CallOptions,\n  ): Promise<ComAtprotoSyncListReposByCollection.Response> {\n    return this._client.call(\n      'com.atproto.sync.listReposByCollection',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  notifyOfUpdate(\n    data?: ComAtprotoSyncNotifyOfUpdate.InputSchema,\n    opts?: ComAtprotoSyncNotifyOfUpdate.CallOptions,\n  ): Promise<ComAtprotoSyncNotifyOfUpdate.Response> {\n    return this._client.call(\n      'com.atproto.sync.notifyOfUpdate',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  requestCrawl(\n    data?: ComAtprotoSyncRequestCrawl.InputSchema,\n    opts?: ComAtprotoSyncRequestCrawl.CallOptions,\n  ): Promise<ComAtprotoSyncRequestCrawl.Response> {\n    return this._client.call(\n      'com.atproto.sync.requestCrawl',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoTempNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  addReservedHandle(\n    data?: ComAtprotoTempAddReservedHandle.InputSchema,\n    opts?: ComAtprotoTempAddReservedHandle.CallOptions,\n  ): Promise<ComAtprotoTempAddReservedHandle.Response> {\n    return this._client.call(\n      'com.atproto.temp.addReservedHandle',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  checkSignupQueue(\n    params?: ComAtprotoTempCheckSignupQueue.QueryParams,\n    opts?: ComAtprotoTempCheckSignupQueue.CallOptions,\n  ): Promise<ComAtprotoTempCheckSignupQueue.Response> {\n    return this._client.call(\n      'com.atproto.temp.checkSignupQueue',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  fetchLabels(\n    params?: ComAtprotoTempFetchLabels.QueryParams,\n    opts?: ComAtprotoTempFetchLabels.CallOptions,\n  ): Promise<ComAtprotoTempFetchLabels.Response> {\n    return this._client.call(\n      'com.atproto.temp.fetchLabels',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  requestPhoneVerification(\n    data?: ComAtprotoTempRequestPhoneVerification.InputSchema,\n    opts?: ComAtprotoTempRequestPhoneVerification.CallOptions,\n  ): Promise<ComAtprotoTempRequestPhoneVerification.Response> {\n    return this._client.call(\n      'com.atproto.temp.requestPhoneVerification',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class AppNS {\n  _client: XrpcClient\n  bsky: AppBskyNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.bsky = new AppBskyNS(client)\n  }\n}\n\nexport class AppBskyNS {\n  _client: XrpcClient\n  actor: AppBskyActorNS\n  embed: AppBskyEmbedNS\n  feed: AppBskyFeedNS\n  graph: AppBskyGraphNS\n  labeler: AppBskyLabelerNS\n  notification: AppBskyNotificationNS\n  richtext: AppBskyRichtextNS\n  unspecced: AppBskyUnspeccedNS\n  video: AppBskyVideoNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.actor = new AppBskyActorNS(client)\n    this.embed = new AppBskyEmbedNS(client)\n    this.feed = new AppBskyFeedNS(client)\n    this.graph = new AppBskyGraphNS(client)\n    this.labeler = new AppBskyLabelerNS(client)\n    this.notification = new AppBskyNotificationNS(client)\n    this.richtext = new AppBskyRichtextNS(client)\n    this.unspecced = new AppBskyUnspeccedNS(client)\n    this.video = new AppBskyVideoNS(client)\n  }\n}\n\nexport class AppBskyActorNS {\n  _client: XrpcClient\n  profile: ProfileRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.profile = new ProfileRecord(client)\n  }\n\n  getPreferences(\n    params?: AppBskyActorGetPreferences.QueryParams,\n    opts?: AppBskyActorGetPreferences.CallOptions,\n  ): Promise<AppBskyActorGetPreferences.Response> {\n    return this._client.call(\n      'app.bsky.actor.getPreferences',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getProfile(\n    params?: AppBskyActorGetProfile.QueryParams,\n    opts?: AppBskyActorGetProfile.CallOptions,\n  ): Promise<AppBskyActorGetProfile.Response> {\n    return this._client.call(\n      'app.bsky.actor.getProfile',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getProfiles(\n    params?: AppBskyActorGetProfiles.QueryParams,\n    opts?: AppBskyActorGetProfiles.CallOptions,\n  ): Promise<AppBskyActorGetProfiles.Response> {\n    return this._client.call(\n      'app.bsky.actor.getProfiles',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getSuggestions(\n    params?: AppBskyActorGetSuggestions.QueryParams,\n    opts?: AppBskyActorGetSuggestions.CallOptions,\n  ): Promise<AppBskyActorGetSuggestions.Response> {\n    return this._client.call(\n      'app.bsky.actor.getSuggestions',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  putPreferences(\n    data?: AppBskyActorPutPreferences.InputSchema,\n    opts?: AppBskyActorPutPreferences.CallOptions,\n  ): Promise<AppBskyActorPutPreferences.Response> {\n    return this._client.call(\n      'app.bsky.actor.putPreferences',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  searchActors(\n    params?: AppBskyActorSearchActors.QueryParams,\n    opts?: AppBskyActorSearchActors.CallOptions,\n  ): Promise<AppBskyActorSearchActors.Response> {\n    return this._client.call(\n      'app.bsky.actor.searchActors',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchActorsTypeahead(\n    params?: AppBskyActorSearchActorsTypeahead.QueryParams,\n    opts?: AppBskyActorSearchActorsTypeahead.CallOptions,\n  ): Promise<AppBskyActorSearchActorsTypeahead.Response> {\n    return this._client.call(\n      'app.bsky.actor.searchActorsTypeahead',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ProfileRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyActorProfile.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.actor.profile',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyActorProfile.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.actor.profile',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyActorProfile.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.actor.profile'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      {\n        collection,\n        rkey: 'self',\n        ...params,\n        record: { ...record, $type: collection },\n      },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.actor.profile', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyEmbedNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n}\n\nexport class AppBskyFeedNS {\n  _client: XrpcClient\n  generator: GeneratorRecord\n  like: LikeRecord\n  post: PostRecord\n  postgate: PostgateRecord\n  repost: RepostRecord\n  threadgate: ThreadgateRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.generator = new GeneratorRecord(client)\n    this.like = new LikeRecord(client)\n    this.post = new PostRecord(client)\n    this.postgate = new PostgateRecord(client)\n    this.repost = new RepostRecord(client)\n    this.threadgate = new ThreadgateRecord(client)\n  }\n\n  describeFeedGenerator(\n    params?: AppBskyFeedDescribeFeedGenerator.QueryParams,\n    opts?: AppBskyFeedDescribeFeedGenerator.CallOptions,\n  ): Promise<AppBskyFeedDescribeFeedGenerator.Response> {\n    return this._client.call(\n      'app.bsky.feed.describeFeedGenerator',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getActorFeeds(\n    params?: AppBskyFeedGetActorFeeds.QueryParams,\n    opts?: AppBskyFeedGetActorFeeds.CallOptions,\n  ): Promise<AppBskyFeedGetActorFeeds.Response> {\n    return this._client.call(\n      'app.bsky.feed.getActorFeeds',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getActorLikes(\n    params?: AppBskyFeedGetActorLikes.QueryParams,\n    opts?: AppBskyFeedGetActorLikes.CallOptions,\n  ): Promise<AppBskyFeedGetActorLikes.Response> {\n    return this._client\n      .call('app.bsky.feed.getActorLikes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetActorLikes.toKnownErr(e)\n      })\n  }\n\n  getAuthorFeed(\n    params?: AppBskyFeedGetAuthorFeed.QueryParams,\n    opts?: AppBskyFeedGetAuthorFeed.CallOptions,\n  ): Promise<AppBskyFeedGetAuthorFeed.Response> {\n    return this._client\n      .call('app.bsky.feed.getAuthorFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetAuthorFeed.toKnownErr(e)\n      })\n  }\n\n  getFeed(\n    params?: AppBskyFeedGetFeed.QueryParams,\n    opts?: AppBskyFeedGetFeed.CallOptions,\n  ): Promise<AppBskyFeedGetFeed.Response> {\n    return this._client\n      .call('app.bsky.feed.getFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeed.toKnownErr(e)\n      })\n  }\n\n  getFeedGenerator(\n    params?: AppBskyFeedGetFeedGenerator.QueryParams,\n    opts?: AppBskyFeedGetFeedGenerator.CallOptions,\n  ): Promise<AppBskyFeedGetFeedGenerator.Response> {\n    return this._client.call(\n      'app.bsky.feed.getFeedGenerator',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getFeedGenerators(\n    params?: AppBskyFeedGetFeedGenerators.QueryParams,\n    opts?: AppBskyFeedGetFeedGenerators.CallOptions,\n  ): Promise<AppBskyFeedGetFeedGenerators.Response> {\n    return this._client.call(\n      'app.bsky.feed.getFeedGenerators',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getFeedSkeleton(\n    params?: AppBskyFeedGetFeedSkeleton.QueryParams,\n    opts?: AppBskyFeedGetFeedSkeleton.CallOptions,\n  ): Promise<AppBskyFeedGetFeedSkeleton.Response> {\n    return this._client\n      .call('app.bsky.feed.getFeedSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeedSkeleton.toKnownErr(e)\n      })\n  }\n\n  getLikes(\n    params?: AppBskyFeedGetLikes.QueryParams,\n    opts?: AppBskyFeedGetLikes.CallOptions,\n  ): Promise<AppBskyFeedGetLikes.Response> {\n    return this._client.call('app.bsky.feed.getLikes', params, undefined, opts)\n  }\n\n  getListFeed(\n    params?: AppBskyFeedGetListFeed.QueryParams,\n    opts?: AppBskyFeedGetListFeed.CallOptions,\n  ): Promise<AppBskyFeedGetListFeed.Response> {\n    return this._client\n      .call('app.bsky.feed.getListFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetListFeed.toKnownErr(e)\n      })\n  }\n\n  getPostThread(\n    params?: AppBskyFeedGetPostThread.QueryParams,\n    opts?: AppBskyFeedGetPostThread.CallOptions,\n  ): Promise<AppBskyFeedGetPostThread.Response> {\n    return this._client\n      .call('app.bsky.feed.getPostThread', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetPostThread.toKnownErr(e)\n      })\n  }\n\n  getPosts(\n    params?: AppBskyFeedGetPosts.QueryParams,\n    opts?: AppBskyFeedGetPosts.CallOptions,\n  ): Promise<AppBskyFeedGetPosts.Response> {\n    return this._client.call('app.bsky.feed.getPosts', params, undefined, opts)\n  }\n\n  getQuotes(\n    params?: AppBskyFeedGetQuotes.QueryParams,\n    opts?: AppBskyFeedGetQuotes.CallOptions,\n  ): Promise<AppBskyFeedGetQuotes.Response> {\n    return this._client.call('app.bsky.feed.getQuotes', params, undefined, opts)\n  }\n\n  getRepostedBy(\n    params?: AppBskyFeedGetRepostedBy.QueryParams,\n    opts?: AppBskyFeedGetRepostedBy.CallOptions,\n  ): Promise<AppBskyFeedGetRepostedBy.Response> {\n    return this._client.call(\n      'app.bsky.feed.getRepostedBy',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getSuggestedFeeds(\n    params?: AppBskyFeedGetSuggestedFeeds.QueryParams,\n    opts?: AppBskyFeedGetSuggestedFeeds.CallOptions,\n  ): Promise<AppBskyFeedGetSuggestedFeeds.Response> {\n    return this._client.call(\n      'app.bsky.feed.getSuggestedFeeds',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getTimeline(\n    params?: AppBskyFeedGetTimeline.QueryParams,\n    opts?: AppBskyFeedGetTimeline.CallOptions,\n  ): Promise<AppBskyFeedGetTimeline.Response> {\n    return this._client.call(\n      'app.bsky.feed.getTimeline',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchPosts(\n    params?: AppBskyFeedSearchPosts.QueryParams,\n    opts?: AppBskyFeedSearchPosts.CallOptions,\n  ): Promise<AppBskyFeedSearchPosts.Response> {\n    return this._client\n      .call('app.bsky.feed.searchPosts', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedSearchPosts.toKnownErr(e)\n      })\n  }\n\n  sendInteractions(\n    data?: AppBskyFeedSendInteractions.InputSchema,\n    opts?: AppBskyFeedSendInteractions.CallOptions,\n  ): Promise<AppBskyFeedSendInteractions.Response> {\n    return this._client.call(\n      'app.bsky.feed.sendInteractions',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class GeneratorRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedGenerator.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.generator',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedGenerator.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.generator',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyFeedGenerator.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.feed.generator'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.generator', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class LikeRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedLike.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.like',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedLike.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.like',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyFeedLike.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.feed.like'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.like', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class PostRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedPost.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.post',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedPost.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.post',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyFeedPost.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.feed.post'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.post', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class PostgateRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedPostgate.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.postgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedPostgate.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.postgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyFeedPostgate.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.feed.postgate'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.postgate', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class RepostRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedRepost.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.repost',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedRepost.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.repost',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyFeedRepost.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.feed.repost'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.repost', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ThreadgateRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedThreadgate.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.threadgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyFeedThreadgate.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.threadgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyFeedThreadgate.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.feed.threadgate'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.threadgate', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyGraphNS {\n  _client: XrpcClient\n  block: BlockRecord\n  follow: FollowRecord\n  list: ListRecord\n  listblock: ListblockRecord\n  listitem: ListitemRecord\n  starterpack: StarterpackRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.block = new BlockRecord(client)\n    this.follow = new FollowRecord(client)\n    this.list = new ListRecord(client)\n    this.listblock = new ListblockRecord(client)\n    this.listitem = new ListitemRecord(client)\n    this.starterpack = new StarterpackRecord(client)\n  }\n\n  getActorStarterPacks(\n    params?: AppBskyGraphGetActorStarterPacks.QueryParams,\n    opts?: AppBskyGraphGetActorStarterPacks.CallOptions,\n  ): Promise<AppBskyGraphGetActorStarterPacks.Response> {\n    return this._client.call(\n      'app.bsky.graph.getActorStarterPacks',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getBlocks(\n    params?: AppBskyGraphGetBlocks.QueryParams,\n    opts?: AppBskyGraphGetBlocks.CallOptions,\n  ): Promise<AppBskyGraphGetBlocks.Response> {\n    return this._client.call(\n      'app.bsky.graph.getBlocks',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getFollowers(\n    params?: AppBskyGraphGetFollowers.QueryParams,\n    opts?: AppBskyGraphGetFollowers.CallOptions,\n  ): Promise<AppBskyGraphGetFollowers.Response> {\n    return this._client.call(\n      'app.bsky.graph.getFollowers',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getFollows(\n    params?: AppBskyGraphGetFollows.QueryParams,\n    opts?: AppBskyGraphGetFollows.CallOptions,\n  ): Promise<AppBskyGraphGetFollows.Response> {\n    return this._client.call(\n      'app.bsky.graph.getFollows',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getKnownFollowers(\n    params?: AppBskyGraphGetKnownFollowers.QueryParams,\n    opts?: AppBskyGraphGetKnownFollowers.CallOptions,\n  ): Promise<AppBskyGraphGetKnownFollowers.Response> {\n    return this._client.call(\n      'app.bsky.graph.getKnownFollowers',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getList(\n    params?: AppBskyGraphGetList.QueryParams,\n    opts?: AppBskyGraphGetList.CallOptions,\n  ): Promise<AppBskyGraphGetList.Response> {\n    return this._client.call('app.bsky.graph.getList', params, undefined, opts)\n  }\n\n  getListBlocks(\n    params?: AppBskyGraphGetListBlocks.QueryParams,\n    opts?: AppBskyGraphGetListBlocks.CallOptions,\n  ): Promise<AppBskyGraphGetListBlocks.Response> {\n    return this._client.call(\n      'app.bsky.graph.getListBlocks',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getListMutes(\n    params?: AppBskyGraphGetListMutes.QueryParams,\n    opts?: AppBskyGraphGetListMutes.CallOptions,\n  ): Promise<AppBskyGraphGetListMutes.Response> {\n    return this._client.call(\n      'app.bsky.graph.getListMutes',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getLists(\n    params?: AppBskyGraphGetLists.QueryParams,\n    opts?: AppBskyGraphGetLists.CallOptions,\n  ): Promise<AppBskyGraphGetLists.Response> {\n    return this._client.call('app.bsky.graph.getLists', params, undefined, opts)\n  }\n\n  getMutes(\n    params?: AppBskyGraphGetMutes.QueryParams,\n    opts?: AppBskyGraphGetMutes.CallOptions,\n  ): Promise<AppBskyGraphGetMutes.Response> {\n    return this._client.call('app.bsky.graph.getMutes', params, undefined, opts)\n  }\n\n  getRelationships(\n    params?: AppBskyGraphGetRelationships.QueryParams,\n    opts?: AppBskyGraphGetRelationships.CallOptions,\n  ): Promise<AppBskyGraphGetRelationships.Response> {\n    return this._client\n      .call('app.bsky.graph.getRelationships', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetRelationships.toKnownErr(e)\n      })\n  }\n\n  getStarterPack(\n    params?: AppBskyGraphGetStarterPack.QueryParams,\n    opts?: AppBskyGraphGetStarterPack.CallOptions,\n  ): Promise<AppBskyGraphGetStarterPack.Response> {\n    return this._client.call(\n      'app.bsky.graph.getStarterPack',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getStarterPacks(\n    params?: AppBskyGraphGetStarterPacks.QueryParams,\n    opts?: AppBskyGraphGetStarterPacks.CallOptions,\n  ): Promise<AppBskyGraphGetStarterPacks.Response> {\n    return this._client.call(\n      'app.bsky.graph.getStarterPacks',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getSuggestedFollowsByActor(\n    params?: AppBskyGraphGetSuggestedFollowsByActor.QueryParams,\n    opts?: AppBskyGraphGetSuggestedFollowsByActor.CallOptions,\n  ): Promise<AppBskyGraphGetSuggestedFollowsByActor.Response> {\n    return this._client.call(\n      'app.bsky.graph.getSuggestedFollowsByActor',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  muteActor(\n    data?: AppBskyGraphMuteActor.InputSchema,\n    opts?: AppBskyGraphMuteActor.CallOptions,\n  ): Promise<AppBskyGraphMuteActor.Response> {\n    return this._client.call('app.bsky.graph.muteActor', opts?.qp, data, opts)\n  }\n\n  muteActorList(\n    data?: AppBskyGraphMuteActorList.InputSchema,\n    opts?: AppBskyGraphMuteActorList.CallOptions,\n  ): Promise<AppBskyGraphMuteActorList.Response> {\n    return this._client.call(\n      'app.bsky.graph.muteActorList',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  muteThread(\n    data?: AppBskyGraphMuteThread.InputSchema,\n    opts?: AppBskyGraphMuteThread.CallOptions,\n  ): Promise<AppBskyGraphMuteThread.Response> {\n    return this._client.call('app.bsky.graph.muteThread', opts?.qp, data, opts)\n  }\n\n  searchStarterPacks(\n    params?: AppBskyGraphSearchStarterPacks.QueryParams,\n    opts?: AppBskyGraphSearchStarterPacks.CallOptions,\n  ): Promise<AppBskyGraphSearchStarterPacks.Response> {\n    return this._client.call(\n      'app.bsky.graph.searchStarterPacks',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  unmuteActor(\n    data?: AppBskyGraphUnmuteActor.InputSchema,\n    opts?: AppBskyGraphUnmuteActor.CallOptions,\n  ): Promise<AppBskyGraphUnmuteActor.Response> {\n    return this._client.call('app.bsky.graph.unmuteActor', opts?.qp, data, opts)\n  }\n\n  unmuteActorList(\n    data?: AppBskyGraphUnmuteActorList.InputSchema,\n    opts?: AppBskyGraphUnmuteActorList.CallOptions,\n  ): Promise<AppBskyGraphUnmuteActorList.Response> {\n    return this._client.call(\n      'app.bsky.graph.unmuteActorList',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  unmuteThread(\n    data?: AppBskyGraphUnmuteThread.InputSchema,\n    opts?: AppBskyGraphUnmuteThread.CallOptions,\n  ): Promise<AppBskyGraphUnmuteThread.Response> {\n    return this._client.call(\n      'app.bsky.graph.unmuteThread',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class BlockRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphBlock.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.block',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphBlock.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.block',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyGraphBlock.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.graph.block'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.block', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class FollowRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphFollow.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.follow',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphFollow.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.follow',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyGraphFollow.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.graph.follow'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.follow', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphList.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.list',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphList.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.list',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyGraphList.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.graph.list'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.list', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListblockRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphListblock.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.listblock',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyGraphListblock.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.listblock',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyGraphListblock.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.graph.listblock'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listblock', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListitemRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphListitem.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.listitem',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphListitem.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.listitem',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyGraphListitem.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.graph.listitem'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listitem', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class StarterpackRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphStarterpack.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.starterpack',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyGraphStarterpack.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.starterpack',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyGraphStarterpack.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.graph.starterpack'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection, ...params, record: { ...record, $type: collection } },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.starterpack', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyLabelerNS {\n  _client: XrpcClient\n  service: ServiceRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.service = new ServiceRecord(client)\n  }\n\n  getServices(\n    params?: AppBskyLabelerGetServices.QueryParams,\n    opts?: AppBskyLabelerGetServices.CallOptions,\n  ): Promise<AppBskyLabelerGetServices.Response> {\n    return this._client.call(\n      'app.bsky.labeler.getServices',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ServiceRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyLabelerService.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.labeler.service',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyLabelerService.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.labeler.service',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<AppBskyLabelerService.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'app.bsky.labeler.service'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      {\n        collection,\n        rkey: 'self',\n        ...params,\n        record: { ...record, $type: collection },\n      },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.labeler.service', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyNotificationNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getUnreadCount(\n    params?: AppBskyNotificationGetUnreadCount.QueryParams,\n    opts?: AppBskyNotificationGetUnreadCount.CallOptions,\n  ): Promise<AppBskyNotificationGetUnreadCount.Response> {\n    return this._client.call(\n      'app.bsky.notification.getUnreadCount',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  listNotifications(\n    params?: AppBskyNotificationListNotifications.QueryParams,\n    opts?: AppBskyNotificationListNotifications.CallOptions,\n  ): Promise<AppBskyNotificationListNotifications.Response> {\n    return this._client.call(\n      'app.bsky.notification.listNotifications',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  putPreferences(\n    data?: AppBskyNotificationPutPreferences.InputSchema,\n    opts?: AppBskyNotificationPutPreferences.CallOptions,\n  ): Promise<AppBskyNotificationPutPreferences.Response> {\n    return this._client.call(\n      'app.bsky.notification.putPreferences',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  registerPush(\n    data?: AppBskyNotificationRegisterPush.InputSchema,\n    opts?: AppBskyNotificationRegisterPush.CallOptions,\n  ): Promise<AppBskyNotificationRegisterPush.Response> {\n    return this._client.call(\n      'app.bsky.notification.registerPush',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateSeen(\n    data?: AppBskyNotificationUpdateSeen.InputSchema,\n    opts?: AppBskyNotificationUpdateSeen.CallOptions,\n  ): Promise<AppBskyNotificationUpdateSeen.Response> {\n    return this._client.call(\n      'app.bsky.notification.updateSeen',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class AppBskyRichtextNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n}\n\nexport class AppBskyUnspeccedNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getConfig(\n    params?: AppBskyUnspeccedGetConfig.QueryParams,\n    opts?: AppBskyUnspeccedGetConfig.CallOptions,\n  ): Promise<AppBskyUnspeccedGetConfig.Response> {\n    return this._client.call(\n      'app.bsky.unspecced.getConfig',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getPopularFeedGenerators(\n    params?: AppBskyUnspeccedGetPopularFeedGenerators.QueryParams,\n    opts?: AppBskyUnspeccedGetPopularFeedGenerators.CallOptions,\n  ): Promise<AppBskyUnspeccedGetPopularFeedGenerators.Response> {\n    return this._client.call(\n      'app.bsky.unspecced.getPopularFeedGenerators',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getSuggestionsSkeleton(\n    params?: AppBskyUnspeccedGetSuggestionsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedGetSuggestionsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedGetSuggestionsSkeleton.Response> {\n    return this._client.call(\n      'app.bsky.unspecced.getSuggestionsSkeleton',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getTaggedSuggestions(\n    params?: AppBskyUnspeccedGetTaggedSuggestions.QueryParams,\n    opts?: AppBskyUnspeccedGetTaggedSuggestions.CallOptions,\n  ): Promise<AppBskyUnspeccedGetTaggedSuggestions.Response> {\n    return this._client.call(\n      'app.bsky.unspecced.getTaggedSuggestions',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getTrendingTopics(\n    params?: AppBskyUnspeccedGetTrendingTopics.QueryParams,\n    opts?: AppBskyUnspeccedGetTrendingTopics.CallOptions,\n  ): Promise<AppBskyUnspeccedGetTrendingTopics.Response> {\n    return this._client.call(\n      'app.bsky.unspecced.getTrendingTopics',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchActorsSkeleton(\n    params?: AppBskyUnspeccedSearchActorsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchActorsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchActorsSkeleton.Response> {\n    return this._client\n      .call('app.bsky.unspecced.searchActorsSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchActorsSkeleton.toKnownErr(e)\n      })\n  }\n\n  searchPostsSkeleton(\n    params?: AppBskyUnspeccedSearchPostsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchPostsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchPostsSkeleton.Response> {\n    return this._client\n      .call('app.bsky.unspecced.searchPostsSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchPostsSkeleton.toKnownErr(e)\n      })\n  }\n\n  searchStarterPacksSkeleton(\n    params?: AppBskyUnspeccedSearchStarterPacksSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchStarterPacksSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchStarterPacksSkeleton.Response> {\n    return this._client\n      .call(\n        'app.bsky.unspecced.searchStarterPacksSkeleton',\n        params,\n        undefined,\n        opts,\n      )\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchStarterPacksSkeleton.toKnownErr(e)\n      })\n  }\n}\n\nexport class AppBskyVideoNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getJobStatus(\n    params?: AppBskyVideoGetJobStatus.QueryParams,\n    opts?: AppBskyVideoGetJobStatus.CallOptions,\n  ): Promise<AppBskyVideoGetJobStatus.Response> {\n    return this._client.call(\n      'app.bsky.video.getJobStatus',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getUploadLimits(\n    params?: AppBskyVideoGetUploadLimits.QueryParams,\n    opts?: AppBskyVideoGetUploadLimits.CallOptions,\n  ): Promise<AppBskyVideoGetUploadLimits.Response> {\n    return this._client.call(\n      'app.bsky.video.getUploadLimits',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  uploadVideo(\n    data?: AppBskyVideoUploadVideo.InputSchema,\n    opts?: AppBskyVideoUploadVideo.CallOptions,\n  ): Promise<AppBskyVideoUploadVideo.Response> {\n    return this._client.call('app.bsky.video.uploadVideo', opts?.qp, data, opts)\n  }\n}\n\nexport class ChatNS {\n  _client: XrpcClient\n  bsky: ChatBskyNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.bsky = new ChatBskyNS(client)\n  }\n}\n\nexport class ChatBskyNS {\n  _client: XrpcClient\n  actor: ChatBskyActorNS\n  convo: ChatBskyConvoNS\n  moderation: ChatBskyModerationNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.actor = new ChatBskyActorNS(client)\n    this.convo = new ChatBskyConvoNS(client)\n    this.moderation = new ChatBskyModerationNS(client)\n  }\n}\n\nexport class ChatBskyActorNS {\n  _client: XrpcClient\n  declaration: DeclarationRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.declaration = new DeclarationRecord(client)\n  }\n\n  deleteAccount(\n    data?: ChatBskyActorDeleteAccount.InputSchema,\n    opts?: ChatBskyActorDeleteAccount.CallOptions,\n  ): Promise<ChatBskyActorDeleteAccount.Response> {\n    return this._client.call(\n      'chat.bsky.actor.deleteAccount',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  exportAccountData(\n    params?: ChatBskyActorExportAccountData.QueryParams,\n    opts?: ChatBskyActorExportAccountData.CallOptions,\n  ): Promise<ChatBskyActorExportAccountData.Response> {\n    return this._client.call(\n      'chat.bsky.actor.exportAccountData',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class DeclarationRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: OmitKey<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: ChatBskyActorDeclaration.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'chat.bsky.actor.declaration',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: OmitKey<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: ChatBskyActorDeclaration.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'chat.bsky.actor.declaration',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: OmitKey<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: Un$Typed<ChatBskyActorDeclaration.Record>,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    const collection = 'chat.bsky.actor.declaration'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      {\n        collection,\n        rkey: 'self',\n        ...params,\n        record: { ...record, $type: collection },\n      },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: OmitKey<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'chat.bsky.actor.declaration', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ChatBskyConvoNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  acceptConvo(\n    data?: ChatBskyConvoAcceptConvo.InputSchema,\n    opts?: ChatBskyConvoAcceptConvo.CallOptions,\n  ): Promise<ChatBskyConvoAcceptConvo.Response> {\n    return this._client.call(\n      'chat.bsky.convo.acceptConvo',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  deleteMessageForSelf(\n    data?: ChatBskyConvoDeleteMessageForSelf.InputSchema,\n    opts?: ChatBskyConvoDeleteMessageForSelf.CallOptions,\n  ): Promise<ChatBskyConvoDeleteMessageForSelf.Response> {\n    return this._client.call(\n      'chat.bsky.convo.deleteMessageForSelf',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  getConvo(\n    params?: ChatBskyConvoGetConvo.QueryParams,\n    opts?: ChatBskyConvoGetConvo.CallOptions,\n  ): Promise<ChatBskyConvoGetConvo.Response> {\n    return this._client.call(\n      'chat.bsky.convo.getConvo',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getConvoAvailability(\n    params?: ChatBskyConvoGetConvoAvailability.QueryParams,\n    opts?: ChatBskyConvoGetConvoAvailability.CallOptions,\n  ): Promise<ChatBskyConvoGetConvoAvailability.Response> {\n    return this._client.call(\n      'chat.bsky.convo.getConvoAvailability',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getConvoForMembers(\n    params?: ChatBskyConvoGetConvoForMembers.QueryParams,\n    opts?: ChatBskyConvoGetConvoForMembers.CallOptions,\n  ): Promise<ChatBskyConvoGetConvoForMembers.Response> {\n    return this._client.call(\n      'chat.bsky.convo.getConvoForMembers',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getLog(\n    params?: ChatBskyConvoGetLog.QueryParams,\n    opts?: ChatBskyConvoGetLog.CallOptions,\n  ): Promise<ChatBskyConvoGetLog.Response> {\n    return this._client.call('chat.bsky.convo.getLog', params, undefined, opts)\n  }\n\n  getMessages(\n    params?: ChatBskyConvoGetMessages.QueryParams,\n    opts?: ChatBskyConvoGetMessages.CallOptions,\n  ): Promise<ChatBskyConvoGetMessages.Response> {\n    return this._client.call(\n      'chat.bsky.convo.getMessages',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  leaveConvo(\n    data?: ChatBskyConvoLeaveConvo.InputSchema,\n    opts?: ChatBskyConvoLeaveConvo.CallOptions,\n  ): Promise<ChatBskyConvoLeaveConvo.Response> {\n    return this._client.call('chat.bsky.convo.leaveConvo', opts?.qp, data, opts)\n  }\n\n  listConvos(\n    params?: ChatBskyConvoListConvos.QueryParams,\n    opts?: ChatBskyConvoListConvos.CallOptions,\n  ): Promise<ChatBskyConvoListConvos.Response> {\n    return this._client.call(\n      'chat.bsky.convo.listConvos',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  muteConvo(\n    data?: ChatBskyConvoMuteConvo.InputSchema,\n    opts?: ChatBskyConvoMuteConvo.CallOptions,\n  ): Promise<ChatBskyConvoMuteConvo.Response> {\n    return this._client.call('chat.bsky.convo.muteConvo', opts?.qp, data, opts)\n  }\n\n  sendMessage(\n    data?: ChatBskyConvoSendMessage.InputSchema,\n    opts?: ChatBskyConvoSendMessage.CallOptions,\n  ): Promise<ChatBskyConvoSendMessage.Response> {\n    return this._client.call(\n      'chat.bsky.convo.sendMessage',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  sendMessageBatch(\n    data?: ChatBskyConvoSendMessageBatch.InputSchema,\n    opts?: ChatBskyConvoSendMessageBatch.CallOptions,\n  ): Promise<ChatBskyConvoSendMessageBatch.Response> {\n    return this._client.call(\n      'chat.bsky.convo.sendMessageBatch',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  unmuteConvo(\n    data?: ChatBskyConvoUnmuteConvo.InputSchema,\n    opts?: ChatBskyConvoUnmuteConvo.CallOptions,\n  ): Promise<ChatBskyConvoUnmuteConvo.Response> {\n    return this._client.call(\n      'chat.bsky.convo.unmuteConvo',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateAllRead(\n    data?: ChatBskyConvoUpdateAllRead.InputSchema,\n    opts?: ChatBskyConvoUpdateAllRead.CallOptions,\n  ): Promise<ChatBskyConvoUpdateAllRead.Response> {\n    return this._client.call(\n      'chat.bsky.convo.updateAllRead',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateRead(\n    data?: ChatBskyConvoUpdateRead.InputSchema,\n    opts?: ChatBskyConvoUpdateRead.CallOptions,\n  ): Promise<ChatBskyConvoUpdateRead.Response> {\n    return this._client.call('chat.bsky.convo.updateRead', opts?.qp, data, opts)\n  }\n}\n\nexport class ChatBskyModerationNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getActorMetadata(\n    params?: ChatBskyModerationGetActorMetadata.QueryParams,\n    opts?: ChatBskyModerationGetActorMetadata.CallOptions,\n  ): Promise<ChatBskyModerationGetActorMetadata.Response> {\n    return this._client.call(\n      'chat.bsky.moderation.getActorMetadata',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getMessageContext(\n    params?: ChatBskyModerationGetMessageContext.QueryParams,\n    opts?: ChatBskyModerationGetMessageContext.CallOptions,\n  ): Promise<ChatBskyModerationGetMessageContext.Response> {\n    return this._client.call(\n      'chat.bsky.moderation.getMessageContext',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  updateActorAccess(\n    data?: ChatBskyModerationUpdateActorAccess.InputSchema,\n    opts?: ChatBskyModerationUpdateActorAccess.CallOptions,\n  ): Promise<ChatBskyModerationUpdateActorAccess.Response> {\n    return this._client.call(\n      'chat.bsky.moderation.updateActorAccess',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ToolsNS {\n  _client: XrpcClient\n  ozone: ToolsOzoneNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.ozone = new ToolsOzoneNS(client)\n  }\n}\n\nexport class ToolsOzoneNS {\n  _client: XrpcClient\n  communication: ToolsOzoneCommunicationNS\n  moderation: ToolsOzoneModerationNS\n  server: ToolsOzoneServerNS\n  set: ToolsOzoneSetNS\n  setting: ToolsOzoneSettingNS\n  signature: ToolsOzoneSignatureNS\n  team: ToolsOzoneTeamNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.communication = new ToolsOzoneCommunicationNS(client)\n    this.moderation = new ToolsOzoneModerationNS(client)\n    this.server = new ToolsOzoneServerNS(client)\n    this.set = new ToolsOzoneSetNS(client)\n    this.setting = new ToolsOzoneSettingNS(client)\n    this.signature = new ToolsOzoneSignatureNS(client)\n    this.team = new ToolsOzoneTeamNS(client)\n  }\n}\n\nexport class ToolsOzoneCommunicationNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  createTemplate(\n    data?: ToolsOzoneCommunicationCreateTemplate.InputSchema,\n    opts?: ToolsOzoneCommunicationCreateTemplate.CallOptions,\n  ): Promise<ToolsOzoneCommunicationCreateTemplate.Response> {\n    return this._client\n      .call('tools.ozone.communication.createTemplate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneCommunicationCreateTemplate.toKnownErr(e)\n      })\n  }\n\n  deleteTemplate(\n    data?: ToolsOzoneCommunicationDeleteTemplate.InputSchema,\n    opts?: ToolsOzoneCommunicationDeleteTemplate.CallOptions,\n  ): Promise<ToolsOzoneCommunicationDeleteTemplate.Response> {\n    return this._client.call(\n      'tools.ozone.communication.deleteTemplate',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  listTemplates(\n    params?: ToolsOzoneCommunicationListTemplates.QueryParams,\n    opts?: ToolsOzoneCommunicationListTemplates.CallOptions,\n  ): Promise<ToolsOzoneCommunicationListTemplates.Response> {\n    return this._client.call(\n      'tools.ozone.communication.listTemplates',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  updateTemplate(\n    data?: ToolsOzoneCommunicationUpdateTemplate.InputSchema,\n    opts?: ToolsOzoneCommunicationUpdateTemplate.CallOptions,\n  ): Promise<ToolsOzoneCommunicationUpdateTemplate.Response> {\n    return this._client\n      .call('tools.ozone.communication.updateTemplate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneCommunicationUpdateTemplate.toKnownErr(e)\n      })\n  }\n}\n\nexport class ToolsOzoneModerationNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  emitEvent(\n    data?: ToolsOzoneModerationEmitEvent.InputSchema,\n    opts?: ToolsOzoneModerationEmitEvent.CallOptions,\n  ): Promise<ToolsOzoneModerationEmitEvent.Response> {\n    return this._client\n      .call('tools.ozone.moderation.emitEvent', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationEmitEvent.toKnownErr(e)\n      })\n  }\n\n  getEvent(\n    params?: ToolsOzoneModerationGetEvent.QueryParams,\n    opts?: ToolsOzoneModerationGetEvent.CallOptions,\n  ): Promise<ToolsOzoneModerationGetEvent.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.getEvent',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getRecord(\n    params?: ToolsOzoneModerationGetRecord.QueryParams,\n    opts?: ToolsOzoneModerationGetRecord.CallOptions,\n  ): Promise<ToolsOzoneModerationGetRecord.Response> {\n    return this._client\n      .call('tools.ozone.moderation.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationGetRecord.toKnownErr(e)\n      })\n  }\n\n  getRecords(\n    params?: ToolsOzoneModerationGetRecords.QueryParams,\n    opts?: ToolsOzoneModerationGetRecords.CallOptions,\n  ): Promise<ToolsOzoneModerationGetRecords.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.getRecords',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getRepo(\n    params?: ToolsOzoneModerationGetRepo.QueryParams,\n    opts?: ToolsOzoneModerationGetRepo.CallOptions,\n  ): Promise<ToolsOzoneModerationGetRepo.Response> {\n    return this._client\n      .call('tools.ozone.moderation.getRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationGetRepo.toKnownErr(e)\n      })\n  }\n\n  getReporterStats(\n    params?: ToolsOzoneModerationGetReporterStats.QueryParams,\n    opts?: ToolsOzoneModerationGetReporterStats.CallOptions,\n  ): Promise<ToolsOzoneModerationGetReporterStats.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.getReporterStats',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getRepos(\n    params?: ToolsOzoneModerationGetRepos.QueryParams,\n    opts?: ToolsOzoneModerationGetRepos.CallOptions,\n  ): Promise<ToolsOzoneModerationGetRepos.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.getRepos',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  queryEvents(\n    params?: ToolsOzoneModerationQueryEvents.QueryParams,\n    opts?: ToolsOzoneModerationQueryEvents.CallOptions,\n  ): Promise<ToolsOzoneModerationQueryEvents.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.queryEvents',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  queryStatuses(\n    params?: ToolsOzoneModerationQueryStatuses.QueryParams,\n    opts?: ToolsOzoneModerationQueryStatuses.CallOptions,\n  ): Promise<ToolsOzoneModerationQueryStatuses.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.queryStatuses',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchRepos(\n    params?: ToolsOzoneModerationSearchRepos.QueryParams,\n    opts?: ToolsOzoneModerationSearchRepos.CallOptions,\n  ): Promise<ToolsOzoneModerationSearchRepos.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.searchRepos',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ToolsOzoneServerNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getConfig(\n    params?: ToolsOzoneServerGetConfig.QueryParams,\n    opts?: ToolsOzoneServerGetConfig.CallOptions,\n  ): Promise<ToolsOzoneServerGetConfig.Response> {\n    return this._client.call(\n      'tools.ozone.server.getConfig',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ToolsOzoneSetNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  addValues(\n    data?: ToolsOzoneSetAddValues.InputSchema,\n    opts?: ToolsOzoneSetAddValues.CallOptions,\n  ): Promise<ToolsOzoneSetAddValues.Response> {\n    return this._client.call('tools.ozone.set.addValues', opts?.qp, data, opts)\n  }\n\n  deleteSet(\n    data?: ToolsOzoneSetDeleteSet.InputSchema,\n    opts?: ToolsOzoneSetDeleteSet.CallOptions,\n  ): Promise<ToolsOzoneSetDeleteSet.Response> {\n    return this._client\n      .call('tools.ozone.set.deleteSet', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneSetDeleteSet.toKnownErr(e)\n      })\n  }\n\n  deleteValues(\n    data?: ToolsOzoneSetDeleteValues.InputSchema,\n    opts?: ToolsOzoneSetDeleteValues.CallOptions,\n  ): Promise<ToolsOzoneSetDeleteValues.Response> {\n    return this._client\n      .call('tools.ozone.set.deleteValues', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneSetDeleteValues.toKnownErr(e)\n      })\n  }\n\n  getValues(\n    params?: ToolsOzoneSetGetValues.QueryParams,\n    opts?: ToolsOzoneSetGetValues.CallOptions,\n  ): Promise<ToolsOzoneSetGetValues.Response> {\n    return this._client\n      .call('tools.ozone.set.getValues', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneSetGetValues.toKnownErr(e)\n      })\n  }\n\n  querySets(\n    params?: ToolsOzoneSetQuerySets.QueryParams,\n    opts?: ToolsOzoneSetQuerySets.CallOptions,\n  ): Promise<ToolsOzoneSetQuerySets.Response> {\n    return this._client.call(\n      'tools.ozone.set.querySets',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  upsertSet(\n    data?: ToolsOzoneSetUpsertSet.InputSchema,\n    opts?: ToolsOzoneSetUpsertSet.CallOptions,\n  ): Promise<ToolsOzoneSetUpsertSet.Response> {\n    return this._client.call('tools.ozone.set.upsertSet', opts?.qp, data, opts)\n  }\n}\n\nexport class ToolsOzoneSettingNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  listOptions(\n    params?: ToolsOzoneSettingListOptions.QueryParams,\n    opts?: ToolsOzoneSettingListOptions.CallOptions,\n  ): Promise<ToolsOzoneSettingListOptions.Response> {\n    return this._client.call(\n      'tools.ozone.setting.listOptions',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  removeOptions(\n    data?: ToolsOzoneSettingRemoveOptions.InputSchema,\n    opts?: ToolsOzoneSettingRemoveOptions.CallOptions,\n  ): Promise<ToolsOzoneSettingRemoveOptions.Response> {\n    return this._client.call(\n      'tools.ozone.setting.removeOptions',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  upsertOption(\n    data?: ToolsOzoneSettingUpsertOption.InputSchema,\n    opts?: ToolsOzoneSettingUpsertOption.CallOptions,\n  ): Promise<ToolsOzoneSettingUpsertOption.Response> {\n    return this._client.call(\n      'tools.ozone.setting.upsertOption',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ToolsOzoneSignatureNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  findCorrelation(\n    params?: ToolsOzoneSignatureFindCorrelation.QueryParams,\n    opts?: ToolsOzoneSignatureFindCorrelation.CallOptions,\n  ): Promise<ToolsOzoneSignatureFindCorrelation.Response> {\n    return this._client.call(\n      'tools.ozone.signature.findCorrelation',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  findRelatedAccounts(\n    params?: ToolsOzoneSignatureFindRelatedAccounts.QueryParams,\n    opts?: ToolsOzoneSignatureFindRelatedAccounts.CallOptions,\n  ): Promise<ToolsOzoneSignatureFindRelatedAccounts.Response> {\n    return this._client.call(\n      'tools.ozone.signature.findRelatedAccounts',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchAccounts(\n    params?: ToolsOzoneSignatureSearchAccounts.QueryParams,\n    opts?: ToolsOzoneSignatureSearchAccounts.CallOptions,\n  ): Promise<ToolsOzoneSignatureSearchAccounts.Response> {\n    return this._client.call(\n      'tools.ozone.signature.searchAccounts',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ToolsOzoneTeamNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  addMember(\n    data?: ToolsOzoneTeamAddMember.InputSchema,\n    opts?: ToolsOzoneTeamAddMember.CallOptions,\n  ): Promise<ToolsOzoneTeamAddMember.Response> {\n    return this._client\n      .call('tools.ozone.team.addMember', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneTeamAddMember.toKnownErr(e)\n      })\n  }\n\n  deleteMember(\n    data?: ToolsOzoneTeamDeleteMember.InputSchema,\n    opts?: ToolsOzoneTeamDeleteMember.CallOptions,\n  ): Promise<ToolsOzoneTeamDeleteMember.Response> {\n    return this._client\n      .call('tools.ozone.team.deleteMember', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneTeamDeleteMember.toKnownErr(e)\n      })\n  }\n\n  listMembers(\n    params?: ToolsOzoneTeamListMembers.QueryParams,\n    opts?: ToolsOzoneTeamListMembers.CallOptions,\n  ): Promise<ToolsOzoneTeamListMembers.Response> {\n    return this._client.call(\n      'tools.ozone.team.listMembers',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  updateMember(\n    data?: ToolsOzoneTeamUpdateMember.InputSchema,\n    opts?: ToolsOzoneTeamUpdateMember.CallOptions,\n  ): Promise<ToolsOzoneTeamUpdateMember.Response> {\n    return this._client\n      .call('tools.ozone.team.updateMember', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneTeamUpdateMember.toKnownErr(e)\n      })\n  }\n}\n", "[\n  \"aaa\",\n  \"aarp\",\n  \"abarth\",\n  \"abb\",\n  \"abbott\",\n  \"abbvie\",\n  \"abc\",\n  \"able\",\n  \"abogado\",\n  \"abudhabi\",\n  \"ac\",\n  \"academy\",\n  \"accenture\",\n  \"accountant\",\n  \"accountants\",\n  \"aco\",\n  \"actor\",\n  \"ad\",\n  \"ads\",\n  \"adult\",\n  \"ae\",\n  \"aeg\",\n  \"aero\",\n  \"aetna\",\n  \"af\",\n  \"afl\",\n  \"africa\",\n  \"ag\",\n  \"agakhan\",\n  \"agency\",\n  \"ai\",\n  \"aig\",\n  \"airbus\",\n  \"airforce\",\n  \"airtel\",\n  \"akdn\",\n  \"al\",\n  \"alfaromeo\",\n  \"alibaba\",\n  \"alipay\",\n  \"allfinanz\",\n  \"allstate\",\n  \"ally\",\n  \"alsace\",\n  \"alstom\",\n  \"am\",\n  \"amazon\",\n  \"americanexpress\",\n  \"americanfamily\",\n  \"amex\",\n  \"amfam\",\n  \"amica\",\n  \"amsterdam\",\n  \"analytics\",\n  \"android\",\n  \"anquan\",\n  \"anz\",\n  \"ao\",\n  \"aol\",\n  \"apartments\",\n  \"app\",\n  \"apple\",\n  \"aq\",\n  \"aquarelle\",\n  \"ar\",\n  \"arab\",\n  \"aramco\",\n  \"archi\",\n  \"army\",\n  \"arpa\",\n  \"art\",\n  \"arte\",\n  \"as\",\n  \"asda\",\n  \"asia\",\n  \"associates\",\n  \"at\",\n  \"athleta\",\n  \"attorney\",\n  \"au\",\n  \"auction\",\n  \"audi\",\n  \"audible\",\n  \"audio\",\n  \"auspost\",\n  \"author\",\n  \"auto\",\n  \"autos\",\n  \"avianca\",\n  \"aw\",\n  \"aws\",\n  \"ax\",\n  \"axa\",\n  \"az\",\n  \"azure\",\n  \"ba\",\n  \"baby\",\n  \"baidu\",\n  \"banamex\",\n  \"bananarepublic\",\n  \"band\",\n  \"bank\",\n  \"bar\",\n  \"barcelona\",\n  \"barclaycard\",\n  \"barclays\",\n  \"barefoot\",\n  \"bargains\",\n  \"baseball\",\n  \"basketball\",\n  \"bauhaus\",\n  \"bayern\",\n  \"bb\",\n  \"bbc\",\n  \"bbt\",\n  \"bbva\",\n  \"bcg\",\n  \"bcn\",\n  \"bd\",\n  \"be\",\n  \"beats\",\n  \"beauty\",\n  \"beer\",\n  \"bentley\",\n  \"berlin\",\n  \"best\",\n  \"bestbuy\",\n  \"bet\",\n  \"bf\",\n  \"bg\",\n  \"bh\",\n  \"bharti\",\n  \"bi\",\n  \"bible\",\n  \"bid\",\n  \"bike\",\n  \"bing\",\n  \"bingo\",\n  \"bio\",\n  \"biz\",\n  \"bj\",\n  \"black\",\n  \"blackfriday\",\n  \"blockbuster\",\n  \"blog\",\n  \"bloomberg\",\n  \"blue\",\n  \"bm\",\n  \"bms\",\n  \"bmw\",\n  \"bn\",\n  \"bnpparibas\",\n  \"bo\",\n  \"boats\",\n  \"boehringer\",\n  \"bofa\",\n  \"bom\",\n  \"bond\",\n  \"boo\",\n  \"book\",\n  \"booking\",\n  \"bosch\",\n  \"bostik\",\n  \"boston\",\n  \"bot\",\n  \"boutique\",\n  \"box\",\n  \"br\",\n  \"bradesco\",\n  \"bridgestone\",\n  \"broadway\",\n  \"broker\",\n  \"brother\",\n  \"brussels\",\n  \"bs\",\n  \"bt\",\n  \"build\",\n  \"builders\",\n  \"business\",\n  \"buy\",\n  \"buzz\",\n  \"bv\",\n  \"bw\",\n  \"by\",\n  \"bz\",\n  \"bzh\",\n  \"ca\",\n  \"cab\",\n  \"cafe\",\n  \"cal\",\n  \"call\",\n  \"calvinklein\",\n  \"cam\",\n  \"camera\",\n  \"camp\",\n  \"canon\",\n  \"capetown\",\n  \"capital\",\n  \"capitalone\",\n  \"car\",\n  \"caravan\",\n  \"cards\",\n  \"care\",\n  \"career\",\n  \"careers\",\n  \"cars\",\n  \"casa\",\n  \"case\",\n  \"cash\",\n  \"casino\",\n  \"cat\",\n  \"catering\",\n  \"catholic\",\n  \"cba\",\n  \"cbn\",\n  \"cbre\",\n  \"cbs\",\n  \"cc\",\n  \"cd\",\n  \"center\",\n  \"ceo\",\n  \"cern\",\n  \"cf\",\n  \"cfa\",\n  \"cfd\",\n  \"cg\",\n  \"ch\",\n  \"chanel\",\n  \"channel\",\n  \"charity\",\n  \"chase\",\n  \"chat\",\n  \"cheap\",\n  \"chintai\",\n  \"christmas\",\n  \"chrome\",\n  \"church\",\n  \"ci\",\n  \"cipriani\",\n  \"circle\",\n  \"cisco\",\n  \"citadel\",\n  \"citi\",\n  \"citic\",\n  \"city\",\n  \"cityeats\",\n  \"ck\",\n  \"cl\",\n  \"claims\",\n  \"cleaning\",\n  \"click\",\n  \"clinic\",\n  \"clinique\",\n  \"clothing\",\n  \"cloud\",\n  \"club\",\n  \"clubmed\",\n  \"cm\",\n  \"cn\",\n  \"co\",\n  \"coach\",\n  \"codes\",\n  \"coffee\",\n  \"college\",\n  \"cologne\",\n  \"com\",\n  \"comcast\",\n  \"commbank\",\n  \"community\",\n  \"company\",\n  \"compare\",\n  \"computer\",\n  \"comsec\",\n  \"condos\",\n  \"construction\",\n  \"consulting\",\n  \"contact\",\n  \"contractors\",\n  \"cooking\",\n  \"cookingchannel\",\n  \"cool\",\n  \"coop\",\n  \"corsica\",\n  \"country\",\n  \"coupon\",\n  \"coupons\",\n  \"courses\",\n  \"cpa\",\n  \"cr\",\n  \"credit\",\n  \"creditcard\",\n  \"creditunion\",\n  \"cricket\",\n  \"crown\",\n  \"crs\",\n  \"cruise\",\n  \"cruises\",\n  \"cu\",\n  \"cuisinella\",\n  \"cv\",\n  \"cw\",\n  \"cx\",\n  \"cy\",\n  \"cymru\",\n  \"cyou\",\n  \"cz\",\n  \"dabur\",\n  \"dad\",\n  \"dance\",\n  \"data\",\n  \"date\",\n  \"dating\",\n  \"datsun\",\n  \"day\",\n  \"dclk\",\n  \"dds\",\n  \"de\",\n  \"deal\",\n  \"dealer\",\n  \"deals\",\n  \"degree\",\n  \"delivery\",\n  \"dell\",\n  \"deloitte\",\n  \"delta\",\n  \"democrat\",\n  \"dental\",\n  \"dentist\",\n  \"desi\",\n  \"design\",\n  \"dev\",\n  \"dhl\",\n  \"diamonds\",\n  \"diet\",\n  \"digital\",\n  \"direct\",\n  \"directory\",\n  \"discount\",\n  \"discover\",\n  \"dish\",\n  \"diy\",\n  \"dj\",\n  \"dk\",\n  \"dm\",\n  \"dnp\",\n  \"do\",\n  \"docs\",\n  \"doctor\",\n  \"dog\",\n  \"domains\",\n  \"dot\",\n  \"download\",\n  \"drive\",\n  \"dtv\",\n  \"dubai\",\n  \"dunlop\",\n  \"dupont\",\n  \"durban\",\n  \"dvag\",\n  \"dvr\",\n  \"dz\",\n  \"earth\",\n  \"eat\",\n  \"ec\",\n  \"eco\",\n  \"edeka\",\n  \"edu\",\n  \"education\",\n  \"ee\",\n  \"eg\",\n  \"email\",\n  \"emerck\",\n  \"energy\",\n  \"engineer\",\n  \"engineering\",\n  \"enterprises\",\n  \"epson\",\n  \"equipment\",\n  \"er\",\n  \"ericsson\",\n  \"erni\",\n  \"es\",\n  \"esq\",\n  \"estate\",\n  \"et\",\n  \"etisalat\",\n  \"eu\",\n  \"eurovision\",\n  \"eus\",\n  \"events\",\n  \"exchange\",\n  \"expert\",\n  \"exposed\",\n  \"express\",\n  \"extraspace\",\n  \"fage\",\n  \"fail\",\n  \"fairwinds\",\n  \"faith\",\n  \"family\",\n  \"fan\",\n  \"fans\",\n  \"farm\",\n  \"farmers\",\n  \"fashion\",\n  \"fast\",\n  \"fedex\",\n  \"feedback\",\n  \"ferrari\",\n  \"ferrero\",\n  \"fi\",\n  \"fiat\",\n  \"fidelity\",\n  \"fido\",\n  \"film\",\n  \"final\",\n  \"finance\",\n  \"financial\",\n  \"fire\",\n  \"firestone\",\n  \"firmdale\",\n  \"fish\",\n  \"fishing\",\n  \"fit\",\n  \"fitness\",\n  \"fj\",\n  \"fk\",\n  \"flickr\",\n  \"flights\",\n  \"flir\",\n  \"florist\",\n  \"flowers\",\n  \"fly\",\n  \"fm\",\n  \"fo\",\n  \"foo\",\n  \"food\",\n  \"foodnetwork\",\n  \"football\",\n  \"ford\",\n  \"forex\",\n  \"forsale\",\n  \"forum\",\n  \"foundation\",\n  \"fox\",\n  \"fr\",\n  \"free\",\n  \"fresenius\",\n  \"frl\",\n  \"frogans\",\n  \"frontdoor\",\n  \"frontier\",\n  \"ftr\",\n  \"fujitsu\",\n  \"fun\",\n  \"fund\",\n  \"furniture\",\n  \"futbol\",\n  \"fyi\",\n  \"ga\",\n  \"gal\",\n  \"gallery\",\n  \"gallo\",\n  \"gallup\",\n  \"game\",\n  \"games\",\n  \"gap\",\n  \"garden\",\n  \"gay\",\n  \"gb\",\n  \"gbiz\",\n  \"gd\",\n  \"gdn\",\n  \"ge\",\n  \"gea\",\n  \"gent\",\n  \"genting\",\n  \"george\",\n  \"gf\",\n  \"gg\",\n  \"ggee\",\n  \"gh\",\n  \"gi\",\n  \"gift\",\n  \"gifts\",\n  \"gives\",\n  \"giving\",\n  \"gl\",\n  \"glass\",\n  \"gle\",\n  \"global\",\n  \"globo\",\n  \"gm\",\n  \"gmail\",\n  \"gmbh\",\n  \"gmo\",\n  \"gmx\",\n  \"gn\",\n  \"godaddy\",\n  \"gold\",\n  \"goldpoint\",\n  \"golf\",\n  \"goo\",\n  \"goodyear\",\n  \"goog\",\n  \"google\",\n  \"gop\",\n  \"got\",\n  \"gov\",\n  \"gp\",\n  \"gq\",\n  \"gr\",\n  \"grainger\",\n  \"graphics\",\n  \"gratis\",\n  \"green\",\n  \"gripe\",\n  \"grocery\",\n  \"group\",\n  \"gs\",\n  \"gt\",\n  \"gu\",\n  \"guardian\",\n  \"gucci\",\n  \"guge\",\n  \"guide\",\n  \"guitars\",\n  \"guru\",\n  \"gw\",\n  \"gy\",\n  \"hair\",\n  \"hamburg\",\n  \"hangout\",\n  \"haus\",\n  \"hbo\",\n  \"hdfc\",\n  \"hdfcbank\",\n  \"health\",\n  \"healthcare\",\n  \"help\",\n  \"helsinki\",\n  \"here\",\n  \"hermes\",\n  \"hgtv\",\n  \"hiphop\",\n  \"hisamitsu\",\n  \"hitachi\",\n  \"hiv\",\n  \"hk\",\n  \"hkt\",\n  \"hm\",\n  \"hn\",\n  \"hockey\",\n  \"holdings\",\n  \"holiday\",\n  \"homedepot\",\n  \"homegoods\",\n  \"homes\",\n  \"homesense\",\n  \"honda\",\n  \"horse\",\n  \"hospital\",\n  \"host\",\n  \"hosting\",\n  \"hot\",\n  \"hoteles\",\n  \"hotels\",\n  \"hotmail\",\n  \"house\",\n  \"how\",\n  \"hr\",\n  \"hsbc\",\n  \"ht\",\n  \"hu\",\n  \"hughes\",\n  \"hyatt\",\n  \"hyundai\",\n  \"ibm\",\n  \"icbc\",\n  \"ice\",\n  \"icu\",\n  \"id\",\n  \"ie\",\n  \"ieee\",\n  \"ifm\",\n  \"ikano\",\n  \"il\",\n  \"im\",\n  \"imamat\",\n  \"imdb\",\n  \"immo\",\n  \"immobilien\",\n  \"in\",\n  \"inc\",\n  \"industries\",\n  \"infiniti\",\n  \"info\",\n  \"ing\",\n  \"ink\",\n  \"institute\",\n  \"insurance\",\n  \"insure\",\n  \"int\",\n  \"international\",\n  \"intuit\",\n  \"investments\",\n  \"io\",\n  \"ipiranga\",\n  \"iq\",\n  \"ir\",\n  \"irish\",\n  \"is\",\n  \"ismaili\",\n  \"ist\",\n  \"istanbul\",\n  \"it\",\n  \"itau\",\n  \"itv\",\n  \"jaguar\",\n  \"java\",\n  \"jcb\",\n  \"je\",\n  \"jeep\",\n  \"jetzt\",\n  \"jewelry\",\n  \"jio\",\n  \"jll\",\n  \"jm\",\n  \"jmp\",\n  \"jnj\",\n  \"jo\",\n  \"jobs\",\n  \"joburg\",\n  \"jot\",\n  \"joy\",\n  \"jp\",\n  \"jpmorgan\",\n  \"jprs\",\n  \"juegos\",\n  \"juniper\",\n  \"kaufen\",\n  \"kddi\",\n  \"ke\",\n  \"kerryhotels\",\n  \"kerrylogistics\",\n  \"kerryproperties\",\n  \"kfh\",\n  \"kg\",\n  \"kh\",\n  \"ki\",\n  \"kia\",\n  \"kids\",\n  \"kim\",\n  \"kinder\",\n  \"kindle\",\n  \"kitchen\",\n  \"kiwi\",\n  \"km\",\n  \"kn\",\n  \"koeln\",\n  \"komatsu\",\n  \"kosher\",\n  \"kp\",\n  \"kpmg\",\n  \"kpn\",\n  \"kr\",\n  \"krd\",\n  \"kred\",\n  \"kuokgroup\",\n  \"kw\",\n  \"ky\",\n  \"kyoto\",\n  \"kz\",\n  \"la\",\n  \"lacaixa\",\n  \"lamborghini\",\n  \"lamer\",\n  \"lancaster\",\n  \"lancia\",\n  \"land\",\n  \"landrover\",\n  \"lanxess\",\n  \"lasalle\",\n  \"lat\",\n  \"latino\",\n  \"latrobe\",\n  \"law\",\n  \"lawyer\",\n  \"lb\",\n  \"lc\",\n  \"lds\",\n  \"lease\",\n  \"leclerc\",\n  \"lefrak\",\n  \"legal\",\n  \"lego\",\n  \"lexus\",\n  \"lgbt\",\n  \"li\",\n  \"lidl\",\n  \"life\",\n  \"lifeinsurance\",\n  \"lifestyle\",\n  \"lighting\",\n  \"like\",\n  \"lilly\",\n  \"limited\",\n  \"limo\",\n  \"lincoln\",\n  \"link\",\n  \"lipsy\",\n  \"live\",\n  \"living\",\n  \"lk\",\n  \"llc\",\n  \"llp\",\n  \"loan\",\n  \"loans\",\n  \"locker\",\n  \"locus\",\n  \"lol\",\n  \"london\",\n  \"lotte\",\n  \"lotto\",\n  \"love\",\n  \"lpl\",\n  \"lplfinancial\",\n  \"lr\",\n  \"ls\",\n  \"lt\",\n  \"ltd\",\n  \"ltda\",\n  \"lu\",\n  \"lundbeck\",\n  \"luxe\",\n  \"luxury\",\n  \"lv\",\n  \"ly\",\n  \"ma\",\n  \"madrid\",\n  \"maif\",\n  \"maison\",\n  \"makeup\",\n  \"man\",\n  \"management\",\n  \"mango\",\n  \"map\",\n  \"market\",\n  \"marketing\",\n  \"markets\",\n  \"marriott\",\n  \"marshalls\",\n  \"maserati\",\n  \"mattel\",\n  \"mba\",\n  \"mc\",\n  \"mckinsey\",\n  \"md\",\n  \"me\",\n  \"med\",\n  \"media\",\n  \"meet\",\n  \"melbourne\",\n  \"meme\",\n  \"memorial\",\n  \"men\",\n  \"menu\",\n  \"merckmsd\",\n  \"mg\",\n  \"mh\",\n  \"miami\",\n  \"microsoft\",\n  \"mil\",\n  \"mini\",\n  \"mint\",\n  \"mit\",\n  \"mitsubishi\",\n  \"mk\",\n  \"ml\",\n  \"mlb\",\n  \"mls\",\n  \"mm\",\n  \"mma\",\n  \"mn\",\n  \"mo\",\n  \"mobi\",\n  \"mobile\",\n  \"moda\",\n  \"moe\",\n  \"moi\",\n  \"mom\",\n  \"monash\",\n  \"money\",\n  \"monster\",\n  \"mormon\",\n  \"mortgage\",\n  \"moscow\",\n  \"moto\",\n  \"motorcycles\",\n  \"mov\",\n  \"movie\",\n  \"mp\",\n  \"mq\",\n  \"mr\",\n  \"ms\",\n  \"msd\",\n  \"mt\",\n  \"mtn\",\n  \"mtr\",\n  \"mu\",\n  \"museum\",\n  \"music\",\n  \"mutual\",\n  \"mv\",\n  \"mw\",\n  \"mx\",\n  \"my\",\n  \"mz\",\n  \"na\",\n  \"nab\",\n  \"nagoya\",\n  \"name\",\n  \"natura\",\n  \"navy\",\n  \"nba\",\n  \"nc\",\n  \"ne\",\n  \"nec\",\n  \"net\",\n  \"netbank\",\n  \"netflix\",\n  \"network\",\n  \"neustar\",\n  \"new\",\n  \"news\",\n  \"next\",\n  \"nextdirect\",\n  \"nexus\",\n  \"nf\",\n  \"nfl\",\n  \"ng\",\n  \"ngo\",\n  \"nhk\",\n  \"ni\",\n  \"nico\",\n  \"nike\",\n  \"nikon\",\n  \"ninja\",\n  \"nissan\",\n  \"nissay\",\n  \"nl\",\n  \"no\",\n  \"nokia\",\n  \"northwesternmutual\",\n  \"norton\",\n  \"now\",\n  \"nowruz\",\n  \"nowtv\",\n  \"np\",\n  \"nr\",\n  \"nra\",\n  \"nrw\",\n  \"ntt\",\n  \"nu\",\n  \"nyc\",\n  \"nz\",\n  \"obi\",\n  \"observer\",\n  \"office\",\n  \"okinawa\",\n  \"olayan\",\n  \"olayangroup\",\n  \"oldnavy\",\n  \"ollo\",\n  \"om\",\n  \"omega\",\n  \"one\",\n  \"ong\",\n  \"onl\",\n  \"online\",\n  \"ooo\",\n  \"open\",\n  \"oracle\",\n  \"orange\",\n  \"org\",\n  \"organic\",\n  \"origins\",\n  \"osaka\",\n  \"otsuka\",\n  \"ott\",\n  \"ovh\",\n  \"pa\",\n  \"page\",\n  \"panasonic\",\n  \"paris\",\n  \"pars\",\n  \"partners\",\n  \"parts\",\n  \"party\",\n  \"passagens\",\n  \"pay\",\n  \"pccw\",\n  \"pe\",\n  \"pet\",\n  \"pf\",\n  \"pfizer\",\n  \"pg\",\n  \"ph\",\n  \"pharmacy\",\n  \"phd\",\n  \"philips\",\n  \"phone\",\n  \"photo\",\n  \"photography\",\n  \"photos\",\n  \"physio\",\n  \"pics\",\n  \"pictet\",\n  \"pictures\",\n  \"pid\",\n  \"pin\",\n  \"ping\",\n  \"pink\",\n  \"pioneer\",\n  \"pizza\",\n  \"pk\",\n  \"pl\",\n  \"place\",\n  \"play\",\n  \"playstation\",\n  \"plumbing\",\n  \"plus\",\n  \"pm\",\n  \"pn\",\n  \"pnc\",\n  \"pohl\",\n  \"poker\",\n  \"politie\",\n  \"porn\",\n  \"post\",\n  \"pr\",\n  \"pramerica\",\n  \"praxi\",\n  \"press\",\n  \"prime\",\n  \"pro\",\n  \"prod\",\n  \"productions\",\n  \"prof\",\n  \"progressive\",\n  \"promo\",\n  \"properties\",\n  \"property\",\n  \"protection\",\n  \"pru\",\n  \"prudential\",\n  \"ps\",\n  \"pt\",\n  \"pub\",\n  \"pw\",\n  \"pwc\",\n  \"py\",\n  \"qa\",\n  \"qpon\",\n  \"quebec\",\n  \"quest\",\n  \"racing\",\n  \"radio\",\n  \"re\",\n  \"read\",\n  \"realestate\",\n  \"realtor\",\n  \"realty\",\n  \"recipes\",\n  \"red\",\n  \"redstone\",\n  \"redumbrella\",\n  \"rehab\",\n  \"reise\",\n  \"reisen\",\n  \"reit\",\n  \"reliance\",\n  \"ren\",\n  \"rent\",\n  \"rentals\",\n  \"repair\",\n  \"report\",\n  \"republican\",\n  \"rest\",\n  \"restaurant\",\n  \"review\",\n  \"reviews\",\n  \"rexroth\",\n  \"rich\",\n  \"richardli\",\n  \"ricoh\",\n  \"ril\",\n  \"rio\",\n  \"rip\",\n  \"ro\",\n  \"rocher\",\n  \"rocks\",\n  \"rodeo\",\n  \"rogers\",\n  \"room\",\n  \"rs\",\n  \"rsvp\",\n  \"ru\",\n  \"rugby\",\n  \"ruhr\",\n  \"run\",\n  \"rw\",\n  \"rwe\",\n  \"ryukyu\",\n  \"sa\",\n  \"saarland\",\n  \"safe\",\n  \"safety\",\n  \"sakura\",\n  \"sale\",\n  \"salon\",\n  \"samsclub\",\n  \"samsung\",\n  \"sandvik\",\n  \"sandvikcoromant\",\n  \"sanofi\",\n  \"sap\",\n  \"sarl\",\n  \"sas\",\n  \"save\",\n  \"saxo\",\n  \"sb\",\n  \"sbi\",\n  \"sbs\",\n  \"sc\",\n  \"sca\",\n  \"scb\",\n  \"schaeffler\",\n  \"schmidt\",\n  \"scholarships\",\n  \"school\",\n  \"schule\",\n  \"schwarz\",\n  \"science\",\n  \"scot\",\n  \"sd\",\n  \"se\",\n  \"search\",\n  \"seat\",\n  \"secure\",\n  \"security\",\n  \"seek\",\n  \"select\",\n  \"sener\",\n  \"services\",\n  \"seven\",\n  \"sew\",\n  \"sex\",\n  \"sexy\",\n  \"sfr\",\n  \"sg\",\n  \"sh\",\n  \"shangrila\",\n  \"sharp\",\n  \"shaw\",\n  \"shell\",\n  \"shia\",\n  \"shiksha\",\n  \"shoes\",\n  \"shop\",\n  \"shopping\",\n  \"shouji\",\n  \"show\",\n  \"showtime\",\n  \"si\",\n  \"silk\",\n  \"sina\",\n  \"singles\",\n  \"site\",\n  \"sj\",\n  \"sk\",\n  \"ski\",\n  \"skin\",\n  \"sky\",\n  \"skype\",\n  \"sl\",\n  \"sling\",\n  \"sm\",\n  \"smart\",\n  \"smile\",\n  \"sn\",\n  \"sncf\",\n  \"so\",\n  \"soccer\",\n  \"social\",\n  \"softbank\",\n  \"software\",\n  \"sohu\",\n  \"solar\",\n  \"solutions\",\n  \"song\",\n  \"sony\",\n  \"soy\",\n  \"spa\",\n  \"space\",\n  \"sport\",\n  \"spot\",\n  \"sr\",\n  \"srl\",\n  \"ss\",\n  \"st\",\n  \"stada\",\n  \"staples\",\n  \"star\",\n  \"statebank\",\n  \"statefarm\",\n  \"stc\",\n  \"stcgroup\",\n  \"stockholm\",\n  \"storage\",\n  \"store\",\n  \"stream\",\n  \"studio\",\n  \"study\",\n  \"style\",\n  \"su\",\n  \"sucks\",\n  \"supplies\",\n  \"supply\",\n  \"support\",\n  \"surf\",\n  \"surgery\",\n  \"suzuki\",\n  \"sv\",\n  \"swatch\",\n  \"swiss\",\n  \"sx\",\n  \"sy\",\n  \"sydney\",\n  \"systems\",\n  \"sz\",\n  \"tab\",\n  \"taipei\",\n  \"talk\",\n  \"taobao\",\n  \"target\",\n  \"tatamotors\",\n  \"tatar\",\n  \"tattoo\",\n  \"tax\",\n  \"taxi\",\n  \"tc\",\n  \"tci\",\n  \"td\",\n  \"tdk\",\n  \"team\",\n  \"tech\",\n  \"technology\",\n  \"tel\",\n  \"temasek\",\n  \"tennis\",\n  \"teva\",\n  \"tf\",\n  \"tg\",\n  \"th\",\n  \"thd\",\n  \"theater\",\n  \"theatre\",\n  \"tiaa\",\n  \"tickets\",\n  \"tienda\",\n  \"tiffany\",\n  \"tips\",\n  \"tires\",\n  \"tirol\",\n  \"tj\",\n  \"tjmaxx\",\n  \"tjx\",\n  \"tk\",\n  \"tkmaxx\",\n  \"tl\",\n  \"tm\",\n  \"tmall\",\n  \"tn\",\n  \"to\",\n  \"today\",\n  \"tokyo\",\n  \"tools\",\n  \"top\",\n  \"toray\",\n  \"toshiba\",\n  \"total\",\n  \"tours\",\n  \"town\",\n  \"toyota\",\n  \"toys\",\n  \"tr\",\n  \"trade\",\n  \"trading\",\n  \"training\",\n  \"travel\",\n  \"travelchannel\",\n  \"travelers\",\n  \"travelersinsurance\",\n  \"trust\",\n  \"trv\",\n  \"tt\",\n  \"tube\",\n  \"tui\",\n  \"tunes\",\n  \"tushu\",\n  \"tv\",\n  \"tvs\",\n  \"tw\",\n  \"tz\",\n  \"ua\",\n  \"ubank\",\n  \"ubs\",\n  \"ug\",\n  \"uk\",\n  \"unicom\",\n  \"university\",\n  \"uno\",\n  \"uol\",\n  \"ups\",\n  \"us\",\n  \"uy\",\n  \"uz\",\n  \"va\",\n  \"vacations\",\n  \"vana\",\n  \"vanguard\",\n  \"vc\",\n  \"ve\",\n  \"vegas\",\n  \"ventures\",\n  \"verisign\",\n  \"verm\u00F6gensberater\",\n  \"verm\u00F6gensberatung\",\n  \"versicherung\",\n  \"vet\",\n  \"vg\",\n  \"vi\",\n  \"viajes\",\n  \"video\",\n  \"vig\",\n  \"viking\",\n  \"villas\",\n  \"vin\",\n  \"vip\",\n  \"virgin\",\n  \"visa\",\n  \"vision\",\n  \"viva\",\n  \"vivo\",\n  \"vlaanderen\",\n  \"vn\",\n  \"vodka\",\n  \"volkswagen\",\n  \"volvo\",\n  \"vote\",\n  \"voting\",\n  \"voto\",\n  \"voyage\",\n  \"vu\",\n  \"vuelos\",\n  \"wales\",\n  \"walmart\",\n  \"walter\",\n  \"wang\",\n  \"wanggou\",\n  \"watch\",\n  \"watches\",\n  \"weather\",\n  \"weatherchannel\",\n  \"webcam\",\n  \"weber\",\n  \"website\",\n  \"wed\",\n  \"wedding\",\n  \"weibo\",\n  \"weir\",\n  \"wf\",\n  \"whoswho\",\n  \"wien\",\n  \"wiki\",\n  \"williamhill\",\n  \"win\",\n  \"windows\",\n  \"wine\",\n  \"winners\",\n  \"wme\",\n  \"wolterskluwer\",\n  \"woodside\",\n  \"work\",\n  \"works\",\n  \"world\",\n  \"wow\",\n  \"ws\",\n  \"wtc\",\n  \"wtf\",\n  \"xbox\",\n  \"xerox\",\n  \"xfinity\",\n  \"xihuan\",\n  \"xin\",\n  \"xxx\",\n  \"xyz\",\n  \"yachts\",\n  \"yahoo\",\n  \"yamaxun\",\n  \"yandex\",\n  \"ye\",\n  \"yodobashi\",\n  \"yoga\",\n  \"yokohama\",\n  \"you\",\n  \"youtube\",\n  \"yt\",\n  \"yun\",\n  \"za\",\n  \"zappos\",\n  \"zara\",\n  \"zero\",\n  \"zip\",\n  \"zm\",\n  \"zone\",\n  \"zuerich\",\n  \"zw\",\n  \"\u03B5\u03BB\",\n  \"\u03B5\u03C5\",\n  \"\u0431\u0433\",\n  \"\u0431\u0435\u043B\",\n  \"\u0434\u0435\u0442\u0438\",\n  \"\u0435\u044E\",\n  \"\u043A\u0430\u0442\u043E\u043B\u0438\u043A\",\n  \"\u043A\u043E\u043C\",\n  \"\u043C\u043A\u0434\",\n  \"\u043C\u043E\u043D\",\n  \"\u043C\u043E\u0441\u043A\u0432\u0430\",\n  \"\u043E\u043D\u043B\u0430\u0439\u043D\",\n  \"\u043E\u0440\u0433\",\n  \"\u0440\u0443\u0441\",\n  \"\u0440\u0444\",\n  \"\u0441\u0430\u0439\u0442\",\n  \"\u0441\u0440\u0431\",\n  \"\u0443\u043A\u0440\",\n  \"\u049B\u0430\u0437\",\n  \"\u0570\u0561\u0575\",\n  \"\u05D9\u05E9\u05E8\u05D0\u05DC\",\n  \"\u05E7\u05D5\u05DD\",\n  \"\u0627\u0628\u0648\u0638\u0628\u064A\",\n  \"\u0627\u062A\u0635\u0627\u0644\u0627\u062A\",\n  \"\u0627\u0631\u0627\u0645\u0643\u0648\",\n  \"\u0627\u0644\u0627\u0631\u062F\u0646\",\n  \"\u0627\u0644\u0628\u062D\u0631\u064A\u0646\",\n  \"\u0627\u0644\u062C\u0632\u0627\u0626\u0631\",\n  \"\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629\",\n  \"\u0627\u0644\u0639\u0644\u064A\u0627\u0646\",\n  \"\u0627\u0644\u0645\u063A\u0631\u0628\",\n  \"\u0627\u0645\u0627\u0631\u0627\u062A\",\n  \"\u0627\u06CC\u0631\u0627\u0646\",\n  \"\u0628\u0627\u0631\u062A\",\n  \"\u0628\u0627\u0632\u0627\u0631\",\n  \"\u0628\u064A\u062A\u0643\",\n  \"\u0628\u06BE\u0627\u0631\u062A\",\n  \"\u062A\u0648\u0646\u0633\",\n  \"\u0633\u0648\u062F\u0627\u0646\",\n  \"\u0633\u0648\u0631\u064A\u0629\",\n  \"\u0634\u0628\u0643\u0629\",\n  \"\u0639\u0631\u0627\u0642\",\n  \"\u0639\u0631\u0628\",\n  \"\u0639\u0645\u0627\u0646\",\n  \"\u0641\u0644\u0633\u0637\u064A\u0646\",\n  \"\u0642\u0637\u0631\",\n  \"\u0643\u0627\u062B\u0648\u0644\u064A\u0643\",\n  \"\u0643\u0648\u0645\",\n  \"\u0645\u0635\u0631\",\n  \"\u0645\u0644\u064A\u0633\u064A\u0627\",\n  \"\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0627\",\n  \"\u0645\u0648\u0642\u0639\",\n  \"\u0647\u0645\u0631\u0627\u0647\",\n  \"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646\",\n  \"\u0680\u0627\u0631\u062A\",\n  \"\u0915\u0949\u092E\",\n  \"\u0928\u0947\u091F\",\n  \"\u092D\u093E\u0930\u0924\",\n  \"\u092D\u093E\u0930\u0924\u092E\u094D\",\n  \"\u092D\u093E\u0930\u094B\u0924\",\n  \"\u0938\u0902\u0917\u0920\u0928\",\n  \"\u09AC\u09BE\u0982\u09B2\u09BE\",\n  \"\u09AD\u09BE\u09B0\u09A4\",\n  \"\u09AD\u09BE\u09F0\u09A4\",\n  \"\u0A2D\u0A3E\u0A30\u0A24\",\n  \"\u0AAD\u0ABE\u0AB0\u0AA4\",\n  \"\u0B2D\u0B3E\u0B30\u0B24\",\n  \"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE\",\n  \"\u0B87\u0BB2\u0B99\u0BCD\u0B95\u0BC8\",\n  \"\u0B9A\u0BBF\u0B99\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0BC2\u0BB0\u0BCD\",\n  \"\u0C2D\u0C3E\u0C30\u0C24\u0C4D\",\n  \"\u0CAD\u0CBE\u0CB0\u0CA4\",\n  \"\u0D2D\u0D3E\u0D30\u0D24\u0D02\",\n  \"\u0DBD\u0D82\u0D9A\u0DCF\",\n  \"\u0E04\u0E2D\u0E21\",\n  \"\u0E44\u0E17\u0E22\",\n  \"\u0EA5\u0EB2\u0EA7\",\n  \"\u10D2\u10D4\",\n  \"\u307F\u3093\u306A\",\n  \"\u30A2\u30DE\u30BE\u30F3\",\n  \"\u30AF\u30E9\u30A6\u30C9\",\n  \"\u30B0\u30FC\u30B0\u30EB\",\n  \"\u30B3\u30E0\",\n  \"\u30B9\u30C8\u30A2\",\n  \"\u30BB\u30FC\u30EB\",\n  \"\u30D5\u30A1\u30C3\u30B7\u30E7\u30F3\",\n  \"\u30DD\u30A4\u30F3\u30C8\",\n  \"\u4E16\u754C\",\n  \"\u4E2D\u4FE1\",\n  \"\u4E2D\u56FD\",\n  \"\u4E2D\u570B\",\n  \"\u4E2D\u6587\u7F51\",\n  \"\u4E9A\u9A6C\u900A\",\n  \"\u4F01\u4E1A\",\n  \"\u4F5B\u5C71\",\n  \"\u4FE1\u606F\",\n  \"\u5065\u5EB7\",\n  \"\u516B\u5366\",\n  \"\u516C\u53F8\",\n  \"\u516C\u76CA\",\n  \"\u53F0\u6E7E\",\n  \"\u53F0\u7063\",\n  \"\u5546\u57CE\",\n  \"\u5546\u5E97\",\n  \"\u5546\u6807\",\n  \"\u5609\u91CC\",\n  \"\u5609\u91CC\u5927\u9152\u5E97\",\n  \"\u5728\u7EBF\",\n  \"\u5927\u62FF\",\n  \"\u5929\u4E3B\u6559\",\n  \"\u5A31\u4E50\",\n  \"\u5BB6\u96FB\",\n  \"\u5E7F\u4E1C\",\n  \"\u5FAE\u535A\",\n  \"\u6148\u5584\",\n  \"\u6211\u7231\u4F60\",\n  \"\u624B\u673A\",\n  \"\u62DB\u8058\",\n  \"\u653F\u52A1\",\n  \"\u653F\u5E9C\",\n  \"\u65B0\u52A0\u5761\",\n  \"\u65B0\u95FB\",\n  \"\u65F6\u5C1A\",\n  \"\u66F8\u7C4D\",\n  \"\u673A\u6784\",\n  \"\u6DE1\u9A6C\u9521\",\n  \"\u6E38\u620F\",\n  \"\u6FB3\u9580\",\n  \"\u70B9\u770B\",\n  \"\u79FB\u52A8\",\n  \"\u7EC4\u7EC7\u673A\u6784\",\n  \"\u7F51\u5740\",\n  \"\u7F51\u5E97\",\n  \"\u7F51\u7AD9\",\n  \"\u7F51\u7EDC\",\n  \"\u8054\u901A\",\n  \"\u8C37\u6B4C\",\n  \"\u8D2D\u7269\",\n  \"\u901A\u8CA9\",\n  \"\u96C6\u56E2\",\n  \"\u96FB\u8A0A\u76C8\u79D1\",\n  \"\u98DE\u5229\u6D66\",\n  \"\u98DF\u54C1\",\n  \"\u9910\u5385\",\n  \"\u9999\u683C\u91CC\u62C9\",\n  \"\u9999\u6E2F\",\n  \"\uB2F7\uB137\",\n  \"\uB2F7\uCEF4\",\n  \"\uC0BC\uC131\",\n  \"\uD55C\uAD6D\"\n]\n", "export const MENTION_REGEX = /(^|\\s|\\()(@)([a-zA-Z0-9.-]+)(\\b)/g\nexport const URL_REGEX =\n  /(^|\\s|\\()((https?:\\/\\/[\\S]+)|((?<domain>[a-z][a-z0-9]*(\\.[a-z0-9]+)+)[\\S]*))/gim\nexport const TRAILING_PUNCTUATION_REGEX = /\\p{P}+$/gu\n\n/**\n * `\\ufe0f` emoji modifier\n * `\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2` zero-width spaces (likely incomplete)\n */\nexport const TAG_REGEX =\n  // eslint-disable-next-line no-misleading-character-class\n  /(^|\\s)[#\uFF03]((?!\\ufe0f)[^\\s\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]*[^\\d\\s\\p{P}\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]+[^\\s\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]*)?/gu\n", "import TLDs from 'tlds'\nimport { AppBskyRichtextFacet } from '../client'\nimport { UnicodeString } from './unicode'\nimport {\n  MENTION_REGEX,\n  TAG_REGEX,\n  TRAILING_PUNCTUATION_REGEX,\n  URL_REGEX,\n} from './util'\n\nexport type Facet = AppBskyRichtextFacet.Main\n\nexport function detectFacets(text: UnicodeString): Facet[] | undefined {\n  let match\n  const facets: Facet[] = []\n  {\n    // mentions\n    const re = MENTION_REGEX\n    while ((match = re.exec(text.utf16))) {\n      if (!isValidDomain(match[3]) && !match[3].endsWith('.test')) {\n        continue // probably not a handle\n      }\n\n      const start = text.utf16.indexOf(match[3], match.index) - 1\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(start),\n          byteEnd: text.utf16IndexToUtf8Index(start + match[3].length + 1),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#mention',\n            did: match[3], // must be resolved afterwards\n          },\n        ],\n      })\n    }\n  }\n  {\n    // links\n    const re = URL_REGEX\n    while ((match = re.exec(text.utf16))) {\n      let uri = match[2]\n      if (!uri.startsWith('http')) {\n        const domain = match.groups?.domain\n        if (!domain || !isValidDomain(domain)) {\n          continue\n        }\n        uri = `https://${uri}`\n      }\n      const start = text.utf16.indexOf(match[2], match.index)\n      const index = { start, end: start + match[2].length }\n      // strip ending puncuation\n      if (/[.,;:!?]$/.test(uri)) {\n        uri = uri.slice(0, -1)\n        index.end--\n      }\n      if (/[)]$/.test(uri) && !uri.includes('(')) {\n        uri = uri.slice(0, -1)\n        index.end--\n      }\n      facets.push({\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(index.start),\n          byteEnd: text.utf16IndexToUtf8Index(index.end),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#link',\n            uri,\n          },\n        ],\n      })\n    }\n  }\n  {\n    const re = TAG_REGEX\n    while ((match = re.exec(text.utf16))) {\n      const leading = match[1]\n      let tag = match[2]\n\n      if (!tag) continue\n\n      // strip ending punctuation and any spaces\n      tag = tag.trim().replace(TRAILING_PUNCTUATION_REGEX, '')\n\n      if (tag.length === 0 || tag.length > 64) continue\n\n      const index = match.index + leading.length\n\n      facets.push({\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(index),\n          byteEnd: text.utf16IndexToUtf8Index(index + 1 + tag.length),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#tag',\n            tag: tag,\n          },\n        ],\n      })\n    }\n  }\n  return facets.length > 0 ? facets : undefined\n}\n\nfunction isValidDomain(str: string): boolean {\n  return !!TLDs.find((tld) => {\n    const i = str.lastIndexOf(tld)\n    if (i === -1) {\n      return false\n    }\n    return str.charAt(i - 1) === '.' && i === str.length - tld.length\n  })\n}\n", "/**\n * Javascript uses utf16-encoded strings while most environments and specs\n * have standardized around utf8 (including JSON).\n *\n * After some lengthy debated we decided that richtext facets need to use\n * utf8 indices. This means we need tools to convert indices between utf8\n * and utf16, and that's precisely what this library handles.\n */\n\nimport { graphemeLen } from '@atproto/common-web'\n\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\n\nexport class UnicodeString {\n  utf16: string\n  utf8: Uint8Array\n  private _graphemeLen?: number | undefined\n\n  constructor(utf16: string) {\n    this.utf16 = utf16\n    this.utf8 = encoder.encode(utf16)\n  }\n\n  get length() {\n    return this.utf8.byteLength\n  }\n\n  get graphemeLength() {\n    if (!this._graphemeLen) {\n      this._graphemeLen = graphemeLen(this.utf16)\n    }\n    return this._graphemeLen\n  }\n\n  slice(start?: number, end?: number): string {\n    return decoder.decode(this.utf8.slice(start, end))\n  }\n\n  utf16IndexToUtf8Index(i: number) {\n    return encoder.encode(this.utf16.slice(0, i)).byteLength\n  }\n\n  toString() {\n    return this.utf16\n  }\n}\n", "import { RichText } from './rich-text'\nimport { UnicodeString } from './unicode'\n\n// this regex is intentionally matching on the zero-with-separator codepoint\n// eslint-disable-next-line no-misleading-character-class\nconst EXCESS_SPACE_RE = /[\\r\\n]([\\u00AD\\u2060\\u200D\\u200C\\u200B\\s]*[\\r\\n]){2,}/\nconst REPLACEMENT_STR = '\\n\\n'\n\nexport function sanitizeRichText(\n  richText: RichText,\n  opts: { cleanNewlines?: boolean },\n) {\n  if (opts.cleanNewlines) {\n    richText = clean(richText, EXCESS_SPACE_RE, REPLACEMENT_STR)\n  }\n  return richText\n}\n\nfunction clean(\n  richText: RichText,\n  targetRegexp: RegExp,\n  replacementString: string,\n): RichText {\n  richText = richText.clone()\n\n  let match = richText.unicodeText.utf16.match(targetRegexp)\n  while (match && typeof match.index !== 'undefined') {\n    const oldText = richText.unicodeText\n    const removeStartIndex = richText.unicodeText.utf16IndexToUtf8Index(\n      match.index,\n    )\n    const removeEndIndex = removeStartIndex + new UnicodeString(match[0]).length\n    richText.delete(removeStartIndex, removeEndIndex)\n    if (richText.unicodeText.utf16 === oldText.utf16) {\n      break // sanity check\n    }\n    richText.insert(removeStartIndex, replacementString)\n    match = richText.unicodeText.utf16.match(targetRegexp)\n  }\n\n  return richText\n}\n", "/*\n= Rich Text Manipulation\n\nWhen we sanitize rich text, we have to update the entity indices as the\ntext is modified. This can be modeled as inserts() and deletes() of the\nrich text string. The possible scenarios are outlined below, along with\ntheir expected behaviors.\n\nNOTE: Slices are start inclusive, end exclusive\n\n== richTextInsert()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^                       // insert \"test\" at 0\nB:        ^                // insert \"test\" at 4\nC:                 ^       // insert \"test\" at 8\n\nA = before           -> move both by num added\nB = inner            -> move end by num added\nC = after            -> noop\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   t e s t h e l l o   w   // string value\n               ^-------^   // target slice {start: 6, end: 11}\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l t e s t o   w   // string value\n       ^---------------^   // target slice {start: 2, end: 11}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o t e s   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\n== richTextDelete()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^---------------^       // remove slice {start: 0, end: 9}\nB:               ^-----^   // remove slice {start: 7, end: 11}\nC:         ^-----------^   // remove slice {start: 4, end: 11}\nD:       ^-^               // remove slice {start: 3, end: 5}\nE:   ^-----^               // remove slice {start: 1, end: 5}\nF: ^-^                     // remove slice {start: 0, end: 2}\n\nA = entirely outer   -> delete slice\nB = entirely after   -> noop\nC = partially after  -> move end to remove-start\nD = entirely inner   -> move end by num removed\nE = partially before -> move start to remove-start index, move end by num removed\nF = entirely before  -> move both by num removed\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l d                     // string value\n                           // target slice (deleted)\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w           // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l                 // string value\n       ^-^                 // target slice {start: 2, end: 4}\n\nD: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l   w o r l d       // string value\n       ^---^               // target slice {start: 2, end: 5}\n\nE: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h   w o r l d           // string value\n     ^-^                   // target slice {start: 1, end: 3}\n\nF: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l l o   w o r l d       // string value\n   ^-------^               // target slice {start: 0, end: 5}\n */\n\nimport { AppBskyFeedPost, AppBskyRichtextFacet, AtpBaseClient } from '../client'\nimport { detectFacets } from './detection'\nimport { sanitizeRichText } from './sanitization'\nimport { UnicodeString } from './unicode'\n\nexport type Facet = AppBskyRichtextFacet.Main\nexport type FacetLink = AppBskyRichtextFacet.Link\nexport type FacetMention = AppBskyRichtextFacet.Mention\nexport type FacetTag = AppBskyRichtextFacet.Tag\nexport type Entity = AppBskyFeedPost.Entity\n\nexport interface RichTextProps {\n  text: string\n  facets?: Facet[]\n  /**\n   * @deprecated Use facets instead\n   */\n  entities?: Entity[]\n}\n\nexport interface RichTextOpts {\n  cleanNewlines?: boolean\n}\n\nexport class RichTextSegment {\n  constructor(\n    public text: string,\n    public facet?: Facet,\n  ) {}\n\n  get link(): FacetLink | undefined {\n    return this.facet?.features.find(AppBskyRichtextFacet.isLink)\n  }\n\n  isLink() {\n    return !!this.link\n  }\n\n  get mention(): FacetMention | undefined {\n    return this.facet?.features.find(AppBskyRichtextFacet.isMention)\n  }\n\n  isMention() {\n    return !!this.mention\n  }\n\n  get tag(): FacetTag | undefined {\n    return this.facet?.features.find(AppBskyRichtextFacet.isTag)\n  }\n\n  isTag() {\n    return !!this.tag\n  }\n}\n\nexport class RichText {\n  unicodeText: UnicodeString\n  facets?: Facet[]\n\n  constructor(props: RichTextProps, opts?: RichTextOpts) {\n    this.unicodeText = new UnicodeString(props.text)\n    this.facets = props.facets\n    if (!this.facets?.length && props.entities?.length) {\n      this.facets = entitiesToFacets(this.unicodeText, props.entities)\n    }\n    if (this.facets) {\n      this.facets = this.facets.filter(facetFilter).sort(facetSort)\n    }\n    if (opts?.cleanNewlines) {\n      sanitizeRichText(this, { cleanNewlines: true }).copyInto(this)\n    }\n  }\n\n  get text() {\n    return this.unicodeText.toString()\n  }\n\n  get length() {\n    return this.unicodeText.length\n  }\n\n  get graphemeLength() {\n    return this.unicodeText.graphemeLength\n  }\n\n  clone() {\n    return new RichText({\n      text: this.unicodeText.utf16,\n      facets: cloneDeep(this.facets),\n    })\n  }\n\n  copyInto(target: RichText) {\n    target.unicodeText = this.unicodeText\n    target.facets = cloneDeep(this.facets)\n  }\n\n  *segments(): Generator<RichTextSegment, void, void> {\n    const facets = this.facets || []\n    if (!facets.length) {\n      yield new RichTextSegment(this.unicodeText.utf16)\n      return\n    }\n\n    let textCursor = 0\n    let facetCursor = 0\n    do {\n      const currFacet = facets[facetCursor]\n      if (textCursor < currFacet.index.byteStart) {\n        yield new RichTextSegment(\n          this.unicodeText.slice(textCursor, currFacet.index.byteStart),\n        )\n      } else if (textCursor > currFacet.index.byteStart) {\n        facetCursor++\n        continue\n      }\n      if (currFacet.index.byteStart < currFacet.index.byteEnd) {\n        const subtext = this.unicodeText.slice(\n          currFacet.index.byteStart,\n          currFacet.index.byteEnd,\n        )\n        if (!subtext.trim()) {\n          // dont empty string entities\n          yield new RichTextSegment(subtext)\n        } else {\n          yield new RichTextSegment(subtext, currFacet)\n        }\n      }\n      textCursor = currFacet.index.byteEnd\n      facetCursor++\n    } while (facetCursor < facets.length)\n    if (textCursor < this.unicodeText.length) {\n      yield new RichTextSegment(\n        this.unicodeText.slice(textCursor, this.unicodeText.length),\n      )\n    }\n  }\n\n  insert(insertIndex: number, insertText: string) {\n    this.unicodeText = new UnicodeString(\n      this.unicodeText.slice(0, insertIndex) +\n        insertText +\n        this.unicodeText.slice(insertIndex),\n    )\n\n    if (!this.facets?.length) {\n      return this\n    }\n\n    const numCharsAdded = insertText.length\n    for (const ent of this.facets) {\n      // see comment at top of file for labels of each scenario\n      // scenario A (before)\n      if (insertIndex <= ent.index.byteStart) {\n        // move both by num added\n        ent.index.byteStart += numCharsAdded\n        ent.index.byteEnd += numCharsAdded\n      }\n      // scenario B (inner)\n      else if (\n        insertIndex >= ent.index.byteStart &&\n        insertIndex < ent.index.byteEnd\n      ) {\n        // move end by num added\n        ent.index.byteEnd += numCharsAdded\n      }\n      // scenario C (after)\n      // noop\n    }\n    return this\n  }\n\n  delete(removeStartIndex: number, removeEndIndex: number) {\n    this.unicodeText = new UnicodeString(\n      this.unicodeText.slice(0, removeStartIndex) +\n        this.unicodeText.slice(removeEndIndex),\n    )\n\n    if (!this.facets?.length) {\n      return this\n    }\n\n    const numCharsRemoved = removeEndIndex - removeStartIndex\n    for (const ent of this.facets) {\n      // see comment at top of file for labels of each scenario\n      // scenario A (entirely outer)\n      if (\n        removeStartIndex <= ent.index.byteStart &&\n        removeEndIndex >= ent.index.byteEnd\n      ) {\n        // delete slice (will get removed in final pass)\n        ent.index.byteStart = 0\n        ent.index.byteEnd = 0\n      }\n      // scenario B (entirely after)\n      else if (removeStartIndex > ent.index.byteEnd) {\n        // noop\n      }\n      // scenario C (partially after)\n      else if (\n        removeStartIndex > ent.index.byteStart &&\n        removeStartIndex <= ent.index.byteEnd &&\n        removeEndIndex > ent.index.byteEnd\n      ) {\n        // move end to remove start\n        ent.index.byteEnd = removeStartIndex\n      }\n      // scenario D (entirely inner)\n      else if (\n        removeStartIndex >= ent.index.byteStart &&\n        removeEndIndex <= ent.index.byteEnd\n      ) {\n        // move end by num removed\n        ent.index.byteEnd -= numCharsRemoved\n      }\n      // scenario E (partially before)\n      else if (\n        removeStartIndex < ent.index.byteStart &&\n        removeEndIndex >= ent.index.byteStart &&\n        removeEndIndex <= ent.index.byteEnd\n      ) {\n        // move start to remove-start index, move end by num removed\n        ent.index.byteStart = removeStartIndex\n        ent.index.byteEnd -= numCharsRemoved\n      }\n      // scenario F (entirely before)\n      else if (removeEndIndex < ent.index.byteStart) {\n        // move both by num removed\n        ent.index.byteStart -= numCharsRemoved\n        ent.index.byteEnd -= numCharsRemoved\n      }\n    }\n\n    // filter out any facets that were made irrelevant\n    this.facets = this.facets.filter(\n      (ent) => ent.index.byteStart < ent.index.byteEnd,\n    )\n    return this\n  }\n\n  /**\n   * Detects facets such as links and mentions\n   * Note: Overwrites the existing facets with auto-detected facets\n   */\n  async detectFacets(agent: AtpBaseClient) {\n    this.facets = detectFacets(this.unicodeText)\n    if (this.facets) {\n      const promises: Promise<void>[] = []\n      for (const facet of this.facets) {\n        for (const feature of facet.features) {\n          if (AppBskyRichtextFacet.isMention(feature)) {\n            promises.push(\n              agent.com.atproto.identity\n                .resolveHandle({ handle: feature.did })\n                .then((res) => res?.data.did)\n                .catch((_) => undefined)\n                .then((did) => {\n                  feature.did = did || ''\n                }),\n            )\n          }\n        }\n      }\n      await Promise.allSettled(promises)\n      this.facets.sort(facetSort)\n    }\n  }\n\n  /**\n   * Detects facets such as links and mentions but does not resolve them\n   * Will produce invalid facets! For instance, mentions will not have their DIDs set.\n   * Note: Overwrites the existing facets with auto-detected facets\n   */\n  detectFacetsWithoutResolution() {\n    this.facets = detectFacets(this.unicodeText)\n    if (this.facets) {\n      this.facets.sort(facetSort)\n    }\n  }\n}\n\nconst facetSort = (a: Facet, b: Facet) => a.index.byteStart - b.index.byteStart\n\nconst facetFilter = (facet: Facet) =>\n  // discard negative-length facets. zero-length facets are valid\n  facet.index.byteStart <= facet.index.byteEnd\n\nfunction entitiesToFacets(text: UnicodeString, entities: Entity[]): Facet[] {\n  const facets: Facet[] = []\n  for (const ent of entities) {\n    if (ent.type === 'link') {\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n          byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n        },\n        features: [{ $type: 'app.bsky.richtext.facet#link', uri: ent.value }],\n      })\n    } else if (ent.type === 'mention') {\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n          byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n        },\n        features: [\n          { $type: 'app.bsky.richtext.facet#mention', did: ent.value },\n        ],\n      })\n    }\n  }\n  return facets\n}\n\nfunction cloneDeep<T>(v: T): T {\n  if (typeof v === 'undefined') {\n    return v\n  }\n  return JSON.parse(JSON.stringify(v))\n}\n", "/** this doc is generated by ./scripts/code/labels.mjs **/\nimport { InterpretedLabelValueDefinition, LabelPreference } from '../types'\n\nexport type KnownLabelValue =\n  | '!hide'\n  | '!warn'\n  | '!no-unauthenticated'\n  | 'porn'\n  | 'sexual'\n  | 'nudity'\n  | 'graphic-media'\n  | 'gore'\n\nexport const DEFAULT_LABEL_SETTINGS: Record<string, LabelPreference> = {\n  porn: 'hide',\n  sexual: 'warn',\n  nudity: 'ignore',\n  'graphic-media': 'warn',\n}\n\nexport const LABELS: Record<KnownLabelValue, InterpretedLabelValueDefinition> =\n  {\n    '!hide': {\n      identifier: '!hide',\n      configurable: false,\n      defaultSetting: 'hide',\n      flags: ['no-override', 'no-self'],\n      severity: 'alert',\n      blurs: 'content',\n      behaviors: {\n        account: {\n          profileList: 'blur',\n          profileView: 'blur',\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n        },\n        content: {\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n      },\n      locales: [],\n    },\n    '!warn': {\n      identifier: '!warn',\n      configurable: false,\n      defaultSetting: 'warn',\n      flags: ['no-self'],\n      severity: 'none',\n      blurs: 'content',\n      behaviors: {\n        account: {\n          profileList: 'blur',\n          profileView: 'blur',\n          avatar: 'blur',\n          banner: 'blur',\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n        },\n        content: {\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n      },\n      locales: [],\n    },\n    '!no-unauthenticated': {\n      identifier: '!no-unauthenticated',\n      configurable: false,\n      defaultSetting: 'hide',\n      flags: ['no-override', 'unauthed'],\n      severity: 'none',\n      blurs: 'content',\n      behaviors: {\n        account: {\n          profileList: 'blur',\n          profileView: 'blur',\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n        },\n        content: {\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n      },\n      locales: [],\n    },\n    porn: {\n      identifier: 'porn',\n      configurable: true,\n      defaultSetting: 'hide',\n      flags: ['adult'],\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n    sexual: {\n      identifier: 'sexual',\n      configurable: true,\n      defaultSetting: 'warn',\n      flags: ['adult'],\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n    nudity: {\n      identifier: 'nudity',\n      configurable: true,\n      defaultSetting: 'ignore',\n      flags: [],\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n    'graphic-media': {\n      identifier: 'graphic-media',\n      flags: ['adult'],\n      configurable: true,\n      defaultSetting: 'warn',\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n    /** @deprecated alias for `graphic-media` */\n    gore: {\n      identifier: 'gore',\n      flags: ['adult'],\n      configurable: true,\n      defaultSetting: 'warn',\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n  }\n", "import {\n  AppBskyActorDefs,\n  AppBskyFeedDefs,\n  AppBskyGraphDefs,\n  AppBskyNotificationListNotifications,\n  ChatBskyActorDefs,\n  ComAtprotoLabelDefs,\n} from '../client/index'\nimport { KnownLabelValue } from './const/labels'\n\n// syntax\n// =\n\nexport const CUSTOM_LABEL_VALUE_RE = /^[a-z-]+$/\n\n// behaviors\n// =\n\nexport interface ModerationBehavior {\n  profileList?: 'blur' | 'alert' | 'inform'\n  profileView?: 'blur' | 'alert' | 'inform'\n  avatar?: 'blur' | 'alert'\n  banner?: 'blur'\n  displayName?: 'blur'\n  contentList?: 'blur' | 'alert' | 'inform'\n  contentView?: 'blur' | 'alert' | 'inform'\n  contentMedia?: 'blur'\n}\nexport const BLOCK_BEHAVIOR: ModerationBehavior = {\n  profileList: 'blur',\n  profileView: 'alert',\n  avatar: 'blur',\n  banner: 'blur',\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const MUTE_BEHAVIOR: ModerationBehavior = {\n  profileList: 'inform',\n  profileView: 'alert',\n  contentList: 'blur',\n  contentView: 'inform',\n}\nexport const MUTEWORD_BEHAVIOR: ModerationBehavior = {\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const HIDE_BEHAVIOR: ModerationBehavior = {\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const NOOP_BEHAVIOR: ModerationBehavior = {}\n\n// labels\n// =\n\nexport type Label = ComAtprotoLabelDefs.Label\nexport type LabelTarget = 'account' | 'profile' | 'content'\nexport type LabelPreference = 'ignore' | 'warn' | 'hide'\n\nexport type LabelValueDefinitionFlag =\n  | 'no-override'\n  | 'adult'\n  | 'unauthed'\n  | 'no-self'\n\nexport interface InterpretedLabelValueDefinition\n  extends ComAtprotoLabelDefs.LabelValueDefinition {\n  definedBy?: string | undefined // did of labeler or undefined for global\n  configurable: boolean\n  defaultSetting: LabelPreference // type narrowing\n  flags: LabelValueDefinitionFlag[]\n  behaviors: {\n    account?: ModerationBehavior\n    profile?: ModerationBehavior\n    content?: ModerationBehavior\n  }\n}\n\nexport type LabelDefinitionMap = Record<\n  KnownLabelValue,\n  InterpretedLabelValueDefinition\n>\n\n// subjects\n// =\n\nexport type ModerationSubjectProfile =\n  | AppBskyActorDefs.ProfileViewBasic\n  | AppBskyActorDefs.ProfileView\n  | AppBskyActorDefs.ProfileViewDetailed\n  | ChatBskyActorDefs.ProfileViewBasic\n\nexport type ModerationSubjectPost = AppBskyFeedDefs.PostView\n\nexport type ModerationSubjectNotification =\n  AppBskyNotificationListNotifications.Notification\n\nexport type ModerationSubjectFeedGenerator = AppBskyFeedDefs.GeneratorView\n\nexport type ModerationSubjectUserList =\n  | AppBskyGraphDefs.ListViewBasic\n  | AppBskyGraphDefs.ListView\n\nexport type ModerationSubject =\n  | ModerationSubjectProfile\n  | ModerationSubjectPost\n  | ModerationSubjectNotification\n  | ModerationSubjectFeedGenerator\n  | ModerationSubjectUserList\n\n// behaviors\n// =\n\nexport type ModerationCauseSource =\n  | { type: 'user' }\n  | { type: 'list'; list: AppBskyGraphDefs.ListViewBasic }\n  | { type: 'labeler'; did: string }\n\nexport type ModerationCause =\n  | {\n      type: 'blocking'\n      source: ModerationCauseSource\n      priority: 3\n      downgraded?: boolean\n    }\n  | {\n      type: 'blocked-by'\n      source: ModerationCauseSource\n      priority: 4\n      downgraded?: boolean\n    }\n  | {\n      type: 'block-other'\n      source: ModerationCauseSource\n      priority: 4\n      downgraded?: boolean\n    }\n  | {\n      type: 'label'\n      source: ModerationCauseSource\n      label: Label\n      labelDef: InterpretedLabelValueDefinition\n      target: LabelTarget\n      setting: LabelPreference\n      behavior: ModerationBehavior\n      noOverride: boolean\n      priority: 1 | 2 | 5 | 7 | 8\n      downgraded?: boolean\n    }\n  | {\n      type: 'muted'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n    }\n  | {\n      type: 'mute-word'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n    }\n  | {\n      type: 'hidden'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n    }\n\nexport interface ModerationPrefsLabeler {\n  did: string\n  labels: Record<string, LabelPreference>\n}\n\nexport interface ModerationPrefs {\n  adultContentEnabled: boolean\n  labels: Record<string, LabelPreference>\n  labelers: ModerationPrefsLabeler[]\n  mutedWords: AppBskyActorDefs.MutedWord[]\n  hiddenPosts: string[]\n}\n\nexport interface ModerationOpts {\n  userDid: string | undefined\n  prefs: ModerationPrefs\n  /**\n   * Map of labeler did -> custom definitions\n   */\n  labelDefs?: Record<string, InterpretedLabelValueDefinition[]>\n}\n", "import { ModerationCause } from './types'\n\nexport class ModerationUI {\n  noOverride = false\n  filters: ModerationCause[] = []\n  blurs: ModerationCause[] = []\n  alerts: ModerationCause[] = []\n  informs: ModerationCause[] = []\n  get filter(): boolean {\n    return this.filters.length !== 0\n  }\n  get blur(): boolean {\n    return this.blurs.length !== 0\n  }\n  get alert(): boolean {\n    return this.alerts.length !== 0\n  }\n  get inform(): boolean {\n    return this.informs.length !== 0\n  }\n}\n", "import { AppBskyGraphDefs } from '../client/index'\nimport { LABELS } from './const/labels'\nimport {\n  BLOCK_BEHAVIOR,\n  CUSTOM_LABEL_VALUE_RE,\n  HIDE_BEHAVIOR,\n  Label,\n  LabelPreference,\n  LabelTarget,\n  MUTEWORD_BEHAVIOR,\n  MUTE_BEHAVIOR,\n  ModerationBehavior,\n  ModerationCause,\n  ModerationOpts,\n  NOOP_BEHAVIOR,\n} from './types'\nimport { ModerationUI } from './ui'\n\nenum ModerationBehaviorSeverity {\n  High,\n  Medium,\n  Low,\n}\n\nexport class ModerationDecision {\n  did = ''\n  isMe = false\n  causes: ModerationCause[] = []\n\n  constructor() {}\n\n  static merge(\n    ...decisions: (ModerationDecision | undefined)[]\n  ): ModerationDecision {\n    const decisionsFiltered = decisions.filter((v) => v != null)\n    const decision = new ModerationDecision()\n    if (decisionsFiltered[0]) {\n      decision.did = decisionsFiltered[0].did\n      decision.isMe = decisionsFiltered[0].isMe\n    }\n    decision.causes = decisionsFiltered.flatMap((d) => d.causes)\n    return decision\n  }\n\n  downgrade() {\n    for (const cause of this.causes) {\n      cause.downgraded = true\n    }\n    return this\n  }\n\n  get blocked() {\n    return !!this.blockCause\n  }\n\n  get muted() {\n    return !!this.muteCause\n  }\n\n  get blockCause() {\n    return this.causes.find(\n      (cause) =>\n        cause.type === 'blocking' ||\n        cause.type === 'blocked-by' ||\n        cause.type === 'block-other',\n    )\n  }\n\n  get muteCause() {\n    return this.causes.find((cause) => cause.type === 'muted')\n  }\n\n  get labelCauses() {\n    return this.causes.filter((cause) => cause.type === 'label')\n  }\n\n  ui(context: keyof ModerationBehavior): ModerationUI {\n    const ui = new ModerationUI()\n    for (const cause of this.causes) {\n      if (\n        cause.type === 'blocking' ||\n        cause.type === 'blocked-by' ||\n        cause.type === 'block-other'\n      ) {\n        if (this.isMe) {\n          continue\n        }\n        if (context === 'profileList' || context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (BLOCK_BEHAVIOR[context] === 'blur') {\n            ui.noOverride = true\n            ui.blurs.push(cause)\n          } else if (BLOCK_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (BLOCK_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'muted') {\n        if (this.isMe) {\n          continue\n        }\n        if (context === 'profileList' || context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (MUTE_BEHAVIOR[context] === 'blur') {\n            ui.blurs.push(cause)\n          } else if (MUTE_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (MUTE_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'mute-word') {\n        if (this.isMe) {\n          continue\n        }\n        if (context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (MUTEWORD_BEHAVIOR[context] === 'blur') {\n            ui.blurs.push(cause)\n          } else if (MUTEWORD_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (MUTEWORD_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'hidden') {\n        if (context === 'profileList' || context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (HIDE_BEHAVIOR[context] === 'blur') {\n            ui.blurs.push(cause)\n          } else if (HIDE_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (HIDE_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'label') {\n        if (context === 'profileList' && cause.target === 'account') {\n          if (cause.setting === 'hide' && !this.isMe) {\n            ui.filters.push(cause)\n          }\n        } else if (\n          context === 'contentList' &&\n          (cause.target === 'account' || cause.target === 'content')\n        ) {\n          if (cause.setting === 'hide' && !this.isMe) {\n            ui.filters.push(cause)\n          }\n        }\n        if (!cause.downgraded) {\n          if (cause.behavior[context] === 'blur') {\n            ui.blurs.push(cause)\n            if (cause.noOverride && !this.isMe) {\n              ui.noOverride = true\n            }\n          } else if (cause.behavior[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (cause.behavior[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      }\n    }\n\n    ui.filters.sort(sortByPriority)\n    ui.blurs.sort(sortByPriority)\n\n    return ui\n  }\n\n  setDid(did: string) {\n    this.did = did\n  }\n\n  setIsMe(isMe: boolean) {\n    this.isMe = isMe\n  }\n\n  addHidden(hidden: boolean) {\n    if (hidden) {\n      this.causes.push({\n        type: 'hidden',\n        source: { type: 'user' },\n        priority: 6,\n      })\n    }\n  }\n\n  addMutedWord(mutedWord: boolean) {\n    if (mutedWord) {\n      this.causes.push({\n        type: 'mute-word',\n        source: { type: 'user' },\n        priority: 6,\n      })\n    }\n  }\n\n  addBlocking(blocking: string | undefined) {\n    if (blocking) {\n      this.causes.push({\n        type: 'blocking',\n        source: { type: 'user' },\n        priority: 3,\n      })\n    }\n  }\n\n  addBlockingByList(\n    blockingByList: AppBskyGraphDefs.ListViewBasic | undefined,\n  ) {\n    if (blockingByList) {\n      this.causes.push({\n        type: 'blocking',\n        source: { type: 'list', list: blockingByList },\n        priority: 3,\n      })\n    }\n  }\n\n  addBlockedBy(blockedBy: boolean | undefined) {\n    if (blockedBy) {\n      this.causes.push({\n        type: 'blocked-by',\n        source: { type: 'user' },\n        priority: 4,\n      })\n    }\n  }\n\n  addBlockOther(blockOther: boolean | undefined) {\n    if (blockOther) {\n      this.causes.push({\n        type: 'block-other',\n        source: { type: 'user' },\n        priority: 4,\n      })\n    }\n  }\n\n  addLabel(target: LabelTarget, label: Label, opts: ModerationOpts) {\n    // look up the label definition\n    const labelDef = CUSTOM_LABEL_VALUE_RE.test(label.val)\n      ? opts.labelDefs?.[label.src]?.find(\n          (def) => def.identifier === label.val,\n        ) || LABELS[label.val]\n      : LABELS[label.val]\n    if (!labelDef) {\n      // ignore labels we don't understand\n      return\n    }\n\n    // look up the label preference\n    const isSelf = label.src === this.did\n    const labeler = isSelf\n      ? undefined\n      : opts.prefs.labelers.find((s) => s.did === label.src)\n\n    if (!isSelf && !labeler) {\n      return // skip labelers not configured by the user\n    }\n    if (isSelf && labelDef.flags.includes('no-self')) {\n      return // skip self-labels that aren't supported\n    }\n\n    // establish the label preference for interpretation\n    let labelPref: LabelPreference = labelDef.defaultSetting || 'ignore'\n    if (!labelDef.configurable) {\n      labelPref = labelDef.defaultSetting || 'hide'\n    } else if (\n      labelDef.flags.includes('adult') &&\n      !opts.prefs.adultContentEnabled\n    ) {\n      labelPref = 'hide'\n    } else if (labeler?.labels[labelDef.identifier]) {\n      labelPref = labeler?.labels[labelDef.identifier]\n    } else if (opts.prefs.labels[labelDef.identifier]) {\n      labelPref = opts.prefs.labels[labelDef.identifier]\n    }\n\n    // ignore labels the user has asked to ignore\n    if (labelPref === 'ignore') {\n      return\n    }\n\n    // ignore 'unauthed' labels when the user is authed\n    if (labelDef.flags.includes('unauthed') && !!opts.userDid) {\n      return\n    }\n\n    // establish the priority of the label\n    let priority: 1 | 2 | 5 | 7 | 8\n    const severity = measureModerationBehaviorSeverity(\n      labelDef.behaviors[target],\n    )\n    if (\n      labelDef.flags.includes('no-override') ||\n      (labelDef.flags.includes('adult') && !opts.prefs.adultContentEnabled)\n    ) {\n      priority = 1\n    } else if (labelPref === 'hide') {\n      priority = 2\n    } else if (severity === ModerationBehaviorSeverity.High) {\n      // blurring profile view or content view\n      priority = 5\n    } else if (severity === ModerationBehaviorSeverity.Medium) {\n      // blurring content list or content media\n      priority = 7\n    } else {\n      // blurring avatar, adding alerts\n      priority = 8\n    }\n\n    let noOverride = false\n    if (labelDef.flags.includes('no-override')) {\n      noOverride = true\n    } else if (\n      labelDef.flags.includes('adult') &&\n      !opts.prefs.adultContentEnabled\n    ) {\n      noOverride = true\n    }\n\n    this.causes.push({\n      type: 'label',\n      source:\n        isSelf || !labeler\n          ? { type: 'user' }\n          : { type: 'labeler', did: labeler.did },\n      label,\n      labelDef,\n      target,\n      setting: labelPref,\n      behavior: labelDef.behaviors[target] || NOOP_BEHAVIOR,\n      noOverride,\n      priority,\n    })\n  }\n\n  addMuted(muted: boolean | undefined) {\n    if (muted) {\n      this.causes.push({\n        type: 'muted',\n        source: { type: 'user' },\n        priority: 6,\n      })\n    }\n  }\n\n  addMutedByList(mutedByList: AppBskyGraphDefs.ListViewBasic | undefined) {\n    if (mutedByList) {\n      this.causes.push({\n        type: 'muted',\n        source: { type: 'list', list: mutedByList },\n        priority: 6,\n      })\n    }\n  }\n}\n\nfunction measureModerationBehaviorSeverity(\n  beh: ModerationBehavior | undefined,\n): ModerationBehaviorSeverity {\n  if (!beh) {\n    return ModerationBehaviorSeverity.Low\n  }\n  if (beh.profileView === 'blur' || beh.contentView === 'blur') {\n    return ModerationBehaviorSeverity.High\n  }\n  if (beh.contentList === 'blur' || beh.contentMedia === 'blur') {\n    return ModerationBehaviorSeverity.Medium\n  }\n  return ModerationBehaviorSeverity.Low\n}\n\nfunction sortByPriority(a: ModerationCause, b: ModerationCause) {\n  return a.priority - b.priority\n}\n", "import { ModerationDecision } from '../decision'\nimport { Label, ModerationOpts, ModerationSubjectProfile } from '../types'\n\nexport function decideAccount(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.did)\n  acc.setIsMe(subject.did === opts.userDid)\n  if (subject.viewer?.muted) {\n    if (subject.viewer?.mutedByList) {\n      acc.addMutedByList(subject.viewer?.mutedByList)\n    } else {\n      acc.addMuted(subject.viewer?.muted)\n    }\n  }\n  if (subject.viewer?.blocking) {\n    if (subject.viewer?.blockingByList) {\n      acc.addBlockingByList(subject.viewer?.blockingByList)\n    } else {\n      acc.addBlocking(subject.viewer?.blocking)\n    }\n  }\n  acc.addBlockedBy(subject.viewer?.blockedBy)\n\n  for (const label of filterAccountLabels(subject.labels)) {\n    acc.addLabel('account', label, opts)\n  }\n\n  return acc\n}\n\nexport function filterAccountLabels(labels?: Label[]): Label[] {\n  if (!labels) {\n    return []\n  }\n  return labels.filter(\n    (label) =>\n      !label.uri.endsWith('/app.bsky.actor.profile/self') ||\n      label.val === '!no-unauthenticated',\n  )\n}\n", "import { ModerationDecision } from '../decision'\nimport { Label, ModerationOpts, ModerationSubjectProfile } from '../types'\n\nexport function decideProfile(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.did)\n  acc.setIsMe(subject.did === opts.userDid)\n  for (const label of filterProfileLabels(subject.labels)) {\n    acc.addLabel('profile', label, opts)\n  }\n\n  return acc\n}\n\nexport function filterProfileLabels(labels?: Label[]): Label[] {\n  if (!labels) {\n    return []\n  }\n  return labels.filter((label) =>\n    label.uri.endsWith('/app.bsky.actor.profile/self'),\n  )\n}\n", "import { ModerationDecision } from '../decision'\nimport { ModerationOpts, ModerationSubjectFeedGenerator } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decideFeedGenerator(\n  subject: ModerationSubjectFeedGenerator,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.creator.did)\n  acc.setIsMe(subject.creator.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  return ModerationDecision.merge(\n    acc,\n    decideAccount(subject.creator, opts),\n    decideProfile(subject.creator, opts),\n  )\n}\n", "import { ModerationDecision } from '../decision'\nimport { ModerationOpts, ModerationSubjectNotification } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decideNotification(\n  subject: ModerationSubjectNotification,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n\n  return ModerationDecision.merge(\n    acc,\n    decideAccount(subject.author, opts),\n    decideProfile(subject.author, opts),\n  )\n}\n", "import { AppBskyActorDefs, AppBskyRichtextFacet } from '../client'\n\nconst REGEX = {\n  LEADING_TRAILING_PUNCTUATION: /(?:^\\p{P}+|\\p{P}+$)/gu,\n  ESCAPE: /[[\\]{}()*+?.\\\\^$|\\s]/g,\n  SEPARATORS: /[/\\-\u2013\u2014()[\\]_]+/g,\n  WORD_BOUNDARY: /[\\s\\n\\t\\r\\f\\v]+?/g,\n}\n\n/**\n * List of 2-letter lang codes for languages that either don't use spaces, or\n * don't use spaces in a way conducive to word-based filtering.\n *\n * For these, we use a simple `String.includes` to check for a match.\n */\nconst LANGUAGE_EXCEPTIONS = [\n  'ja', // Japanese\n  'zh', // Chinese\n  'ko', // Korean\n  'th', // Thai\n  'vi', // Vietnamese\n]\n\nexport function hasMutedWord({\n  mutedWords,\n  text,\n  facets,\n  outlineTags,\n  languages,\n  actor,\n}: {\n  mutedWords: AppBskyActorDefs.MutedWord[]\n  text: string\n  facets?: AppBskyRichtextFacet.Main[]\n  outlineTags?: string[]\n  languages?: string[]\n  actor?: AppBskyActorDefs.ProfileView | AppBskyActorDefs.ProfileViewBasic\n}) {\n  const exception = LANGUAGE_EXCEPTIONS.includes(languages?.[0] || '')\n  const tags = ([] as string[])\n    .concat(outlineTags || [])\n    .concat(\n      (facets || []).flatMap((facet) =>\n        facet.features.filter(AppBskyRichtextFacet.isTag).map((tag) => tag.tag),\n      ),\n    )\n    .map((t) => t.toLowerCase())\n\n  for (const mute of mutedWords) {\n    const mutedWord = mute.value.toLowerCase()\n    const postText = text.toLowerCase()\n\n    // expired, ignore\n    if (mute.expiresAt && mute.expiresAt < new Date().toISOString()) continue\n\n    if (\n      mute.actorTarget === 'exclude-following' &&\n      Boolean(actor?.viewer?.following)\n    )\n      continue\n\n    // `content` applies to tags as well\n    if (tags.includes(mutedWord)) return true\n    // rest of the checks are for `content` only\n    if (!mute.targets.includes('content')) continue\n    // single character or other exception, has to use includes\n    if ((mutedWord.length === 1 || exception) && postText.includes(mutedWord))\n      return true\n    // too long\n    if (mutedWord.length > postText.length) continue\n    // exact match\n    if (mutedWord === postText) return true\n    // any muted phrase with space or punctuation\n    if (/(?:\\s|\\p{P})+?/u.test(mutedWord) && postText.includes(mutedWord))\n      return true\n\n    // check individual character groups\n    const words = postText.split(REGEX.WORD_BOUNDARY)\n    for (const word of words) {\n      if (word === mutedWord) return true\n\n      // compare word without leading/trailing punctuation, but allow internal\n      // punctuation (such as `s@ssy`)\n      const wordTrimmedPunctuation = word.replace(\n        REGEX.LEADING_TRAILING_PUNCTUATION,\n        '',\n      )\n\n      if (mutedWord === wordTrimmedPunctuation) return true\n      if (mutedWord.length > wordTrimmedPunctuation.length) continue\n\n      if (/\\p{P}+/u.test(wordTrimmedPunctuation)) {\n        const spacedWord = wordTrimmedPunctuation.replace(/\\p{P}+/gu, ' ')\n        if (spacedWord === mutedWord) return true\n\n        const contiguousWord = spacedWord.replace(/\\s/gu, '')\n        if (contiguousWord === mutedWord) return true\n\n        const wordParts = wordTrimmedPunctuation.split(/\\p{P}+/u)\n        for (const wordPart of wordParts) {\n          if (wordPart === mutedWord) return true\n        }\n      }\n    }\n  }\n\n  return false\n}\n", "import {\n  AppBskyActorDefs,\n  AppBskyEmbedExternal,\n  AppBskyEmbedImages,\n  AppBskyEmbedRecord,\n  AppBskyEmbedRecordWithMedia,\n  AppBskyFeedPost,\n} from '../../client'\nimport { $Typed } from '../../client/util'\nimport { ModerationDecision } from '../decision'\nimport { hasMutedWord } from '../mutewords'\nimport { ModerationOpts, ModerationSubjectPost } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decidePost(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return ModerationDecision.merge(\n    decideSubject(subject, opts),\n    decideEmbed(subject.embed, opts)?.downgrade(),\n    decideAccount(subject.author, opts),\n    decideProfile(subject.author, opts),\n  )\n}\n\nfunction decideSubject(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  acc.addHidden(checkHiddenPost(subject, opts.prefs.hiddenPosts))\n  if (!acc.isMe) {\n    acc.addMutedWord(checkMutedWords(subject, opts.prefs.mutedWords))\n  }\n\n  return acc\n}\n\nfunction decideEmbed(\n  embed:\n    | undefined\n    | $Typed<AppBskyEmbedRecord.View>\n    | $Typed<AppBskyEmbedRecordWithMedia.View>\n    | { $type: string },\n  opts: ModerationOpts,\n) {\n  if (embed) {\n    if (\n      (AppBskyEmbedRecord.isView(embed) ||\n        AppBskyEmbedRecordWithMedia.isView(embed)) &&\n      AppBskyEmbedRecord.isViewRecord(embed.record)\n    ) {\n      // quote post\n      return decideQuotedPost(embed.record, opts)\n    } else if (\n      AppBskyEmbedRecordWithMedia.isView(embed) &&\n      AppBskyEmbedRecord.isViewRecord(embed.record.record)\n    ) {\n      // quoted post with media\n      return decideQuotedPost(embed.record.record, opts)\n    } else if (\n      (AppBskyEmbedRecord.isView(embed) ||\n        AppBskyEmbedRecordWithMedia.isView(embed)) &&\n      AppBskyEmbedRecord.isViewBlocked(embed.record)\n    ) {\n      // blocked quote post\n      return decideBlockedQuotedPost(embed.record, opts)\n    } else if (\n      AppBskyEmbedRecordWithMedia.isView(embed) &&\n      AppBskyEmbedRecord.isViewBlocked(embed.record.record)\n    ) {\n      // blocked quoted post with media\n      return decideBlockedQuotedPost(embed.record.record, opts)\n    }\n  }\n\n  return undefined\n}\n\nfunction decideQuotedPost(\n  subject: AppBskyEmbedRecord.ViewRecord,\n  opts: ModerationOpts,\n) {\n  const acc = new ModerationDecision()\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  return ModerationDecision.merge(\n    acc,\n    decideAccount(subject.author, opts),\n    decideProfile(subject.author, opts),\n  )\n}\n\nfunction decideBlockedQuotedPost(\n  subject: AppBskyEmbedRecord.ViewBlocked,\n  opts: ModerationOpts,\n) {\n  const acc = new ModerationDecision()\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.author.viewer?.muted) {\n    if (subject.author.viewer?.mutedByList) {\n      acc.addMutedByList(subject.author.viewer?.mutedByList)\n    } else {\n      acc.addMuted(subject.author.viewer?.muted)\n    }\n  }\n  if (subject.author.viewer?.blocking) {\n    if (subject.author.viewer?.blockingByList) {\n      acc.addBlockingByList(subject.author.viewer?.blockingByList)\n    } else {\n      acc.addBlocking(subject.author.viewer?.blocking)\n    }\n  }\n  acc.addBlockedBy(subject.author.viewer?.blockedBy)\n  return acc\n}\n\nfunction checkHiddenPost(\n  subject: ModerationSubjectPost,\n  hiddenPosts: string[] | undefined,\n) {\n  if (!hiddenPosts?.length) {\n    return false\n  }\n  if (hiddenPosts.includes(subject.uri)) {\n    return true\n  }\n  if (subject.embed) {\n    if (\n      AppBskyEmbedRecord.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record) &&\n      hiddenPosts.includes(subject.embed.record.uri)\n    ) {\n      return true\n    }\n    if (\n      AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record.record) &&\n      hiddenPosts.includes(subject.embed.record.record.uri)\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkMutedWords(\n  subject: ModerationSubjectPost,\n  mutedWords: AppBskyActorDefs.MutedWord[] | undefined,\n) {\n  if (!mutedWords?.length) {\n    return false\n  }\n\n  const postAuthor = subject.author\n\n  if (AppBskyFeedPost.isRecord(subject.record)) {\n    const post = subject.record as AppBskyFeedPost.Record\n    // post text\n    if (\n      hasMutedWord({\n        mutedWords,\n        text: post.text,\n        facets: post.facets,\n        outlineTags: post.tags,\n        languages: post.langs,\n        actor: postAuthor,\n      })\n    ) {\n      return true\n    }\n\n    if (post.embed && AppBskyEmbedImages.isMain(post.embed)) {\n      // post images\n      for (const image of post.embed.images) {\n        if (\n          hasMutedWord({\n            mutedWords,\n            text: image.alt,\n            languages: post.langs,\n            actor: postAuthor,\n          })\n        ) {\n          return true\n        }\n      }\n    }\n  }\n\n  const { embed } = subject\n  if (embed) {\n    // quote post\n    if (\n      (AppBskyEmbedRecord.isView(embed) ||\n        AppBskyEmbedRecordWithMedia.isView(embed)) &&\n      AppBskyEmbedRecord.isViewRecord(embed.record)\n    ) {\n      if (AppBskyFeedPost.isRecord(embed.record.value)) {\n        const embeddedPost = embed.record.value as AppBskyFeedPost.Record\n        const embedAuthor = embed.record.author\n\n        // quoted post text\n        if (\n          hasMutedWord({\n            mutedWords,\n            text: embeddedPost.text,\n            facets: embeddedPost.facets,\n            outlineTags: embeddedPost.tags,\n            languages: embeddedPost.langs,\n            actor: embedAuthor,\n          })\n        ) {\n          return true\n        }\n\n        // quoted post's images\n        if (AppBskyEmbedImages.isMain(embeddedPost.embed)) {\n          for (const image of embeddedPost.embed.images) {\n            if (\n              hasMutedWord({\n                mutedWords,\n                text: image.alt,\n                languages: embeddedPost.langs,\n                actor: embedAuthor,\n              })\n            ) {\n              return true\n            }\n          }\n        }\n\n        // quoted post's link card\n        if (AppBskyEmbedExternal.isMain(embeddedPost.embed)) {\n          const { external } = embeddedPost.embed\n          if (\n            hasMutedWord({\n              mutedWords,\n              text: external.title + ' ' + external.description,\n              languages: [],\n              actor: embedAuthor,\n            })\n          ) {\n            return true\n          }\n        }\n\n        if (AppBskyEmbedRecordWithMedia.isMain(embeddedPost.embed)) {\n          // quoted post's link card when it did a quote + media\n          if (AppBskyEmbedExternal.isMain(embeddedPost.embed.media)) {\n            const { external } = embeddedPost.embed.media\n            if (\n              hasMutedWord({\n                mutedWords,\n                text: external.title + ' ' + external.description,\n                languages: [],\n                actor: embedAuthor,\n              })\n            ) {\n              return true\n            }\n          }\n\n          // quoted post's images when it did a quote + media\n          if (AppBskyEmbedImages.isMain(embeddedPost.embed.media)) {\n            for (const image of embeddedPost.embed.media.images) {\n              if (\n                hasMutedWord({\n                  mutedWords,\n                  text: image.alt,\n                  languages: AppBskyFeedPost.isRecord(embeddedPost.record)\n                    ? embeddedPost.langs\n                    : [],\n                  actor: embedAuthor,\n                })\n              ) {\n                return true\n              }\n            }\n          }\n        }\n      }\n    }\n    // link card\n    else if (AppBskyEmbedExternal.isView(embed)) {\n      const { external } = embed\n      if (\n        hasMutedWord({\n          mutedWords,\n          text: external.title + ' ' + external.description,\n          languages: [],\n          actor: postAuthor,\n        })\n      ) {\n        return true\n      }\n    }\n    // quote post with media\n    else if (\n      AppBskyEmbedRecordWithMedia.isView(embed) &&\n      AppBskyEmbedRecord.isViewRecord(embed.record.record)\n    ) {\n      const embedAuthor = embed.record.record.author\n\n      // quoted post text\n      if (AppBskyFeedPost.isRecord(embed.record.record.value)) {\n        const post = embed.record.record.value as AppBskyFeedPost.Record\n        if (\n          hasMutedWord({\n            mutedWords,\n            text: post.text,\n            facets: post.facets,\n            outlineTags: post.tags,\n            languages: post.langs,\n            actor: embedAuthor,\n          })\n        ) {\n          return true\n        }\n      }\n\n      // quoted post images\n      if (AppBskyEmbedImages.isView(embed.media)) {\n        for (const image of embed.media.images) {\n          if (\n            hasMutedWord({\n              mutedWords,\n              text: image.alt,\n              languages: AppBskyFeedPost.isRecord(subject.record)\n                ? (subject.record as AppBskyFeedPost.Record).langs\n                : [],\n              actor: embedAuthor,\n            })\n          ) {\n            return true\n          }\n        }\n      }\n\n      if (AppBskyEmbedExternal.isView(embed.media)) {\n        const { external } = embed.media\n        if (\n          hasMutedWord({\n            mutedWords,\n            text: external.title + ' ' + external.description,\n            languages: [],\n            actor: embedAuthor,\n          })\n        ) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n}\n", "import { AtUri } from '@atproto/syntax'\nimport { AppBskyActorDefs } from '../../client/index'\nimport { ModerationDecision } from '../decision'\nimport { ModerationOpts, ModerationSubjectUserList } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decideUserList(\n  subject: ModerationSubjectUserList,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  const creator =\n    // Note: ListViewBasic should not contain a creator field, but let's support it anyway\n    'creator' in subject && isProfile(subject.creator)\n      ? subject.creator\n      : undefined\n\n  if (creator) {\n    acc.setDid(creator.did)\n    acc.setIsMe(creator.did === opts.userDid)\n    if (subject.labels?.length) {\n      for (const label of subject.labels) {\n        acc.addLabel('content', label, opts)\n      }\n    }\n    return ModerationDecision.merge(\n      acc,\n      decideAccount(creator, opts),\n      decideProfile(creator, opts),\n    )\n  }\n\n  const creatorDid = new AtUri(subject.uri).hostname\n  acc.setDid(creatorDid)\n  acc.setIsMe(creatorDid === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  return acc\n}\n\nfunction isProfile(v: any): v is AppBskyActorDefs.ProfileViewBasic {\n  return v && typeof v === 'object' && 'did' in v\n}\n", "import {\n  AppBskyEmbedRecord,\n  AppBskyEmbedRecordWithMedia,\n  AppBskyLabelerDefs,\n  ComAtprotoLabelDefs,\n} from '../client'\nimport { asPredicate } from '../client/util'\nimport {\n  InterpretedLabelValueDefinition,\n  LabelPreference,\n  LabelValueDefinitionFlag,\n  ModerationBehavior,\n} from './types'\n\nexport function isQuotedPost(embed: unknown): embed is AppBskyEmbedRecord.View {\n  return Boolean(embed && AppBskyEmbedRecord.isView(embed))\n}\n\nexport function isQuotedPostWithMedia(\n  embed: unknown,\n): embed is AppBskyEmbedRecordWithMedia.View {\n  return Boolean(embed && AppBskyEmbedRecordWithMedia.isView(embed))\n}\n\nexport function interpretLabelValueDefinition(\n  def: ComAtprotoLabelDefs.LabelValueDefinition,\n  definedBy: string | undefined,\n): InterpretedLabelValueDefinition {\n  const behaviors: {\n    account: ModerationBehavior\n    profile: ModerationBehavior\n    content: ModerationBehavior\n  } = {\n    account: {},\n    profile: {},\n    content: {},\n  }\n  const alertOrInform: 'alert' | 'inform' | undefined =\n    def.severity === 'alert'\n      ? 'alert'\n      : def.severity === 'inform'\n        ? 'inform'\n        : undefined\n  if (def.blurs === 'content') {\n    // target=account, blurs=content\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.contentList = 'blur'\n    behaviors.account.contentView = def.adultOnly ? 'blur' : alertOrInform\n    // target=profile, blurs=content\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    // target=content, blurs=content\n    behaviors.content.contentList = 'blur'\n    behaviors.content.contentView = def.adultOnly ? 'blur' : alertOrInform\n  } else if (def.blurs === 'media') {\n    // target=account, blurs=media\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.avatar = 'blur'\n    behaviors.account.banner = 'blur'\n    // target=profile, blurs=media\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    behaviors.profile.avatar = 'blur'\n    behaviors.profile.banner = 'blur'\n    // target=content, blurs=media\n    behaviors.content.contentMedia = 'blur'\n  } else if (def.blurs === 'none') {\n    // target=account, blurs=none\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.contentList = alertOrInform\n    behaviors.account.contentView = alertOrInform\n    // target=profile, blurs=none\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    // target=content, blurs=none\n    behaviors.content.contentList = alertOrInform\n    behaviors.content.contentView = alertOrInform\n  }\n\n  let defaultSetting: LabelPreference = 'warn'\n  if (def.defaultSetting === 'hide' || def.defaultSetting === 'ignore') {\n    defaultSetting = def.defaultSetting as LabelPreference\n  }\n\n  const flags: LabelValueDefinitionFlag[] = ['no-self']\n  if (def.adultOnly) {\n    flags.push('adult')\n  }\n\n  return {\n    ...def,\n    definedBy,\n    configurable: true,\n    defaultSetting,\n    flags,\n    behaviors,\n  }\n}\n\nexport function interpretLabelValueDefinitions(\n  labelerView: AppBskyLabelerDefs.LabelerViewDetailed,\n): InterpretedLabelValueDefinition[] {\n  return (labelerView.policies?.labelValueDefinitions || [])\n    .filter(asPredicate(ComAtprotoLabelDefs.validateLabelValueDefinition))\n    .map((labelValDef) =>\n      interpretLabelValueDefinition(labelValDef, labelerView.creator.did),\n    )\n}\n", "import { ModerationDecision } from './decision'\nimport { decideAccount } from './subjects/account'\nimport { decideFeedGenerator } from './subjects/feed-generator'\nimport { decideNotification } from './subjects/notification'\nimport { decidePost } from './subjects/post'\nimport { decideProfile } from './subjects/profile'\nimport { decideUserList } from './subjects/user-list'\nimport {\n  ModerationOpts,\n  ModerationSubjectFeedGenerator,\n  ModerationSubjectNotification,\n  ModerationSubjectPost,\n  ModerationSubjectProfile,\n  ModerationSubjectUserList,\n} from './types'\n\nexport { ModerationUI } from './ui'\nexport { ModerationDecision } from './decision'\nexport { hasMutedWord } from './mutewords'\nexport {\n  interpretLabelValueDefinition,\n  interpretLabelValueDefinitions,\n} from './util'\n\nexport function moderateProfile(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return ModerationDecision.merge(\n    decideAccount(subject, opts),\n    decideProfile(subject, opts),\n  )\n}\n\nexport function moderatePost(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decidePost(subject, opts)\n}\n\nexport function moderateNotification(\n  subject: ModerationSubjectNotification,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decideNotification(subject, opts)\n}\n\nexport function moderateFeedGenerator(\n  subject: ModerationSubjectFeedGenerator,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decideFeedGenerator(subject, opts)\n}\n\nexport function moderateUserList(\n  subject: ModerationSubjectUserList,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decideUserList(subject, opts)\n}\n", "import {\n  AppBskyActorDefs,\n  AppBskyEmbedRecord,\n  AppBskyFeedDefs,\n  AppBskyFeedPost,\n  AppBskyGraphDefs,\n  AppBskyNotificationListNotifications,\n  ComAtprotoLabelDefs,\n} from './client'\nimport { $Typed, Un$Typed } from './client/util'\n\nconst FAKE_CID = 'bafyreiclp443lavogvhj3d2ob2cxbfuscni2k5jk7bebjzg7khl3esabwq'\n\nexport const mock = {\n  post({\n    text,\n    facets,\n    reply,\n    embed,\n  }: {\n    text: string\n    facets?: AppBskyFeedPost.Record['facets']\n    reply?: AppBskyFeedPost.ReplyRef\n    embed?: AppBskyFeedPost.Record['embed']\n  }): $Typed<AppBskyFeedPost.Record> {\n    return {\n      $type: 'app.bsky.feed.post',\n      text,\n      facets,\n      reply,\n      embed,\n      langs: ['en'],\n      createdAt: new Date().toISOString(),\n    }\n  },\n\n  postView({\n    record,\n    author,\n    embed,\n    replyCount,\n    repostCount,\n    likeCount,\n    viewer,\n    labels,\n  }: {\n    record: AppBskyFeedPost.Record\n    author: AppBskyActorDefs.ProfileViewBasic\n    embed?: AppBskyFeedDefs.PostView['embed']\n    replyCount?: number\n    repostCount?: number\n    likeCount?: number\n    viewer?: AppBskyFeedDefs.ViewerState\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): $Typed<AppBskyFeedDefs.PostView> {\n    return {\n      $type: 'app.bsky.feed.defs#postView',\n      uri: `at://${author.did}/app.bsky.feed.post/fake`,\n      cid: FAKE_CID,\n      author,\n      record,\n      embed,\n      replyCount,\n      repostCount,\n      likeCount,\n      indexedAt: new Date().toISOString(),\n      viewer,\n      labels,\n    }\n  },\n\n  embedRecordView({\n    record,\n    author,\n    labels,\n  }: {\n    record: AppBskyFeedPost.Record\n    author: AppBskyActorDefs.ProfileViewBasic\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): $Typed<AppBskyEmbedRecord.View> {\n    return {\n      $type: 'app.bsky.embed.record#view',\n      record: {\n        $type: 'app.bsky.embed.record#viewRecord',\n        uri: `at://${author.did}/app.bsky.feed.post/fake`,\n        cid: FAKE_CID,\n        author,\n        value: record,\n        labels,\n        indexedAt: new Date().toISOString(),\n      },\n    }\n  },\n\n  profileViewBasic({\n    handle,\n    displayName,\n    description,\n    viewer,\n    labels,\n  }: {\n    handle: string\n    displayName?: string\n    description?: string\n    viewer?: AppBskyActorDefs.ViewerState\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyActorDefs.ProfileViewBasic {\n    return {\n      did: `did:web:${handle}`,\n      handle,\n      displayName,\n      // @ts-expect-error technically not in ProfileViewBasic but useful in some cases\n      description,\n      viewer,\n      labels,\n    }\n  },\n\n  actorViewerState({\n    muted,\n    mutedByList,\n    blockedBy,\n    blocking,\n    blockingByList,\n    following,\n    followedBy,\n  }: {\n    muted?: boolean\n    mutedByList?: AppBskyGraphDefs.ListViewBasic\n    blockedBy?: boolean\n    blocking?: string\n    blockingByList?: AppBskyGraphDefs.ListViewBasic\n    following?: string\n    followedBy?: string\n  }): AppBskyActorDefs.ViewerState {\n    return {\n      muted,\n      mutedByList,\n      blockedBy,\n      blocking,\n      blockingByList,\n      following,\n      followedBy,\n    }\n  },\n\n  listViewBasic({ name }: { name: string }): AppBskyGraphDefs.ListViewBasic {\n    return {\n      uri: 'at://did:plc:fake/app.bsky.graph.list/fake',\n      cid: FAKE_CID,\n      name,\n      purpose: 'app.bsky.graph.defs#modlist',\n      indexedAt: new Date().toISOString(),\n    }\n  },\n\n  replyNotification({\n    author,\n    record,\n    labels,\n  }: {\n    record: AppBskyFeedPost.Record\n    author: Un$Typed<AppBskyActorDefs.ProfileViewBasic>\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyNotificationListNotifications.Notification {\n    return {\n      uri: `at://${author.did}/app.bsky.feed.post/fake`,\n      cid: FAKE_CID,\n      author,\n      reason: 'reply',\n      reasonSubject: `at://${author.did}/app.bsky.feed.post/fake-parent`,\n      record,\n      isRead: false,\n      indexedAt: new Date().toISOString(),\n      labels,\n    }\n  },\n\n  followNotification({\n    author,\n    subjectDid,\n    labels,\n  }: {\n    author: Un$Typed<AppBskyActorDefs.ProfileViewBasic>\n    subjectDid: string\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyNotificationListNotifications.Notification {\n    return {\n      uri: `at://${author.did}/app.bsky.graph.follow/fake`,\n      cid: FAKE_CID,\n      author,\n      reason: 'follow',\n      record: {\n        $type: 'app.bsky.graph.follow',\n        createdAt: new Date().toISOString(),\n        subject: subjectDid,\n      },\n      isRead: false,\n      indexedAt: new Date().toISOString(),\n      labels,\n    }\n  },\n\n  label({\n    val,\n    uri,\n    src,\n  }: {\n    val: string\n    uri: string\n    src?: string\n  }): ComAtprotoLabelDefs.Label {\n    return {\n      src: src || 'did:plc:fake-labeler',\n      uri,\n      val,\n      cts: new Date().toISOString(),\n    }\n  },\n}\n", "/**\n * A mutex lock for coordination across async functions\n */\nexport default class AwaitLock {\n  #acquired: boolean = false;\n  #waitingResolvers: Set<() => void> = new Set();\n\n  /**\n   * Whether the lock is currently acquired or not. Accessing this property does not affect the\n   * status of the lock.\n   */\n  get acquired(): boolean {\n    return this.#acquired;\n  }\n\n  /**\n   * Acquires the lock, waiting if necessary for it to become free if it is already locked. The\n   * returned promise is fulfilled once the lock is acquired.\n   *\n   * A timeout (in milliseconds) may be optionally provided. If the lock cannot be acquired before\n   * the timeout elapses, the returned promise is rejected with an error. The behavior of invalid\n   * timeout values depends on how `setTimeout` handles those values.\n   *\n   * After acquiring the lock, you **must** call `release` when you are done with it.\n   */\n  acquireAsync({ timeout }: { timeout?: number } = {}): Promise<void> {\n    if (!this.#acquired) {\n      this.#acquired = true;\n      return Promise.resolve();\n    }\n\n    if (timeout == null) {\n      return new Promise((resolve) => {\n        this.#waitingResolvers.add(resolve);\n      });\n    }\n\n    let resolver: () => void;\n    let timer: ReturnType<typeof setTimeout>;\n\n    return Promise.race<void>([\n      new Promise((resolve) => {\n        resolver = () => {\n          clearTimeout(timer);\n          resolve();\n        };\n        this.#waitingResolvers.add(resolver);\n      }),\n      new Promise<void>((_, reject) => {\n        timer = setTimeout(() => {\n          this.#waitingResolvers.delete(resolver);\n          reject(new Error(`Timed out waiting for lock`));\n        }, timeout);\n      }),\n    ]);\n  }\n\n  /**\n   * Acquires the lock if it is free and otherwise returns immediately without waiting. Returns\n   * `true` if the lock was free and is now acquired, and `false` otherwise.\n   *\n   * This method differs from calling `acquireAsync` with a zero-millisecond timeout in that it runs\n   * synchronously without waiting for the JavaScript task queue.\n   */\n  tryAcquire(): boolean {\n    if (!this.#acquired) {\n      this.#acquired = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Releases the lock and gives it to the next waiting acquirer, if there is one. Each acquirer\n   * must release the lock exactly once.\n   */\n  release(): void {\n    if (!this.#acquired) {\n      throw new Error(`Cannot release an unacquired lock`);\n    }\n\n    if (this.#waitingResolvers.size > 0) {\n      // Sets preserve insertion order like a queue\n      const [resolve] = this.#waitingResolvers;\n      this.#waitingResolvers.delete(resolve);\n      resolve();\n    } else {\n      this.#acquired = false;\n    }\n  }\n}\n", "import { AppBskyActorDefs, AppBskyActorProfile } from './client/index'\nimport { asPredicate } from './client/util'\n\nexport const isValidProfile = asPredicate(AppBskyActorProfile.validateRecord)\nexport const isValidAdultContentPref = asPredicate(\n  AppBskyActorDefs.validateAdultContentPref,\n)\nexport const isValidBskyAppStatePref = asPredicate(\n  AppBskyActorDefs.validateBskyAppStatePref,\n)\nexport const isValidContentLabelPref = asPredicate(\n  AppBskyActorDefs.validateContentLabelPref,\n)\nexport const isValidFeedViewPref = asPredicate(\n  AppBskyActorDefs.validateFeedViewPref,\n)\nexport const isValidHiddenPostsPref = asPredicate(\n  AppBskyActorDefs.validateHiddenPostsPref,\n)\nexport const isValidInterestsPref = asPredicate(\n  AppBskyActorDefs.validateInterestsPref,\n)\nexport const isValidLabelersPref = asPredicate(\n  AppBskyActorDefs.validateLabelersPref,\n)\nexport const isValidMutedWordsPref = asPredicate(\n  AppBskyActorDefs.validateMutedWordsPref,\n)\nexport const isValidPersonalDetailsPref = asPredicate(\n  AppBskyActorDefs.validatePersonalDetailsPref,\n)\nexport const isValidPostInteractionSettingsPref = asPredicate(\n  AppBskyActorDefs.validatePostInteractionSettingsPref,\n)\nexport const isValidSavedFeedsPref = asPredicate(\n  AppBskyActorDefs.validateSavedFeedsPref,\n)\nexport const isValidSavedFeedsPrefV2 = asPredicate(\n  AppBskyActorDefs.validateSavedFeedsPrefV2,\n)\nexport const isValidThreadViewPref = asPredicate(\n  AppBskyActorDefs.validateThreadViewPref,\n)\n", "import AwaitLock from 'await-lock'\nimport { TID, retry } from '@atproto/common-web'\nimport { AtUri, ensureValidDid } from '@atproto/syntax'\nimport { FetchHandler, XrpcClient, buildFetchHandler } from '@atproto/xrpc'\nimport {\n  AppBskyActorDefs,\n  AppBskyActorProfile,\n  AppBskyFeedPost,\n  AppBskyLabelerDefs,\n  AppNS,\n  ChatNS,\n  ComAtprotoRepoPutRecord,\n  ComNS,\n  ToolsNS,\n} from './client/index'\nimport { schemas } from './client/lexicons'\nimport { MutedWord, Nux } from './client/types/app/bsky/actor/defs'\nimport { $Typed, Un$Typed } from './client/util'\nimport { BSKY_LABELER_DID } from './const'\nimport { interpretLabelValueDefinitions } from './moderation'\nimport { DEFAULT_LABEL_SETTINGS } from './moderation/const/labels'\nimport {\n  InterpretedLabelValueDefinition,\n  LabelPreference,\n  ModerationPrefs,\n} from './moderation/types'\nimport * as predicate from './predicate'\nimport { SessionManager } from './session-manager'\nimport {\n  AtpAgentGlobalOpts,\n  AtprotoServiceType,\n  BskyFeedViewPreference,\n  BskyInterestsPreference,\n  BskyPreferences,\n  BskyThreadViewPreference,\n} from './types'\nimport {\n  Did,\n  asDid,\n  getSavedFeedType,\n  isDid,\n  sanitizeMutedWordValue,\n  savedFeedsToUriArrays,\n  validateNux,\n  validateSavedFeed,\n} from './util'\n\nconst FEED_VIEW_PREF_DEFAULTS = {\n  hideReplies: false,\n  hideRepliesByUnfollowed: true,\n  hideRepliesByLikeCount: 0,\n  hideReposts: false,\n  hideQuotePosts: false,\n}\n\nconst THREAD_VIEW_PREF_DEFAULTS = {\n  sort: 'hotness',\n  prioritizeFollowedUsers: true,\n}\n\nexport type { FetchHandler }\n\n/**\n * An {@link Agent} is an {@link AtpBaseClient} with the following\n * additional features:\n * - AT Protocol labelers configuration utilities\n * - AT Protocol proxy configuration utilities\n * - Cloning utilities\n * - `app.bsky` syntactic sugar\n * - `com.atproto` syntactic sugar\n */\nexport class Agent extends XrpcClient {\n  //#region Static configuration\n\n  /**\n   * The labelers to be used across all requests with the takedown capability\n   */\n  static appLabelers: readonly string[] = [BSKY_LABELER_DID]\n\n  /**\n   * Configures the Agent (or its sub classes) globally.\n   */\n  static configure(opts: AtpAgentGlobalOpts) {\n    if (opts.appLabelers) {\n      this.appLabelers = opts.appLabelers.map(asDid) // Validate & copy\n    }\n  }\n\n  //#endregion\n\n  com = new ComNS(this)\n  app = new AppNS(this)\n  chat = new ChatNS(this)\n  tools = new ToolsNS(this)\n\n  /** @deprecated use `this` instead */\n  get xrpc(): XrpcClient {\n    return this\n  }\n\n  readonly sessionManager: SessionManager\n\n  constructor(options: string | URL | SessionManager) {\n    const sessionManager: SessionManager =\n      typeof options === 'string' || options instanceof URL\n        ? {\n            did: undefined,\n            fetchHandler: buildFetchHandler(options),\n          }\n        : options\n\n    super((url, init) => {\n      const headers = new Headers(init?.headers)\n\n      if (this.proxy && !headers.has('atproto-proxy')) {\n        headers.set('atproto-proxy', this.proxy)\n      }\n\n      // Merge the labelers header of this particular request with the app &\n      // instance labelers.\n      headers.set(\n        'atproto-accept-labelers',\n        [\n          ...this.appLabelers.map((l) => `${l};redact`),\n          ...this.labelers,\n          headers.get('atproto-accept-labelers')?.trim(),\n        ]\n          .filter(Boolean)\n          .join(', '),\n      )\n\n      return this.sessionManager.fetchHandler(url, { ...init, headers })\n    }, schemas)\n\n    this.sessionManager = sessionManager\n  }\n\n  //#region Cloning utilities\n\n  clone(): Agent {\n    return this.copyInto(new Agent(this.sessionManager))\n  }\n\n  copyInto<T extends Agent>(inst: T): T {\n    inst.configureLabelers(this.labelers)\n    inst.configureProxy(this.proxy ?? null)\n    inst.clearHeaders()\n    for (const [key, value] of this.headers) inst.setHeader(key, value)\n    return inst\n  }\n\n  withProxy(serviceType: AtprotoServiceType, did: string) {\n    const inst = this.clone()\n    inst.configureProxy(`${asDid(did)}#${serviceType}`)\n    return inst as ReturnType<this['clone']>\n  }\n\n  //#endregion\n\n  //#region ATPROTO labelers configuration utilities\n\n  /**\n   * The labelers statically configured on the class of the current instance.\n   */\n  get appLabelers() {\n    return (this.constructor as typeof Agent).appLabelers\n  }\n\n  labelers: readonly string[] = []\n\n  configureLabelers(labelerDids: readonly string[]) {\n    this.labelers = labelerDids.map(asDid) // Validate & copy\n  }\n\n  /** @deprecated use {@link configureLabelers} instead */\n  configureLabelersHeader(labelerDids: readonly string[]) {\n    // Filtering non-did values for backwards compatibility\n    this.configureLabelers(labelerDids.filter(isDid))\n  }\n\n  //#endregion\n\n  //#region ATPROTO proxy configuration utilities\n\n  proxy?: `${Did}#${AtprotoServiceType}`\n\n  configureProxy(value: `${Did}#${AtprotoServiceType}` | null) {\n    if (value === null) this.proxy = undefined\n    else if (isDid(value)) this.proxy = value\n    else throw new TypeError('Invalid proxy DID')\n  }\n\n  /** @deprecated use {@link configureProxy} instead */\n  configureProxyHeader(serviceType: AtprotoServiceType, did: string) {\n    // Ignoring non-did values for backwards compatibility\n    if (isDid(did)) this.configureProxy(`${did}#${serviceType}`)\n  }\n\n  //#endregion\n\n  //#region Session management\n\n  /**\n   * Get the authenticated user's DID, if any.\n   */\n  get did() {\n    return this.sessionManager.did\n  }\n\n  /** @deprecated Use {@link Agent.assertDid} instead */\n  get accountDid() {\n    return this.assertDid\n  }\n\n  /**\n   * Get the authenticated user's DID, or throw an error if not authenticated.\n   */\n  get assertDid(): string {\n    this.assertAuthenticated()\n    return this.did\n  }\n\n  /**\n   * Assert that the user is authenticated.\n   */\n  public assertAuthenticated(): asserts this is { did: string } {\n    if (!this.did) throw new Error('Not logged in')\n  }\n\n  //#endregion\n\n  /** @deprecated use \"this\" instead */\n  get api() {\n    return this\n  }\n\n  //#region \"com.atproto\" lexicon short hand methods\n\n  /**\n   * Upload a binary blob to the server\n   */\n  uploadBlob: typeof this.com.atproto.repo.uploadBlob = (data, opts) =>\n    this.com.atproto.repo.uploadBlob(data, opts)\n\n  /**\n   * Resolve a handle to a DID\n   */\n  resolveHandle: typeof this.com.atproto.identity.resolveHandle = (\n    params,\n    opts,\n  ) => this.com.atproto.identity.resolveHandle(params, opts)\n\n  /**\n   * Change the user's handle\n   */\n  updateHandle: typeof this.com.atproto.identity.updateHandle = (data, opts) =>\n    this.com.atproto.identity.updateHandle(data, opts)\n\n  /**\n   * Create a moderation report\n   */\n  createModerationReport: typeof this.com.atproto.moderation.createReport = (\n    data,\n    opts,\n  ) => this.com.atproto.moderation.createReport(data, opts)\n\n  //#endregion\n\n  //#region \"app.bsky\" lexicon short hand methods\n\n  getTimeline: typeof this.app.bsky.feed.getTimeline = (params, opts) =>\n    this.app.bsky.feed.getTimeline(params, opts)\n\n  getAuthorFeed: typeof this.app.bsky.feed.getAuthorFeed = (params, opts) =>\n    this.app.bsky.feed.getAuthorFeed(params, opts)\n\n  getActorLikes: typeof this.app.bsky.feed.getActorLikes = (params, opts) =>\n    this.app.bsky.feed.getActorLikes(params, opts)\n\n  getPostThread: typeof this.app.bsky.feed.getPostThread = (params, opts) =>\n    this.app.bsky.feed.getPostThread(params, opts)\n\n  getPost: typeof this.app.bsky.feed.post.get = (params) =>\n    this.app.bsky.feed.post.get(params)\n\n  getPosts: typeof this.app.bsky.feed.getPosts = (params, opts) =>\n    this.app.bsky.feed.getPosts(params, opts)\n\n  getLikes: typeof this.app.bsky.feed.getLikes = (params, opts) =>\n    this.app.bsky.feed.getLikes(params, opts)\n\n  getRepostedBy: typeof this.app.bsky.feed.getRepostedBy = (params, opts) =>\n    this.app.bsky.feed.getRepostedBy(params, opts)\n\n  getFollows: typeof this.app.bsky.graph.getFollows = (params, opts) =>\n    this.app.bsky.graph.getFollows(params, opts)\n\n  getFollowers: typeof this.app.bsky.graph.getFollowers = (params, opts) =>\n    this.app.bsky.graph.getFollowers(params, opts)\n\n  getProfile: typeof this.app.bsky.actor.getProfile = (params, opts) =>\n    this.app.bsky.actor.getProfile(params, opts)\n\n  getProfiles: typeof this.app.bsky.actor.getProfiles = (params, opts) =>\n    this.app.bsky.actor.getProfiles(params, opts)\n\n  getSuggestions: typeof this.app.bsky.actor.getSuggestions = (params, opts) =>\n    this.app.bsky.actor.getSuggestions(params, opts)\n\n  searchActors: typeof this.app.bsky.actor.searchActors = (params, opts) =>\n    this.app.bsky.actor.searchActors(params, opts)\n\n  searchActorsTypeahead: typeof this.app.bsky.actor.searchActorsTypeahead = (\n    params,\n    opts,\n  ) => this.app.bsky.actor.searchActorsTypeahead(params, opts)\n\n  listNotifications: typeof this.app.bsky.notification.listNotifications = (\n    params,\n    opts,\n  ) => this.app.bsky.notification.listNotifications(params, opts)\n\n  countUnreadNotifications: typeof this.app.bsky.notification.getUnreadCount = (\n    params,\n    opts,\n  ) => this.app.bsky.notification.getUnreadCount(params, opts)\n\n  getLabelers: typeof this.app.bsky.labeler.getServices = (params, opts) =>\n    this.app.bsky.labeler.getServices(params, opts)\n\n  async getLabelDefinitions(\n    prefs: BskyPreferences | ModerationPrefs | string[],\n  ): Promise<Record<string, InterpretedLabelValueDefinition[]>> {\n    // collect the labeler dids\n    const dids: string[] = [...this.appLabelers]\n    if (isBskyPrefs(prefs)) {\n      dids.push(...prefs.moderationPrefs.labelers.map((l) => l.did))\n    } else if (isModPrefs(prefs)) {\n      dids.push(...prefs.labelers.map((l) => l.did))\n    } else {\n      dids.push(...prefs)\n    }\n\n    // fetch their definitions\n    const labelers = await this.getLabelers({\n      dids,\n      detailed: true,\n    })\n\n    // assemble a map of labeler dids to the interpreted label value definitions\n    const labelDefs = {}\n    if (labelers.data) {\n      for (const labeler of labelers.data\n        .views as AppBskyLabelerDefs.LabelerViewDetailed[]) {\n        labelDefs[labeler.creator.did] = interpretLabelValueDefinitions(labeler)\n      }\n    }\n\n    return labelDefs\n  }\n\n  async post(\n    record: Partial<AppBskyFeedPost.Record> &\n      Omit<AppBskyFeedPost.Record, 'createdAt'>,\n  ) {\n    record.createdAt ||= new Date().toISOString()\n    return this.app.bsky.feed.post.create(\n      { repo: this.accountDid },\n      record as AppBskyFeedPost.Record,\n    )\n  }\n\n  async deletePost(postUri: string) {\n    this.assertAuthenticated()\n\n    const postUrip = new AtUri(postUri)\n    return this.app.bsky.feed.post.delete({\n      repo: postUrip.hostname,\n      rkey: postUrip.rkey,\n    })\n  }\n\n  async like(uri: string, cid: string) {\n    return this.app.bsky.feed.like.create(\n      { repo: this.accountDid },\n      {\n        subject: { uri, cid },\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteLike(likeUri: string) {\n    this.assertAuthenticated()\n\n    const likeUrip = new AtUri(likeUri)\n    return this.app.bsky.feed.like.delete({\n      repo: likeUrip.hostname,\n      rkey: likeUrip.rkey,\n    })\n  }\n\n  async repost(uri: string, cid: string) {\n    return this.app.bsky.feed.repost.create(\n      { repo: this.accountDid },\n      {\n        subject: { uri, cid },\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteRepost(repostUri: string) {\n    this.assertAuthenticated()\n\n    const repostUrip = new AtUri(repostUri)\n    return this.app.bsky.feed.repost.delete({\n      repo: repostUrip.hostname,\n      rkey: repostUrip.rkey,\n    })\n  }\n\n  async follow(subjectDid: string) {\n    return this.app.bsky.graph.follow.create(\n      { repo: this.accountDid },\n      {\n        subject: subjectDid,\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteFollow(followUri: string) {\n    this.assertAuthenticated()\n\n    const followUrip = new AtUri(followUri)\n    return this.app.bsky.graph.follow.delete({\n      repo: followUrip.hostname,\n      rkey: followUrip.rkey,\n    })\n  }\n\n  /**\n   * @note: Using this method will reset the whole profile record if it\n   * previously contained invalid values (wrt to the profile lexicon).\n   */\n  async upsertProfile(\n    updateFn: (\n      existing: AppBskyActorProfile.Record | undefined,\n    ) =>\n      | Un$Typed<AppBskyActorProfile.Record>\n      | Promise<Un$Typed<AppBskyActorProfile.Record>>,\n  ): Promise<void> {\n    const upsert = async () => {\n      const repo = this.assertDid\n      const collection = 'app.bsky.actor.profile'\n\n      const existing = await this.com.atproto.repo\n        .getRecord({ repo, collection, rkey: 'self' })\n        .catch((_) => undefined)\n\n      const existingRecord: AppBskyActorProfile.Record | undefined =\n        existing && predicate.isValidProfile(existing.data.value)\n          ? existing.data.value\n          : undefined\n\n      // run the update\n      const updated = await updateFn(existingRecord)\n\n      // validate the value returned by the update function\n      const validation = AppBskyActorProfile.validateRecord({\n        $type: collection,\n        ...updated,\n      })\n\n      if (!validation.success) {\n        throw validation.error\n      }\n\n      await this.com.atproto.repo.putRecord({\n        repo,\n        collection,\n        rkey: 'self',\n        record: validation.value,\n        swapRecord: existing?.data.cid || null,\n      })\n    }\n\n    return retry(upsert, {\n      maxRetries: 5,\n      retryable: (e) => e instanceof ComAtprotoRepoPutRecord.InvalidSwapError,\n    })\n  }\n\n  async mute(actor: string) {\n    return this.app.bsky.graph.muteActor({ actor })\n  }\n\n  async unmute(actor: string) {\n    return this.app.bsky.graph.unmuteActor({ actor })\n  }\n\n  async muteModList(uri: string) {\n    return this.app.bsky.graph.muteActorList({ list: uri })\n  }\n\n  async unmuteModList(uri: string) {\n    return this.app.bsky.graph.unmuteActorList({ list: uri })\n  }\n\n  async blockModList(uri: string) {\n    return this.app.bsky.graph.listblock.create(\n      { repo: this.accountDid },\n      {\n        subject: uri,\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async unblockModList(uri: string) {\n    const repo = this.accountDid\n\n    const listInfo = await this.app.bsky.graph.getList({\n      list: uri,\n      limit: 1,\n    })\n\n    const blocked = listInfo.data.list.viewer?.blocked\n    if (blocked) {\n      const { rkey } = new AtUri(blocked)\n      return this.app.bsky.graph.listblock.delete({\n        repo,\n        rkey,\n      })\n    }\n  }\n\n  async updateSeenNotifications(seenAt = new Date().toISOString()) {\n    return this.app.bsky.notification.updateSeen({ seenAt })\n  }\n\n  async getPreferences(): Promise<BskyPreferences> {\n    const prefs: BskyPreferences = {\n      feeds: {\n        saved: undefined,\n        pinned: undefined,\n      },\n      // @ts-ignore populating below\n      savedFeeds: undefined,\n      feedViewPrefs: {\n        home: {\n          ...FEED_VIEW_PREF_DEFAULTS,\n        },\n      },\n      threadViewPrefs: { ...THREAD_VIEW_PREF_DEFAULTS },\n      moderationPrefs: {\n        adultContentEnabled: false,\n        labels: { ...DEFAULT_LABEL_SETTINGS },\n        labelers: this.appLabelers.map((did) => ({\n          did,\n          labels: {},\n        })),\n        mutedWords: [],\n        hiddenPosts: [],\n      },\n      birthDate: undefined,\n      interests: {\n        tags: [],\n      },\n      bskyAppState: {\n        queuedNudges: [],\n        activeProgressGuide: undefined,\n        nuxs: [],\n      },\n      postInteractionSettings: {\n        threadgateAllowRules: undefined,\n        postgateEmbeddingRules: undefined,\n      },\n    }\n    const res = await this.app.bsky.actor.getPreferences({})\n    const labelPrefs: AppBskyActorDefs.ContentLabelPref[] = []\n    for (const pref of res.data.preferences) {\n      if (predicate.isValidAdultContentPref(pref)) {\n        // adult content preferences\n        prefs.moderationPrefs.adultContentEnabled = pref.enabled\n      } else if (predicate.isValidContentLabelPref(pref)) {\n        // content label preference\n        const adjustedPref = adjustLegacyContentLabelPref(pref)\n        labelPrefs.push(adjustedPref)\n      } else if (predicate.isValidLabelersPref(pref)) {\n        // labelers preferences\n        prefs.moderationPrefs.labelers = this.appLabelers\n          .map((did: string) => ({ did, labels: {} }))\n          .concat(\n            pref.labelers.map((labeler) => ({\n              ...labeler,\n              labels: {},\n            })),\n          )\n      } else if (predicate.isValidSavedFeedsPrefV2(pref)) {\n        prefs.savedFeeds = pref.items\n      } else if (predicate.isValidSavedFeedsPref(pref)) {\n        // saved and pinned feeds\n        prefs.feeds.saved = pref.saved\n        prefs.feeds.pinned = pref.pinned\n      } else if (predicate.isValidPersonalDetailsPref(pref)) {\n        // birth date (irl)\n        if (pref.birthDate) {\n          prefs.birthDate = new Date(pref.birthDate)\n        }\n      } else if (predicate.isValidFeedViewPref(pref)) {\n        // feed view preferences\n        const { $type: _, feed, ...v } = pref\n        prefs.feedViewPrefs[feed] = { ...FEED_VIEW_PREF_DEFAULTS, ...v }\n      } else if (predicate.isValidThreadViewPref(pref)) {\n        // thread view preferences\n        const { $type: _, ...v } = pref\n        prefs.threadViewPrefs = { ...prefs.threadViewPrefs, ...v }\n      } else if (predicate.isValidInterestsPref(pref)) {\n        const { $type: _, ...v } = pref\n        prefs.interests = { ...prefs.interests, ...v }\n      } else if (predicate.isValidMutedWordsPref(pref)) {\n        prefs.moderationPrefs.mutedWords = pref.items\n\n        if (prefs.moderationPrefs.mutedWords.length) {\n          prefs.moderationPrefs.mutedWords =\n            prefs.moderationPrefs.mutedWords.map((word) => {\n              word.actorTarget = word.actorTarget || 'all'\n              return word\n            })\n        }\n      } else if (predicate.isValidHiddenPostsPref(pref)) {\n        prefs.moderationPrefs.hiddenPosts = pref.items\n      } else if (predicate.isValidBskyAppStatePref(pref)) {\n        prefs.bskyAppState.queuedNudges = pref.queuedNudges || []\n        prefs.bskyAppState.activeProgressGuide = pref.activeProgressGuide\n        prefs.bskyAppState.nuxs = pref.nuxs || []\n      } else if (predicate.isValidPostInteractionSettingsPref(pref)) {\n        prefs.postInteractionSettings.threadgateAllowRules =\n          pref.threadgateAllowRules\n        prefs.postInteractionSettings.postgateEmbeddingRules =\n          pref.postgateEmbeddingRules\n      }\n    }\n\n    /*\n     * If `prefs.savedFeeds` is undefined, no `savedFeedsPrefV2` exists, which\n     * means we want to try to migrate if needed.\n     *\n     * If v1 prefs exist, they will be migrated to v2.\n     *\n     * If no v1 prefs exist, the user is either new, or could be old and has\n     * never edited their feeds.\n     */\n    if (prefs.savedFeeds == null) {\n      const { saved, pinned } = prefs.feeds\n\n      if (saved && pinned) {\n        const uniqueMigratedSavedFeeds: Map<\n          string,\n          AppBskyActorDefs.SavedFeed\n        > = new Map()\n\n        // insert Following feed first\n        uniqueMigratedSavedFeeds.set('timeline', {\n          id: TID.nextStr(),\n          type: 'timeline',\n          value: 'following',\n          pinned: true,\n        })\n\n        // use pinned as source of truth for feed order\n        for (const uri of pinned) {\n          const type = getSavedFeedType(uri)\n          // only want supported types\n          if (type === 'unknown') continue\n          uniqueMigratedSavedFeeds.set(uri, {\n            id: TID.nextStr(),\n            type,\n            value: uri,\n            pinned: true,\n          })\n        }\n\n        for (const uri of saved) {\n          if (!uniqueMigratedSavedFeeds.has(uri)) {\n            const type = getSavedFeedType(uri)\n            // only want supported types\n            if (type === 'unknown') continue\n            uniqueMigratedSavedFeeds.set(uri, {\n              id: TID.nextStr(),\n              type,\n              value: uri,\n              pinned: false,\n            })\n          }\n        }\n\n        prefs.savedFeeds = Array.from(uniqueMigratedSavedFeeds.values())\n      } else {\n        prefs.savedFeeds = [\n          {\n            id: TID.nextStr(),\n            type: 'timeline',\n            value: 'following',\n            pinned: true,\n          },\n        ]\n      }\n\n      // save to user preferences so this migration doesn't re-occur\n      await this.overwriteSavedFeeds(prefs.savedFeeds)\n    }\n\n    // apply the label prefs\n    for (const pref of labelPrefs) {\n      if (pref.labelerDid) {\n        const labeler = prefs.moderationPrefs.labelers.find(\n          (labeler) => labeler.did === pref.labelerDid,\n        )\n        if (!labeler) continue\n        labeler.labels[pref.label] = pref.visibility as LabelPreference\n      } else {\n        prefs.moderationPrefs.labels[pref.label] =\n          pref.visibility as LabelPreference\n      }\n    }\n\n    prefs.moderationPrefs.labels = remapLegacyLabels(\n      prefs.moderationPrefs.labels,\n    )\n\n    // automatically configure the client\n    this.configureLabelers(prefsArrayToLabelerDids(res.data.preferences))\n\n    return prefs\n  }\n\n  async overwriteSavedFeeds(savedFeeds: AppBskyActorDefs.SavedFeed[]) {\n    savedFeeds.forEach(validateSavedFeed)\n    const uniqueSavedFeeds = new Map<string, AppBskyActorDefs.SavedFeed>()\n    savedFeeds.forEach((feed) => {\n      // remove and re-insert to preserve order\n      if (uniqueSavedFeeds.has(feed.id)) {\n        uniqueSavedFeeds.delete(feed.id)\n      }\n      uniqueSavedFeeds.set(feed.id, feed)\n    })\n    return this.updateSavedFeedsV2Preferences(() =>\n      Array.from(uniqueSavedFeeds.values()),\n    )\n  }\n\n  async updateSavedFeeds(savedFeedsToUpdate: AppBskyActorDefs.SavedFeed[]) {\n    savedFeedsToUpdate.map(validateSavedFeed)\n    return this.updateSavedFeedsV2Preferences((savedFeeds) => {\n      return savedFeeds.map((savedFeed) => {\n        const updatedVersion = savedFeedsToUpdate.find(\n          (updated) => savedFeed.id === updated.id,\n        )\n        if (updatedVersion) {\n          return {\n            ...savedFeed,\n            // only update pinned\n            pinned: updatedVersion.pinned,\n          }\n        }\n        return savedFeed\n      })\n    })\n  }\n\n  async addSavedFeeds(\n    savedFeeds: Pick<AppBskyActorDefs.SavedFeed, 'type' | 'value' | 'pinned'>[],\n  ) {\n    const toSave: AppBskyActorDefs.SavedFeed[] = savedFeeds.map((f) => ({\n      ...f,\n      id: TID.nextStr(),\n    }))\n    toSave.forEach(validateSavedFeed)\n    return this.updateSavedFeedsV2Preferences((savedFeeds) => [\n      ...savedFeeds,\n      ...toSave,\n    ])\n  }\n\n  async removeSavedFeeds(ids: string[]) {\n    return this.updateSavedFeedsV2Preferences((savedFeeds) => [\n      ...savedFeeds.filter((feed) => !ids.find((id) => feed.id === id)),\n    ])\n  }\n\n  /**\n   * @deprecated use `overwriteSavedFeeds`\n   */\n  async setSavedFeeds(saved: string[], pinned: string[]) {\n    return this.updateFeedPreferences(() => ({\n      saved,\n      pinned,\n    }))\n  }\n\n  /**\n   * @deprecated use `addSavedFeeds`\n   */\n  async addSavedFeed(v: string) {\n    return this.updateFeedPreferences((saved: string[], pinned: string[]) => ({\n      saved: [...saved.filter((uri) => uri !== v), v],\n      pinned,\n    }))\n  }\n\n  /**\n   * @deprecated use `removeSavedFeeds`\n   */\n  async removeSavedFeed(v: string) {\n    return this.updateFeedPreferences((saved: string[], pinned: string[]) => ({\n      saved: saved.filter((uri) => uri !== v),\n      pinned: pinned.filter((uri) => uri !== v),\n    }))\n  }\n\n  /**\n   * @deprecated use `addSavedFeeds` or `updateSavedFeeds`\n   */\n  async addPinnedFeed(v: string) {\n    return this.updateFeedPreferences((saved: string[], pinned: string[]) => ({\n      saved: [...saved.filter((uri) => uri !== v), v],\n      pinned: [...pinned.filter((uri) => uri !== v), v],\n    }))\n  }\n\n  /**\n   * @deprecated use `updateSavedFeeds` or `removeSavedFeeds`\n   */\n  async removePinnedFeed(v: string) {\n    return this.updateFeedPreferences((saved: string[], pinned: string[]) => ({\n      saved,\n      pinned: pinned.filter((uri) => uri !== v),\n    }))\n  }\n\n  async setAdultContentEnabled(v: boolean) {\n    await this.updatePreferences((prefs) => {\n      const adultContentPref = prefs.findLast(\n        predicate.isValidAdultContentPref,\n      ) || {\n        $type: 'app.bsky.actor.defs#adultContentPref',\n        enabled: v,\n      }\n\n      adultContentPref.enabled = v\n\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isAdultContentPref(pref))\n        .concat(adultContentPref)\n    })\n  }\n\n  async setContentLabelPref(\n    key: string,\n    value: LabelPreference,\n    labelerDid?: string,\n  ) {\n    if (labelerDid) {\n      ensureValidDid(labelerDid)\n    }\n    await this.updatePreferences((prefs) => {\n      const labelPref = prefs\n        .filter(predicate.isValidContentLabelPref)\n        .findLast(\n          (pref) => pref.label === key && pref.labelerDid === labelerDid,\n        ) || {\n        $type: 'app.bsky.actor.defs#contentLabelPref',\n        label: key,\n        labelerDid,\n        visibility: value,\n      }\n\n      labelPref.visibility = value\n\n      let legacyLabelPref: $Typed<AppBskyActorDefs.ContentLabelPref> | undefined\n      if (AppBskyActorDefs.isContentLabelPref(labelPref)) {\n        // is global\n        if (!labelPref.labelerDid) {\n          const legacyLabelValue = {\n            'graphic-media': 'gore',\n            porn: 'nsfw',\n            sexual: 'suggestive',\n            // Protect against using toString, hasOwnProperty, etc. as a label:\n            __proto__: null,\n          }[labelPref.label]\n\n          // if it's a legacy label, double-write the legacy label\n          if (legacyLabelValue) {\n            legacyLabelPref = prefs\n              .filter(predicate.isValidContentLabelPref)\n              .findLast(\n                (pref) =>\n                  pref.label === legacyLabelValue &&\n                  pref.labelerDid === undefined,\n              ) || {\n              $type: 'app.bsky.actor.defs#contentLabelPref',\n              label: legacyLabelValue,\n              labelerDid: undefined,\n              visibility: value,\n            }\n\n            legacyLabelPref!.visibility = value\n          }\n        }\n      }\n\n      return prefs\n        .filter(\n          (pref) =>\n            !AppBskyActorDefs.isContentLabelPref(pref) ||\n            !(pref.label === key && pref.labelerDid === labelerDid),\n        )\n        .concat(labelPref)\n        .filter((pref) => {\n          if (!legacyLabelPref) return true\n          return (\n            !AppBskyActorDefs.isContentLabelPref(pref) ||\n            !(\n              pref.label === legacyLabelPref.label &&\n              pref.labelerDid === undefined\n            )\n          )\n        })\n        .concat(legacyLabelPref ? [legacyLabelPref] : [])\n    })\n  }\n\n  async addLabeler(did: string) {\n    const prefs = await this.updatePreferences((prefs) => {\n      const labelersPref = prefs.findLast(predicate.isValidLabelersPref) || {\n        $type: 'app.bsky.actor.defs#labelersPref',\n        labelers: [],\n      }\n\n      if (!labelersPref.labelers.some((labeler) => labeler.did === did)) {\n        labelersPref.labelers.push({ did })\n      }\n\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isLabelersPref(pref))\n        .concat(labelersPref)\n    })\n    // automatically configure the client\n    this.configureLabelers(prefsArrayToLabelerDids(prefs))\n  }\n\n  async removeLabeler(did: string) {\n    const prefs = await this.updatePreferences((prefs) => {\n      const labelersPref = prefs.findLast(predicate.isValidLabelersPref) || {\n        $type: 'app.bsky.actor.defs#labelersPref',\n        labelers: [],\n      }\n\n      labelersPref.labelers = labelersPref.labelers.filter((l) => l.did !== did)\n\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isLabelersPref(pref))\n        .concat(labelersPref)\n    })\n    // automatically configure the client\n    this.configureLabelers(prefsArrayToLabelerDids(prefs))\n  }\n\n  async setPersonalDetails({\n    birthDate,\n  }: {\n    birthDate: string | Date | undefined\n  }) {\n    await this.updatePreferences((prefs) => {\n      const personalDetailsPref = prefs.findLast(\n        predicate.isValidPersonalDetailsPref,\n      ) || {\n        $type: 'app.bsky.actor.defs#personalDetailsPref',\n      }\n\n      personalDetailsPref.birthDate =\n        birthDate instanceof Date ? birthDate.toISOString() : birthDate\n\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isPersonalDetailsPref(pref))\n        .concat(personalDetailsPref)\n    })\n  }\n\n  async setFeedViewPrefs(feed: string, pref: Partial<BskyFeedViewPreference>) {\n    await this.updatePreferences((prefs) => {\n      const existing = prefs\n        .filter(predicate.isValidFeedViewPref)\n        .findLast((pref) => pref.feed === feed)\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isFeedViewPref(p) || p.feed !== feed)\n        .concat({\n          ...existing,\n          ...pref,\n          $type: 'app.bsky.actor.defs#feedViewPref',\n          feed,\n        })\n    })\n  }\n\n  async setThreadViewPrefs(pref: Partial<BskyThreadViewPreference>) {\n    await this.updatePreferences((prefs) => {\n      const existing = prefs.findLast(predicate.isValidThreadViewPref)\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isThreadViewPref(p))\n        .concat({\n          ...existing,\n          ...pref,\n          $type: 'app.bsky.actor.defs#threadViewPref',\n        })\n    })\n  }\n\n  async setInterestsPref(pref: Partial<BskyInterestsPreference>) {\n    await this.updatePreferences((prefs) => {\n      const existing = prefs.findLast(predicate.isValidInterestsPref)\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isInterestsPref(p))\n        .concat({\n          ...existing,\n          ...pref,\n          $type: 'app.bsky.actor.defs#interestsPref',\n        })\n    })\n  }\n\n  /**\n   * Add a muted word to user preferences.\n   */\n  async addMutedWord(\n    mutedWord: Pick<\n      MutedWord,\n      'value' | 'targets' | 'actorTarget' | 'expiresAt'\n    >,\n  ) {\n    const sanitizedValue = sanitizeMutedWordValue(mutedWord.value)\n\n    if (!sanitizedValue) return\n\n    await this.updatePreferences((prefs) => {\n      let mutedWordsPref = prefs.findLast(predicate.isValidMutedWordsPref)\n\n      const newMutedWord: AppBskyActorDefs.MutedWord = {\n        id: TID.nextStr(),\n        value: sanitizedValue,\n        targets: mutedWord.targets || [],\n        actorTarget: mutedWord.actorTarget || 'all',\n        expiresAt: mutedWord.expiresAt || undefined,\n      }\n\n      if (mutedWordsPref) {\n        mutedWordsPref.items.push(newMutedWord)\n\n        /**\n         * Migrate any old muted words that don't have an id\n         */\n        mutedWordsPref.items = migrateLegacyMutedWordsItems(\n          mutedWordsPref.items,\n        )\n      } else {\n        // if the pref doesn't exist, create it\n        mutedWordsPref = {\n          $type: 'app.bsky.actor.defs#mutedWordsPref',\n          items: [newMutedWord],\n        }\n      }\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isMutedWordsPref(p))\n        .concat(mutedWordsPref)\n    })\n  }\n\n  /**\n   * Convenience method to add muted words to user preferences\n   */\n  async addMutedWords(newMutedWords: AppBskyActorDefs.MutedWord[]) {\n    await Promise.all(newMutedWords.map((word) => this.addMutedWord(word)))\n  }\n\n  /**\n   * @deprecated use `addMutedWords` or `addMutedWord` instead\n   */\n  async upsertMutedWords(\n    mutedWords: Pick<\n      MutedWord,\n      'value' | 'targets' | 'actorTarget' | 'expiresAt'\n    >[],\n  ) {\n    await this.addMutedWords(mutedWords)\n  }\n\n  /**\n   * Update a muted word in user preferences.\n   */\n  async updateMutedWord(mutedWord: AppBskyActorDefs.MutedWord) {\n    await this.updatePreferences((prefs) => {\n      const mutedWordsPref = prefs.findLast(predicate.isValidMutedWordsPref)\n\n      if (mutedWordsPref) {\n        mutedWordsPref.items = mutedWordsPref.items.map((existingItem) => {\n          const match = matchMutedWord(existingItem, mutedWord)\n\n          if (match) {\n            const updated = {\n              ...existingItem,\n              ...mutedWord,\n            }\n            return {\n              id: existingItem.id || TID.nextStr(),\n              value:\n                sanitizeMutedWordValue(updated.value) || existingItem.value,\n              targets: updated.targets || [],\n              actorTarget: updated.actorTarget || 'all',\n              expiresAt: updated.expiresAt || undefined,\n            }\n          } else {\n            return existingItem\n          }\n        })\n\n        /**\n         * Migrate any old muted words that don't have an id\n         */\n        mutedWordsPref.items = migrateLegacyMutedWordsItems(\n          mutedWordsPref.items,\n        )\n\n        return prefs\n          .filter((p) => !AppBskyActorDefs.isMutedWordsPref(p))\n          .concat(mutedWordsPref)\n      }\n\n      return prefs\n    })\n  }\n\n  /**\n   * Remove a muted word from user preferences.\n   */\n  async removeMutedWord(mutedWord: AppBskyActorDefs.MutedWord) {\n    await this.updatePreferences((prefs) => {\n      const mutedWordsPref = prefs.findLast(predicate.isValidMutedWordsPref)\n\n      if (mutedWordsPref) {\n        for (let i = 0; i < mutedWordsPref.items.length; i++) {\n          const match = matchMutedWord(mutedWordsPref.items[i], mutedWord)\n\n          if (match) {\n            mutedWordsPref.items.splice(i, 1)\n            break\n          }\n        }\n\n        /**\n         * Migrate any old muted words that don't have an id\n         */\n        mutedWordsPref.items = migrateLegacyMutedWordsItems(\n          mutedWordsPref.items,\n        )\n\n        return prefs\n          .filter((p) => !AppBskyActorDefs.isMutedWordsPref(p))\n          .concat(mutedWordsPref)\n      }\n\n      return prefs\n    })\n  }\n\n  /**\n   * Convenience method to remove muted words from user preferences\n   */\n  async removeMutedWords(mutedWords: AppBskyActorDefs.MutedWord[]) {\n    await Promise.all(mutedWords.map((word) => this.removeMutedWord(word)))\n  }\n\n  async hidePost(postUri: string) {\n    await this.updateHiddenPost(postUri, 'hide')\n  }\n\n  async unhidePost(postUri: string) {\n    await this.updateHiddenPost(postUri, 'unhide')\n  }\n\n  async bskyAppQueueNudges(nudges: string | string[]) {\n    await this.updatePreferences((prefs) => {\n      const pref = prefs.findLast(predicate.isValidBskyAppStatePref) || {\n        $type: 'app.bsky.actor.defs#bskyAppStatePref',\n      }\n\n      pref.queuedNudges = (pref.queuedNudges || []).concat(nudges)\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isBskyAppStatePref(p))\n        .concat(pref)\n    })\n  }\n\n  async bskyAppDismissNudges(nudges: string | string[]) {\n    await this.updatePreferences((prefs) => {\n      const pref = prefs.findLast(predicate.isValidBskyAppStatePref) || {\n        $type: 'app.bsky.actor.defs#bskyAppStatePref',\n      }\n\n      nudges = Array.isArray(nudges) ? nudges : [nudges]\n      pref.queuedNudges = (pref.queuedNudges || []).filter(\n        (nudge) => !nudges.includes(nudge),\n      )\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isBskyAppStatePref(p))\n        .concat(pref)\n    })\n  }\n\n  async bskyAppSetActiveProgressGuide(\n    guide: AppBskyActorDefs.BskyAppProgressGuide | undefined,\n  ) {\n    if (guide) {\n      const result = AppBskyActorDefs.validateBskyAppProgressGuide(guide)\n      if (!result.success) throw result.error\n    }\n\n    await this.updatePreferences((prefs) => {\n      const pref = prefs.findLast(predicate.isValidBskyAppStatePref) || {\n        $type: 'app.bsky.actor.defs#bskyAppStatePref',\n      }\n\n      pref.activeProgressGuide = guide\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isBskyAppStatePref(p))\n        .concat(pref)\n    })\n  }\n\n  /**\n   * Insert or update a NUX in user prefs\n   */\n  async bskyAppUpsertNux(nux: Nux) {\n    validateNux(nux)\n\n    await this.updatePreferences((prefs) => {\n      const pref = prefs.findLast(predicate.isValidBskyAppStatePref) || {\n        $type: 'app.bsky.actor.defs#bskyAppStatePref',\n      }\n\n      pref.nuxs = pref.nuxs || []\n\n      const existing = pref.nuxs?.find((n) => {\n        return n.id === nux.id\n      })\n\n      let next: AppBskyActorDefs.Nux\n\n      if (existing) {\n        next = {\n          id: existing.id,\n          completed: nux.completed,\n          data: nux.data,\n          expiresAt: nux.expiresAt,\n        }\n      } else {\n        next = nux\n      }\n\n      // remove duplicates and append\n      pref.nuxs = pref.nuxs.filter((n) => n.id !== nux.id).concat(next)\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isBskyAppStatePref(p))\n        .concat(pref)\n    })\n  }\n\n  /**\n   * Removes NUXs from user preferences.\n   */\n  async bskyAppRemoveNuxs(ids: string[]) {\n    await this.updatePreferences((prefs) => {\n      const pref = prefs.findLast(predicate.isValidBskyAppStatePref) || {\n        $type: 'app.bsky.actor.defs#bskyAppStatePref',\n      }\n\n      pref.nuxs = (pref.nuxs || []).filter((nux) => !ids.includes(nux.id))\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isBskyAppStatePref(p))\n        .concat(pref)\n    })\n  }\n\n  async setPostInteractionSettings(\n    settings: AppBskyActorDefs.PostInteractionSettingsPref,\n  ) {\n    const result =\n      AppBskyActorDefs.validatePostInteractionSettingsPref(settings)\n    // Fool-proofing (should not be needed because of type safety)\n    if (!result.success) throw result.error\n\n    await this.updatePreferences((prefs) => {\n      const pref = prefs.findLast(\n        predicate.isValidPostInteractionSettingsPref,\n      ) || {\n        $type: 'app.bsky.actor.defs#postInteractionSettingsPref',\n      }\n\n      /**\n       * Matches handling of `threadgate.allow` where `undefined` means \"everyone\"\n       */\n      pref.threadgateAllowRules = settings.threadgateAllowRules\n      pref.postgateEmbeddingRules = settings.postgateEmbeddingRules\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isPostInteractionSettingsPref(p))\n        .concat(pref)\n    })\n  }\n\n  //- Private methods\n\n  #prefsLock = new AwaitLock()\n\n  /**\n   * This function updates the preferences of a user and allows for a callback function to be executed\n   * before the update.\n   * @param cb - cb is a callback function that takes in a single parameter of type\n   * AppBskyActorDefs.Preferences and returns either a boolean or void. This callback function is used to\n   * update the preferences of the user. The function is called with the current preferences as an\n   * argument and if the callback returns false, the preferences are not updated.\n   */\n  private async updatePreferences(\n    cb: (\n      prefs: AppBskyActorDefs.Preferences,\n    ) => AppBskyActorDefs.Preferences | false,\n  ) {\n    try {\n      await this.#prefsLock.acquireAsync()\n      const res = await this.app.bsky.actor.getPreferences({})\n      const newPrefs = cb(res.data.preferences)\n      if (newPrefs === false) {\n        return res.data.preferences\n      }\n      await this.app.bsky.actor.putPreferences({\n        preferences: newPrefs,\n      })\n      return newPrefs\n    } finally {\n      this.#prefsLock.release()\n    }\n  }\n\n  private async updateHiddenPost(postUri: string, action: 'hide' | 'unhide') {\n    await this.updatePreferences((prefs) => {\n      const pref = prefs.findLast(predicate.isValidHiddenPostsPref) || {\n        $type: 'app.bsky.actor.defs#hiddenPostsPref',\n        items: [],\n      }\n\n      const hiddenItems = new Set(pref.items)\n\n      if (action === 'hide') hiddenItems.add(postUri)\n      else hiddenItems.delete(postUri)\n\n      pref.items = [...hiddenItems]\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isHiddenPostsPref(p))\n        .concat(pref)\n    })\n  }\n\n  /**\n   * A helper specifically for updating feed preferences\n   */\n  private async updateFeedPreferences(\n    cb: (\n      saved: string[],\n      pinned: string[],\n    ) => { saved: string[]; pinned: string[] },\n  ): Promise<{ saved: string[]; pinned: string[] }> {\n    let res\n    await this.updatePreferences((prefs) => {\n      const feedsPref = prefs.findLast(predicate.isValidSavedFeedsPref) || {\n        $type: 'app.bsky.actor.defs#savedFeedsPref',\n        saved: [],\n        pinned: [],\n      }\n\n      res = cb(feedsPref.saved, feedsPref.pinned)\n      feedsPref.saved = res.saved\n      feedsPref.pinned = res.pinned\n\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isSavedFeedsPref(pref))\n        .concat(feedsPref)\n    })\n    return res\n  }\n\n  private async updateSavedFeedsV2Preferences(\n    cb: (\n      savedFeedsPref: AppBskyActorDefs.SavedFeed[],\n    ) => AppBskyActorDefs.SavedFeed[],\n  ): Promise<AppBskyActorDefs.SavedFeed[]> {\n    let maybeMutatedSavedFeeds: AppBskyActorDefs.SavedFeed[] = []\n\n    await this.updatePreferences((prefs) => {\n      const existingV2Pref = prefs.findLast(\n        predicate.isValidSavedFeedsPrefV2,\n      ) || {\n        $type: 'app.bsky.actor.defs#savedFeedsPrefV2',\n        items: [],\n      }\n\n      const newSavedFeeds = cb(existingV2Pref.items)\n\n      // enforce ordering: pinned first, then saved\n      existingV2Pref.items = [...newSavedFeeds].sort((a, b) =>\n        // @NOTE: preserve order of items with the same pinned status\n        a.pinned === b.pinned ? 0 : a.pinned ? -1 : 1,\n      )\n\n      // Store the return value\n      maybeMutatedSavedFeeds = newSavedFeeds\n\n      let updatedPrefs = prefs\n        .filter((pref) => !AppBskyActorDefs.isSavedFeedsPrefV2(pref))\n        .concat(existingV2Pref)\n\n      /*\n       * If there's a v2 pref present, it means this account was migrated from v1\n       * to v2. During the transition period, we double write v2 prefs back to\n       * v1, but NOT the other way around.\n       */\n      let existingV1Pref = prefs.findLast(predicate.isValidSavedFeedsPref)\n      if (existingV1Pref) {\n        const { saved, pinned } = existingV1Pref\n        const v2Compat = savedFeedsToUriArrays(\n          // v1 only supports feeds and lists\n          existingV2Pref.items.filter((i) => ['feed', 'list'].includes(i.type)),\n        )\n        existingV1Pref = {\n          ...existingV1Pref,\n          saved: Array.from(new Set([...saved, ...v2Compat.saved])),\n          pinned: Array.from(new Set([...pinned, ...v2Compat.pinned])),\n        }\n        updatedPrefs = updatedPrefs\n          .filter((pref) => !AppBskyActorDefs.isSavedFeedsPref(pref))\n          .concat(existingV1Pref)\n      }\n\n      return updatedPrefs\n    })\n\n    return maybeMutatedSavedFeeds\n  }\n\n  //#endregion\n}\n\n/**\n * Helper to transform the legacy content preferences.\n */\nfunction adjustLegacyContentLabelPref(\n  pref: AppBskyActorDefs.ContentLabelPref,\n): AppBskyActorDefs.ContentLabelPref {\n  let visibility = pref.visibility\n\n  // adjust legacy values\n  if (visibility === 'show') {\n    visibility = 'ignore'\n  }\n\n  return { ...pref, visibility }\n}\n\n/**\n * Re-maps legacy labels to new labels on READ. Does not save these changes to\n * the user's preferences.\n */\nfunction remapLegacyLabels(\n  labels: BskyPreferences['moderationPrefs']['labels'],\n) {\n  const _labels = { ...labels }\n  const legacyToNewMap: Record<string, string | undefined> = {\n    gore: 'graphic-media',\n    nsfw: 'porn',\n    suggestive: 'sexual',\n  }\n\n  for (const labelName in _labels) {\n    const newLabelName = legacyToNewMap[labelName]!\n    if (newLabelName) {\n      _labels[newLabelName] = _labels[labelName]\n    }\n  }\n\n  return _labels\n}\n\n/**\n * A helper to get the currently enabled labelers from the full preferences array\n */\nfunction prefsArrayToLabelerDids(\n  prefs: AppBskyActorDefs.Preferences,\n): string[] {\n  const labelersPref = prefs.findLast(predicate.isValidLabelersPref)\n  let dids: string[] = []\n  if (labelersPref) {\n    dids = (labelersPref as AppBskyActorDefs.LabelersPref).labelers.map(\n      (labeler) => labeler.did,\n    )\n  }\n  return dids\n}\n\nfunction isBskyPrefs(v: any): v is BskyPreferences {\n  return (\n    v &&\n    typeof v === 'object' &&\n    'moderationPrefs' in v &&\n    isModPrefs(v.moderationPrefs)\n  )\n}\n\nfunction isModPrefs(v: any): v is ModerationPrefs {\n  return v && typeof v === 'object' && 'labelers' in v\n}\n\nfunction migrateLegacyMutedWordsItems(items: AppBskyActorDefs.MutedWord[]) {\n  return items.map((item) => ({\n    ...item,\n    id: item.id || TID.nextStr(),\n  }))\n}\n\nfunction matchMutedWord(\n  existingWord: AppBskyActorDefs.MutedWord,\n  newWord: AppBskyActorDefs.MutedWord,\n): boolean {\n  // id is undefined in legacy implementation\n  const existingId = existingWord.id\n  // prefer matching based on id\n  const matchById = existingId && existingId === newWord.id\n  // handle legacy case where id is not set\n  const legacyMatchByValue = !existingId && existingWord.value === newWord.value\n\n  return matchById || legacyMatchByValue\n}\n", "import { getPdsEndpoint, isValidDidDoc } from '@atproto/common-web'\nimport {\n  ErrorResponseBody,\n  Gettable,\n  ResponseType,\n  XRPCError,\n  XrpcClient,\n  errorResponseBody,\n} from '@atproto/xrpc'\nimport { Agent } from './agent'\nimport {\n  ComAtprotoServerCreateAccount,\n  ComAtprotoServerCreateSession,\n  ComAtprotoServerGetSession,\n  ComAtprotoServerNS,\n} from './client'\nimport { schemas } from './client/lexicons'\nimport { SessionManager } from './session-manager'\nimport {\n  AtpAgentLoginOpts,\n  AtpPersistSessionHandler,\n  AtpSessionData,\n} from './types'\n\nconst ReadableStream = globalThis.ReadableStream as\n  | typeof globalThis.ReadableStream\n  | undefined\n\nexport type AtpAgentOptions = {\n  service: string | URL\n  persistSession?: AtpPersistSessionHandler\n  fetch?: typeof globalThis.fetch\n  headers?: Iterable<[string, Gettable<null | string>]>\n}\n\n/**\n * A wrapper around the {@link Agent} class that uses credential based session\n * management. This class also exposes most of the session management methods\n * directly.\n *\n * This class will be deprecated in the near future. Use {@link Agent} directly\n * with a {@link CredentialSession} instead:\n *\n *  ```ts\n *  const session = new CredentialSession({\n *    service: new URL('https://example.com'),\n *  })\n *\n *  const agent = new Agent(session)\n *  ```\n */\nexport class AtpAgent extends Agent {\n  readonly sessionManager: CredentialSession\n\n  constructor(options: AtpAgentOptions | CredentialSession) {\n    const sessionManager =\n      options instanceof CredentialSession\n        ? options\n        : new CredentialSession(\n            new URL(options.service),\n            options.fetch,\n            options.persistSession,\n          )\n\n    super(sessionManager)\n\n    // This assignment is already being done in the super constructor, but we\n    // need to do it here to make TypeScript happy.\n    this.sessionManager = sessionManager\n\n    if (!(options instanceof CredentialSession) && options.headers) {\n      for (const [key, value] of options.headers) {\n        this.setHeader(key, value)\n      }\n    }\n  }\n\n  clone(): AtpAgent {\n    return this.copyInto(new AtpAgent(this.sessionManager))\n  }\n\n  get session() {\n    return this.sessionManager.session\n  }\n\n  get hasSession() {\n    return this.sessionManager.hasSession\n  }\n\n  get did() {\n    return this.sessionManager.did\n  }\n\n  get serviceUrl() {\n    return this.sessionManager.serviceUrl\n  }\n\n  get pdsUrl() {\n    return this.sessionManager.pdsUrl\n  }\n\n  get dispatchUrl() {\n    return this.sessionManager.dispatchUrl\n  }\n\n  /** @deprecated use {@link serviceUrl} instead */\n  get service() {\n    return this.serviceUrl\n  }\n\n  get persistSession() {\n    throw new Error(\n      'Cannot set persistSession directly. \"persistSession\" is defined through the constructor and will be invoked automatically when session data changes.',\n    )\n  }\n\n  set persistSession(v: unknown) {\n    throw new Error(\n      'Cannot set persistSession directly. \"persistSession\" must be defined in the constructor and can no longer be changed.',\n    )\n  }\n\n  /** @deprecated use {@link AtpAgent.serviceUrl} instead */\n  getServiceUrl() {\n    return this.serviceUrl\n  }\n\n  async resumeSession(\n    session: AtpSessionData,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    return this.sessionManager.resumeSession(session)\n  }\n\n  async createAccount(\n    data: ComAtprotoServerCreateAccount.InputSchema,\n    opts?: ComAtprotoServerCreateAccount.CallOptions,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    return this.sessionManager.createAccount(data, opts)\n  }\n\n  async login(\n    opts: AtpAgentLoginOpts,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    return this.sessionManager.login(opts)\n  }\n\n  async logout(): Promise<void> {\n    return this.sessionManager.logout()\n  }\n}\n\n/**\n * Credentials (username / password) based session manager. Instances of this\n * class will typically be used as the session manager for an {@link AtpAgent}.\n * They can also be used with an {@link XrpcClient}, if you want to use you\n * own Lexicons.\n */\nexport class CredentialSession implements SessionManager {\n  public pdsUrl?: URL // The PDS URL, driven by the did doc\n  public session?: AtpSessionData\n  public refreshSessionPromise: Promise<void> | undefined\n\n  /**\n   * Private {@link ComAtprotoServerNS} used to perform session management API\n   * calls on the service endpoint. Calls performed by this agent will not be\n   * authenticated using the user's session to allow proper manual configuration\n   * of the headers when performing session management operations.\n   */\n  protected server = new ComAtprotoServerNS(\n    // Note that the use of the codegen \"schemas\" (to instantiate `this.api`),\n    // as well as the use of `ComAtprotoServerNS` will cause this class to\n    // reference (way) more code than it actually needs. It is not possible,\n    // with the current state of the codegen, to generate a client that only\n    // includes the methods that are actually used by this class. This is a\n    // known limitation that should be addressed in a future version of the\n    // codegen.\n    new XrpcClient((url, init) => {\n      return (0, this.fetch)(new URL(url, this.serviceUrl), init)\n    }, schemas),\n  )\n\n  constructor(\n    public readonly serviceUrl: URL,\n    public fetch = globalThis.fetch,\n    protected readonly persistSession?: AtpPersistSessionHandler,\n  ) {}\n\n  get did() {\n    return this.session?.did\n  }\n\n  get dispatchUrl() {\n    return this.pdsUrl || this.serviceUrl\n  }\n\n  get hasSession() {\n    return !!this.session\n  }\n\n  /**\n   * Sets a WhatWG \"fetch()\" function to be used for making HTTP requests.\n   */\n  setFetch(fetch = globalThis.fetch) {\n    this.fetch = fetch\n  }\n\n  async fetchHandler(url: string, init?: RequestInit): Promise<Response> {\n    // wait for any active session-refreshes to finish\n    await this.refreshSessionPromise\n\n    const initialUri = new URL(url, this.dispatchUrl)\n    const initialReq = new Request(initialUri, init)\n\n    const initialToken = this.session?.accessJwt\n    if (!initialToken || initialReq.headers.has('authorization')) {\n      return (0, this.fetch)(initialReq)\n    }\n\n    initialReq.headers.set('authorization', `Bearer ${initialToken}`)\n    const initialRes = await (0, this.fetch)(initialReq)\n\n    if (!this.session?.refreshJwt) {\n      return initialRes\n    }\n    const isExpiredToken = await isErrorResponse(\n      initialRes,\n      [400],\n      ['ExpiredToken'],\n    )\n\n    if (!isExpiredToken) {\n      return initialRes\n    }\n\n    try {\n      await this.refreshSession()\n    } catch {\n      return initialRes\n    }\n\n    if (init?.signal?.aborted) {\n      return initialRes\n    }\n\n    // The stream was already consumed. We cannot retry the request. A solution\n    // would be to tee() the input stream but that would bufferize the entire\n    // stream in memory which can lead to memory starvation. Instead, we will\n    // return the original response and let the calling code handle retries.\n    if (ReadableStream && init?.body instanceof ReadableStream) {\n      return initialRes\n    }\n\n    // Return initial \"ExpiredToken\" response if the session was not refreshed.\n    const updatedToken = this.session?.accessJwt\n    if (!updatedToken || updatedToken === initialToken) {\n      return initialRes\n    }\n\n    // Make sure the initial request is cancelled to avoid leaking resources\n    // (NodeJS \uD83D\uDC40): https://undici.nodejs.org/#/?id=garbage-collection\n    await initialRes.body?.cancel()\n\n    // We need to re-compute the URI in case the PDS endpoint has changed\n    const updatedUri = new URL(url, this.dispatchUrl)\n    const updatedReq = new Request(updatedUri, init)\n\n    updatedReq.headers.set('authorization', `Bearer ${updatedToken}`)\n\n    return await (0, this.fetch)(updatedReq)\n  }\n\n  /**\n   * Create a new account and hydrate its session in this agent.\n   */\n  async createAccount(\n    data: ComAtprotoServerCreateAccount.InputSchema,\n    opts?: ComAtprotoServerCreateAccount.CallOptions,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    try {\n      const res = await this.server.createAccount(data, opts)\n      this.session = {\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n        email: data.email,\n        emailConfirmed: false,\n        emailAuthFactor: false,\n        active: true,\n      }\n      this.persistSession?.('create', this.session)\n      this._updateApiEndpoint(res.data.didDoc)\n      return res\n    } catch (e) {\n      this.session = undefined\n      this.persistSession?.('create-failed', undefined)\n      throw e\n    }\n  }\n\n  /**\n   * Start a new session with this agent.\n   */\n  async login(\n    opts: AtpAgentLoginOpts,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    try {\n      const res = await this.server.createSession({\n        identifier: opts.identifier,\n        password: opts.password,\n        authFactorToken: opts.authFactorToken,\n        allowTakendown: opts.allowTakendown,\n      })\n      this.session = {\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n        email: res.data.email,\n        emailConfirmed: res.data.emailConfirmed,\n        emailAuthFactor: res.data.emailAuthFactor,\n        active: res.data.active ?? true,\n        status: res.data.status,\n      }\n      this._updateApiEndpoint(res.data.didDoc)\n      this.persistSession?.('create', this.session)\n      return res\n    } catch (e) {\n      this.session = undefined\n      this.persistSession?.('create-failed', undefined)\n      throw e\n    }\n  }\n\n  async logout(): Promise<void> {\n    if (this.session) {\n      try {\n        await this.server.deleteSession(undefined, {\n          headers: {\n            authorization: `Bearer ${this.session.refreshJwt}`,\n          },\n        })\n      } catch {\n        // Ignore errors\n      } finally {\n        this.session = undefined\n        this.persistSession?.('expired', undefined)\n      }\n    }\n  }\n\n  /**\n   * Resume a pre-existing session with this agent.\n   */\n  async resumeSession(\n    session: AtpSessionData,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    this.session = session\n\n    try {\n      const res = await this.server\n        .getSession(undefined, {\n          headers: { authorization: `Bearer ${session.accessJwt}` },\n        })\n        .catch(async (err) => {\n          if (\n            err instanceof XRPCError &&\n            ['ExpiredToken', 'InvalidToken'].includes(err.error) &&\n            session.refreshJwt\n          ) {\n            try {\n              const res = await this.server.refreshSession(undefined, {\n                headers: { authorization: `Bearer ${session.refreshJwt}` },\n              })\n\n              session.accessJwt = res.data.accessJwt\n              session.refreshJwt = res.data.refreshJwt\n\n              return this.server.getSession(undefined, {\n                headers: { authorization: `Bearer ${session.accessJwt}` },\n              })\n            } catch {\n              // Noop, we'll throw the original error\n            }\n          }\n          throw err\n        })\n\n      if (res.data.did !== session.did) {\n        throw new XRPCError(\n          ResponseType.InvalidRequest,\n          'Invalid session',\n          'InvalidDID',\n        )\n      }\n\n      session.email = res.data.email\n      session.handle = res.data.handle\n      session.emailConfirmed = res.data.emailConfirmed\n      session.emailAuthFactor = res.data.emailAuthFactor\n      session.active = res.data.active ?? true\n      session.status = res.data.status\n\n      // protect against concurrent session updates\n      if (this.session === session) {\n        this._updateApiEndpoint(res.data.didDoc)\n        this.persistSession?.('update', session)\n      }\n\n      return res\n    } catch (err) {\n      // protect against concurrent session updates\n      if (this.session === session) {\n        this.session = undefined\n        this.persistSession?.(\n          err instanceof XRPCError &&\n            ['ExpiredToken', 'InvalidToken'].includes(err.error)\n            ? 'expired'\n            : 'network-error',\n          undefined,\n        )\n      }\n\n      throw err\n    }\n  }\n\n  /**\n   * Internal helper to refresh sessions\n   * - Wraps the actual implementation in a promise-guard to ensure only\n   *   one refresh is attempted at a time.\n   */\n  async refreshSession(): Promise<void> {\n    return (this.refreshSessionPromise ||= this._refreshSessionInner().finally(\n      () => {\n        this.refreshSessionPromise = undefined\n      },\n    ))\n  }\n\n  /**\n   * Internal helper to refresh sessions (actual behavior)\n   */\n  private async _refreshSessionInner() {\n    if (!this.session?.refreshJwt) {\n      return\n    }\n\n    try {\n      const res = await this.server.refreshSession(undefined, {\n        headers: { authorization: `Bearer ${this.session.refreshJwt}` },\n      })\n      // succeeded, update the session\n      this.session = {\n        ...this.session,\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n      }\n      this._updateApiEndpoint(res.data.didDoc)\n      this.persistSession?.('update', this.session)\n    } catch (err) {\n      if (\n        err instanceof XRPCError &&\n        err.error &&\n        ['ExpiredToken', 'InvalidToken'].includes(err.error)\n      ) {\n        // failed due to a bad refresh token\n        this.session = undefined\n        this.persistSession?.('expired', undefined)\n      }\n      // else: other failures should be ignored - the issue will\n      // propagate in the _dispatch() second attempt to run\n      // the request\n    }\n  }\n\n  /**\n   * Helper to update the pds endpoint dynamically.\n   *\n   * The session methods (create, resume, refresh) may respond with the user's\n   * did document which contains the user's canonical PDS endpoint. That endpoint\n   * may differ from the endpoint used to contact the server. We capture that\n   * PDS endpoint and update the client to use that given endpoint for future\n   * requests. (This helps ensure smooth migrations between PDSes, especially\n   * when the PDSes are operated by a single org.)\n   */\n  private _updateApiEndpoint(didDoc: unknown) {\n    if (isValidDidDoc(didDoc)) {\n      const endpoint = getPdsEndpoint(didDoc)\n      this.pdsUrl = endpoint ? new URL(endpoint) : undefined\n    } else {\n      // If the did doc is invalid, we clear the pdsUrl (should never happen)\n      this.pdsUrl = undefined\n    }\n  }\n}\n\nfunction isErrorObject(v: unknown): v is ErrorResponseBody {\n  return errorResponseBody.safeParse(v).success\n}\n\nasync function isErrorResponse(\n  response: Response,\n  status: number[],\n  errorNames: string[],\n): Promise<boolean> {\n  if (!status.includes(response.status)) return false\n  // Some engines (react-native \uD83D\uDC40) don't expose a response.body property...\n  // if (!response.body) return false\n  try {\n    const json = await peekJson(response, 10 * 1024)\n    return isErrorObject(json) && (errorNames as any[]).includes(json.error)\n  } catch (err) {\n    return false\n  }\n}\n\nasync function peekJson(\n  response: Response,\n  maxSize = Infinity,\n): Promise<unknown> {\n  if (extractType(response) !== 'application/json') throw new Error('Not JSON')\n  if (extractLength(response) > maxSize) throw new Error('Response too large')\n  return response.clone().json()\n}\n\nfunction extractLength({ headers }: Response) {\n  return headers.get('Content-Length')\n    ? Number(headers.get('Content-Length'))\n    : NaN\n}\n\nfunction extractType({ headers }: Response) {\n  return headers.get('Content-Type')?.split(';')[0]?.trim()\n}\n", "import { AtpAgent } from './atp-agent'\n\n/** @deprecated use {@link AtpAgent} instead */\nexport class BskyAgent extends AtpAgent {\n  clone(): this {\n    if (this.constructor === BskyAgent) {\n      const agent = new BskyAgent(this.sessionManager)\n      return this.copyInto(agent as this)\n    }\n\n    // sub-classes should override this method\n    throw new TypeError('Cannot clone a subclass of BskyAgent')\n  }\n}\n", "import { Lexicons } from '@atproto/lexicon'\nimport { lexicons as internalLexicons } from './client/lexicons'\n\nexport { AtUri } from '@atproto/syntax'\nexport {\n  BlobRef,\n  jsonStringToLex,\n  jsonToLex,\n  lexToJson,\n  stringifyLex,\n} from '@atproto/lexicon'\nexport { parseLanguage } from '@atproto/common-web'\nexport * from './types'\nexport * from './const'\nexport * from './util'\nexport * from './client'\nexport { schemas } from './client/lexicons'\nexport type { $Typed, Un$Typed } from './client/util'\nexport { asPredicate } from './client/util'\nexport * from './rich-text/rich-text'\nexport * from './rich-text/sanitization'\nexport * from './rich-text/unicode'\nexport * from './rich-text/util'\nexport * from './moderation'\nexport * from './moderation/types'\nexport * from './mocker'\nexport { DEFAULT_LABEL_SETTINGS, LABELS } from './moderation/const/labels'\nexport { Agent } from './agent'\n\nexport { AtpAgent, type AtpAgentOptions } from './atp-agent'\nexport { CredentialSession } from './atp-agent'\nexport { BskyAgent } from './bsky-agent'\n\nexport {\n  /** @deprecated */\n  AtpAgent as default,\n} from './atp-agent'\n\n// Expose a copy to prevent alteration of the internal Lexicon instance used by\n// the AtpBaseClient class.\nexport const lexicons = new Lexicons(internalLexicons)\n", "export {\n  ATP_URI_REGEX,\n  AtUri,\n  ensureValidAtUri,\n  ensureValidAtUriRegex,\n} from '@atproto/syntax'\n", "export const INVALID_HANDLE = 'handle.invalid'\n\n// Currently these are registration-time restrictions, not protocol-level\n// restrictions. We have a couple accounts in the wild that we need to clean up\n// before hard-disallow.\n// See also: https://en.wikipedia.org/wiki/Top-level_domain#Reserved_domains\nexport const DISALLOWED_TLDS = [\n  '.local',\n  '.arpa',\n  '.invalid',\n  '.localhost',\n  '.internal',\n  // policy could concievably change on \".onion\" some day\n  '.onion',\n  // NOTE: .test is allowed in testing and devopment. In practical terms\n  // \"should\" \"never\" actually resolve and get registered in production\n]\n\n// Handle constraints, in English:\n//  - must be a possible domain name\n//    - RFC-1035 is commonly referenced, but has been updated. eg, RFC-3696,\n//      section 2. and RFC-3986, section 3. can now have leading numbers (eg,\n//      4chan.org)\n//    - \"labels\" (sub-names) are made of ASCII letters, digits, hyphens\n//    - can not start or end with a hyphen\n//    - TLD (last component) should not start with a digit\n//    - can't end with a hyphen (can end with digit)\n//    - each segment must be between 1 and 63 characters (not including any periods)\n//    - overall length can't be more than 253 characters\n//    - separated by (ASCII) periods; does not start or end with period\n//    - case insensitive\n//    - domains (handles) are equal if they are the same lower-case\n//    - punycode allowed for internationalization\n//  - no whitespace, null bytes, joining chars, etc\n//  - does not validate whether domain or TLD exists, or is a reserved or\n//    special TLD (eg, .onion or .local)\n//  - does not validate punycode\nexport const ensureValidHandle = (handle: string): void => {\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9.-]*$/.test(handle)) {\n    throw new InvalidHandleError(\n      'Disallowed characters in handle (ASCII letters, digits, dashes, periods only)',\n    )\n  }\n\n  if (handle.length > 253) {\n    throw new InvalidHandleError('Handle is too long (253 chars max)')\n  }\n  const labels = handle.split('.')\n  if (labels.length < 2) {\n    throw new InvalidHandleError('Handle domain needs at least two parts')\n  }\n  for (let i = 0; i < labels.length; i++) {\n    const l = labels[i]\n    if (l.length < 1) {\n      throw new InvalidHandleError('Handle parts can not be empty')\n    }\n    if (l.length > 63) {\n      throw new InvalidHandleError('Handle part too long (max 63 chars)')\n    }\n    if (l.endsWith('-') || l.startsWith('-')) {\n      throw new InvalidHandleError(\n        'Handle parts can not start or end with hyphens',\n      )\n    }\n    if (i + 1 == labels.length && !/^[a-zA-Z]/.test(l)) {\n      throw new InvalidHandleError(\n        'Handle final component (TLD) must start with ASCII letter',\n      )\n    }\n  }\n}\n\n// simple regex translation of above constraints\nexport const ensureValidHandleRegex = (handle: string): void => {\n  if (\n    !/^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$/.test(\n      handle,\n    )\n  ) {\n    throw new InvalidHandleError(\"Handle didn't validate via regex\")\n  }\n  if (handle.length > 253) {\n    throw new InvalidHandleError('Handle is too long (253 chars max)')\n  }\n}\n\nexport const normalizeHandle = (handle: string): string => {\n  return handle.toLowerCase()\n}\n\nexport const normalizeAndEnsureValidHandle = (handle: string): string => {\n  const normalized = normalizeHandle(handle)\n  ensureValidHandle(normalized)\n  return normalized\n}\n\nexport const isValidHandle = (handle: string): boolean => {\n  try {\n    ensureValidHandle(handle)\n  } catch (err) {\n    if (err instanceof InvalidHandleError) {\n      return false\n    }\n    throw err\n  }\n\n  return true\n}\n\nexport const isValidTld = (handle: string): boolean => {\n  return !DISALLOWED_TLDS.some((domain) => handle.endsWith(domain))\n}\n\nexport class InvalidHandleError extends Error {}\nexport class ReservedHandleError extends Error {}\nexport class UnsupportedDomainError extends Error {}\nexport class DisallowedDomainError extends Error {}\n", "// Human-readable constraints:\n//   - valid W3C DID (https://www.w3.org/TR/did-core/#did-syntax)\n//      - entire URI is ASCII: [a-zA-Z0-9._:%-]\n//      - always starts \"did:\" (lower-case)\n//      - method name is one or more lower-case letters, followed by \":\"\n//      - remaining identifier can have any of the above chars, but can not end in \":\"\n//      - it seems that a bunch of \":\" can be included, and don't need spaces between\n//      - \"%\" is used only for \"percent encoding\" and must be followed by two hex characters (and thus can't end in \"%\")\n//      - query (\"?\") and fragment (\"#\") stuff is defined for \"DID URIs\", but not as part of identifier itself\n//      - \"The current specification does not take a position on the maximum length of a DID\"\n//   - in current atproto, only allowing did:plc and did:web. But not *forcing* this at lexicon layer\n//   - hard length limit of 8KBytes\n//   - not going to validate \"percent encoding\" here\nexport const ensureValidDid = (did: string): void => {\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9._:%-]*$/.test(did)) {\n    throw new InvalidDidError(\n      'Disallowed characters in DID (ASCII letters, digits, and a couple other characters only)',\n    )\n  }\n\n  const parts = did.split(':')\n  if (parts.length < 3) {\n    throw new InvalidDidError(\n      'DID requires prefix, method, and method-specific content',\n    )\n  }\n\n  if (parts[0] != 'did') {\n    throw new InvalidDidError('DID requires \"did:\" prefix')\n  }\n\n  if (!/^[a-z]+$/.test(parts[1])) {\n    throw new InvalidDidError('DID method must be lower-case letters')\n  }\n\n  if (did.endsWith(':') || did.endsWith('%')) {\n    throw new InvalidDidError('DID can not end with \":\" or \"%\"')\n  }\n\n  if (did.length > 2 * 1024) {\n    throw new InvalidDidError('DID is too long (2048 chars max)')\n  }\n}\n\nexport const ensureValidDidRegex = (did: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints\n  if (!/^did:[a-z]+:[a-zA-Z0-9._:%-]*[a-zA-Z0-9._-]$/.test(did)) {\n    throw new InvalidDidError(\"DID didn't validate via regex\")\n  }\n\n  if (did.length > 2 * 1024) {\n    throw new InvalidDidError('DID is too long (2048 chars max)')\n  }\n}\n\nexport class InvalidDidError extends Error {}\n", "/*\nGrammar:\n\nalpha     = \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\" / \"g\" / \"h\" / \"i\" / \"j\" / \"k\" / \"l\" / \"m\" / \"n\" / \"o\" / \"p\" / \"q\" / \"r\" / \"s\" / \"t\" / \"u\" / \"v\" / \"w\" / \"x\" / \"y\" / \"z\" / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\" / \"G\" / \"H\" / \"I\" / \"J\" / \"K\" / \"L\" / \"M\" / \"N\" / \"O\" / \"P\" / \"Q\" / \"R\" / \"S\" / \"T\" / \"U\" / \"V\" / \"W\" / \"X\" / \"Y\" / \"Z\"\nnumber    = \"1\" / \"2\" / \"3\" / \"4\" / \"5\" / \"6\" / \"7\" / \"8\" / \"9\" / \"0\"\ndelim     = \".\"\nsegment   = alpha *( alpha / number / \"-\" )\nauthority = segment *( delim segment )\nname      = alpha *( alpha )\nnsid      = authority delim name\n\n*/\n\nexport class NSID {\n  segments: string[] = []\n\n  static parse(nsid: string): NSID {\n    return new NSID(nsid)\n  }\n\n  static create(authority: string, name: string): NSID {\n    const segments = [...authority.split('.').reverse(), name].join('.')\n    return new NSID(segments)\n  }\n\n  static isValid(nsid: string): boolean {\n    try {\n      NSID.parse(nsid)\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  constructor(nsid: string) {\n    ensureValidNsid(nsid)\n    this.segments = nsid.split('.')\n  }\n\n  get authority() {\n    return this.segments\n      .slice(0, this.segments.length - 1)\n      .reverse()\n      .join('.')\n  }\n\n  get name() {\n    return this.segments.at(this.segments.length - 1)\n  }\n\n  toString() {\n    return this.segments.join('.')\n  }\n}\n\n// Human readable constraints on NSID:\n// - a valid domain in reversed notation\n// - followed by an additional period-separated name, which is camel-case letters\nexport const ensureValidNsid = (nsid: string): void => {\n  const toCheck = nsid\n\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9.-]*$/.test(toCheck)) {\n    throw new InvalidNsidError(\n      'Disallowed characters in NSID (ASCII letters, digits, dashes, periods only)',\n    )\n  }\n\n  if (toCheck.length > 253 + 1 + 63) {\n    throw new InvalidNsidError('NSID is too long (317 chars max)')\n  }\n  const labels = toCheck.split('.')\n  if (labels.length < 3) {\n    throw new InvalidNsidError('NSID needs at least three parts')\n  }\n  for (let i = 0; i < labels.length; i++) {\n    const l = labels[i]\n    if (l.length < 1) {\n      throw new InvalidNsidError('NSID parts can not be empty')\n    }\n    if (l.length > 63) {\n      throw new InvalidNsidError('NSID part too long (max 63 chars)')\n    }\n    if (l.endsWith('-') || l.startsWith('-')) {\n      throw new InvalidNsidError('NSID parts can not start or end with hyphen')\n    }\n    if (/^[0-9]/.test(l) && i == 0) {\n      throw new InvalidNsidError('NSID first part may not start with a digit')\n    }\n    if (!/^[a-zA-Z]+$/.test(l) && i + 1 == labels.length) {\n      throw new InvalidNsidError('NSID name part must be only letters')\n    }\n  }\n}\n\nexport const ensureValidNsidRegex = (nsid: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints\n  if (\n    !/^[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(\\.[a-zA-Z]([a-zA-Z]{0,61}[a-zA-Z])?)$/.test(\n      nsid,\n    )\n  ) {\n    throw new InvalidNsidError(\"NSID didn't validate via regex\")\n  }\n  if (nsid.length > 253 + 1 + 63) {\n    throw new InvalidNsidError('NSID is too long (317 chars max)')\n  }\n}\n\nexport class InvalidNsidError extends Error {}\n", "import { ensureValidHandle, ensureValidHandleRegex } from './handle'\nimport { ensureValidDid, ensureValidDidRegex } from './did'\nimport { ensureValidNsid, ensureValidNsidRegex } from './nsid'\n\n// Human-readable constraints on ATURI:\n//   - following regular URLs, a 8KByte hard total length limit\n//   - follows ATURI docs on website\n//      - all ASCII characters, no whitespace. non-ASCII could be URL-encoded\n//      - starts \"at://\"\n//      - \"authority\" is a valid DID or a valid handle\n//      - optionally, follow \"authority\" with \"/\" and valid NSID as start of path\n//      - optionally, if NSID given, follow that with \"/\" and rkey\n//      - rkey path component can include URL-encoded (\"percent encoded\"), or:\n//          ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \":\" / \"@\" / \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n//          [a-zA-Z0-9._~:@!$&'\\(\\)*+,;=-]\n//      - rkey must have at least one char\n//      - regardless of path component, a fragment can follow  as \"#\" and then a JSON pointer (RFC-6901)\nexport const ensureValidAtUri = (uri: string) => {\n  // JSON pointer is pretty different from rest of URI, so split that out first\n  const uriParts = uri.split('#')\n  if (uriParts.length > 2) {\n    throw new Error('ATURI can have at most one \"#\", separating fragment out')\n  }\n  const fragmentPart = uriParts[1] || null\n  uri = uriParts[0]\n\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9._~:@!$&')(*+,;=%/-]*$/.test(uri)) {\n    throw new Error('Disallowed characters in ATURI (ASCII)')\n  }\n\n  const parts = uri.split('/')\n  if (parts.length >= 3 && (parts[0] != 'at:' || parts[1].length != 0)) {\n    throw new Error('ATURI must start with \"at://\"')\n  }\n  if (parts.length < 3) {\n    throw new Error('ATURI requires at least method and authority sections')\n  }\n\n  try {\n    ensureValidHandle(parts[2])\n  } catch {\n    try {\n      ensureValidDid(parts[2])\n    } catch {\n      throw new Error('ATURI authority must be a valid handle or DID')\n    }\n  }\n\n  if (parts.length >= 4) {\n    if (parts[3].length == 0) {\n      throw new Error(\n        'ATURI can not have a slash after authority without a path segment',\n      )\n    }\n    try {\n      ensureValidNsid(parts[3])\n    } catch {\n      throw new Error(\n        'ATURI requires first path segment (if supplied) to be valid NSID',\n      )\n    }\n  }\n\n  if (parts.length >= 5) {\n    if (parts[4].length == 0) {\n      throw new Error(\n        'ATURI can not have a slash after collection, unless record key is provided',\n      )\n    }\n    // would validate rkey here, but there are basically no constraints!\n  }\n\n  if (parts.length >= 6) {\n    throw new Error(\n      'ATURI path can have at most two parts, and no trailing slash',\n    )\n  }\n\n  if (uriParts.length >= 2 && fragmentPart == null) {\n    throw new Error('ATURI fragment must be non-empty and start with slash')\n  }\n\n  if (fragmentPart != null) {\n    if (fragmentPart.length == 0 || fragmentPart[0] != '/') {\n      throw new Error('ATURI fragment must be non-empty and start with slash')\n    }\n    // NOTE: enforcing *some* checks here for sanity. Eg, at least no whitespace\n    if (!/^\\/[a-zA-Z0-9._~:@!$&')(*+,;=%[\\]/-]*$/.test(fragmentPart)) {\n      throw new Error('Disallowed characters in ATURI fragment (ASCII)')\n    }\n  }\n\n  if (uri.length > 8 * 1024) {\n    throw new Error('ATURI is far too long')\n  }\n}\n\nexport const ensureValidAtUriRegex = (uri: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints. whew!\n  const aturiRegex =\n    /^at:\\/\\/(?<authority>[a-zA-Z0-9._:%-]+)(\\/(?<collection>[a-zA-Z0-9-.]+)(\\/(?<rkey>[a-zA-Z0-9._~:@!$&%')(*+,;=-]+))?)?(#(?<fragment>\\/[a-zA-Z0-9._~:@!$&%')(*+,;=\\-[\\]/\\\\]*))?$/\n  const rm = uri.match(aturiRegex)\n  if (!rm || !rm.groups) {\n    throw new Error(\"ATURI didn't validate via regex\")\n  }\n  const groups = rm.groups\n\n  try {\n    ensureValidHandleRegex(groups.authority)\n  } catch {\n    try {\n      ensureValidDidRegex(groups.authority)\n    } catch {\n      throw new Error('ATURI authority must be a valid handle or DID')\n    }\n  }\n\n  if (groups.collection) {\n    try {\n      ensureValidNsidRegex(groups.collection)\n    } catch {\n      throw new Error('ATURI collection path segment must be a valid NSID')\n    }\n  }\n\n  if (uri.length > 8 * 1024) {\n    throw new Error('ATURI is far too long')\n  }\n}\n", "export * from './aturi_validation'\n\nexport const ATP_URI_REGEX =\n  // proto-    --did--------------   --name----------------   --path----   --query--   --hash--\n  /^(at:\\/\\/)?((?:did:[a-z0-9:%-]+)|(?:[a-z0-9][a-z0-9.:-]*))(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i\n//                       --path-----   --query--  --hash--\nconst RELATIVE_REGEX = /^(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i\n\nexport class AtUri {\n  hash: string\n  host: string\n  pathname: string\n  searchParams: URLSearchParams\n\n  constructor(uri: string, base?: string) {\n    let parsed\n    if (base) {\n      parsed = parse(base)\n      if (!parsed) {\n        throw new Error(`Invalid at uri: ${base}`)\n      }\n      const relativep = parseRelative(uri)\n      if (!relativep) {\n        throw new Error(`Invalid path: ${uri}`)\n      }\n      Object.assign(parsed, relativep)\n    } else {\n      parsed = parse(uri)\n      if (!parsed) {\n        throw new Error(`Invalid at uri: ${uri}`)\n      }\n    }\n\n    this.hash = parsed.hash\n    this.host = parsed.host\n    this.pathname = parsed.pathname\n    this.searchParams = parsed.searchParams\n  }\n\n  static make(handleOrDid: string, collection?: string, rkey?: string) {\n    let str = handleOrDid\n    if (collection) str += '/' + collection\n    if (rkey) str += '/' + rkey\n    return new AtUri(str)\n  }\n\n  get protocol() {\n    return 'at:'\n  }\n\n  get origin() {\n    return `at://${this.host}`\n  }\n\n  get hostname() {\n    return this.host\n  }\n\n  set hostname(v: string) {\n    this.host = v\n  }\n\n  get search() {\n    return this.searchParams.toString()\n  }\n\n  set search(v: string) {\n    this.searchParams = new URLSearchParams(v)\n  }\n\n  get collection() {\n    return this.pathname.split('/').filter(Boolean)[0] || ''\n  }\n\n  set collection(v: string) {\n    const parts = this.pathname.split('/').filter(Boolean)\n    parts[0] = v\n    this.pathname = parts.join('/')\n  }\n\n  get rkey() {\n    return this.pathname.split('/').filter(Boolean)[1] || ''\n  }\n\n  set rkey(v: string) {\n    const parts = this.pathname.split('/').filter(Boolean)\n    if (!parts[0]) parts[0] = 'undefined'\n    parts[1] = v\n    this.pathname = parts.join('/')\n  }\n\n  get href() {\n    return this.toString()\n  }\n\n  toString() {\n    let path = this.pathname || '/'\n    if (!path.startsWith('/')) {\n      path = `/${path}`\n    }\n    let qs = this.searchParams.toString()\n    if (qs && !qs.startsWith('?')) {\n      qs = `?${qs}`\n    }\n    let hash = this.hash\n    if (hash && !hash.startsWith('#')) {\n      hash = `#${hash}`\n    }\n    return `at://${this.host}${path}${qs}${hash}`\n  }\n}\n\nfunction parse(str: string) {\n  const match = ATP_URI_REGEX.exec(str)\n  if (match) {\n    return {\n      hash: match[5] || '',\n      host: match[2] || '',\n      pathname: match[3] || '',\n      searchParams: new URLSearchParams(match[4] || ''),\n    }\n  }\n  return undefined\n}\n\nfunction parseRelative(str: string) {\n  const match = RELATIVE_REGEX.exec(str)\n  if (match) {\n    return {\n      hash: match[3] || '',\n      pathname: match[1] || '',\n      searchParams: new URLSearchParams(match[2] || ''),\n    }\n  }\n  return undefined\n}\n", "\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n", "\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n", "[[[0,44],\"disallowed_STD3_valid\"],[[45,46],\"valid\"],[[47,47],\"disallowed_STD3_valid\"],[[48,57],\"valid\"],[[58,64],\"disallowed_STD3_valid\"],[[65,65],\"mapped\",[97]],[[66,66],\"mapped\",[98]],[[67,67],\"mapped\",[99]],[[68,68],\"mapped\",[100]],[[69,69],\"mapped\",[101]],[[70,70],\"mapped\",[102]],[[71,71],\"mapped\",[103]],[[72,72],\"mapped\",[104]],[[73,73],\"mapped\",[105]],[[74,74],\"mapped\",[106]],[[75,75],\"mapped\",[107]],[[76,76],\"mapped\",[108]],[[77,77],\"mapped\",[109]],[[78,78],\"mapped\",[110]],[[79,79],\"mapped\",[111]],[[80,80],\"mapped\",[112]],[[81,81],\"mapped\",[113]],[[82,82],\"mapped\",[114]],[[83,83],\"mapped\",[115]],[[84,84],\"mapped\",[116]],[[85,85],\"mapped\",[117]],[[86,86],\"mapped\",[118]],[[87,87],\"mapped\",[119]],[[88,88],\"mapped\",[120]],[[89,89],\"mapped\",[121]],[[90,90],\"mapped\",[122]],[[91,96],\"disallowed_STD3_valid\"],[[97,122],\"valid\"],[[123,127],\"disallowed_STD3_valid\"],[[128,159],\"disallowed\"],[[160,160],\"disallowed_STD3_mapped\",[32]],[[161,167],\"valid\",[],\"NV8\"],[[168,168],\"disallowed_STD3_mapped\",[32,776]],[[169,169],\"valid\",[],\"NV8\"],[[170,170],\"mapped\",[97]],[[171,172],\"valid\",[],\"NV8\"],[[173,173],\"ignored\"],[[174,174],\"valid\",[],\"NV8\"],[[175,175],\"disallowed_STD3_mapped\",[32,772]],[[176,177],\"valid\",[],\"NV8\"],[[178,178],\"mapped\",[50]],[[179,179],\"mapped\",[51]],[[180,180],\"disallowed_STD3_mapped\",[32,769]],[[181,181],\"mapped\",[956]],[[182,182],\"valid\",[],\"NV8\"],[[183,183],\"valid\"],[[184,184],\"disallowed_STD3_mapped\",[32,807]],[[185,185],\"mapped\",[49]],[[186,186],\"mapped\",[111]],[[187,187],\"valid\",[],\"NV8\"],[[188,188],\"mapped\",[49,8260,52]],[[189,189],\"mapped\",[49,8260,50]],[[190,190],\"mapped\",[51,8260,52]],[[191,191],\"valid\",[],\"NV8\"],[[192,192],\"mapped\",[224]],[[193,193],\"mapped\",[225]],[[194,194],\"mapped\",[226]],[[195,195],\"mapped\",[227]],[[196,196],\"mapped\",[228]],[[197,197],\"mapped\",[229]],[[198,198],\"mapped\",[230]],[[199,199],\"mapped\",[231]],[[200,200],\"mapped\",[232]],[[201,201],\"mapped\",[233]],[[202,202],\"mapped\",[234]],[[203,203],\"mapped\",[235]],[[204,204],\"mapped\",[236]],[[205,205],\"mapped\",[237]],[[206,206],\"mapped\",[238]],[[207,207],\"mapped\",[239]],[[208,208],\"mapped\",[240]],[[209,209],\"mapped\",[241]],[[210,210],\"mapped\",[242]],[[211,211],\"mapped\",[243]],[[212,212],\"mapped\",[244]],[[213,213],\"mapped\",[245]],[[214,214],\"mapped\",[246]],[[215,215],\"valid\",[],\"NV8\"],[[216,216],\"mapped\",[248]],[[217,217],\"mapped\",[249]],[[218,218],\"mapped\",[250]],[[219,219],\"mapped\",[251]],[[220,220],\"mapped\",[252]],[[221,221],\"mapped\",[253]],[[222,222],\"mapped\",[254]],[[223,223],\"deviation\",[115,115]],[[224,246],\"valid\"],[[247,247],\"valid\",[],\"NV8\"],[[248,255],\"valid\"],[[256,256],\"mapped\",[257]],[[257,257],\"valid\"],[[258,258],\"mapped\",[259]],[[259,259],\"valid\"],[[260,260],\"mapped\",[261]],[[261,261],\"valid\"],[[262,262],\"mapped\",[263]],[[263,263],\"valid\"],[[264,264],\"mapped\",[265]],[[265,265],\"valid\"],[[266,266],\"mapped\",[267]],[[267,267],\"valid\"],[[268,268],\"mapped\",[269]],[[269,269],\"valid\"],[[270,270],\"mapped\",[271]],[[271,271],\"valid\"],[[272,272],\"mapped\",[273]],[[273,273],\"valid\"],[[274,274],\"mapped\",[275]],[[275,275],\"valid\"],[[276,276],\"mapped\",[277]],[[277,277],\"valid\"],[[278,278],\"mapped\",[279]],[[279,279],\"valid\"],[[280,280],\"mapped\",[281]],[[281,281],\"valid\"],[[282,282],\"mapped\",[283]],[[283,283],\"valid\"],[[284,284],\"mapped\",[285]],[[285,285],\"valid\"],[[286,286],\"mapped\",[287]],[[287,287],\"valid\"],[[288,288],\"mapped\",[289]],[[289,289],\"valid\"],[[290,290],\"mapped\",[291]],[[291,291],\"valid\"],[[292,292],\"mapped\",[293]],[[293,293],\"valid\"],[[294,294],\"mapped\",[295]],[[295,295],\"valid\"],[[296,296],\"mapped\",[297]],[[297,297],\"valid\"],[[298,298],\"mapped\",[299]],[[299,299],\"valid\"],[[300,300],\"mapped\",[301]],[[301,301],\"valid\"],[[302,302],\"mapped\",[303]],[[303,303],\"valid\"],[[304,304],\"mapped\",[105,775]],[[305,305],\"valid\"],[[306,307],\"mapped\",[105,106]],[[308,308],\"mapped\",[309]],[[309,309],\"valid\"],[[310,310],\"mapped\",[311]],[[311,312],\"valid\"],[[313,313],\"mapped\",[314]],[[314,314],\"valid\"],[[315,315],\"mapped\",[316]],[[316,316],\"valid\"],[[317,317],\"mapped\",[318]],[[318,318],\"valid\"],[[319,320],\"mapped\",[108,183]],[[321,321],\"mapped\",[322]],[[322,322],\"valid\"],[[323,323],\"mapped\",[324]],[[324,324],\"valid\"],[[325,325],\"mapped\",[326]],[[326,326],\"valid\"],[[327,327],\"mapped\",[328]],[[328,328],\"valid\"],[[329,329],\"mapped\",[700,110]],[[330,330],\"mapped\",[331]],[[331,331],\"valid\"],[[332,332],\"mapped\",[333]],[[333,333],\"valid\"],[[334,334],\"mapped\",[335]],[[335,335],\"valid\"],[[336,336],\"mapped\",[337]],[[337,337],\"valid\"],[[338,338],\"mapped\",[339]],[[339,339],\"valid\"],[[340,340],\"mapped\",[341]],[[341,341],\"valid\"],[[342,342],\"mapped\",[343]],[[343,343],\"valid\"],[[344,344],\"mapped\",[345]],[[345,345],\"valid\"],[[346,346],\"mapped\",[347]],[[347,347],\"valid\"],[[348,348],\"mapped\",[349]],[[349,349],\"valid\"],[[350,350],\"mapped\",[351]],[[351,351],\"valid\"],[[352,352],\"mapped\",[353]],[[353,353],\"valid\"],[[354,354],\"mapped\",[355]],[[355,355],\"valid\"],[[356,356],\"mapped\",[357]],[[357,357],\"valid\"],[[358,358],\"mapped\",[359]],[[359,359],\"valid\"],[[360,360],\"mapped\",[361]],[[361,361],\"valid\"],[[362,362],\"mapped\",[363]],[[363,363],\"valid\"],[[364,364],\"mapped\",[365]],[[365,365],\"valid\"],[[366,366],\"mapped\",[367]],[[367,367],\"valid\"],[[368,368],\"mapped\",[369]],[[369,369],\"valid\"],[[370,370],\"mapped\",[371]],[[371,371],\"valid\"],[[372,372],\"mapped\",[373]],[[373,373],\"valid\"],[[374,374],\"mapped\",[375]],[[375,375],\"valid\"],[[376,376],\"mapped\",[255]],[[377,377],\"mapped\",[378]],[[378,378],\"valid\"],[[379,379],\"mapped\",[380]],[[380,380],\"valid\"],[[381,381],\"mapped\",[382]],[[382,382],\"valid\"],[[383,383],\"mapped\",[115]],[[384,384],\"valid\"],[[385,385],\"mapped\",[595]],[[386,386],\"mapped\",[387]],[[387,387],\"valid\"],[[388,388],\"mapped\",[389]],[[389,389],\"valid\"],[[390,390],\"mapped\",[596]],[[391,391],\"mapped\",[392]],[[392,392],\"valid\"],[[393,393],\"mapped\",[598]],[[394,394],\"mapped\",[599]],[[395,395],\"mapped\",[396]],[[396,397],\"valid\"],[[398,398],\"mapped\",[477]],[[399,399],\"mapped\",[601]],[[400,400],\"mapped\",[603]],[[401,401],\"mapped\",[402]],[[402,402],\"valid\"],[[403,403],\"mapped\",[608]],[[404,404],\"mapped\",[611]],[[405,405],\"valid\"],[[406,406],\"mapped\",[617]],[[407,407],\"mapped\",[616]],[[408,408],\"mapped\",[409]],[[409,411],\"valid\"],[[412,412],\"mapped\",[623]],[[413,413],\"mapped\",[626]],[[414,414],\"valid\"],[[415,415],\"mapped\",[629]],[[416,416],\"mapped\",[417]],[[417,417],\"valid\"],[[418,418],\"mapped\",[419]],[[419,419],\"valid\"],[[420,420],\"mapped\",[421]],[[421,421],\"valid\"],[[422,422],\"mapped\",[640]],[[423,423],\"mapped\",[424]],[[424,424],\"valid\"],[[425,425],\"mapped\",[643]],[[426,427],\"valid\"],[[428,428],\"mapped\",[429]],[[429,429],\"valid\"],[[430,430],\"mapped\",[648]],[[431,431],\"mapped\",[432]],[[432,432],\"valid\"],[[433,433],\"mapped\",[650]],[[434,434],\"mapped\",[651]],[[435,435],\"mapped\",[436]],[[436,436],\"valid\"],[[437,437],\"mapped\",[438]],[[438,438],\"valid\"],[[439,439],\"mapped\",[658]],[[440,440],\"mapped\",[441]],[[441,443],\"valid\"],[[444,444],\"mapped\",[445]],[[445,451],\"valid\"],[[452,454],\"mapped\",[100,382]],[[455,457],\"mapped\",[108,106]],[[458,460],\"mapped\",[110,106]],[[461,461],\"mapped\",[462]],[[462,462],\"valid\"],[[463,463],\"mapped\",[464]],[[464,464],\"valid\"],[[465,465],\"mapped\",[466]],[[466,466],\"valid\"],[[467,467],\"mapped\",[468]],[[468,468],\"valid\"],[[469,469],\"mapped\",[470]],[[470,470],\"valid\"],[[471,471],\"mapped\",[472]],[[472,472],\"valid\"],[[473,473],\"mapped\",[474]],[[474,474],\"valid\"],[[475,475],\"mapped\",[476]],[[476,477],\"valid\"],[[478,478],\"mapped\",[479]],[[479,479],\"valid\"],[[480,480],\"mapped\",[481]],[[481,481],\"valid\"],[[482,482],\"mapped\",[483]],[[483,483],\"valid\"],[[484,484],\"mapped\",[485]],[[485,485],\"valid\"],[[486,486],\"mapped\",[487]],[[487,487],\"valid\"],[[488,488],\"mapped\",[489]],[[489,489],\"valid\"],[[490,490],\"mapped\",[491]],[[491,491],\"valid\"],[[492,492],\"mapped\",[493]],[[493,493],\"valid\"],[[494,494],\"mapped\",[495]],[[495,496],\"valid\"],[[497,499],\"mapped\",[100,122]],[[500,500],\"mapped\",[501]],[[501,501],\"valid\"],[[502,502],\"mapped\",[405]],[[503,503],\"mapped\",[447]],[[504,504],\"mapped\",[505]],[[505,505],\"valid\"],[[506,506],\"mapped\",[507]],[[507,507],\"valid\"],[[508,508],\"mapped\",[509]],[[509,509],\"valid\"],[[510,510],\"mapped\",[511]],[[511,511],\"valid\"],[[512,512],\"mapped\",[513]],[[513,513],\"valid\"],[[514,514],\"mapped\",[515]],[[515,515],\"valid\"],[[516,516],\"mapped\",[517]],[[517,517],\"valid\"],[[518,518],\"mapped\",[519]],[[519,519],\"valid\"],[[520,520],\"mapped\",[521]],[[521,521],\"valid\"],[[522,522],\"mapped\",[523]],[[523,523],\"valid\"],[[524,524],\"mapped\",[525]],[[525,525],\"valid\"],[[526,526],\"mapped\",[527]],[[527,527],\"valid\"],[[528,528],\"mapped\",[529]],[[529,529],\"valid\"],[[530,530],\"mapped\",[531]],[[531,531],\"valid\"],[[532,532],\"mapped\",[533]],[[533,533],\"valid\"],[[534,534],\"mapped\",[535]],[[535,535],\"valid\"],[[536,536],\"mapped\",[537]],[[537,537],\"valid\"],[[538,538],\"mapped\",[539]],[[539,539],\"valid\"],[[540,540],\"mapped\",[541]],[[541,541],\"valid\"],[[542,542],\"mapped\",[543]],[[543,543],\"valid\"],[[544,544],\"mapped\",[414]],[[545,545],\"valid\"],[[546,546],\"mapped\",[547]],[[547,547],\"valid\"],[[548,548],\"mapped\",[549]],[[549,549],\"valid\"],[[550,550],\"mapped\",[551]],[[551,551],\"valid\"],[[552,552],\"mapped\",[553]],[[553,553],\"valid\"],[[554,554],\"mapped\",[555]],[[555,555],\"valid\"],[[556,556],\"mapped\",[557]],[[557,557],\"valid\"],[[558,558],\"mapped\",[559]],[[559,559],\"valid\"],[[560,560],\"mapped\",[561]],[[561,561],\"valid\"],[[562,562],\"mapped\",[563]],[[563,563],\"valid\"],[[564,566],\"valid\"],[[567,569],\"valid\"],[[570,570],\"mapped\",[11365]],[[571,571],\"mapped\",[572]],[[572,572],\"valid\"],[[573,573],\"mapped\",[410]],[[574,574],\"mapped\",[11366]],[[575,576],\"valid\"],[[577,577],\"mapped\",[578]],[[578,578],\"valid\"],[[579,579],\"mapped\",[384]],[[580,580],\"mapped\",[649]],[[581,581],\"mapped\",[652]],[[582,582],\"mapped\",[583]],[[583,583],\"valid\"],[[584,584],\"mapped\",[585]],[[585,585],\"valid\"],[[586,586],\"mapped\",[587]],[[587,587],\"valid\"],[[588,588],\"mapped\",[589]],[[589,589],\"valid\"],[[590,590],\"mapped\",[591]],[[591,591],\"valid\"],[[592,680],\"valid\"],[[681,685],\"valid\"],[[686,687],\"valid\"],[[688,688],\"mapped\",[104]],[[689,689],\"mapped\",[614]],[[690,690],\"mapped\",[106]],[[691,691],\"mapped\",[114]],[[692,692],\"mapped\",[633]],[[693,693],\"mapped\",[635]],[[694,694],\"mapped\",[641]],[[695,695],\"mapped\",[119]],[[696,696],\"mapped\",[121]],[[697,705],\"valid\"],[[706,709],\"valid\",[],\"NV8\"],[[710,721],\"valid\"],[[722,727],\"valid\",[],\"NV8\"],[[728,728],\"disallowed_STD3_mapped\",[32,774]],[[729,729],\"disallowed_STD3_mapped\",[32,775]],[[730,730],\"disallowed_STD3_mapped\",[32,778]],[[731,731],\"disallowed_STD3_mapped\",[32,808]],[[732,732],\"disallowed_STD3_mapped\",[32,771]],[[733,733],\"disallowed_STD3_mapped\",[32,779]],[[734,734],\"valid\",[],\"NV8\"],[[735,735],\"valid\",[],\"NV8\"],[[736,736],\"mapped\",[611]],[[737,737],\"mapped\",[108]],[[738,738],\"mapped\",[115]],[[739,739],\"mapped\",[120]],[[740,740],\"mapped\",[661]],[[741,745],\"valid\",[],\"NV8\"],[[746,747],\"valid\",[],\"NV8\"],[[748,748],\"valid\"],[[749,749],\"valid\",[],\"NV8\"],[[750,750],\"valid\"],[[751,767],\"valid\",[],\"NV8\"],[[768,831],\"valid\"],[[832,832],\"mapped\",[768]],[[833,833],\"mapped\",[769]],[[834,834],\"valid\"],[[835,835],\"mapped\",[787]],[[836,836],\"mapped\",[776,769]],[[837,837],\"mapped\",[953]],[[838,846],\"valid\"],[[847,847],\"ignored\"],[[848,855],\"valid\"],[[856,860],\"valid\"],[[861,863],\"valid\"],[[864,865],\"valid\"],[[866,866],\"valid\"],[[867,879],\"valid\"],[[880,880],\"mapped\",[881]],[[881,881],\"valid\"],[[882,882],\"mapped\",[883]],[[883,883],\"valid\"],[[884,884],\"mapped\",[697]],[[885,885],\"valid\"],[[886,886],\"mapped\",[887]],[[887,887],\"valid\"],[[888,889],\"disallowed\"],[[890,890],\"disallowed_STD3_mapped\",[32,953]],[[891,893],\"valid\"],[[894,894],\"disallowed_STD3_mapped\",[59]],[[895,895],\"mapped\",[1011]],[[896,899],\"disallowed\"],[[900,900],\"disallowed_STD3_mapped\",[32,769]],[[901,901],\"disallowed_STD3_mapped\",[32,776,769]],[[902,902],\"mapped\",[940]],[[903,903],\"mapped\",[183]],[[904,904],\"mapped\",[941]],[[905,905],\"mapped\",[942]],[[906,906],\"mapped\",[943]],[[907,907],\"disallowed\"],[[908,908],\"mapped\",[972]],[[909,909],\"disallowed\"],[[910,910],\"mapped\",[973]],[[911,911],\"mapped\",[974]],[[912,912],\"valid\"],[[913,913],\"mapped\",[945]],[[914,914],\"mapped\",[946]],[[915,915],\"mapped\",[947]],[[916,916],\"mapped\",[948]],[[917,917],\"mapped\",[949]],[[918,918],\"mapped\",[950]],[[919,919],\"mapped\",[951]],[[920,920],\"mapped\",[952]],[[921,921],\"mapped\",[953]],[[922,922],\"mapped\",[954]],[[923,923],\"mapped\",[955]],[[924,924],\"mapped\",[956]],[[925,925],\"mapped\",[957]],[[926,926],\"mapped\",[958]],[[927,927],\"mapped\",[959]],[[928,928],\"mapped\",[960]],[[929,929],\"mapped\",[961]],[[930,930],\"disallowed\"],[[931,931],\"mapped\",[963]],[[932,932],\"mapped\",[964]],[[933,933],\"mapped\",[965]],[[934,934],\"mapped\",[966]],[[935,935],\"mapped\",[967]],[[936,936],\"mapped\",[968]],[[937,937],\"mapped\",[969]],[[938,938],\"mapped\",[970]],[[939,939],\"mapped\",[971]],[[940,961],\"valid\"],[[962,962],\"deviation\",[963]],[[963,974],\"valid\"],[[975,975],\"mapped\",[983]],[[976,976],\"mapped\",[946]],[[977,977],\"mapped\",[952]],[[978,978],\"mapped\",[965]],[[979,979],\"mapped\",[973]],[[980,980],\"mapped\",[971]],[[981,981],\"mapped\",[966]],[[982,982],\"mapped\",[960]],[[983,983],\"valid\"],[[984,984],\"mapped\",[985]],[[985,985],\"valid\"],[[986,986],\"mapped\",[987]],[[987,987],\"valid\"],[[988,988],\"mapped\",[989]],[[989,989],\"valid\"],[[990,990],\"mapped\",[991]],[[991,991],\"valid\"],[[992,992],\"mapped\",[993]],[[993,993],\"valid\"],[[994,994],\"mapped\",[995]],[[995,995],\"valid\"],[[996,996],\"mapped\",[997]],[[997,997],\"valid\"],[[998,998],\"mapped\",[999]],[[999,999],\"valid\"],[[1000,1000],\"mapped\",[1001]],[[1001,1001],\"valid\"],[[1002,1002],\"mapped\",[1003]],[[1003,1003],\"valid\"],[[1004,1004],\"mapped\",[1005]],[[1005,1005],\"valid\"],[[1006,1006],\"mapped\",[1007]],[[1007,1007],\"valid\"],[[1008,1008],\"mapped\",[954]],[[1009,1009],\"mapped\",[961]],[[1010,1010],\"mapped\",[963]],[[1011,1011],\"valid\"],[[1012,1012],\"mapped\",[952]],[[1013,1013],\"mapped\",[949]],[[1014,1014],\"valid\",[],\"NV8\"],[[1015,1015],\"mapped\",[1016]],[[1016,1016],\"valid\"],[[1017,1017],\"mapped\",[963]],[[1018,1018],\"mapped\",[1019]],[[1019,1019],\"valid\"],[[1020,1020],\"valid\"],[[1021,1021],\"mapped\",[891]],[[1022,1022],\"mapped\",[892]],[[1023,1023],\"mapped\",[893]],[[1024,1024],\"mapped\",[1104]],[[1025,1025],\"mapped\",[1105]],[[1026,1026],\"mapped\",[1106]],[[1027,1027],\"mapped\",[1107]],[[1028,1028],\"mapped\",[1108]],[[1029,1029],\"mapped\",[1109]],[[1030,1030],\"mapped\",[1110]],[[1031,1031],\"mapped\",[1111]],[[1032,1032],\"mapped\",[1112]],[[1033,1033],\"mapped\",[1113]],[[1034,1034],\"mapped\",[1114]],[[1035,1035],\"mapped\",[1115]],[[1036,1036],\"mapped\",[1116]],[[1037,1037],\"mapped\",[1117]],[[1038,1038],\"mapped\",[1118]],[[1039,1039],\"mapped\",[1119]],[[1040,1040],\"mapped\",[1072]],[[1041,1041],\"mapped\",[1073]],[[1042,1042],\"mapped\",[1074]],[[1043,1043],\"mapped\",[1075]],[[1044,1044],\"mapped\",[1076]],[[1045,1045],\"mapped\",[1077]],[[1046,1046],\"mapped\",[1078]],[[1047,1047],\"mapped\",[1079]],[[1048,1048],\"mapped\",[1080]],[[1049,1049],\"mapped\",[1081]],[[1050,1050],\"mapped\",[1082]],[[1051,1051],\"mapped\",[1083]],[[1052,1052],\"mapped\",[1084]],[[1053,1053],\"mapped\",[1085]],[[1054,1054],\"mapped\",[1086]],[[1055,1055],\"mapped\",[1087]],[[1056,1056],\"mapped\",[1088]],[[1057,1057],\"mapped\",[1089]],[[1058,1058],\"mapped\",[1090]],[[1059,1059],\"mapped\",[1091]],[[1060,1060],\"mapped\",[1092]],[[1061,1061],\"mapped\",[1093]],[[1062,1062],\"mapped\",[1094]],[[1063,1063],\"mapped\",[1095]],[[1064,1064],\"mapped\",[1096]],[[1065,1065],\"mapped\",[1097]],[[1066,1066],\"mapped\",[1098]],[[1067,1067],\"mapped\",[1099]],[[1068,1068],\"mapped\",[1100]],[[1069,1069],\"mapped\",[1101]],[[1070,1070],\"mapped\",[1102]],[[1071,1071],\"mapped\",[1103]],[[1072,1103],\"valid\"],[[1104,1104],\"valid\"],[[1105,1116],\"valid\"],[[1117,1117],\"valid\"],[[1118,1119],\"valid\"],[[1120,1120],\"mapped\",[1121]],[[1121,1121],\"valid\"],[[1122,1122],\"mapped\",[1123]],[[1123,1123],\"valid\"],[[1124,1124],\"mapped\",[1125]],[[1125,1125],\"valid\"],[[1126,1126],\"mapped\",[1127]],[[1127,1127],\"valid\"],[[1128,1128],\"mapped\",[1129]],[[1129,1129],\"valid\"],[[1130,1130],\"mapped\",[1131]],[[1131,1131],\"valid\"],[[1132,1132],\"mapped\",[1133]],[[1133,1133],\"valid\"],[[1134,1134],\"mapped\",[1135]],[[1135,1135],\"valid\"],[[1136,1136],\"mapped\",[1137]],[[1137,1137],\"valid\"],[[1138,1138],\"mapped\",[1139]],[[1139,1139],\"valid\"],[[1140,1140],\"mapped\",[1141]],[[1141,1141],\"valid\"],[[1142,1142],\"mapped\",[1143]],[[1143,1143],\"valid\"],[[1144,1144],\"mapped\",[1145]],[[1145,1145],\"valid\"],[[1146,1146],\"mapped\",[1147]],[[1147,1147],\"valid\"],[[1148,1148],\"mapped\",[1149]],[[1149,1149],\"valid\"],[[1150,1150],\"mapped\",[1151]],[[1151,1151],\"valid\"],[[1152,1152],\"mapped\",[1153]],[[1153,1153],\"valid\"],[[1154,1154],\"valid\",[],\"NV8\"],[[1155,1158],\"valid\"],[[1159,1159],\"valid\"],[[1160,1161],\"valid\",[],\"NV8\"],[[1162,1162],\"mapped\",[1163]],[[1163,1163],\"valid\"],[[1164,1164],\"mapped\",[1165]],[[1165,1165],\"valid\"],[[1166,1166],\"mapped\",[1167]],[[1167,1167],\"valid\"],[[1168,1168],\"mapped\",[1169]],[[1169,1169],\"valid\"],[[1170,1170],\"mapped\",[1171]],[[1171,1171],\"valid\"],[[1172,1172],\"mapped\",[1173]],[[1173,1173],\"valid\"],[[1174,1174],\"mapped\",[1175]],[[1175,1175],\"valid\"],[[1176,1176],\"mapped\",[1177]],[[1177,1177],\"valid\"],[[1178,1178],\"mapped\",[1179]],[[1179,1179],\"valid\"],[[1180,1180],\"mapped\",[1181]],[[1181,1181],\"valid\"],[[1182,1182],\"mapped\",[1183]],[[1183,1183],\"valid\"],[[1184,1184],\"mapped\",[1185]],[[1185,1185],\"valid\"],[[1186,1186],\"mapped\",[1187]],[[1187,1187],\"valid\"],[[1188,1188],\"mapped\",[1189]],[[1189,1189],\"valid\"],[[1190,1190],\"mapped\",[1191]],[[1191,1191],\"valid\"],[[1192,1192],\"mapped\",[1193]],[[1193,1193],\"valid\"],[[1194,1194],\"mapped\",[1195]],[[1195,1195],\"valid\"],[[1196,1196],\"mapped\",[1197]],[[1197,1197],\"valid\"],[[1198,1198],\"mapped\",[1199]],[[1199,1199],\"valid\"],[[1200,1200],\"mapped\",[1201]],[[1201,1201],\"valid\"],[[1202,1202],\"mapped\",[1203]],[[1203,1203],\"valid\"],[[1204,1204],\"mapped\",[1205]],[[1205,1205],\"valid\"],[[1206,1206],\"mapped\",[1207]],[[1207,1207],\"valid\"],[[1208,1208],\"mapped\",[1209]],[[1209,1209],\"valid\"],[[1210,1210],\"mapped\",[1211]],[[1211,1211],\"valid\"],[[1212,1212],\"mapped\",[1213]],[[1213,1213],\"valid\"],[[1214,1214],\"mapped\",[1215]],[[1215,1215],\"valid\"],[[1216,1216],\"disallowed\"],[[1217,1217],\"mapped\",[1218]],[[1218,1218],\"valid\"],[[1219,1219],\"mapped\",[1220]],[[1220,1220],\"valid\"],[[1221,1221],\"mapped\",[1222]],[[1222,1222],\"valid\"],[[1223,1223],\"mapped\",[1224]],[[1224,1224],\"valid\"],[[1225,1225],\"mapped\",[1226]],[[1226,1226],\"valid\"],[[1227,1227],\"mapped\",[1228]],[[1228,1228],\"valid\"],[[1229,1229],\"mapped\",[1230]],[[1230,1230],\"valid\"],[[1231,1231],\"valid\"],[[1232,1232],\"mapped\",[1233]],[[1233,1233],\"valid\"],[[1234,1234],\"mapped\",[1235]],[[1235,1235],\"valid\"],[[1236,1236],\"mapped\",[1237]],[[1237,1237],\"valid\"],[[1238,1238],\"mapped\",[1239]],[[1239,1239],\"valid\"],[[1240,1240],\"mapped\",[1241]],[[1241,1241],\"valid\"],[[1242,1242],\"mapped\",[1243]],[[1243,1243],\"valid\"],[[1244,1244],\"mapped\",[1245]],[[1245,1245],\"valid\"],[[1246,1246],\"mapped\",[1247]],[[1247,1247],\"valid\"],[[1248,1248],\"mapped\",[1249]],[[1249,1249],\"valid\"],[[1250,1250],\"mapped\",[1251]],[[1251,1251],\"valid\"],[[1252,1252],\"mapped\",[1253]],[[1253,1253],\"valid\"],[[1254,1254],\"mapped\",[1255]],[[1255,1255],\"valid\"],[[1256,1256],\"mapped\",[1257]],[[1257,1257],\"valid\"],[[1258,1258],\"mapped\",[1259]],[[1259,1259],\"valid\"],[[1260,1260],\"mapped\",[1261]],[[1261,1261],\"valid\"],[[1262,1262],\"mapped\",[1263]],[[1263,1263],\"valid\"],[[1264,1264],\"mapped\",[1265]],[[1265,1265],\"valid\"],[[1266,1266],\"mapped\",[1267]],[[1267,1267],\"valid\"],[[1268,1268],\"mapped\",[1269]],[[1269,1269],\"valid\"],[[1270,1270],\"mapped\",[1271]],[[1271,1271],\"valid\"],[[1272,1272],\"mapped\",[1273]],[[1273,1273],\"valid\"],[[1274,1274],\"mapped\",[1275]],[[1275,1275],\"valid\"],[[1276,1276],\"mapped\",[1277]],[[1277,1277],\"valid\"],[[1278,1278],\"mapped\",[1279]],[[1279,1279],\"valid\"],[[1280,1280],\"mapped\",[1281]],[[1281,1281],\"valid\"],[[1282,1282],\"mapped\",[1283]],[[1283,1283],\"valid\"],[[1284,1284],\"mapped\",[1285]],[[1285,1285],\"valid\"],[[1286,1286],\"mapped\",[1287]],[[1287,1287],\"valid\"],[[1288,1288],\"mapped\",[1289]],[[1289,1289],\"valid\"],[[1290,1290],\"mapped\",[1291]],[[1291,1291],\"valid\"],[[1292,1292],\"mapped\",[1293]],[[1293,1293],\"valid\"],[[1294,1294],\"mapped\",[1295]],[[1295,1295],\"valid\"],[[1296,1296],\"mapped\",[1297]],[[1297,1297],\"valid\"],[[1298,1298],\"mapped\",[1299]],[[1299,1299],\"valid\"],[[1300,1300],\"mapped\",[1301]],[[1301,1301],\"valid\"],[[1302,1302],\"mapped\",[1303]],[[1303,1303],\"valid\"],[[1304,1304],\"mapped\",[1305]],[[1305,1305],\"valid\"],[[1306,1306],\"mapped\",[1307]],[[1307,1307],\"valid\"],[[1308,1308],\"mapped\",[1309]],[[1309,1309],\"valid\"],[[1310,1310],\"mapped\",[1311]],[[1311,1311],\"valid\"],[[1312,1312],\"mapped\",[1313]],[[1313,1313],\"valid\"],[[1314,1314],\"mapped\",[1315]],[[1315,1315],\"valid\"],[[1316,1316],\"mapped\",[1317]],[[1317,1317],\"valid\"],[[1318,1318],\"mapped\",[1319]],[[1319,1319],\"valid\"],[[1320,1320],\"mapped\",[1321]],[[1321,1321],\"valid\"],[[1322,1322],\"mapped\",[1323]],[[1323,1323],\"valid\"],[[1324,1324],\"mapped\",[1325]],[[1325,1325],\"valid\"],[[1326,1326],\"mapped\",[1327]],[[1327,1327],\"valid\"],[[1328,1328],\"disallowed\"],[[1329,1329],\"mapped\",[1377]],[[1330,1330],\"mapped\",[1378]],[[1331,1331],\"mapped\",[1379]],[[1332,1332],\"mapped\",[1380]],[[1333,1333],\"mapped\",[1381]],[[1334,1334],\"mapped\",[1382]],[[1335,1335],\"mapped\",[1383]],[[1336,1336],\"mapped\",[1384]],[[1337,1337],\"mapped\",[1385]],[[1338,1338],\"mapped\",[1386]],[[1339,1339],\"mapped\",[1387]],[[1340,1340],\"mapped\",[1388]],[[1341,1341],\"mapped\",[1389]],[[1342,1342],\"mapped\",[1390]],[[1343,1343],\"mapped\",[1391]],[[1344,1344],\"mapped\",[1392]],[[1345,1345],\"mapped\",[1393]],[[1346,1346],\"mapped\",[1394]],[[1347,1347],\"mapped\",[1395]],[[1348,1348],\"mapped\",[1396]],[[1349,1349],\"mapped\",[1397]],[[1350,1350],\"mapped\",[1398]],[[1351,1351],\"mapped\",[1399]],[[1352,1352],\"mapped\",[1400]],[[1353,1353],\"mapped\",[1401]],[[1354,1354],\"mapped\",[1402]],[[1355,1355],\"mapped\",[1403]],[[1356,1356],\"mapped\",[1404]],[[1357,1357],\"mapped\",[1405]],[[1358,1358],\"mapped\",[1406]],[[1359,1359],\"mapped\",[1407]],[[1360,1360],\"mapped\",[1408]],[[1361,1361],\"mapped\",[1409]],[[1362,1362],\"mapped\",[1410]],[[1363,1363],\"mapped\",[1411]],[[1364,1364],\"mapped\",[1412]],[[1365,1365],\"mapped\",[1413]],[[1366,1366],\"mapped\",[1414]],[[1367,1368],\"disallowed\"],[[1369,1369],\"valid\"],[[1370,1375],\"valid\",[],\"NV8\"],[[1376,1376],\"disallowed\"],[[1377,1414],\"valid\"],[[1415,1415],\"mapped\",[1381,1410]],[[1416,1416],\"disallowed\"],[[1417,1417],\"valid\",[],\"NV8\"],[[1418,1418],\"valid\",[],\"NV8\"],[[1419,1420],\"disallowed\"],[[1421,1422],\"valid\",[],\"NV8\"],[[1423,1423],\"valid\",[],\"NV8\"],[[1424,1424],\"disallowed\"],[[1425,1441],\"valid\"],[[1442,1442],\"valid\"],[[1443,1455],\"valid\"],[[1456,1465],\"valid\"],[[1466,1466],\"valid\"],[[1467,1469],\"valid\"],[[1470,1470],\"valid\",[],\"NV8\"],[[1471,1471],\"valid\"],[[1472,1472],\"valid\",[],\"NV8\"],[[1473,1474],\"valid\"],[[1475,1475],\"valid\",[],\"NV8\"],[[1476,1476],\"valid\"],[[1477,1477],\"valid\"],[[1478,1478],\"valid\",[],\"NV8\"],[[1479,1479],\"valid\"],[[1480,1487],\"disallowed\"],[[1488,1514],\"valid\"],[[1515,1519],\"disallowed\"],[[1520,1524],\"valid\"],[[1525,1535],\"disallowed\"],[[1536,1539],\"disallowed\"],[[1540,1540],\"disallowed\"],[[1541,1541],\"disallowed\"],[[1542,1546],\"valid\",[],\"NV8\"],[[1547,1547],\"valid\",[],\"NV8\"],[[1548,1548],\"valid\",[],\"NV8\"],[[1549,1551],\"valid\",[],\"NV8\"],[[1552,1557],\"valid\"],[[1558,1562],\"valid\"],[[1563,1563],\"valid\",[],\"NV8\"],[[1564,1564],\"disallowed\"],[[1565,1565],\"disallowed\"],[[1566,1566],\"valid\",[],\"NV8\"],[[1567,1567],\"valid\",[],\"NV8\"],[[1568,1568],\"valid\"],[[1569,1594],\"valid\"],[[1595,1599],\"valid\"],[[1600,1600],\"valid\",[],\"NV8\"],[[1601,1618],\"valid\"],[[1619,1621],\"valid\"],[[1622,1624],\"valid\"],[[1625,1630],\"valid\"],[[1631,1631],\"valid\"],[[1632,1641],\"valid\"],[[1642,1645],\"valid\",[],\"NV8\"],[[1646,1647],\"valid\"],[[1648,1652],\"valid\"],[[1653,1653],\"mapped\",[1575,1652]],[[1654,1654],\"mapped\",[1608,1652]],[[1655,1655],\"mapped\",[1735,1652]],[[1656,1656],\"mapped\",[1610,1652]],[[1657,1719],\"valid\"],[[1720,1721],\"valid\"],[[1722,1726],\"valid\"],[[1727,1727],\"valid\"],[[1728,1742],\"valid\"],[[1743,1743],\"valid\"],[[1744,1747],\"valid\"],[[1748,1748],\"valid\",[],\"NV8\"],[[1749,1756],\"valid\"],[[1757,1757],\"disallowed\"],[[1758,1758],\"valid\",[],\"NV8\"],[[1759,1768],\"valid\"],[[1769,1769],\"valid\",[],\"NV8\"],[[1770,1773],\"valid\"],[[1774,1775],\"valid\"],[[1776,1785],\"valid\"],[[1786,1790],\"valid\"],[[1791,1791],\"valid\"],[[1792,1805],\"valid\",[],\"NV8\"],[[1806,1806],\"disallowed\"],[[1807,1807],\"disallowed\"],[[1808,1836],\"valid\"],[[1837,1839],\"valid\"],[[1840,1866],\"valid\"],[[1867,1868],\"disallowed\"],[[1869,1871],\"valid\"],[[1872,1901],\"valid\"],[[1902,1919],\"valid\"],[[1920,1968],\"valid\"],[[1969,1969],\"valid\"],[[1970,1983],\"disallowed\"],[[1984,2037],\"valid\"],[[2038,2042],\"valid\",[],\"NV8\"],[[2043,2047],\"disallowed\"],[[2048,2093],\"valid\"],[[2094,2095],\"disallowed\"],[[2096,2110],\"valid\",[],\"NV8\"],[[2111,2111],\"disallowed\"],[[2112,2139],\"valid\"],[[2140,2141],\"disallowed\"],[[2142,2142],\"valid\",[],\"NV8\"],[[2143,2207],\"disallowed\"],[[2208,2208],\"valid\"],[[2209,2209],\"valid\"],[[2210,2220],\"valid\"],[[2221,2226],\"valid\"],[[2227,2228],\"valid\"],[[2229,2274],\"disallowed\"],[[2275,2275],\"valid\"],[[2276,2302],\"valid\"],[[2303,2303],\"valid\"],[[2304,2304],\"valid\"],[[2305,2307],\"valid\"],[[2308,2308],\"valid\"],[[2309,2361],\"valid\"],[[2362,2363],\"valid\"],[[2364,2381],\"valid\"],[[2382,2382],\"valid\"],[[2383,2383],\"valid\"],[[2384,2388],\"valid\"],[[2389,2389],\"valid\"],[[2390,2391],\"valid\"],[[2392,2392],\"mapped\",[2325,2364]],[[2393,2393],\"mapped\",[2326,2364]],[[2394,2394],\"mapped\",[2327,2364]],[[2395,2395],\"mapped\",[2332,2364]],[[2396,2396],\"mapped\",[2337,2364]],[[2397,2397],\"mapped\",[2338,2364]],[[2398,2398],\"mapped\",[2347,2364]],[[2399,2399],\"mapped\",[2351,2364]],[[2400,2403],\"valid\"],[[2404,2405],\"valid\",[],\"NV8\"],[[2406,2415],\"valid\"],[[2416,2416],\"valid\",[],\"NV8\"],[[2417,2418],\"valid\"],[[2419,2423],\"valid\"],[[2424,2424],\"valid\"],[[2425,2426],\"valid\"],[[2427,2428],\"valid\"],[[2429,2429],\"valid\"],[[2430,2431],\"valid\"],[[2432,2432],\"valid\"],[[2433,2435],\"valid\"],[[2436,2436],\"disallowed\"],[[2437,2444],\"valid\"],[[2445,2446],\"disallowed\"],[[2447,2448],\"valid\"],[[2449,2450],\"disallowed\"],[[2451,2472],\"valid\"],[[2473,2473],\"disallowed\"],[[2474,2480],\"valid\"],[[2481,2481],\"disallowed\"],[[2482,2482],\"valid\"],[[2483,2485],\"disallowed\"],[[2486,2489],\"valid\"],[[2490,2491],\"disallowed\"],[[2492,2492],\"valid\"],[[2493,2493],\"valid\"],[[2494,2500],\"valid\"],[[2501,2502],\"disallowed\"],[[2503,2504],\"valid\"],[[2505,2506],\"disallowed\"],[[2507,2509],\"valid\"],[[2510,2510],\"valid\"],[[2511,2518],\"disallowed\"],[[2519,2519],\"valid\"],[[2520,2523],\"disallowed\"],[[2524,2524],\"mapped\",[2465,2492]],[[2525,2525],\"mapped\",[2466,2492]],[[2526,2526],\"disallowed\"],[[2527,2527],\"mapped\",[2479,2492]],[[2528,2531],\"valid\"],[[2532,2533],\"disallowed\"],[[2534,2545],\"valid\"],[[2546,2554],\"valid\",[],\"NV8\"],[[2555,2555],\"valid\",[],\"NV8\"],[[2556,2560],\"disallowed\"],[[2561,2561],\"valid\"],[[2562,2562],\"valid\"],[[2563,2563],\"valid\"],[[2564,2564],\"disallowed\"],[[2565,2570],\"valid\"],[[2571,2574],\"disallowed\"],[[2575,2576],\"valid\"],[[2577,2578],\"disallowed\"],[[2579,2600],\"valid\"],[[2601,2601],\"disallowed\"],[[2602,2608],\"valid\"],[[2609,2609],\"disallowed\"],[[2610,2610],\"valid\"],[[2611,2611],\"mapped\",[2610,2620]],[[2612,2612],\"disallowed\"],[[2613,2613],\"valid\"],[[2614,2614],\"mapped\",[2616,2620]],[[2615,2615],\"disallowed\"],[[2616,2617],\"valid\"],[[2618,2619],\"disallowed\"],[[2620,2620],\"valid\"],[[2621,2621],\"disallowed\"],[[2622,2626],\"valid\"],[[2627,2630],\"disallowed\"],[[2631,2632],\"valid\"],[[2633,2634],\"disallowed\"],[[2635,2637],\"valid\"],[[2638,2640],\"disallowed\"],[[2641,2641],\"valid\"],[[2642,2648],\"disallowed\"],[[2649,2649],\"mapped\",[2582,2620]],[[2650,2650],\"mapped\",[2583,2620]],[[2651,2651],\"mapped\",[2588,2620]],[[2652,2652],\"valid\"],[[2653,2653],\"disallowed\"],[[2654,2654],\"mapped\",[2603,2620]],[[2655,2661],\"disallowed\"],[[2662,2676],\"valid\"],[[2677,2677],\"valid\"],[[2678,2688],\"disallowed\"],[[2689,2691],\"valid\"],[[2692,2692],\"disallowed\"],[[2693,2699],\"valid\"],[[2700,2700],\"valid\"],[[2701,2701],\"valid\"],[[2702,2702],\"disallowed\"],[[2703,2705],\"valid\"],[[2706,2706],\"disallowed\"],[[2707,2728],\"valid\"],[[2729,2729],\"disallowed\"],[[2730,2736],\"valid\"],[[2737,2737],\"disallowed\"],[[2738,2739],\"valid\"],[[2740,2740],\"disallowed\"],[[2741,2745],\"valid\"],[[2746,2747],\"disallowed\"],[[2748,2757],\"valid\"],[[2758,2758],\"disallowed\"],[[2759,2761],\"valid\"],[[2762,2762],\"disallowed\"],[[2763,2765],\"valid\"],[[2766,2767],\"disallowed\"],[[2768,2768],\"valid\"],[[2769,2783],\"disallowed\"],[[2784,2784],\"valid\"],[[2785,2787],\"valid\"],[[2788,2789],\"disallowed\"],[[2790,2799],\"valid\"],[[2800,2800],\"valid\",[],\"NV8\"],[[2801,2801],\"valid\",[],\"NV8\"],[[2802,2808],\"disallowed\"],[[2809,2809],\"valid\"],[[2810,2816],\"disallowed\"],[[2817,2819],\"valid\"],[[2820,2820],\"disallowed\"],[[2821,2828],\"valid\"],[[2829,2830],\"disallowed\"],[[2831,2832],\"valid\"],[[2833,2834],\"disallowed\"],[[2835,2856],\"valid\"],[[2857,2857],\"disallowed\"],[[2858,2864],\"valid\"],[[2865,2865],\"disallowed\"],[[2866,2867],\"valid\"],[[2868,2868],\"disallowed\"],[[2869,2869],\"valid\"],[[2870,2873],\"valid\"],[[2874,2875],\"disallowed\"],[[2876,2883],\"valid\"],[[2884,2884],\"valid\"],[[2885,2886],\"disallowed\"],[[2887,2888],\"valid\"],[[2889,2890],\"disallowed\"],[[2891,2893],\"valid\"],[[2894,2901],\"disallowed\"],[[2902,2903],\"valid\"],[[2904,2907],\"disallowed\"],[[2908,2908],\"mapped\",[2849,2876]],[[2909,2909],\"mapped\",[2850,2876]],[[2910,2910],\"disallowed\"],[[2911,2913],\"valid\"],[[2914,2915],\"valid\"],[[2916,2917],\"disallowed\"],[[2918,2927],\"valid\"],[[2928,2928],\"valid\",[],\"NV8\"],[[2929,2929],\"valid\"],[[2930,2935],\"valid\",[],\"NV8\"],[[2936,2945],\"disallowed\"],[[2946,2947],\"valid\"],[[2948,2948],\"disallowed\"],[[2949,2954],\"valid\"],[[2955,2957],\"disallowed\"],[[2958,2960],\"valid\"],[[2961,2961],\"disallowed\"],[[2962,2965],\"valid\"],[[2966,2968],\"disallowed\"],[[2969,2970],\"valid\"],[[2971,2971],\"disallowed\"],[[2972,2972],\"valid\"],[[2973,2973],\"disallowed\"],[[2974,2975],\"valid\"],[[2976,2978],\"disallowed\"],[[2979,2980],\"valid\"],[[2981,2983],\"disallowed\"],[[2984,2986],\"valid\"],[[2987,2989],\"disallowed\"],[[2990,2997],\"valid\"],[[2998,2998],\"valid\"],[[2999,3001],\"valid\"],[[3002,3005],\"disallowed\"],[[3006,3010],\"valid\"],[[3011,3013],\"disallowed\"],[[3014,3016],\"valid\"],[[3017,3017],\"disallowed\"],[[3018,3021],\"valid\"],[[3022,3023],\"disallowed\"],[[3024,3024],\"valid\"],[[3025,3030],\"disallowed\"],[[3031,3031],\"valid\"],[[3032,3045],\"disallowed\"],[[3046,3046],\"valid\"],[[3047,3055],\"valid\"],[[3056,3058],\"valid\",[],\"NV8\"],[[3059,3066],\"valid\",[],\"NV8\"],[[3067,3071],\"disallowed\"],[[3072,3072],\"valid\"],[[3073,3075],\"valid\"],[[3076,3076],\"disallowed\"],[[3077,3084],\"valid\"],[[3085,3085],\"disallowed\"],[[3086,3088],\"valid\"],[[3089,3089],\"disallowed\"],[[3090,3112],\"valid\"],[[3113,3113],\"disallowed\"],[[3114,3123],\"valid\"],[[3124,3124],\"valid\"],[[3125,3129],\"valid\"],[[3130,3132],\"disallowed\"],[[3133,3133],\"valid\"],[[3134,3140],\"valid\"],[[3141,3141],\"disallowed\"],[[3142,3144],\"valid\"],[[3145,3145],\"disallowed\"],[[3146,3149],\"valid\"],[[3150,3156],\"disallowed\"],[[3157,3158],\"valid\"],[[3159,3159],\"disallowed\"],[[3160,3161],\"valid\"],[[3162,3162],\"valid\"],[[3163,3167],\"disallowed\"],[[3168,3169],\"valid\"],[[3170,3171],\"valid\"],[[3172,3173],\"disallowed\"],[[3174,3183],\"valid\"],[[3184,3191],\"disallowed\"],[[3192,3199],\"valid\",[],\"NV8\"],[[3200,3200],\"disallowed\"],[[3201,3201],\"valid\"],[[3202,3203],\"valid\"],[[3204,3204],\"disallowed\"],[[3205,3212],\"valid\"],[[3213,3213],\"disallowed\"],[[3214,3216],\"valid\"],[[3217,3217],\"disallowed\"],[[3218,3240],\"valid\"],[[3241,3241],\"disallowed\"],[[3242,3251],\"valid\"],[[3252,3252],\"disallowed\"],[[3253,3257],\"valid\"],[[3258,3259],\"disallowed\"],[[3260,3261],\"valid\"],[[3262,3268],\"valid\"],[[3269,3269],\"disallowed\"],[[3270,3272],\"valid\"],[[3273,3273],\"disallowed\"],[[3274,3277],\"valid\"],[[3278,3284],\"disallowed\"],[[3285,3286],\"valid\"],[[3287,3293],\"disallowed\"],[[3294,3294],\"valid\"],[[3295,3295],\"disallowed\"],[[3296,3297],\"valid\"],[[3298,3299],\"valid\"],[[3300,3301],\"disallowed\"],[[3302,3311],\"valid\"],[[3312,3312],\"disallowed\"],[[3313,3314],\"valid\"],[[3315,3328],\"disallowed\"],[[3329,3329],\"valid\"],[[3330,3331],\"valid\"],[[3332,3332],\"disallowed\"],[[3333,3340],\"valid\"],[[3341,3341],\"disallowed\"],[[3342,3344],\"valid\"],[[3345,3345],\"disallowed\"],[[3346,3368],\"valid\"],[[3369,3369],\"valid\"],[[3370,3385],\"valid\"],[[3386,3386],\"valid\"],[[3387,3388],\"disallowed\"],[[3389,3389],\"valid\"],[[3390,3395],\"valid\"],[[3396,3396],\"valid\"],[[3397,3397],\"disallowed\"],[[3398,3400],\"valid\"],[[3401,3401],\"disallowed\"],[[3402,3405],\"valid\"],[[3406,3406],\"valid\"],[[3407,3414],\"disallowed\"],[[3415,3415],\"valid\"],[[3416,3422],\"disallowed\"],[[3423,3423],\"valid\"],[[3424,3425],\"valid\"],[[3426,3427],\"valid\"],[[3428,3429],\"disallowed\"],[[3430,3439],\"valid\"],[[3440,3445],\"valid\",[],\"NV8\"],[[3446,3448],\"disallowed\"],[[3449,3449],\"valid\",[],\"NV8\"],[[3450,3455],\"valid\"],[[3456,3457],\"disallowed\"],[[3458,3459],\"valid\"],[[3460,3460],\"disallowed\"],[[3461,3478],\"valid\"],[[3479,3481],\"disallowed\"],[[3482,3505],\"valid\"],[[3506,3506],\"disallowed\"],[[3507,3515],\"valid\"],[[3516,3516],\"disallowed\"],[[3517,3517],\"valid\"],[[3518,3519],\"disallowed\"],[[3520,3526],\"valid\"],[[3527,3529],\"disallowed\"],[[3530,3530],\"valid\"],[[3531,3534],\"disallowed\"],[[3535,3540],\"valid\"],[[3541,3541],\"disallowed\"],[[3542,3542],\"valid\"],[[3543,3543],\"disallowed\"],[[3544,3551],\"valid\"],[[3552,3557],\"disallowed\"],[[3558,3567],\"valid\"],[[3568,3569],\"disallowed\"],[[3570,3571],\"valid\"],[[3572,3572],\"valid\",[],\"NV8\"],[[3573,3584],\"disallowed\"],[[3585,3634],\"valid\"],[[3635,3635],\"mapped\",[3661,3634]],[[3636,3642],\"valid\"],[[3643,3646],\"disallowed\"],[[3647,3647],\"valid\",[],\"NV8\"],[[3648,3662],\"valid\"],[[3663,3663],\"valid\",[],\"NV8\"],[[3664,3673],\"valid\"],[[3674,3675],\"valid\",[],\"NV8\"],[[3676,3712],\"disallowed\"],[[3713,3714],\"valid\"],[[3715,3715],\"disallowed\"],[[3716,3716],\"valid\"],[[3717,3718],\"disallowed\"],[[3719,3720],\"valid\"],[[3721,3721],\"disallowed\"],[[3722,3722],\"valid\"],[[3723,3724],\"disallowed\"],[[3725,3725],\"valid\"],[[3726,3731],\"disallowed\"],[[3732,3735],\"valid\"],[[3736,3736],\"disallowed\"],[[3737,3743],\"valid\"],[[3744,3744],\"disallowed\"],[[3745,3747],\"valid\"],[[3748,3748],\"disallowed\"],[[3749,3749],\"valid\"],[[3750,3750],\"disallowed\"],[[3751,3751],\"valid\"],[[3752,3753],\"disallowed\"],[[3754,3755],\"valid\"],[[3756,3756],\"disallowed\"],[[3757,3762],\"valid\"],[[3763,3763],\"mapped\",[3789,3762]],[[3764,3769],\"valid\"],[[3770,3770],\"disallowed\"],[[3771,3773],\"valid\"],[[3774,3775],\"disallowed\"],[[3776,3780],\"valid\"],[[3781,3781],\"disallowed\"],[[3782,3782],\"valid\"],[[3783,3783],\"disallowed\"],[[3784,3789],\"valid\"],[[3790,3791],\"disallowed\"],[[3792,3801],\"valid\"],[[3802,3803],\"disallowed\"],[[3804,3804],\"mapped\",[3755,3737]],[[3805,3805],\"mapped\",[3755,3745]],[[3806,3807],\"valid\"],[[3808,3839],\"disallowed\"],[[3840,3840],\"valid\"],[[3841,3850],\"valid\",[],\"NV8\"],[[3851,3851],\"valid\"],[[3852,3852],\"mapped\",[3851]],[[3853,3863],\"valid\",[],\"NV8\"],[[3864,3865],\"valid\"],[[3866,3871],\"valid\",[],\"NV8\"],[[3872,3881],\"valid\"],[[3882,3892],\"valid\",[],\"NV8\"],[[3893,3893],\"valid\"],[[3894,3894],\"valid\",[],\"NV8\"],[[3895,3895],\"valid\"],[[3896,3896],\"valid\",[],\"NV8\"],[[3897,3897],\"valid\"],[[3898,3901],\"valid\",[],\"NV8\"],[[3902,3906],\"valid\"],[[3907,3907],\"mapped\",[3906,4023]],[[3908,3911],\"valid\"],[[3912,3912],\"disallowed\"],[[3913,3916],\"valid\"],[[3917,3917],\"mapped\",[3916,4023]],[[3918,3921],\"valid\"],[[3922,3922],\"mapped\",[3921,4023]],[[3923,3926],\"valid\"],[[3927,3927],\"mapped\",[3926,4023]],[[3928,3931],\"valid\"],[[3932,3932],\"mapped\",[3931,4023]],[[3933,3944],\"valid\"],[[3945,3945],\"mapped\",[3904,4021]],[[3946,3946],\"valid\"],[[3947,3948],\"valid\"],[[3949,3952],\"disallowed\"],[[3953,3954],\"valid\"],[[3955,3955],\"mapped\",[3953,3954]],[[3956,3956],\"valid\"],[[3957,3957],\"mapped\",[3953,3956]],[[3958,3958],\"mapped\",[4018,3968]],[[3959,3959],\"mapped\",[4018,3953,3968]],[[3960,3960],\"mapped\",[4019,3968]],[[3961,3961],\"mapped\",[4019,3953,3968]],[[3962,3968],\"valid\"],[[3969,3969],\"mapped\",[3953,3968]],[[3970,3972],\"valid\"],[[3973,3973],\"valid\",[],\"NV8\"],[[3974,3979],\"valid\"],[[3980,3983],\"valid\"],[[3984,3986],\"valid\"],[[3987,3987],\"mapped\",[3986,4023]],[[3988,3989],\"valid\"],[[3990,3990],\"valid\"],[[3991,3991],\"valid\"],[[3992,3992],\"disallowed\"],[[3993,3996],\"valid\"],[[3997,3997],\"mapped\",[3996,4023]],[[3998,4001],\"valid\"],[[4002,4002],\"mapped\",[4001,4023]],[[4003,4006],\"valid\"],[[4007,4007],\"mapped\",[4006,4023]],[[4008,4011],\"valid\"],[[4012,4012],\"mapped\",[4011,4023]],[[4013,4013],\"valid\"],[[4014,4016],\"valid\"],[[4017,4023],\"valid\"],[[4024,4024],\"valid\"],[[4025,4025],\"mapped\",[3984,4021]],[[4026,4028],\"valid\"],[[4029,4029],\"disallowed\"],[[4030,4037],\"valid\",[],\"NV8\"],[[4038,4038],\"valid\"],[[4039,4044],\"valid\",[],\"NV8\"],[[4045,4045],\"disallowed\"],[[4046,4046],\"valid\",[],\"NV8\"],[[4047,4047],\"valid\",[],\"NV8\"],[[4048,4049],\"valid\",[],\"NV8\"],[[4050,4052],\"valid\",[],\"NV8\"],[[4053,4056],\"valid\",[],\"NV8\"],[[4057,4058],\"valid\",[],\"NV8\"],[[4059,4095],\"disallowed\"],[[4096,4129],\"valid\"],[[4130,4130],\"valid\"],[[4131,4135],\"valid\"],[[4136,4136],\"valid\"],[[4137,4138],\"valid\"],[[4139,4139],\"valid\"],[[4140,4146],\"valid\"],[[4147,4149],\"valid\"],[[4150,4153],\"valid\"],[[4154,4159],\"valid\"],[[4160,4169],\"valid\"],[[4170,4175],\"valid\",[],\"NV8\"],[[4176,4185],\"valid\"],[[4186,4249],\"valid\"],[[4250,4253],\"valid\"],[[4254,4255],\"valid\",[],\"NV8\"],[[4256,4293],\"disallowed\"],[[4294,4294],\"disallowed\"],[[4295,4295],\"mapped\",[11559]],[[4296,4300],\"disallowed\"],[[4301,4301],\"mapped\",[11565]],[[4302,4303],\"disallowed\"],[[4304,4342],\"valid\"],[[4343,4344],\"valid\"],[[4345,4346],\"valid\"],[[4347,4347],\"valid\",[],\"NV8\"],[[4348,4348],\"mapped\",[4316]],[[4349,4351],\"valid\"],[[4352,4441],\"valid\",[],\"NV8\"],[[4442,4446],\"valid\",[],\"NV8\"],[[4447,4448],\"disallowed\"],[[4449,4514],\"valid\",[],\"NV8\"],[[4515,4519],\"valid\",[],\"NV8\"],[[4520,4601],\"valid\",[],\"NV8\"],[[4602,4607],\"valid\",[],\"NV8\"],[[4608,4614],\"valid\"],[[4615,4615],\"valid\"],[[4616,4678],\"valid\"],[[4679,4679],\"valid\"],[[4680,4680],\"valid\"],[[4681,4681],\"disallowed\"],[[4682,4685],\"valid\"],[[4686,4687],\"disallowed\"],[[4688,4694],\"valid\"],[[4695,4695],\"disallowed\"],[[4696,4696],\"valid\"],[[4697,4697],\"disallowed\"],[[4698,4701],\"valid\"],[[4702,4703],\"disallowed\"],[[4704,4742],\"valid\"],[[4743,4743],\"valid\"],[[4744,4744],\"valid\"],[[4745,4745],\"disallowed\"],[[4746,4749],\"valid\"],[[4750,4751],\"disallowed\"],[[4752,4782],\"valid\"],[[4783,4783],\"valid\"],[[4784,4784],\"valid\"],[[4785,4785],\"disallowed\"],[[4786,4789],\"valid\"],[[4790,4791],\"disallowed\"],[[4792,4798],\"valid\"],[[4799,4799],\"disallowed\"],[[4800,4800],\"valid\"],[[4801,4801],\"disallowed\"],[[4802,4805],\"valid\"],[[4806,4807],\"disallowed\"],[[4808,4814],\"valid\"],[[4815,4815],\"valid\"],[[4816,4822],\"valid\"],[[4823,4823],\"disallowed\"],[[4824,4846],\"valid\"],[[4847,4847],\"valid\"],[[4848,4878],\"valid\"],[[4879,4879],\"valid\"],[[4880,4880],\"valid\"],[[4881,4881],\"disallowed\"],[[4882,4885],\"valid\"],[[4886,4887],\"disallowed\"],[[4888,4894],\"valid\"],[[4895,4895],\"valid\"],[[4896,4934],\"valid\"],[[4935,4935],\"valid\"],[[4936,4954],\"valid\"],[[4955,4956],\"disallowed\"],[[4957,4958],\"valid\"],[[4959,4959],\"valid\"],[[4960,4960],\"valid\",[],\"NV8\"],[[4961,4988],\"valid\",[],\"NV8\"],[[4989,4991],\"disallowed\"],[[4992,5007],\"valid\"],[[5008,5017],\"valid\",[],\"NV8\"],[[5018,5023],\"disallowed\"],[[5024,5108],\"valid\"],[[5109,5109],\"valid\"],[[5110,5111],\"disallowed\"],[[5112,5112],\"mapped\",[5104]],[[5113,5113],\"mapped\",[5105]],[[5114,5114],\"mapped\",[5106]],[[5115,5115],\"mapped\",[5107]],[[5116,5116],\"mapped\",[5108]],[[5117,5117],\"mapped\",[5109]],[[5118,5119],\"disallowed\"],[[5120,5120],\"valid\",[],\"NV8\"],[[5121,5740],\"valid\"],[[5741,5742],\"valid\",[],\"NV8\"],[[5743,5750],\"valid\"],[[5751,5759],\"valid\"],[[5760,5760],\"disallowed\"],[[5761,5786],\"valid\"],[[5787,5788],\"valid\",[],\"NV8\"],[[5789,5791],\"disallowed\"],[[5792,5866],\"valid\"],[[5867,5872],\"valid\",[],\"NV8\"],[[5873,5880],\"valid\"],[[5881,5887],\"disallowed\"],[[5888,5900],\"valid\"],[[5901,5901],\"disallowed\"],[[5902,5908],\"valid\"],[[5909,5919],\"disallowed\"],[[5920,5940],\"valid\"],[[5941,5942],\"valid\",[],\"NV8\"],[[5943,5951],\"disallowed\"],[[5952,5971],\"valid\"],[[5972,5983],\"disallowed\"],[[5984,5996],\"valid\"],[[5997,5997],\"disallowed\"],[[5998,6000],\"valid\"],[[6001,6001],\"disallowed\"],[[6002,6003],\"valid\"],[[6004,6015],\"disallowed\"],[[6016,6067],\"valid\"],[[6068,6069],\"disallowed\"],[[6070,6099],\"valid\"],[[6100,6102],\"valid\",[],\"NV8\"],[[6103,6103],\"valid\"],[[6104,6107],\"valid\",[],\"NV8\"],[[6108,6108],\"valid\"],[[6109,6109],\"valid\"],[[6110,6111],\"disallowed\"],[[6112,6121],\"valid\"],[[6122,6127],\"disallowed\"],[[6128,6137],\"valid\",[],\"NV8\"],[[6138,6143],\"disallowed\"],[[6144,6149],\"valid\",[],\"NV8\"],[[6150,6150],\"disallowed\"],[[6151,6154],\"valid\",[],\"NV8\"],[[6155,6157],\"ignored\"],[[6158,6158],\"disallowed\"],[[6159,6159],\"disallowed\"],[[6160,6169],\"valid\"],[[6170,6175],\"disallowed\"],[[6176,6263],\"valid\"],[[6264,6271],\"disallowed\"],[[6272,6313],\"valid\"],[[6314,6314],\"valid\"],[[6315,6319],\"disallowed\"],[[6320,6389],\"valid\"],[[6390,6399],\"disallowed\"],[[6400,6428],\"valid\"],[[6429,6430],\"valid\"],[[6431,6431],\"disallowed\"],[[6432,6443],\"valid\"],[[6444,6447],\"disallowed\"],[[6448,6459],\"valid\"],[[6460,6463],\"disallowed\"],[[6464,6464],\"valid\",[],\"NV8\"],[[6465,6467],\"disallowed\"],[[6468,6469],\"valid\",[],\"NV8\"],[[6470,6509],\"valid\"],[[6510,6511],\"disallowed\"],[[6512,6516],\"valid\"],[[6517,6527],\"disallowed\"],[[6528,6569],\"valid\"],[[6570,6571],\"valid\"],[[6572,6575],\"disallowed\"],[[6576,6601],\"valid\"],[[6602,6607],\"disallowed\"],[[6608,6617],\"valid\"],[[6618,6618],\"valid\",[],\"XV8\"],[[6619,6621],\"disallowed\"],[[6622,6623],\"valid\",[],\"NV8\"],[[6624,6655],\"valid\",[],\"NV8\"],[[6656,6683],\"valid\"],[[6684,6685],\"disallowed\"],[[6686,6687],\"valid\",[],\"NV8\"],[[6688,6750],\"valid\"],[[6751,6751],\"disallowed\"],[[6752,6780],\"valid\"],[[6781,6782],\"disallowed\"],[[6783,6793],\"valid\"],[[6794,6799],\"disallowed\"],[[6800,6809],\"valid\"],[[6810,6815],\"disallowed\"],[[6816,6822],\"valid\",[],\"NV8\"],[[6823,6823],\"valid\"],[[6824,6829],\"valid\",[],\"NV8\"],[[6830,6831],\"disallowed\"],[[6832,6845],\"valid\"],[[6846,6846],\"valid\",[],\"NV8\"],[[6847,6911],\"disallowed\"],[[6912,6987],\"valid\"],[[6988,6991],\"disallowed\"],[[6992,7001],\"valid\"],[[7002,7018],\"valid\",[],\"NV8\"],[[7019,7027],\"valid\"],[[7028,7036],\"valid\",[],\"NV8\"],[[7037,7039],\"disallowed\"],[[7040,7082],\"valid\"],[[7083,7085],\"valid\"],[[7086,7097],\"valid\"],[[7098,7103],\"valid\"],[[7104,7155],\"valid\"],[[7156,7163],\"disallowed\"],[[7164,7167],\"valid\",[],\"NV8\"],[[7168,7223],\"valid\"],[[7224,7226],\"disallowed\"],[[7227,7231],\"valid\",[],\"NV8\"],[[7232,7241],\"valid\"],[[7242,7244],\"disallowed\"],[[7245,7293],\"valid\"],[[7294,7295],\"valid\",[],\"NV8\"],[[7296,7359],\"disallowed\"],[[7360,7367],\"valid\",[],\"NV8\"],[[7368,7375],\"disallowed\"],[[7376,7378],\"valid\"],[[7379,7379],\"valid\",[],\"NV8\"],[[7380,7410],\"valid\"],[[7411,7414],\"valid\"],[[7415,7415],\"disallowed\"],[[7416,7417],\"valid\"],[[7418,7423],\"disallowed\"],[[7424,7467],\"valid\"],[[7468,7468],\"mapped\",[97]],[[7469,7469],\"mapped\",[230]],[[7470,7470],\"mapped\",[98]],[[7471,7471],\"valid\"],[[7472,7472],\"mapped\",[100]],[[7473,7473],\"mapped\",[101]],[[7474,7474],\"mapped\",[477]],[[7475,7475],\"mapped\",[103]],[[7476,7476],\"mapped\",[104]],[[7477,7477],\"mapped\",[105]],[[7478,7478],\"mapped\",[106]],[[7479,7479],\"mapped\",[107]],[[7480,7480],\"mapped\",[108]],[[7481,7481],\"mapped\",[109]],[[7482,7482],\"mapped\",[110]],[[7483,7483],\"valid\"],[[7484,7484],\"mapped\",[111]],[[7485,7485],\"mapped\",[547]],[[7486,7486],\"mapped\",[112]],[[7487,7487],\"mapped\",[114]],[[7488,7488],\"mapped\",[116]],[[7489,7489],\"mapped\",[117]],[[7490,7490],\"mapped\",[119]],[[7491,7491],\"mapped\",[97]],[[7492,7492],\"mapped\",[592]],[[7493,7493],\"mapped\",[593]],[[7494,7494],\"mapped\",[7426]],[[7495,7495],\"mapped\",[98]],[[7496,7496],\"mapped\",[100]],[[7497,7497],\"mapped\",[101]],[[7498,7498],\"mapped\",[601]],[[7499,7499],\"mapped\",[603]],[[7500,7500],\"mapped\",[604]],[[7501,7501],\"mapped\",[103]],[[7502,7502],\"valid\"],[[7503,7503],\"mapped\",[107]],[[7504,7504],\"mapped\",[109]],[[7505,7505],\"mapped\",[331]],[[7506,7506],\"mapped\",[111]],[[7507,7507],\"mapped\",[596]],[[7508,7508],\"mapped\",[7446]],[[7509,7509],\"mapped\",[7447]],[[7510,7510],\"mapped\",[112]],[[7511,7511],\"mapped\",[116]],[[7512,7512],\"mapped\",[117]],[[7513,7513],\"mapped\",[7453]],[[7514,7514],\"mapped\",[623]],[[7515,7515],\"mapped\",[118]],[[7516,7516],\"mapped\",[7461]],[[7517,7517],\"mapped\",[946]],[[7518,7518],\"mapped\",[947]],[[7519,7519],\"mapped\",[948]],[[7520,7520],\"mapped\",[966]],[[7521,7521],\"mapped\",[967]],[[7522,7522],\"mapped\",[105]],[[7523,7523],\"mapped\",[114]],[[7524,7524],\"mapped\",[117]],[[7525,7525],\"mapped\",[118]],[[7526,7526],\"mapped\",[946]],[[7527,7527],\"mapped\",[947]],[[7528,7528],\"mapped\",[961]],[[7529,7529],\"mapped\",[966]],[[7530,7530],\"mapped\",[967]],[[7531,7531],\"valid\"],[[7532,7543],\"valid\"],[[7544,7544],\"mapped\",[1085]],[[7545,7578],\"valid\"],[[7579,7579],\"mapped\",[594]],[[7580,7580],\"mapped\",[99]],[[7581,7581],\"mapped\",[597]],[[7582,7582],\"mapped\",[240]],[[7583,7583],\"mapped\",[604]],[[7584,7584],\"mapped\",[102]],[[7585,7585],\"mapped\",[607]],[[7586,7586],\"mapped\",[609]],[[7587,7587],\"mapped\",[613]],[[7588,7588],\"mapped\",[616]],[[7589,7589],\"mapped\",[617]],[[7590,7590],\"mapped\",[618]],[[7591,7591],\"mapped\",[7547]],[[7592,7592],\"mapped\",[669]],[[7593,7593],\"mapped\",[621]],[[7594,7594],\"mapped\",[7557]],[[7595,7595],\"mapped\",[671]],[[7596,7596],\"mapped\",[625]],[[7597,7597],\"mapped\",[624]],[[7598,7598],\"mapped\",[626]],[[7599,7599],\"mapped\",[627]],[[7600,7600],\"mapped\",[628]],[[7601,7601],\"mapped\",[629]],[[7602,7602],\"mapped\",[632]],[[7603,7603],\"mapped\",[642]],[[7604,7604],\"mapped\",[643]],[[7605,7605],\"mapped\",[427]],[[7606,7606],\"mapped\",[649]],[[7607,7607],\"mapped\",[650]],[[7608,7608],\"mapped\",[7452]],[[7609,7609],\"mapped\",[651]],[[7610,7610],\"mapped\",[652]],[[7611,7611],\"mapped\",[122]],[[7612,7612],\"mapped\",[656]],[[7613,7613],\"mapped\",[657]],[[7614,7614],\"mapped\",[658]],[[7615,7615],\"mapped\",[952]],[[7616,7619],\"valid\"],[[7620,7626],\"valid\"],[[7627,7654],\"valid\"],[[7655,7669],\"valid\"],[[7670,7675],\"disallowed\"],[[7676,7676],\"valid\"],[[7677,7677],\"valid\"],[[7678,7679],\"valid\"],[[7680,7680],\"mapped\",[7681]],[[7681,7681],\"valid\"],[[7682,7682],\"mapped\",[7683]],[[7683,7683],\"valid\"],[[7684,7684],\"mapped\",[7685]],[[7685,7685],\"valid\"],[[7686,7686],\"mapped\",[7687]],[[7687,7687],\"valid\"],[[7688,7688],\"mapped\",[7689]],[[7689,7689],\"valid\"],[[7690,7690],\"mapped\",[7691]],[[7691,7691],\"valid\"],[[7692,7692],\"mapped\",[7693]],[[7693,7693],\"valid\"],[[7694,7694],\"mapped\",[7695]],[[7695,7695],\"valid\"],[[7696,7696],\"mapped\",[7697]],[[7697,7697],\"valid\"],[[7698,7698],\"mapped\",[7699]],[[7699,7699],\"valid\"],[[7700,7700],\"mapped\",[7701]],[[7701,7701],\"valid\"],[[7702,7702],\"mapped\",[7703]],[[7703,7703],\"valid\"],[[7704,7704],\"mapped\",[7705]],[[7705,7705],\"valid\"],[[7706,7706],\"mapped\",[7707]],[[7707,7707],\"valid\"],[[7708,7708],\"mapped\",[7709]],[[7709,7709],\"valid\"],[[7710,7710],\"mapped\",[7711]],[[7711,7711],\"valid\"],[[7712,7712],\"mapped\",[7713]],[[7713,7713],\"valid\"],[[7714,7714],\"mapped\",[7715]],[[7715,7715],\"valid\"],[[7716,7716],\"mapped\",[7717]],[[7717,7717],\"valid\"],[[7718,7718],\"mapped\",[7719]],[[7719,7719],\"valid\"],[[7720,7720],\"mapped\",[7721]],[[7721,7721],\"valid\"],[[7722,7722],\"mapped\",[7723]],[[7723,7723],\"valid\"],[[7724,7724],\"mapped\",[7725]],[[7725,7725],\"valid\"],[[7726,7726],\"mapped\",[7727]],[[7727,7727],\"valid\"],[[7728,7728],\"mapped\",[7729]],[[7729,7729],\"valid\"],[[7730,7730],\"mapped\",[7731]],[[7731,7731],\"valid\"],[[7732,7732],\"mapped\",[7733]],[[7733,7733],\"valid\"],[[7734,7734],\"mapped\",[7735]],[[7735,7735],\"valid\"],[[7736,7736],\"mapped\",[7737]],[[7737,7737],\"valid\"],[[7738,7738],\"mapped\",[7739]],[[7739,7739],\"valid\"],[[7740,7740],\"mapped\",[7741]],[[7741,7741],\"valid\"],[[7742,7742],\"mapped\",[7743]],[[7743,7743],\"valid\"],[[7744,7744],\"mapped\",[7745]],[[7745,7745],\"valid\"],[[7746,7746],\"mapped\",[7747]],[[7747,7747],\"valid\"],[[7748,7748],\"mapped\",[7749]],[[7749,7749],\"valid\"],[[7750,7750],\"mapped\",[7751]],[[7751,7751],\"valid\"],[[7752,7752],\"mapped\",[7753]],[[7753,7753],\"valid\"],[[7754,7754],\"mapped\",[7755]],[[7755,7755],\"valid\"],[[7756,7756],\"mapped\",[7757]],[[7757,7757],\"valid\"],[[7758,7758],\"mapped\",[7759]],[[7759,7759],\"valid\"],[[7760,7760],\"mapped\",[7761]],[[7761,7761],\"valid\"],[[7762,7762],\"mapped\",[7763]],[[7763,7763],\"valid\"],[[7764,7764],\"mapped\",[7765]],[[7765,7765],\"valid\"],[[7766,7766],\"mapped\",[7767]],[[7767,7767],\"valid\"],[[7768,7768],\"mapped\",[7769]],[[7769,7769],\"valid\"],[[7770,7770],\"mapped\",[7771]],[[7771,7771],\"valid\"],[[7772,7772],\"mapped\",[7773]],[[7773,7773],\"valid\"],[[7774,7774],\"mapped\",[7775]],[[7775,7775],\"valid\"],[[7776,7776],\"mapped\",[7777]],[[7777,7777],\"valid\"],[[7778,7778],\"mapped\",[7779]],[[7779,7779],\"valid\"],[[7780,7780],\"mapped\",[7781]],[[7781,7781],\"valid\"],[[7782,7782],\"mapped\",[7783]],[[7783,7783],\"valid\"],[[7784,7784],\"mapped\",[7785]],[[7785,7785],\"valid\"],[[7786,7786],\"mapped\",[7787]],[[7787,7787],\"valid\"],[[7788,7788],\"mapped\",[7789]],[[7789,7789],\"valid\"],[[7790,7790],\"mapped\",[7791]],[[7791,7791],\"valid\"],[[7792,7792],\"mapped\",[7793]],[[7793,7793],\"valid\"],[[7794,7794],\"mapped\",[7795]],[[7795,7795],\"valid\"],[[7796,7796],\"mapped\",[7797]],[[7797,7797],\"valid\"],[[7798,7798],\"mapped\",[7799]],[[7799,7799],\"valid\"],[[7800,7800],\"mapped\",[7801]],[[7801,7801],\"valid\"],[[7802,7802],\"mapped\",[7803]],[[7803,7803],\"valid\"],[[7804,7804],\"mapped\",[7805]],[[7805,7805],\"valid\"],[[7806,7806],\"mapped\",[7807]],[[7807,7807],\"valid\"],[[7808,7808],\"mapped\",[7809]],[[7809,7809],\"valid\"],[[7810,7810],\"mapped\",[7811]],[[7811,7811],\"valid\"],[[7812,7812],\"mapped\",[7813]],[[7813,7813],\"valid\"],[[7814,7814],\"mapped\",[7815]],[[7815,7815],\"valid\"],[[7816,7816],\"mapped\",[7817]],[[7817,7817],\"valid\"],[[7818,7818],\"mapped\",[7819]],[[7819,7819],\"valid\"],[[7820,7820],\"mapped\",[7821]],[[7821,7821],\"valid\"],[[7822,7822],\"mapped\",[7823]],[[7823,7823],\"valid\"],[[7824,7824],\"mapped\",[7825]],[[7825,7825],\"valid\"],[[7826,7826],\"mapped\",[7827]],[[7827,7827],\"valid\"],[[7828,7828],\"mapped\",[7829]],[[7829,7833],\"valid\"],[[7834,7834],\"mapped\",[97,702]],[[7835,7835],\"mapped\",[7777]],[[7836,7837],\"valid\"],[[7838,7838],\"mapped\",[115,115]],[[7839,7839],\"valid\"],[[7840,7840],\"mapped\",[7841]],[[7841,7841],\"valid\"],[[7842,7842],\"mapped\",[7843]],[[7843,7843],\"valid\"],[[7844,7844],\"mapped\",[7845]],[[7845,7845],\"valid\"],[[7846,7846],\"mapped\",[7847]],[[7847,7847],\"valid\"],[[7848,7848],\"mapped\",[7849]],[[7849,7849],\"valid\"],[[7850,7850],\"mapped\",[7851]],[[7851,7851],\"valid\"],[[7852,7852],\"mapped\",[7853]],[[7853,7853],\"valid\"],[[7854,7854],\"mapped\",[7855]],[[7855,7855],\"valid\"],[[7856,7856],\"mapped\",[7857]],[[7857,7857],\"valid\"],[[7858,7858],\"mapped\",[7859]],[[7859,7859],\"valid\"],[[7860,7860],\"mapped\",[7861]],[[7861,7861],\"valid\"],[[7862,7862],\"mapped\",[7863]],[[7863,7863],\"valid\"],[[7864,7864],\"mapped\",[7865]],[[7865,7865],\"valid\"],[[7866,7866],\"mapped\",[7867]],[[7867,7867],\"valid\"],[[7868,7868],\"mapped\",[7869]],[[7869,7869],\"valid\"],[[7870,7870],\"mapped\",[7871]],[[7871,7871],\"valid\"],[[7872,7872],\"mapped\",[7873]],[[7873,7873],\"valid\"],[[7874,7874],\"mapped\",[7875]],[[7875,7875],\"valid\"],[[7876,7876],\"mapped\",[7877]],[[7877,7877],\"valid\"],[[7878,7878],\"mapped\",[7879]],[[7879,7879],\"valid\"],[[7880,7880],\"mapped\",[7881]],[[7881,7881],\"valid\"],[[7882,7882],\"mapped\",[7883]],[[7883,7883],\"valid\"],[[7884,7884],\"mapped\",[7885]],[[7885,7885],\"valid\"],[[7886,7886],\"mapped\",[7887]],[[7887,7887],\"valid\"],[[7888,7888],\"mapped\",[7889]],[[7889,7889],\"valid\"],[[7890,7890],\"mapped\",[7891]],[[7891,7891],\"valid\"],[[7892,7892],\"mapped\",[7893]],[[7893,7893],\"valid\"],[[7894,7894],\"mapped\",[7895]],[[7895,7895],\"valid\"],[[7896,7896],\"mapped\",[7897]],[[7897,7897],\"valid\"],[[7898,7898],\"mapped\",[7899]],[[7899,7899],\"valid\"],[[7900,7900],\"mapped\",[7901]],[[7901,7901],\"valid\"],[[7902,7902],\"mapped\",[7903]],[[7903,7903],\"valid\"],[[7904,7904],\"mapped\",[7905]],[[7905,7905],\"valid\"],[[7906,7906],\"mapped\",[7907]],[[7907,7907],\"valid\"],[[7908,7908],\"mapped\",[7909]],[[7909,7909],\"valid\"],[[7910,7910],\"mapped\",[7911]],[[7911,7911],\"valid\"],[[7912,7912],\"mapped\",[7913]],[[7913,7913],\"valid\"],[[7914,7914],\"mapped\",[7915]],[[7915,7915],\"valid\"],[[7916,7916],\"mapped\",[7917]],[[7917,7917],\"valid\"],[[7918,7918],\"mapped\",[7919]],[[7919,7919],\"valid\"],[[7920,7920],\"mapped\",[7921]],[[7921,7921],\"valid\"],[[7922,7922],\"mapped\",[7923]],[[7923,7923],\"valid\"],[[7924,7924],\"mapped\",[7925]],[[7925,7925],\"valid\"],[[7926,7926],\"mapped\",[7927]],[[7927,7927],\"valid\"],[[7928,7928],\"mapped\",[7929]],[[7929,7929],\"valid\"],[[7930,7930],\"mapped\",[7931]],[[7931,7931],\"valid\"],[[7932,7932],\"mapped\",[7933]],[[7933,7933],\"valid\"],[[7934,7934],\"mapped\",[7935]],[[7935,7935],\"valid\"],[[7936,7943],\"valid\"],[[7944,7944],\"mapped\",[7936]],[[7945,7945],\"mapped\",[7937]],[[7946,7946],\"mapped\",[7938]],[[7947,7947],\"mapped\",[7939]],[[7948,7948],\"mapped\",[7940]],[[7949,7949],\"mapped\",[7941]],[[7950,7950],\"mapped\",[7942]],[[7951,7951],\"mapped\",[7943]],[[7952,7957],\"valid\"],[[7958,7959],\"disallowed\"],[[7960,7960],\"mapped\",[7952]],[[7961,7961],\"mapped\",[7953]],[[7962,7962],\"mapped\",[7954]],[[7963,7963],\"mapped\",[7955]],[[7964,7964],\"mapped\",[7956]],[[7965,7965],\"mapped\",[7957]],[[7966,7967],\"disallowed\"],[[7968,7975],\"valid\"],[[7976,7976],\"mapped\",[7968]],[[7977,7977],\"mapped\",[7969]],[[7978,7978],\"mapped\",[7970]],[[7979,7979],\"mapped\",[7971]],[[7980,7980],\"mapped\",[7972]],[[7981,7981],\"mapped\",[7973]],[[7982,7982],\"mapped\",[7974]],[[7983,7983],\"mapped\",[7975]],[[7984,7991],\"valid\"],[[7992,7992],\"mapped\",[7984]],[[7993,7993],\"mapped\",[7985]],[[7994,7994],\"mapped\",[7986]],[[7995,7995],\"mapped\",[7987]],[[7996,7996],\"mapped\",[7988]],[[7997,7997],\"mapped\",[7989]],[[7998,7998],\"mapped\",[7990]],[[7999,7999],\"mapped\",[7991]],[[8000,8005],\"valid\"],[[8006,8007],\"disallowed\"],[[8008,8008],\"mapped\",[8000]],[[8009,8009],\"mapped\",[8001]],[[8010,8010],\"mapped\",[8002]],[[8011,8011],\"mapped\",[8003]],[[8012,8012],\"mapped\",[8004]],[[8013,8013],\"mapped\",[8005]],[[8014,8015],\"disallowed\"],[[8016,8023],\"valid\"],[[8024,8024],\"disallowed\"],[[8025,8025],\"mapped\",[8017]],[[8026,8026],\"disallowed\"],[[8027,8027],\"mapped\",[8019]],[[8028,8028],\"disallowed\"],[[8029,8029],\"mapped\",[8021]],[[8030,8030],\"disallowed\"],[[8031,8031],\"mapped\",[8023]],[[8032,8039],\"valid\"],[[8040,8040],\"mapped\",[8032]],[[8041,8041],\"mapped\",[8033]],[[8042,8042],\"mapped\",[8034]],[[8043,8043],\"mapped\",[8035]],[[8044,8044],\"mapped\",[8036]],[[8045,8045],\"mapped\",[8037]],[[8046,8046],\"mapped\",[8038]],[[8047,8047],\"mapped\",[8039]],[[8048,8048],\"valid\"],[[8049,8049],\"mapped\",[940]],[[8050,8050],\"valid\"],[[8051,8051],\"mapped\",[941]],[[8052,8052],\"valid\"],[[8053,8053],\"mapped\",[942]],[[8054,8054],\"valid\"],[[8055,8055],\"mapped\",[943]],[[8056,8056],\"valid\"],[[8057,8057],\"mapped\",[972]],[[8058,8058],\"valid\"],[[8059,8059],\"mapped\",[973]],[[8060,8060],\"valid\"],[[8061,8061],\"mapped\",[974]],[[8062,8063],\"disallowed\"],[[8064,8064],\"mapped\",[7936,953]],[[8065,8065],\"mapped\",[7937,953]],[[8066,8066],\"mapped\",[7938,953]],[[8067,8067],\"mapped\",[7939,953]],[[8068,8068],\"mapped\",[7940,953]],[[8069,8069],\"mapped\",[7941,953]],[[8070,8070],\"mapped\",[7942,953]],[[8071,8071],\"mapped\",[7943,953]],[[8072,8072],\"mapped\",[7936,953]],[[8073,8073],\"mapped\",[7937,953]],[[8074,8074],\"mapped\",[7938,953]],[[8075,8075],\"mapped\",[7939,953]],[[8076,8076],\"mapped\",[7940,953]],[[8077,8077],\"mapped\",[7941,953]],[[8078,8078],\"mapped\",[7942,953]],[[8079,8079],\"mapped\",[7943,953]],[[8080,8080],\"mapped\",[7968,953]],[[8081,8081],\"mapped\",[7969,953]],[[8082,8082],\"mapped\",[7970,953]],[[8083,8083],\"mapped\",[7971,953]],[[8084,8084],\"mapped\",[7972,953]],[[8085,8085],\"mapped\",[7973,953]],[[8086,8086],\"mapped\",[7974,953]],[[8087,8087],\"mapped\",[7975,953]],[[8088,8088],\"mapped\",[7968,953]],[[8089,8089],\"mapped\",[7969,953]],[[8090,8090],\"mapped\",[7970,953]],[[8091,8091],\"mapped\",[7971,953]],[[8092,8092],\"mapped\",[7972,953]],[[8093,8093],\"mapped\",[7973,953]],[[8094,8094],\"mapped\",[7974,953]],[[8095,8095],\"mapped\",[7975,953]],[[8096,8096],\"mapped\",[8032,953]],[[8097,8097],\"mapped\",[8033,953]],[[8098,8098],\"mapped\",[8034,953]],[[8099,8099],\"mapped\",[8035,953]],[[8100,8100],\"mapped\",[8036,953]],[[8101,8101],\"mapped\",[8037,953]],[[8102,8102],\"mapped\",[8038,953]],[[8103,8103],\"mapped\",[8039,953]],[[8104,8104],\"mapped\",[8032,953]],[[8105,8105],\"mapped\",[8033,953]],[[8106,8106],\"mapped\",[8034,953]],[[8107,8107],\"mapped\",[8035,953]],[[8108,8108],\"mapped\",[8036,953]],[[8109,8109],\"mapped\",[8037,953]],[[8110,8110],\"mapped\",[8038,953]],[[8111,8111],\"mapped\",[8039,953]],[[8112,8113],\"valid\"],[[8114,8114],\"mapped\",[8048,953]],[[8115,8115],\"mapped\",[945,953]],[[8116,8116],\"mapped\",[940,953]],[[8117,8117],\"disallowed\"],[[8118,8118],\"valid\"],[[8119,8119],\"mapped\",[8118,953]],[[8120,8120],\"mapped\",[8112]],[[8121,8121],\"mapped\",[8113]],[[8122,8122],\"mapped\",[8048]],[[8123,8123],\"mapped\",[940]],[[8124,8124],\"mapped\",[945,953]],[[8125,8125],\"disallowed_STD3_mapped\",[32,787]],[[8126,8126],\"mapped\",[953]],[[8127,8127],\"disallowed_STD3_mapped\",[32,787]],[[8128,8128],\"disallowed_STD3_mapped\",[32,834]],[[8129,8129],\"disallowed_STD3_mapped\",[32,776,834]],[[8130,8130],\"mapped\",[8052,953]],[[8131,8131],\"mapped\",[951,953]],[[8132,8132],\"mapped\",[942,953]],[[8133,8133],\"disallowed\"],[[8134,8134],\"valid\"],[[8135,8135],\"mapped\",[8134,953]],[[8136,8136],\"mapped\",[8050]],[[8137,8137],\"mapped\",[941]],[[8138,8138],\"mapped\",[8052]],[[8139,8139],\"mapped\",[942]],[[8140,8140],\"mapped\",[951,953]],[[8141,8141],\"disallowed_STD3_mapped\",[32,787,768]],[[8142,8142],\"disallowed_STD3_mapped\",[32,787,769]],[[8143,8143],\"disallowed_STD3_mapped\",[32,787,834]],[[8144,8146],\"valid\"],[[8147,8147],\"mapped\",[912]],[[8148,8149],\"disallowed\"],[[8150,8151],\"valid\"],[[8152,8152],\"mapped\",[8144]],[[8153,8153],\"mapped\",[8145]],[[8154,8154],\"mapped\",[8054]],[[8155,8155],\"mapped\",[943]],[[8156,8156],\"disallowed\"],[[8157,8157],\"disallowed_STD3_mapped\",[32,788,768]],[[8158,8158],\"disallowed_STD3_mapped\",[32,788,769]],[[8159,8159],\"disallowed_STD3_mapped\",[32,788,834]],[[8160,8162],\"valid\"],[[8163,8163],\"mapped\",[944]],[[8164,8167],\"valid\"],[[8168,8168],\"mapped\",[8160]],[[8169,8169],\"mapped\",[8161]],[[8170,8170],\"mapped\",[8058]],[[8171,8171],\"mapped\",[973]],[[8172,8172],\"mapped\",[8165]],[[8173,8173],\"disallowed_STD3_mapped\",[32,776,768]],[[8174,8174],\"disallowed_STD3_mapped\",[32,776,769]],[[8175,8175],\"disallowed_STD3_mapped\",[96]],[[8176,8177],\"disallowed\"],[[8178,8178],\"mapped\",[8060,953]],[[8179,8179],\"mapped\",[969,953]],[[8180,8180],\"mapped\",[974,953]],[[8181,8181],\"disallowed\"],[[8182,8182],\"valid\"],[[8183,8183],\"mapped\",[8182,953]],[[8184,8184],\"mapped\",[8056]],[[8185,8185],\"mapped\",[972]],[[8186,8186],\"mapped\",[8060]],[[8187,8187],\"mapped\",[974]],[[8188,8188],\"mapped\",[969,953]],[[8189,8189],\"disallowed_STD3_mapped\",[32,769]],[[8190,8190],\"disallowed_STD3_mapped\",[32,788]],[[8191,8191],\"disallowed\"],[[8192,8202],\"disallowed_STD3_mapped\",[32]],[[8203,8203],\"ignored\"],[[8204,8205],\"deviation\",[]],[[8206,8207],\"disallowed\"],[[8208,8208],\"valid\",[],\"NV8\"],[[8209,8209],\"mapped\",[8208]],[[8210,8214],\"valid\",[],\"NV8\"],[[8215,8215],\"disallowed_STD3_mapped\",[32,819]],[[8216,8227],\"valid\",[],\"NV8\"],[[8228,8230],\"disallowed\"],[[8231,8231],\"valid\",[],\"NV8\"],[[8232,8238],\"disallowed\"],[[8239,8239],\"disallowed_STD3_mapped\",[32]],[[8240,8242],\"valid\",[],\"NV8\"],[[8243,8243],\"mapped\",[8242,8242]],[[8244,8244],\"mapped\",[8242,8242,8242]],[[8245,8245],\"valid\",[],\"NV8\"],[[8246,8246],\"mapped\",[8245,8245]],[[8247,8247],\"mapped\",[8245,8245,8245]],[[8248,8251],\"valid\",[],\"NV8\"],[[8252,8252],\"disallowed_STD3_mapped\",[33,33]],[[8253,8253],\"valid\",[],\"NV8\"],[[8254,8254],\"disallowed_STD3_mapped\",[32,773]],[[8255,8262],\"valid\",[],\"NV8\"],[[8263,8263],\"disallowed_STD3_mapped\",[63,63]],[[8264,8264],\"disallowed_STD3_mapped\",[63,33]],[[8265,8265],\"disallowed_STD3_mapped\",[33,63]],[[8266,8269],\"valid\",[],\"NV8\"],[[8270,8274],\"valid\",[],\"NV8\"],[[8275,8276],\"valid\",[],\"NV8\"],[[8277,8278],\"valid\",[],\"NV8\"],[[8279,8279],\"mapped\",[8242,8242,8242,8242]],[[8280,8286],\"valid\",[],\"NV8\"],[[8287,8287],\"disallowed_STD3_mapped\",[32]],[[8288,8288],\"ignored\"],[[8289,8291],\"disallowed\"],[[8292,8292],\"ignored\"],[[8293,8293],\"disallowed\"],[[8294,8297],\"disallowed\"],[[8298,8303],\"disallowed\"],[[8304,8304],\"mapped\",[48]],[[8305,8305],\"mapped\",[105]],[[8306,8307],\"disallowed\"],[[8308,8308],\"mapped\",[52]],[[8309,8309],\"mapped\",[53]],[[8310,8310],\"mapped\",[54]],[[8311,8311],\"mapped\",[55]],[[8312,8312],\"mapped\",[56]],[[8313,8313],\"mapped\",[57]],[[8314,8314],\"disallowed_STD3_mapped\",[43]],[[8315,8315],\"mapped\",[8722]],[[8316,8316],\"disallowed_STD3_mapped\",[61]],[[8317,8317],\"disallowed_STD3_mapped\",[40]],[[8318,8318],\"disallowed_STD3_mapped\",[41]],[[8319,8319],\"mapped\",[110]],[[8320,8320],\"mapped\",[48]],[[8321,8321],\"mapped\",[49]],[[8322,8322],\"mapped\",[50]],[[8323,8323],\"mapped\",[51]],[[8324,8324],\"mapped\",[52]],[[8325,8325],\"mapped\",[53]],[[8326,8326],\"mapped\",[54]],[[8327,8327],\"mapped\",[55]],[[8328,8328],\"mapped\",[56]],[[8329,8329],\"mapped\",[57]],[[8330,8330],\"disallowed_STD3_mapped\",[43]],[[8331,8331],\"mapped\",[8722]],[[8332,8332],\"disallowed_STD3_mapped\",[61]],[[8333,8333],\"disallowed_STD3_mapped\",[40]],[[8334,8334],\"disallowed_STD3_mapped\",[41]],[[8335,8335],\"disallowed\"],[[8336,8336],\"mapped\",[97]],[[8337,8337],\"mapped\",[101]],[[8338,8338],\"mapped\",[111]],[[8339,8339],\"mapped\",[120]],[[8340,8340],\"mapped\",[601]],[[8341,8341],\"mapped\",[104]],[[8342,8342],\"mapped\",[107]],[[8343,8343],\"mapped\",[108]],[[8344,8344],\"mapped\",[109]],[[8345,8345],\"mapped\",[110]],[[8346,8346],\"mapped\",[112]],[[8347,8347],\"mapped\",[115]],[[8348,8348],\"mapped\",[116]],[[8349,8351],\"disallowed\"],[[8352,8359],\"valid\",[],\"NV8\"],[[8360,8360],\"mapped\",[114,115]],[[8361,8362],\"valid\",[],\"NV8\"],[[8363,8363],\"valid\",[],\"NV8\"],[[8364,8364],\"valid\",[],\"NV8\"],[[8365,8367],\"valid\",[],\"NV8\"],[[8368,8369],\"valid\",[],\"NV8\"],[[8370,8373],\"valid\",[],\"NV8\"],[[8374,8376],\"valid\",[],\"NV8\"],[[8377,8377],\"valid\",[],\"NV8\"],[[8378,8378],\"valid\",[],\"NV8\"],[[8379,8381],\"valid\",[],\"NV8\"],[[8382,8382],\"valid\",[],\"NV8\"],[[8383,8399],\"disallowed\"],[[8400,8417],\"valid\",[],\"NV8\"],[[8418,8419],\"valid\",[],\"NV8\"],[[8420,8426],\"valid\",[],\"NV8\"],[[8427,8427],\"valid\",[],\"NV8\"],[[8428,8431],\"valid\",[],\"NV8\"],[[8432,8432],\"valid\",[],\"NV8\"],[[8433,8447],\"disallowed\"],[[8448,8448],\"disallowed_STD3_mapped\",[97,47,99]],[[8449,8449],\"disallowed_STD3_mapped\",[97,47,115]],[[8450,8450],\"mapped\",[99]],[[8451,8451],\"mapped\",[176,99]],[[8452,8452],\"valid\",[],\"NV8\"],[[8453,8453],\"disallowed_STD3_mapped\",[99,47,111]],[[8454,8454],\"disallowed_STD3_mapped\",[99,47,117]],[[8455,8455],\"mapped\",[603]],[[8456,8456],\"valid\",[],\"NV8\"],[[8457,8457],\"mapped\",[176,102]],[[8458,8458],\"mapped\",[103]],[[8459,8462],\"mapped\",[104]],[[8463,8463],\"mapped\",[295]],[[8464,8465],\"mapped\",[105]],[[8466,8467],\"mapped\",[108]],[[8468,8468],\"valid\",[],\"NV8\"],[[8469,8469],\"mapped\",[110]],[[8470,8470],\"mapped\",[110,111]],[[8471,8472],\"valid\",[],\"NV8\"],[[8473,8473],\"mapped\",[112]],[[8474,8474],\"mapped\",[113]],[[8475,8477],\"mapped\",[114]],[[8478,8479],\"valid\",[],\"NV8\"],[[8480,8480],\"mapped\",[115,109]],[[8481,8481],\"mapped\",[116,101,108]],[[8482,8482],\"mapped\",[116,109]],[[8483,8483],\"valid\",[],\"NV8\"],[[8484,8484],\"mapped\",[122]],[[8485,8485],\"valid\",[],\"NV8\"],[[8486,8486],\"mapped\",[969]],[[8487,8487],\"valid\",[],\"NV8\"],[[8488,8488],\"mapped\",[122]],[[8489,8489],\"valid\",[],\"NV8\"],[[8490,8490],\"mapped\",[107]],[[8491,8491],\"mapped\",[229]],[[8492,8492],\"mapped\",[98]],[[8493,8493],\"mapped\",[99]],[[8494,8494],\"valid\",[],\"NV8\"],[[8495,8496],\"mapped\",[101]],[[8497,8497],\"mapped\",[102]],[[8498,8498],\"disallowed\"],[[8499,8499],\"mapped\",[109]],[[8500,8500],\"mapped\",[111]],[[8501,8501],\"mapped\",[1488]],[[8502,8502],\"mapped\",[1489]],[[8503,8503],\"mapped\",[1490]],[[8504,8504],\"mapped\",[1491]],[[8505,8505],\"mapped\",[105]],[[8506,8506],\"valid\",[],\"NV8\"],[[8507,8507],\"mapped\",[102,97,120]],[[8508,8508],\"mapped\",[960]],[[8509,8510],\"mapped\",[947]],[[8511,8511],\"mapped\",[960]],[[8512,8512],\"mapped\",[8721]],[[8513,8516],\"valid\",[],\"NV8\"],[[8517,8518],\"mapped\",[100]],[[8519,8519],\"mapped\",[101]],[[8520,8520],\"mapped\",[105]],[[8521,8521],\"mapped\",[106]],[[8522,8523],\"valid\",[],\"NV8\"],[[8524,8524],\"valid\",[],\"NV8\"],[[8525,8525],\"valid\",[],\"NV8\"],[[8526,8526],\"valid\"],[[8527,8527],\"valid\",[],\"NV8\"],[[8528,8528],\"mapped\",[49,8260,55]],[[8529,8529],\"mapped\",[49,8260,57]],[[8530,8530],\"mapped\",[49,8260,49,48]],[[8531,8531],\"mapped\",[49,8260,51]],[[8532,8532],\"mapped\",[50,8260,51]],[[8533,8533],\"mapped\",[49,8260,53]],[[8534,8534],\"mapped\",[50,8260,53]],[[8535,8535],\"mapped\",[51,8260,53]],[[8536,8536],\"mapped\",[52,8260,53]],[[8537,8537],\"mapped\",[49,8260,54]],[[8538,8538],\"mapped\",[53,8260,54]],[[8539,8539],\"mapped\",[49,8260,56]],[[8540,8540],\"mapped\",[51,8260,56]],[[8541,8541],\"mapped\",[53,8260,56]],[[8542,8542],\"mapped\",[55,8260,56]],[[8543,8543],\"mapped\",[49,8260]],[[8544,8544],\"mapped\",[105]],[[8545,8545],\"mapped\",[105,105]],[[8546,8546],\"mapped\",[105,105,105]],[[8547,8547],\"mapped\",[105,118]],[[8548,8548],\"mapped\",[118]],[[8549,8549],\"mapped\",[118,105]],[[8550,8550],\"mapped\",[118,105,105]],[[8551,8551],\"mapped\",[118,105,105,105]],[[8552,8552],\"mapped\",[105,120]],[[8553,8553],\"mapped\",[120]],[[8554,8554],\"mapped\",[120,105]],[[8555,8555],\"mapped\",[120,105,105]],[[8556,8556],\"mapped\",[108]],[[8557,8557],\"mapped\",[99]],[[8558,8558],\"mapped\",[100]],[[8559,8559],\"mapped\",[109]],[[8560,8560],\"mapped\",[105]],[[8561,8561],\"mapped\",[105,105]],[[8562,8562],\"mapped\",[105,105,105]],[[8563,8563],\"mapped\",[105,118]],[[8564,8564],\"mapped\",[118]],[[8565,8565],\"mapped\",[118,105]],[[8566,8566],\"mapped\",[118,105,105]],[[8567,8567],\"mapped\",[118,105,105,105]],[[8568,8568],\"mapped\",[105,120]],[[8569,8569],\"mapped\",[120]],[[8570,8570],\"mapped\",[120,105]],[[8571,8571],\"mapped\",[120,105,105]],[[8572,8572],\"mapped\",[108]],[[8573,8573],\"mapped\",[99]],[[8574,8574],\"mapped\",[100]],[[8575,8575],\"mapped\",[109]],[[8576,8578],\"valid\",[],\"NV8\"],[[8579,8579],\"disallowed\"],[[8580,8580],\"valid\"],[[8581,8584],\"valid\",[],\"NV8\"],[[8585,8585],\"mapped\",[48,8260,51]],[[8586,8587],\"valid\",[],\"NV8\"],[[8588,8591],\"disallowed\"],[[8592,8682],\"valid\",[],\"NV8\"],[[8683,8691],\"valid\",[],\"NV8\"],[[8692,8703],\"valid\",[],\"NV8\"],[[8704,8747],\"valid\",[],\"NV8\"],[[8748,8748],\"mapped\",[8747,8747]],[[8749,8749],\"mapped\",[8747,8747,8747]],[[8750,8750],\"valid\",[],\"NV8\"],[[8751,8751],\"mapped\",[8750,8750]],[[8752,8752],\"mapped\",[8750,8750,8750]],[[8753,8799],\"valid\",[],\"NV8\"],[[8800,8800],\"disallowed_STD3_valid\"],[[8801,8813],\"valid\",[],\"NV8\"],[[8814,8815],\"disallowed_STD3_valid\"],[[8816,8945],\"valid\",[],\"NV8\"],[[8946,8959],\"valid\",[],\"NV8\"],[[8960,8960],\"valid\",[],\"NV8\"],[[8961,8961],\"valid\",[],\"NV8\"],[[8962,9000],\"valid\",[],\"NV8\"],[[9001,9001],\"mapped\",[12296]],[[9002,9002],\"mapped\",[12297]],[[9003,9082],\"valid\",[],\"NV8\"],[[9083,9083],\"valid\",[],\"NV8\"],[[9084,9084],\"valid\",[],\"NV8\"],[[9085,9114],\"valid\",[],\"NV8\"],[[9115,9166],\"valid\",[],\"NV8\"],[[9167,9168],\"valid\",[],\"NV8\"],[[9169,9179],\"valid\",[],\"NV8\"],[[9180,9191],\"valid\",[],\"NV8\"],[[9192,9192],\"valid\",[],\"NV8\"],[[9193,9203],\"valid\",[],\"NV8\"],[[9204,9210],\"valid\",[],\"NV8\"],[[9211,9215],\"disallowed\"],[[9216,9252],\"valid\",[],\"NV8\"],[[9253,9254],\"valid\",[],\"NV8\"],[[9255,9279],\"disallowed\"],[[9280,9290],\"valid\",[],\"NV8\"],[[9291,9311],\"disallowed\"],[[9312,9312],\"mapped\",[49]],[[9313,9313],\"mapped\",[50]],[[9314,9314],\"mapped\",[51]],[[9315,9315],\"mapped\",[52]],[[9316,9316],\"mapped\",[53]],[[9317,9317],\"mapped\",[54]],[[9318,9318],\"mapped\",[55]],[[9319,9319],\"mapped\",[56]],[[9320,9320],\"mapped\",[57]],[[9321,9321],\"mapped\",[49,48]],[[9322,9322],\"mapped\",[49,49]],[[9323,9323],\"mapped\",[49,50]],[[9324,9324],\"mapped\",[49,51]],[[9325,9325],\"mapped\",[49,52]],[[9326,9326],\"mapped\",[49,53]],[[9327,9327],\"mapped\",[49,54]],[[9328,9328],\"mapped\",[49,55]],[[9329,9329],\"mapped\",[49,56]],[[9330,9330],\"mapped\",[49,57]],[[9331,9331],\"mapped\",[50,48]],[[9332,9332],\"disallowed_STD3_mapped\",[40,49,41]],[[9333,9333],\"disallowed_STD3_mapped\",[40,50,41]],[[9334,9334],\"disallowed_STD3_mapped\",[40,51,41]],[[9335,9335],\"disallowed_STD3_mapped\",[40,52,41]],[[9336,9336],\"disallowed_STD3_mapped\",[40,53,41]],[[9337,9337],\"disallowed_STD3_mapped\",[40,54,41]],[[9338,9338],\"disallowed_STD3_mapped\",[40,55,41]],[[9339,9339],\"disallowed_STD3_mapped\",[40,56,41]],[[9340,9340],\"disallowed_STD3_mapped\",[40,57,41]],[[9341,9341],\"disallowed_STD3_mapped\",[40,49,48,41]],[[9342,9342],\"disallowed_STD3_mapped\",[40,49,49,41]],[[9343,9343],\"disallowed_STD3_mapped\",[40,49,50,41]],[[9344,9344],\"disallowed_STD3_mapped\",[40,49,51,41]],[[9345,9345],\"disallowed_STD3_mapped\",[40,49,52,41]],[[9346,9346],\"disallowed_STD3_mapped\",[40,49,53,41]],[[9347,9347],\"disallowed_STD3_mapped\",[40,49,54,41]],[[9348,9348],\"disallowed_STD3_mapped\",[40,49,55,41]],[[9349,9349],\"disallowed_STD3_mapped\",[40,49,56,41]],[[9350,9350],\"disallowed_STD3_mapped\",[40,49,57,41]],[[9351,9351],\"disallowed_STD3_mapped\",[40,50,48,41]],[[9352,9371],\"disallowed\"],[[9372,9372],\"disallowed_STD3_mapped\",[40,97,41]],[[9373,9373],\"disallowed_STD3_mapped\",[40,98,41]],[[9374,9374],\"disallowed_STD3_mapped\",[40,99,41]],[[9375,9375],\"disallowed_STD3_mapped\",[40,100,41]],[[9376,9376],\"disallowed_STD3_mapped\",[40,101,41]],[[9377,9377],\"disallowed_STD3_mapped\",[40,102,41]],[[9378,9378],\"disallowed_STD3_mapped\",[40,103,41]],[[9379,9379],\"disallowed_STD3_mapped\",[40,104,41]],[[9380,9380],\"disallowed_STD3_mapped\",[40,105,41]],[[9381,9381],\"disallowed_STD3_mapped\",[40,106,41]],[[9382,9382],\"disallowed_STD3_mapped\",[40,107,41]],[[9383,9383],\"disallowed_STD3_mapped\",[40,108,41]],[[9384,9384],\"disallowed_STD3_mapped\",[40,109,41]],[[9385,9385],\"disallowed_STD3_mapped\",[40,110,41]],[[9386,9386],\"disallowed_STD3_mapped\",[40,111,41]],[[9387,9387],\"disallowed_STD3_mapped\",[40,112,41]],[[9388,9388],\"disallowed_STD3_mapped\",[40,113,41]],[[9389,9389],\"disallowed_STD3_mapped\",[40,114,41]],[[9390,9390],\"disallowed_STD3_mapped\",[40,115,41]],[[9391,9391],\"disallowed_STD3_mapped\",[40,116,41]],[[9392,9392],\"disallowed_STD3_mapped\",[40,117,41]],[[9393,9393],\"disallowed_STD3_mapped\",[40,118,41]],[[9394,9394],\"disallowed_STD3_mapped\",[40,119,41]],[[9395,9395],\"disallowed_STD3_mapped\",[40,120,41]],[[9396,9396],\"disallowed_STD3_mapped\",[40,121,41]],[[9397,9397],\"disallowed_STD3_mapped\",[40,122,41]],[[9398,9398],\"mapped\",[97]],[[9399,9399],\"mapped\",[98]],[[9400,9400],\"mapped\",[99]],[[9401,9401],\"mapped\",[100]],[[9402,9402],\"mapped\",[101]],[[9403,9403],\"mapped\",[102]],[[9404,9404],\"mapped\",[103]],[[9405,9405],\"mapped\",[104]],[[9406,9406],\"mapped\",[105]],[[9407,9407],\"mapped\",[106]],[[9408,9408],\"mapped\",[107]],[[9409,9409],\"mapped\",[108]],[[9410,9410],\"mapped\",[109]],[[9411,9411],\"mapped\",[110]],[[9412,9412],\"mapped\",[111]],[[9413,9413],\"mapped\",[112]],[[9414,9414],\"mapped\",[113]],[[9415,9415],\"mapped\",[114]],[[9416,9416],\"mapped\",[115]],[[9417,9417],\"mapped\",[116]],[[9418,9418],\"mapped\",[117]],[[9419,9419],\"mapped\",[118]],[[9420,9420],\"mapped\",[119]],[[9421,9421],\"mapped\",[120]],[[9422,9422],\"mapped\",[121]],[[9423,9423],\"mapped\",[122]],[[9424,9424],\"mapped\",[97]],[[9425,9425],\"mapped\",[98]],[[9426,9426],\"mapped\",[99]],[[9427,9427],\"mapped\",[100]],[[9428,9428],\"mapped\",[101]],[[9429,9429],\"mapped\",[102]],[[9430,9430],\"mapped\",[103]],[[9431,9431],\"mapped\",[104]],[[9432,9432],\"mapped\",[105]],[[9433,9433],\"mapped\",[106]],[[9434,9434],\"mapped\",[107]],[[9435,9435],\"mapped\",[108]],[[9436,9436],\"mapped\",[109]],[[9437,9437],\"mapped\",[110]],[[9438,9438],\"mapped\",[111]],[[9439,9439],\"mapped\",[112]],[[9440,9440],\"mapped\",[113]],[[9441,9441],\"mapped\",[114]],[[9442,9442],\"mapped\",[115]],[[9443,9443],\"mapped\",[116]],[[9444,9444],\"mapped\",[117]],[[9445,9445],\"mapped\",[118]],[[9446,9446],\"mapped\",[119]],[[9447,9447],\"mapped\",[120]],[[9448,9448],\"mapped\",[121]],[[9449,9449],\"mapped\",[122]],[[9450,9450],\"mapped\",[48]],[[9451,9470],\"valid\",[],\"NV8\"],[[9471,9471],\"valid\",[],\"NV8\"],[[9472,9621],\"valid\",[],\"NV8\"],[[9622,9631],\"valid\",[],\"NV8\"],[[9632,9711],\"valid\",[],\"NV8\"],[[9712,9719],\"valid\",[],\"NV8\"],[[9720,9727],\"valid\",[],\"NV8\"],[[9728,9747],\"valid\",[],\"NV8\"],[[9748,9749],\"valid\",[],\"NV8\"],[[9750,9751],\"valid\",[],\"NV8\"],[[9752,9752],\"valid\",[],\"NV8\"],[[9753,9753],\"valid\",[],\"NV8\"],[[9754,9839],\"valid\",[],\"NV8\"],[[9840,9841],\"valid\",[],\"NV8\"],[[9842,9853],\"valid\",[],\"NV8\"],[[9854,9855],\"valid\",[],\"NV8\"],[[9856,9865],\"valid\",[],\"NV8\"],[[9866,9873],\"valid\",[],\"NV8\"],[[9874,9884],\"valid\",[],\"NV8\"],[[9885,9885],\"valid\",[],\"NV8\"],[[9886,9887],\"valid\",[],\"NV8\"],[[9888,9889],\"valid\",[],\"NV8\"],[[9890,9905],\"valid\",[],\"NV8\"],[[9906,9906],\"valid\",[],\"NV8\"],[[9907,9916],\"valid\",[],\"NV8\"],[[9917,9919],\"valid\",[],\"NV8\"],[[9920,9923],\"valid\",[],\"NV8\"],[[9924,9933],\"valid\",[],\"NV8\"],[[9934,9934],\"valid\",[],\"NV8\"],[[9935,9953],\"valid\",[],\"NV8\"],[[9954,9954],\"valid\",[],\"NV8\"],[[9955,9955],\"valid\",[],\"NV8\"],[[9956,9959],\"valid\",[],\"NV8\"],[[9960,9983],\"valid\",[],\"NV8\"],[[9984,9984],\"valid\",[],\"NV8\"],[[9985,9988],\"valid\",[],\"NV8\"],[[9989,9989],\"valid\",[],\"NV8\"],[[9990,9993],\"valid\",[],\"NV8\"],[[9994,9995],\"valid\",[],\"NV8\"],[[9996,10023],\"valid\",[],\"NV8\"],[[10024,10024],\"valid\",[],\"NV8\"],[[10025,10059],\"valid\",[],\"NV8\"],[[10060,10060],\"valid\",[],\"NV8\"],[[10061,10061],\"valid\",[],\"NV8\"],[[10062,10062],\"valid\",[],\"NV8\"],[[10063,10066],\"valid\",[],\"NV8\"],[[10067,10069],\"valid\",[],\"NV8\"],[[10070,10070],\"valid\",[],\"NV8\"],[[10071,10071],\"valid\",[],\"NV8\"],[[10072,10078],\"valid\",[],\"NV8\"],[[10079,10080],\"valid\",[],\"NV8\"],[[10081,10087],\"valid\",[],\"NV8\"],[[10088,10101],\"valid\",[],\"NV8\"],[[10102,10132],\"valid\",[],\"NV8\"],[[10133,10135],\"valid\",[],\"NV8\"],[[10136,10159],\"valid\",[],\"NV8\"],[[10160,10160],\"valid\",[],\"NV8\"],[[10161,10174],\"valid\",[],\"NV8\"],[[10175,10175],\"valid\",[],\"NV8\"],[[10176,10182],\"valid\",[],\"NV8\"],[[10183,10186],\"valid\",[],\"NV8\"],[[10187,10187],\"valid\",[],\"NV8\"],[[10188,10188],\"valid\",[],\"NV8\"],[[10189,10189],\"valid\",[],\"NV8\"],[[10190,10191],\"valid\",[],\"NV8\"],[[10192,10219],\"valid\",[],\"NV8\"],[[10220,10223],\"valid\",[],\"NV8\"],[[10224,10239],\"valid\",[],\"NV8\"],[[10240,10495],\"valid\",[],\"NV8\"],[[10496,10763],\"valid\",[],\"NV8\"],[[10764,10764],\"mapped\",[8747,8747,8747,8747]],[[10765,10867],\"valid\",[],\"NV8\"],[[10868,10868],\"disallowed_STD3_mapped\",[58,58,61]],[[10869,10869],\"disallowed_STD3_mapped\",[61,61]],[[10870,10870],\"disallowed_STD3_mapped\",[61,61,61]],[[10871,10971],\"valid\",[],\"NV8\"],[[10972,10972],\"mapped\",[10973,824]],[[10973,11007],\"valid\",[],\"NV8\"],[[11008,11021],\"valid\",[],\"NV8\"],[[11022,11027],\"valid\",[],\"NV8\"],[[11028,11034],\"valid\",[],\"NV8\"],[[11035,11039],\"valid\",[],\"NV8\"],[[11040,11043],\"valid\",[],\"NV8\"],[[11044,11084],\"valid\",[],\"NV8\"],[[11085,11087],\"valid\",[],\"NV8\"],[[11088,11092],\"valid\",[],\"NV8\"],[[11093,11097],\"valid\",[],\"NV8\"],[[11098,11123],\"valid\",[],\"NV8\"],[[11124,11125],\"disallowed\"],[[11126,11157],\"valid\",[],\"NV8\"],[[11158,11159],\"disallowed\"],[[11160,11193],\"valid\",[],\"NV8\"],[[11194,11196],\"disallowed\"],[[11197,11208],\"valid\",[],\"NV8\"],[[11209,11209],\"disallowed\"],[[11210,11217],\"valid\",[],\"NV8\"],[[11218,11243],\"disallowed\"],[[11244,11247],\"valid\",[],\"NV8\"],[[11248,11263],\"disallowed\"],[[11264,11264],\"mapped\",[11312]],[[11265,11265],\"mapped\",[11313]],[[11266,11266],\"mapped\",[11314]],[[11267,11267],\"mapped\",[11315]],[[11268,11268],\"mapped\",[11316]],[[11269,11269],\"mapped\",[11317]],[[11270,11270],\"mapped\",[11318]],[[11271,11271],\"mapped\",[11319]],[[11272,11272],\"mapped\",[11320]],[[11273,11273],\"mapped\",[11321]],[[11274,11274],\"mapped\",[11322]],[[11275,11275],\"mapped\",[11323]],[[11276,11276],\"mapped\",[11324]],[[11277,11277],\"mapped\",[11325]],[[11278,11278],\"mapped\",[11326]],[[11279,11279],\"mapped\",[11327]],[[11280,11280],\"mapped\",[11328]],[[11281,11281],\"mapped\",[11329]],[[11282,11282],\"mapped\",[11330]],[[11283,11283],\"mapped\",[11331]],[[11284,11284],\"mapped\",[11332]],[[11285,11285],\"mapped\",[11333]],[[11286,11286],\"mapped\",[11334]],[[11287,11287],\"mapped\",[11335]],[[11288,11288],\"mapped\",[11336]],[[11289,11289],\"mapped\",[11337]],[[11290,11290],\"mapped\",[11338]],[[11291,11291],\"mapped\",[11339]],[[11292,11292],\"mapped\",[11340]],[[11293,11293],\"mapped\",[11341]],[[11294,11294],\"mapped\",[11342]],[[11295,11295],\"mapped\",[11343]],[[11296,11296],\"mapped\",[11344]],[[11297,11297],\"mapped\",[11345]],[[11298,11298],\"mapped\",[11346]],[[11299,11299],\"mapped\",[11347]],[[11300,11300],\"mapped\",[11348]],[[11301,11301],\"mapped\",[11349]],[[11302,11302],\"mapped\",[11350]],[[11303,11303],\"mapped\",[11351]],[[11304,11304],\"mapped\",[11352]],[[11305,11305],\"mapped\",[11353]],[[11306,11306],\"mapped\",[11354]],[[11307,11307],\"mapped\",[11355]],[[11308,11308],\"mapped\",[11356]],[[11309,11309],\"mapped\",[11357]],[[11310,11310],\"mapped\",[11358]],[[11311,11311],\"disallowed\"],[[11312,11358],\"valid\"],[[11359,11359],\"disallowed\"],[[11360,11360],\"mapped\",[11361]],[[11361,11361],\"valid\"],[[11362,11362],\"mapped\",[619]],[[11363,11363],\"mapped\",[7549]],[[11364,11364],\"mapped\",[637]],[[11365,11366],\"valid\"],[[11367,11367],\"mapped\",[11368]],[[11368,11368],\"valid\"],[[11369,11369],\"mapped\",[11370]],[[11370,11370],\"valid\"],[[11371,11371],\"mapped\",[11372]],[[11372,11372],\"valid\"],[[11373,11373],\"mapped\",[593]],[[11374,11374],\"mapped\",[625]],[[11375,11375],\"mapped\",[592]],[[11376,11376],\"mapped\",[594]],[[11377,11377],\"valid\"],[[11378,11378],\"mapped\",[11379]],[[11379,11379],\"valid\"],[[11380,11380],\"valid\"],[[11381,11381],\"mapped\",[11382]],[[11382,11383],\"valid\"],[[11384,11387],\"valid\"],[[11388,11388],\"mapped\",[106]],[[11389,11389],\"mapped\",[118]],[[11390,11390],\"mapped\",[575]],[[11391,11391],\"mapped\",[576]],[[11392,11392],\"mapped\",[11393]],[[11393,11393],\"valid\"],[[11394,11394],\"mapped\",[11395]],[[11395,11395],\"valid\"],[[11396,11396],\"mapped\",[11397]],[[11397,11397],\"valid\"],[[11398,11398],\"mapped\",[11399]],[[11399,11399],\"valid\"],[[11400,11400],\"mapped\",[11401]],[[11401,11401],\"valid\"],[[11402,11402],\"mapped\",[11403]],[[11403,11403],\"valid\"],[[11404,11404],\"mapped\",[11405]],[[11405,11405],\"valid\"],[[11406,11406],\"mapped\",[11407]],[[11407,11407],\"valid\"],[[11408,11408],\"mapped\",[11409]],[[11409,11409],\"valid\"],[[11410,11410],\"mapped\",[11411]],[[11411,11411],\"valid\"],[[11412,11412],\"mapped\",[11413]],[[11413,11413],\"valid\"],[[11414,11414],\"mapped\",[11415]],[[11415,11415],\"valid\"],[[11416,11416],\"mapped\",[11417]],[[11417,11417],\"valid\"],[[11418,11418],\"mapped\",[11419]],[[11419,11419],\"valid\"],[[11420,11420],\"mapped\",[11421]],[[11421,11421],\"valid\"],[[11422,11422],\"mapped\",[11423]],[[11423,11423],\"valid\"],[[11424,11424],\"mapped\",[11425]],[[11425,11425],\"valid\"],[[11426,11426],\"mapped\",[11427]],[[11427,11427],\"valid\"],[[11428,11428],\"mapped\",[11429]],[[11429,11429],\"valid\"],[[11430,11430],\"mapped\",[11431]],[[11431,11431],\"valid\"],[[11432,11432],\"mapped\",[11433]],[[11433,11433],\"valid\"],[[11434,11434],\"mapped\",[11435]],[[11435,11435],\"valid\"],[[11436,11436],\"mapped\",[11437]],[[11437,11437],\"valid\"],[[11438,11438],\"mapped\",[11439]],[[11439,11439],\"valid\"],[[11440,11440],\"mapped\",[11441]],[[11441,11441],\"valid\"],[[11442,11442],\"mapped\",[11443]],[[11443,11443],\"valid\"],[[11444,11444],\"mapped\",[11445]],[[11445,11445],\"valid\"],[[11446,11446],\"mapped\",[11447]],[[11447,11447],\"valid\"],[[11448,11448],\"mapped\",[11449]],[[11449,11449],\"valid\"],[[11450,11450],\"mapped\",[11451]],[[11451,11451],\"valid\"],[[11452,11452],\"mapped\",[11453]],[[11453,11453],\"valid\"],[[11454,11454],\"mapped\",[11455]],[[11455,11455],\"valid\"],[[11456,11456],\"mapped\",[11457]],[[11457,11457],\"valid\"],[[11458,11458],\"mapped\",[11459]],[[11459,11459],\"valid\"],[[11460,11460],\"mapped\",[11461]],[[11461,11461],\"valid\"],[[11462,11462],\"mapped\",[11463]],[[11463,11463],\"valid\"],[[11464,11464],\"mapped\",[11465]],[[11465,11465],\"valid\"],[[11466,11466],\"mapped\",[11467]],[[11467,11467],\"valid\"],[[11468,11468],\"mapped\",[11469]],[[11469,11469],\"valid\"],[[11470,11470],\"mapped\",[11471]],[[11471,11471],\"valid\"],[[11472,11472],\"mapped\",[11473]],[[11473,11473],\"valid\"],[[11474,11474],\"mapped\",[11475]],[[11475,11475],\"valid\"],[[11476,11476],\"mapped\",[11477]],[[11477,11477],\"valid\"],[[11478,11478],\"mapped\",[11479]],[[11479,11479],\"valid\"],[[11480,11480],\"mapped\",[11481]],[[11481,11481],\"valid\"],[[11482,11482],\"mapped\",[11483]],[[11483,11483],\"valid\"],[[11484,11484],\"mapped\",[11485]],[[11485,11485],\"valid\"],[[11486,11486],\"mapped\",[11487]],[[11487,11487],\"valid\"],[[11488,11488],\"mapped\",[11489]],[[11489,11489],\"valid\"],[[11490,11490],\"mapped\",[11491]],[[11491,11492],\"valid\"],[[11493,11498],\"valid\",[],\"NV8\"],[[11499,11499],\"mapped\",[11500]],[[11500,11500],\"valid\"],[[11501,11501],\"mapped\",[11502]],[[11502,11505],\"valid\"],[[11506,11506],\"mapped\",[11507]],[[11507,11507],\"valid\"],[[11508,11512],\"disallowed\"],[[11513,11519],\"valid\",[],\"NV8\"],[[11520,11557],\"valid\"],[[11558,11558],\"disallowed\"],[[11559,11559],\"valid\"],[[11560,11564],\"disallowed\"],[[11565,11565],\"valid\"],[[11566,11567],\"disallowed\"],[[11568,11621],\"valid\"],[[11622,11623],\"valid\"],[[11624,11630],\"disallowed\"],[[11631,11631],\"mapped\",[11617]],[[11632,11632],\"valid\",[],\"NV8\"],[[11633,11646],\"disallowed\"],[[11647,11647],\"valid\"],[[11648,11670],\"valid\"],[[11671,11679],\"disallowed\"],[[11680,11686],\"valid\"],[[11687,11687],\"disallowed\"],[[11688,11694],\"valid\"],[[11695,11695],\"disallowed\"],[[11696,11702],\"valid\"],[[11703,11703],\"disallowed\"],[[11704,11710],\"valid\"],[[11711,11711],\"disallowed\"],[[11712,11718],\"valid\"],[[11719,11719],\"disallowed\"],[[11720,11726],\"valid\"],[[11727,11727],\"disallowed\"],[[11728,11734],\"valid\"],[[11735,11735],\"disallowed\"],[[11736,11742],\"valid\"],[[11743,11743],\"disallowed\"],[[11744,11775],\"valid\"],[[11776,11799],\"valid\",[],\"NV8\"],[[11800,11803],\"valid\",[],\"NV8\"],[[11804,11805],\"valid\",[],\"NV8\"],[[11806,11822],\"valid\",[],\"NV8\"],[[11823,11823],\"valid\"],[[11824,11824],\"valid\",[],\"NV8\"],[[11825,11825],\"valid\",[],\"NV8\"],[[11826,11835],\"valid\",[],\"NV8\"],[[11836,11842],\"valid\",[],\"NV8\"],[[11843,11903],\"disallowed\"],[[11904,11929],\"valid\",[],\"NV8\"],[[11930,11930],\"disallowed\"],[[11931,11934],\"valid\",[],\"NV8\"],[[11935,11935],\"mapped\",[27597]],[[11936,12018],\"valid\",[],\"NV8\"],[[12019,12019],\"mapped\",[40863]],[[12020,12031],\"disallowed\"],[[12032,12032],\"mapped\",[19968]],[[12033,12033],\"mapped\",[20008]],[[12034,12034],\"mapped\",[20022]],[[12035,12035],\"mapped\",[20031]],[[12036,12036],\"mapped\",[20057]],[[12037,12037],\"mapped\",[20101]],[[12038,12038],\"mapped\",[20108]],[[12039,12039],\"mapped\",[20128]],[[12040,12040],\"mapped\",[20154]],[[12041,12041],\"mapped\",[20799]],[[12042,12042],\"mapped\",[20837]],[[12043,12043],\"mapped\",[20843]],[[12044,12044],\"mapped\",[20866]],[[12045,12045],\"mapped\",[20886]],[[12046,12046],\"mapped\",[20907]],[[12047,12047],\"mapped\",[20960]],[[12048,12048],\"mapped\",[20981]],[[12049,12049],\"mapped\",[20992]],[[12050,12050],\"mapped\",[21147]],[[12051,12051],\"mapped\",[21241]],[[12052,12052],\"mapped\",[21269]],[[12053,12053],\"mapped\",[21274]],[[12054,12054],\"mapped\",[21304]],[[12055,12055],\"mapped\",[21313]],[[12056,12056],\"mapped\",[21340]],[[12057,12057],\"mapped\",[21353]],[[12058,12058],\"mapped\",[21378]],[[12059,12059],\"mapped\",[21430]],[[12060,12060],\"mapped\",[21448]],[[12061,12061],\"mapped\",[21475]],[[12062,12062],\"mapped\",[22231]],[[12063,12063],\"mapped\",[22303]],[[12064,12064],\"mapped\",[22763]],[[12065,12065],\"mapped\",[22786]],[[12066,12066],\"mapped\",[22794]],[[12067,12067],\"mapped\",[22805]],[[12068,12068],\"mapped\",[22823]],[[12069,12069],\"mapped\",[22899]],[[12070,12070],\"mapped\",[23376]],[[12071,12071],\"mapped\",[23424]],[[12072,12072],\"mapped\",[23544]],[[12073,12073],\"mapped\",[23567]],[[12074,12074],\"mapped\",[23586]],[[12075,12075],\"mapped\",[23608]],[[12076,12076],\"mapped\",[23662]],[[12077,12077],\"mapped\",[23665]],[[12078,12078],\"mapped\",[24027]],[[12079,12079],\"mapped\",[24037]],[[12080,12080],\"mapped\",[24049]],[[12081,12081],\"mapped\",[24062]],[[12082,12082],\"mapped\",[24178]],[[12083,12083],\"mapped\",[24186]],[[12084,12084],\"mapped\",[24191]],[[12085,12085],\"mapped\",[24308]],[[12086,12086],\"mapped\",[24318]],[[12087,12087],\"mapped\",[24331]],[[12088,12088],\"mapped\",[24339]],[[12089,12089],\"mapped\",[24400]],[[12090,12090],\"mapped\",[24417]],[[12091,12091],\"mapped\",[24435]],[[12092,12092],\"mapped\",[24515]],[[12093,12093],\"mapped\",[25096]],[[12094,12094],\"mapped\",[25142]],[[12095,12095],\"mapped\",[25163]],[[12096,12096],\"mapped\",[25903]],[[12097,12097],\"mapped\",[25908]],[[12098,12098],\"mapped\",[25991]],[[12099,12099],\"mapped\",[26007]],[[12100,12100],\"mapped\",[26020]],[[12101,12101],\"mapped\",[26041]],[[12102,12102],\"mapped\",[26080]],[[12103,12103],\"mapped\",[26085]],[[12104,12104],\"mapped\",[26352]],[[12105,12105],\"mapped\",[26376]],[[12106,12106],\"mapped\",[26408]],[[12107,12107],\"mapped\",[27424]],[[12108,12108],\"mapped\",[27490]],[[12109,12109],\"mapped\",[27513]],[[12110,12110],\"mapped\",[27571]],[[12111,12111],\"mapped\",[27595]],[[12112,12112],\"mapped\",[27604]],[[12113,12113],\"mapped\",[27611]],[[12114,12114],\"mapped\",[27663]],[[12115,12115],\"mapped\",[27668]],[[12116,12116],\"mapped\",[27700]],[[12117,12117],\"mapped\",[28779]],[[12118,12118],\"mapped\",[29226]],[[12119,12119],\"mapped\",[29238]],[[12120,12120],\"mapped\",[29243]],[[12121,12121],\"mapped\",[29247]],[[12122,12122],\"mapped\",[29255]],[[12123,12123],\"mapped\",[29273]],[[12124,12124],\"mapped\",[29275]],[[12125,12125],\"mapped\",[29356]],[[12126,12126],\"mapped\",[29572]],[[12127,12127],\"mapped\",[29577]],[[12128,12128],\"mapped\",[29916]],[[12129,12129],\"mapped\",[29926]],[[12130,12130],\"mapped\",[29976]],[[12131,12131],\"mapped\",[29983]],[[12132,12132],\"mapped\",[29992]],[[12133,12133],\"mapped\",[30000]],[[12134,12134],\"mapped\",[30091]],[[12135,12135],\"mapped\",[30098]],[[12136,12136],\"mapped\",[30326]],[[12137,12137],\"mapped\",[30333]],[[12138,12138],\"mapped\",[30382]],[[12139,12139],\"mapped\",[30399]],[[12140,12140],\"mapped\",[30446]],[[12141,12141],\"mapped\",[30683]],[[12142,12142],\"mapped\",[30690]],[[12143,12143],\"mapped\",[30707]],[[12144,12144],\"mapped\",[31034]],[[12145,12145],\"mapped\",[31160]],[[12146,12146],\"mapped\",[31166]],[[12147,12147],\"mapped\",[31348]],[[12148,12148],\"mapped\",[31435]],[[12149,12149],\"mapped\",[31481]],[[12150,12150],\"mapped\",[31859]],[[12151,12151],\"mapped\",[31992]],[[12152,12152],\"mapped\",[32566]],[[12153,12153],\"mapped\",[32593]],[[12154,12154],\"mapped\",[32650]],[[12155,12155],\"mapped\",[32701]],[[12156,12156],\"mapped\",[32769]],[[12157,12157],\"mapped\",[32780]],[[12158,12158],\"mapped\",[32786]],[[12159,12159],\"mapped\",[32819]],[[12160,12160],\"mapped\",[32895]],[[12161,12161],\"mapped\",[32905]],[[12162,12162],\"mapped\",[33251]],[[12163,12163],\"mapped\",[33258]],[[12164,12164],\"mapped\",[33267]],[[12165,12165],\"mapped\",[33276]],[[12166,12166],\"mapped\",[33292]],[[12167,12167],\"mapped\",[33307]],[[12168,12168],\"mapped\",[33311]],[[12169,12169],\"mapped\",[33390]],[[12170,12170],\"mapped\",[33394]],[[12171,12171],\"mapped\",[33400]],[[12172,12172],\"mapped\",[34381]],[[12173,12173],\"mapped\",[34411]],[[12174,12174],\"mapped\",[34880]],[[12175,12175],\"mapped\",[34892]],[[12176,12176],\"mapped\",[34915]],[[12177,12177],\"mapped\",[35198]],[[12178,12178],\"mapped\",[35211]],[[12179,12179],\"mapped\",[35282]],[[12180,12180],\"mapped\",[35328]],[[12181,12181],\"mapped\",[35895]],[[12182,12182],\"mapped\",[35910]],[[12183,12183],\"mapped\",[35925]],[[12184,12184],\"mapped\",[35960]],[[12185,12185],\"mapped\",[35997]],[[12186,12186],\"mapped\",[36196]],[[12187,12187],\"mapped\",[36208]],[[12188,12188],\"mapped\",[36275]],[[12189,12189],\"mapped\",[36523]],[[12190,12190],\"mapped\",[36554]],[[12191,12191],\"mapped\",[36763]],[[12192,12192],\"mapped\",[36784]],[[12193,12193],\"mapped\",[36789]],[[12194,12194],\"mapped\",[37009]],[[12195,12195],\"mapped\",[37193]],[[12196,12196],\"mapped\",[37318]],[[12197,12197],\"mapped\",[37324]],[[12198,12198],\"mapped\",[37329]],[[12199,12199],\"mapped\",[38263]],[[12200,12200],\"mapped\",[38272]],[[12201,12201],\"mapped\",[38428]],[[12202,12202],\"mapped\",[38582]],[[12203,12203],\"mapped\",[38585]],[[12204,12204],\"mapped\",[38632]],[[12205,12205],\"mapped\",[38737]],[[12206,12206],\"mapped\",[38750]],[[12207,12207],\"mapped\",[38754]],[[12208,12208],\"mapped\",[38761]],[[12209,12209],\"mapped\",[38859]],[[12210,12210],\"mapped\",[38893]],[[12211,12211],\"mapped\",[38899]],[[12212,12212],\"mapped\",[38913]],[[12213,12213],\"mapped\",[39080]],[[12214,12214],\"mapped\",[39131]],[[12215,12215],\"mapped\",[39135]],[[12216,12216],\"mapped\",[39318]],[[12217,12217],\"mapped\",[39321]],[[12218,12218],\"mapped\",[39340]],[[12219,12219],\"mapped\",[39592]],[[12220,12220],\"mapped\",[39640]],[[12221,12221],\"mapped\",[39647]],[[12222,12222],\"mapped\",[39717]],[[12223,12223],\"mapped\",[39727]],[[12224,12224],\"mapped\",[39730]],[[12225,12225],\"mapped\",[39740]],[[12226,12226],\"mapped\",[39770]],[[12227,12227],\"mapped\",[40165]],[[12228,12228],\"mapped\",[40565]],[[12229,12229],\"mapped\",[40575]],[[12230,12230],\"mapped\",[40613]],[[12231,12231],\"mapped\",[40635]],[[12232,12232],\"mapped\",[40643]],[[12233,12233],\"mapped\",[40653]],[[12234,12234],\"mapped\",[40657]],[[12235,12235],\"mapped\",[40697]],[[12236,12236],\"mapped\",[40701]],[[12237,12237],\"mapped\",[40718]],[[12238,12238],\"mapped\",[40723]],[[12239,12239],\"mapped\",[40736]],[[12240,12240],\"mapped\",[40763]],[[12241,12241],\"mapped\",[40778]],[[12242,12242],\"mapped\",[40786]],[[12243,12243],\"mapped\",[40845]],[[12244,12244],\"mapped\",[40860]],[[12245,12245],\"mapped\",[40864]],[[12246,12271],\"disallowed\"],[[12272,12283],\"disallowed\"],[[12284,12287],\"disallowed\"],[[12288,12288],\"disallowed_STD3_mapped\",[32]],[[12289,12289],\"valid\",[],\"NV8\"],[[12290,12290],\"mapped\",[46]],[[12291,12292],\"valid\",[],\"NV8\"],[[12293,12295],\"valid\"],[[12296,12329],\"valid\",[],\"NV8\"],[[12330,12333],\"valid\"],[[12334,12341],\"valid\",[],\"NV8\"],[[12342,12342],\"mapped\",[12306]],[[12343,12343],\"valid\",[],\"NV8\"],[[12344,12344],\"mapped\",[21313]],[[12345,12345],\"mapped\",[21316]],[[12346,12346],\"mapped\",[21317]],[[12347,12347],\"valid\",[],\"NV8\"],[[12348,12348],\"valid\"],[[12349,12349],\"valid\",[],\"NV8\"],[[12350,12350],\"valid\",[],\"NV8\"],[[12351,12351],\"valid\",[],\"NV8\"],[[12352,12352],\"disallowed\"],[[12353,12436],\"valid\"],[[12437,12438],\"valid\"],[[12439,12440],\"disallowed\"],[[12441,12442],\"valid\"],[[12443,12443],\"disallowed_STD3_mapped\",[32,12441]],[[12444,12444],\"disallowed_STD3_mapped\",[32,12442]],[[12445,12446],\"valid\"],[[12447,12447],\"mapped\",[12424,12426]],[[12448,12448],\"valid\",[],\"NV8\"],[[12449,12542],\"valid\"],[[12543,12543],\"mapped\",[12467,12488]],[[12544,12548],\"disallowed\"],[[12549,12588],\"valid\"],[[12589,12589],\"valid\"],[[12590,12592],\"disallowed\"],[[12593,12593],\"mapped\",[4352]],[[12594,12594],\"mapped\",[4353]],[[12595,12595],\"mapped\",[4522]],[[12596,12596],\"mapped\",[4354]],[[12597,12597],\"mapped\",[4524]],[[12598,12598],\"mapped\",[4525]],[[12599,12599],\"mapped\",[4355]],[[12600,12600],\"mapped\",[4356]],[[12601,12601],\"mapped\",[4357]],[[12602,12602],\"mapped\",[4528]],[[12603,12603],\"mapped\",[4529]],[[12604,12604],\"mapped\",[4530]],[[12605,12605],\"mapped\",[4531]],[[12606,12606],\"mapped\",[4532]],[[12607,12607],\"mapped\",[4533]],[[12608,12608],\"mapped\",[4378]],[[12609,12609],\"mapped\",[4358]],[[12610,12610],\"mapped\",[4359]],[[12611,12611],\"mapped\",[4360]],[[12612,12612],\"mapped\",[4385]],[[12613,12613],\"mapped\",[4361]],[[12614,12614],\"mapped\",[4362]],[[12615,12615],\"mapped\",[4363]],[[12616,12616],\"mapped\",[4364]],[[12617,12617],\"mapped\",[4365]],[[12618,12618],\"mapped\",[4366]],[[12619,12619],\"mapped\",[4367]],[[12620,12620],\"mapped\",[4368]],[[12621,12621],\"mapped\",[4369]],[[12622,12622],\"mapped\",[4370]],[[12623,12623],\"mapped\",[4449]],[[12624,12624],\"mapped\",[4450]],[[12625,12625],\"mapped\",[4451]],[[12626,12626],\"mapped\",[4452]],[[12627,12627],\"mapped\",[4453]],[[12628,12628],\"mapped\",[4454]],[[12629,12629],\"mapped\",[4455]],[[12630,12630],\"mapped\",[4456]],[[12631,12631],\"mapped\",[4457]],[[12632,12632],\"mapped\",[4458]],[[12633,12633],\"mapped\",[4459]],[[12634,12634],\"mapped\",[4460]],[[12635,12635],\"mapped\",[4461]],[[12636,12636],\"mapped\",[4462]],[[12637,12637],\"mapped\",[4463]],[[12638,12638],\"mapped\",[4464]],[[12639,12639],\"mapped\",[4465]],[[12640,12640],\"mapped\",[4466]],[[12641,12641],\"mapped\",[4467]],[[12642,12642],\"mapped\",[4468]],[[12643,12643],\"mapped\",[4469]],[[12644,12644],\"disallowed\"],[[12645,12645],\"mapped\",[4372]],[[12646,12646],\"mapped\",[4373]],[[12647,12647],\"mapped\",[4551]],[[12648,12648],\"mapped\",[4552]],[[12649,12649],\"mapped\",[4556]],[[12650,12650],\"mapped\",[4558]],[[12651,12651],\"mapped\",[4563]],[[12652,12652],\"mapped\",[4567]],[[12653,12653],\"mapped\",[4569]],[[12654,12654],\"mapped\",[4380]],[[12655,12655],\"mapped\",[4573]],[[12656,12656],\"mapped\",[4575]],[[12657,12657],\"mapped\",[4381]],[[12658,12658],\"mapped\",[4382]],[[12659,12659],\"mapped\",[4384]],[[12660,12660],\"mapped\",[4386]],[[12661,12661],\"mapped\",[4387]],[[12662,12662],\"mapped\",[4391]],[[12663,12663],\"mapped\",[4393]],[[12664,12664],\"mapped\",[4395]],[[12665,12665],\"mapped\",[4396]],[[12666,12666],\"mapped\",[4397]],[[12667,12667],\"mapped\",[4398]],[[12668,12668],\"mapped\",[4399]],[[12669,12669],\"mapped\",[4402]],[[12670,12670],\"mapped\",[4406]],[[12671,12671],\"mapped\",[4416]],[[12672,12672],\"mapped\",[4423]],[[12673,12673],\"mapped\",[4428]],[[12674,12674],\"mapped\",[4593]],[[12675,12675],\"mapped\",[4594]],[[12676,12676],\"mapped\",[4439]],[[12677,12677],\"mapped\",[4440]],[[12678,12678],\"mapped\",[4441]],[[12679,12679],\"mapped\",[4484]],[[12680,12680],\"mapped\",[4485]],[[12681,12681],\"mapped\",[4488]],[[12682,12682],\"mapped\",[4497]],[[12683,12683],\"mapped\",[4498]],[[12684,12684],\"mapped\",[4500]],[[12685,12685],\"mapped\",[4510]],[[12686,12686],\"mapped\",[4513]],[[12687,12687],\"disallowed\"],[[12688,12689],\"valid\",[],\"NV8\"],[[12690,12690],\"mapped\",[19968]],[[12691,12691],\"mapped\",[20108]],[[12692,12692],\"mapped\",[19977]],[[12693,12693],\"mapped\",[22235]],[[12694,12694],\"mapped\",[19978]],[[12695,12695],\"mapped\",[20013]],[[12696,12696],\"mapped\",[19979]],[[12697,12697],\"mapped\",[30002]],[[12698,12698],\"mapped\",[20057]],[[12699,12699],\"mapped\",[19993]],[[12700,12700],\"mapped\",[19969]],[[12701,12701],\"mapped\",[22825]],[[12702,12702],\"mapped\",[22320]],[[12703,12703],\"mapped\",[20154]],[[12704,12727],\"valid\"],[[12728,12730],\"valid\"],[[12731,12735],\"disallowed\"],[[12736,12751],\"valid\",[],\"NV8\"],[[12752,12771],\"valid\",[],\"NV8\"],[[12772,12783],\"disallowed\"],[[12784,12799],\"valid\"],[[12800,12800],\"disallowed_STD3_mapped\",[40,4352,41]],[[12801,12801],\"disallowed_STD3_mapped\",[40,4354,41]],[[12802,12802],\"disallowed_STD3_mapped\",[40,4355,41]],[[12803,12803],\"disallowed_STD3_mapped\",[40,4357,41]],[[12804,12804],\"disallowed_STD3_mapped\",[40,4358,41]],[[12805,12805],\"disallowed_STD3_mapped\",[40,4359,41]],[[12806,12806],\"disallowed_STD3_mapped\",[40,4361,41]],[[12807,12807],\"disallowed_STD3_mapped\",[40,4363,41]],[[12808,12808],\"disallowed_STD3_mapped\",[40,4364,41]],[[12809,12809],\"disallowed_STD3_mapped\",[40,4366,41]],[[12810,12810],\"disallowed_STD3_mapped\",[40,4367,41]],[[12811,12811],\"disallowed_STD3_mapped\",[40,4368,41]],[[12812,12812],\"disallowed_STD3_mapped\",[40,4369,41]],[[12813,12813],\"disallowed_STD3_mapped\",[40,4370,41]],[[12814,12814],\"disallowed_STD3_mapped\",[40,44032,41]],[[12815,12815],\"disallowed_STD3_mapped\",[40,45208,41]],[[12816,12816],\"disallowed_STD3_mapped\",[40,45796,41]],[[12817,12817],\"disallowed_STD3_mapped\",[40,46972,41]],[[12818,12818],\"disallowed_STD3_mapped\",[40,47560,41]],[[12819,12819],\"disallowed_STD3_mapped\",[40,48148,41]],[[12820,12820],\"disallowed_STD3_mapped\",[40,49324,41]],[[12821,12821],\"disallowed_STD3_mapped\",[40,50500,41]],[[12822,12822],\"disallowed_STD3_mapped\",[40,51088,41]],[[12823,12823],\"disallowed_STD3_mapped\",[40,52264,41]],[[12824,12824],\"disallowed_STD3_mapped\",[40,52852,41]],[[12825,12825],\"disallowed_STD3_mapped\",[40,53440,41]],[[12826,12826],\"disallowed_STD3_mapped\",[40,54028,41]],[[12827,12827],\"disallowed_STD3_mapped\",[40,54616,41]],[[12828,12828],\"disallowed_STD3_mapped\",[40,51452,41]],[[12829,12829],\"disallowed_STD3_mapped\",[40,50724,51204,41]],[[12830,12830],\"disallowed_STD3_mapped\",[40,50724,54980,41]],[[12831,12831],\"disallowed\"],[[12832,12832],\"disallowed_STD3_mapped\",[40,19968,41]],[[12833,12833],\"disallowed_STD3_mapped\",[40,20108,41]],[[12834,12834],\"disallowed_STD3_mapped\",[40,19977,41]],[[12835,12835],\"disallowed_STD3_mapped\",[40,22235,41]],[[12836,12836],\"disallowed_STD3_mapped\",[40,20116,41]],[[12837,12837],\"disallowed_STD3_mapped\",[40,20845,41]],[[12838,12838],\"disallowed_STD3_mapped\",[40,19971,41]],[[12839,12839],\"disallowed_STD3_mapped\",[40,20843,41]],[[12840,12840],\"disallowed_STD3_mapped\",[40,20061,41]],[[12841,12841],\"disallowed_STD3_mapped\",[40,21313,41]],[[12842,12842],\"disallowed_STD3_mapped\",[40,26376,41]],[[12843,12843],\"disallowed_STD3_mapped\",[40,28779,41]],[[12844,12844],\"disallowed_STD3_mapped\",[40,27700,41]],[[12845,12845],\"disallowed_STD3_mapped\",[40,26408,41]],[[12846,12846],\"disallowed_STD3_mapped\",[40,37329,41]],[[12847,12847],\"disallowed_STD3_mapped\",[40,22303,41]],[[12848,12848],\"disallowed_STD3_mapped\",[40,26085,41]],[[12849,12849],\"disallowed_STD3_mapped\",[40,26666,41]],[[12850,12850],\"disallowed_STD3_mapped\",[40,26377,41]],[[12851,12851],\"disallowed_STD3_mapped\",[40,31038,41]],[[12852,12852],\"disallowed_STD3_mapped\",[40,21517,41]],[[12853,12853],\"disallowed_STD3_mapped\",[40,29305,41]],[[12854,12854],\"disallowed_STD3_mapped\",[40,36001,41]],[[12855,12855],\"disallowed_STD3_mapped\",[40,31069,41]],[[12856,12856],\"disallowed_STD3_mapped\",[40,21172,41]],[[12857,12857],\"disallowed_STD3_mapped\",[40,20195,41]],[[12858,12858],\"disallowed_STD3_mapped\",[40,21628,41]],[[12859,12859],\"disallowed_STD3_mapped\",[40,23398,41]],[[12860,12860],\"disallowed_STD3_mapped\",[40,30435,41]],[[12861,12861],\"disallowed_STD3_mapped\",[40,20225,41]],[[12862,12862],\"disallowed_STD3_mapped\",[40,36039,41]],[[12863,12863],\"disallowed_STD3_mapped\",[40,21332,41]],[[12864,12864],\"disallowed_STD3_mapped\",[40,31085,41]],[[12865,12865],\"disallowed_STD3_mapped\",[40,20241,41]],[[12866,12866],\"disallowed_STD3_mapped\",[40,33258,41]],[[12867,12867],\"disallowed_STD3_mapped\",[40,33267,41]],[[12868,12868],\"mapped\",[21839]],[[12869,12869],\"mapped\",[24188]],[[12870,12870],\"mapped\",[25991]],[[12871,12871],\"mapped\",[31631]],[[12872,12879],\"valid\",[],\"NV8\"],[[12880,12880],\"mapped\",[112,116,101]],[[12881,12881],\"mapped\",[50,49]],[[12882,12882],\"mapped\",[50,50]],[[12883,12883],\"mapped\",[50,51]],[[12884,12884],\"mapped\",[50,52]],[[12885,12885],\"mapped\",[50,53]],[[12886,12886],\"mapped\",[50,54]],[[12887,12887],\"mapped\",[50,55]],[[12888,12888],\"mapped\",[50,56]],[[12889,12889],\"mapped\",[50,57]],[[12890,12890],\"mapped\",[51,48]],[[12891,12891],\"mapped\",[51,49]],[[12892,12892],\"mapped\",[51,50]],[[12893,12893],\"mapped\",[51,51]],[[12894,12894],\"mapped\",[51,52]],[[12895,12895],\"mapped\",[51,53]],[[12896,12896],\"mapped\",[4352]],[[12897,12897],\"mapped\",[4354]],[[12898,12898],\"mapped\",[4355]],[[12899,12899],\"mapped\",[4357]],[[12900,12900],\"mapped\",[4358]],[[12901,12901],\"mapped\",[4359]],[[12902,12902],\"mapped\",[4361]],[[12903,12903],\"mapped\",[4363]],[[12904,12904],\"mapped\",[4364]],[[12905,12905],\"mapped\",[4366]],[[12906,12906],\"mapped\",[4367]],[[12907,12907],\"mapped\",[4368]],[[12908,12908],\"mapped\",[4369]],[[12909,12909],\"mapped\",[4370]],[[12910,12910],\"mapped\",[44032]],[[12911,12911],\"mapped\",[45208]],[[12912,12912],\"mapped\",[45796]],[[12913,12913],\"mapped\",[46972]],[[12914,12914],\"mapped\",[47560]],[[12915,12915],\"mapped\",[48148]],[[12916,12916],\"mapped\",[49324]],[[12917,12917],\"mapped\",[50500]],[[12918,12918],\"mapped\",[51088]],[[12919,12919],\"mapped\",[52264]],[[12920,12920],\"mapped\",[52852]],[[12921,12921],\"mapped\",[53440]],[[12922,12922],\"mapped\",[54028]],[[12923,12923],\"mapped\",[54616]],[[12924,12924],\"mapped\",[52280,44256]],[[12925,12925],\"mapped\",[51452,51032]],[[12926,12926],\"mapped\",[50864]],[[12927,12927],\"valid\",[],\"NV8\"],[[12928,12928],\"mapped\",[19968]],[[12929,12929],\"mapped\",[20108]],[[12930,12930],\"mapped\",[19977]],[[12931,12931],\"mapped\",[22235]],[[12932,12932],\"mapped\",[20116]],[[12933,12933],\"mapped\",[20845]],[[12934,12934],\"mapped\",[19971]],[[12935,12935],\"mapped\",[20843]],[[12936,12936],\"mapped\",[20061]],[[12937,12937],\"mapped\",[21313]],[[12938,12938],\"mapped\",[26376]],[[12939,12939],\"mapped\",[28779]],[[12940,12940],\"mapped\",[27700]],[[12941,12941],\"mapped\",[26408]],[[12942,12942],\"mapped\",[37329]],[[12943,12943],\"mapped\",[22303]],[[12944,12944],\"mapped\",[26085]],[[12945,12945],\"mapped\",[26666]],[[12946,12946],\"mapped\",[26377]],[[12947,12947],\"mapped\",[31038]],[[12948,12948],\"mapped\",[21517]],[[12949,12949],\"mapped\",[29305]],[[12950,12950],\"mapped\",[36001]],[[12951,12951],\"mapped\",[31069]],[[12952,12952],\"mapped\",[21172]],[[12953,12953],\"mapped\",[31192]],[[12954,12954],\"mapped\",[30007]],[[12955,12955],\"mapped\",[22899]],[[12956,12956],\"mapped\",[36969]],[[12957,12957],\"mapped\",[20778]],[[12958,12958],\"mapped\",[21360]],[[12959,12959],\"mapped\",[27880]],[[12960,12960],\"mapped\",[38917]],[[12961,12961],\"mapped\",[20241]],[[12962,12962],\"mapped\",[20889]],[[12963,12963],\"mapped\",[27491]],[[12964,12964],\"mapped\",[19978]],[[12965,12965],\"mapped\",[20013]],[[12966,12966],\"mapped\",[19979]],[[12967,12967],\"mapped\",[24038]],[[12968,12968],\"mapped\",[21491]],[[12969,12969],\"mapped\",[21307]],[[12970,12970],\"mapped\",[23447]],[[12971,12971],\"mapped\",[23398]],[[12972,12972],\"mapped\",[30435]],[[12973,12973],\"mapped\",[20225]],[[12974,12974],\"mapped\",[36039]],[[12975,12975],\"mapped\",[21332]],[[12976,12976],\"mapped\",[22812]],[[12977,12977],\"mapped\",[51,54]],[[12978,12978],\"mapped\",[51,55]],[[12979,12979],\"mapped\",[51,56]],[[12980,12980],\"mapped\",[51,57]],[[12981,12981],\"mapped\",[52,48]],[[12982,12982],\"mapped\",[52,49]],[[12983,12983],\"mapped\",[52,50]],[[12984,12984],\"mapped\",[52,51]],[[12985,12985],\"mapped\",[52,52]],[[12986,12986],\"mapped\",[52,53]],[[12987,12987],\"mapped\",[52,54]],[[12988,12988],\"mapped\",[52,55]],[[12989,12989],\"mapped\",[52,56]],[[12990,12990],\"mapped\",[52,57]],[[12991,12991],\"mapped\",[53,48]],[[12992,12992],\"mapped\",[49,26376]],[[12993,12993],\"mapped\",[50,26376]],[[12994,12994],\"mapped\",[51,26376]],[[12995,12995],\"mapped\",[52,26376]],[[12996,12996],\"mapped\",[53,26376]],[[12997,12997],\"mapped\",[54,26376]],[[12998,12998],\"mapped\",[55,26376]],[[12999,12999],\"mapped\",[56,26376]],[[13000,13000],\"mapped\",[57,26376]],[[13001,13001],\"mapped\",[49,48,26376]],[[13002,13002],\"mapped\",[49,49,26376]],[[13003,13003],\"mapped\",[49,50,26376]],[[13004,13004],\"mapped\",[104,103]],[[13005,13005],\"mapped\",[101,114,103]],[[13006,13006],\"mapped\",[101,118]],[[13007,13007],\"mapped\",[108,116,100]],[[13008,13008],\"mapped\",[12450]],[[13009,13009],\"mapped\",[12452]],[[13010,13010],\"mapped\",[12454]],[[13011,13011],\"mapped\",[12456]],[[13012,13012],\"mapped\",[12458]],[[13013,13013],\"mapped\",[12459]],[[13014,13014],\"mapped\",[12461]],[[13015,13015],\"mapped\",[12463]],[[13016,13016],\"mapped\",[12465]],[[13017,13017],\"mapped\",[12467]],[[13018,13018],\"mapped\",[12469]],[[13019,13019],\"mapped\",[12471]],[[13020,13020],\"mapped\",[12473]],[[13021,13021],\"mapped\",[12475]],[[13022,13022],\"mapped\",[12477]],[[13023,13023],\"mapped\",[12479]],[[13024,13024],\"mapped\",[12481]],[[13025,13025],\"mapped\",[12484]],[[13026,13026],\"mapped\",[12486]],[[13027,13027],\"mapped\",[12488]],[[13028,13028],\"mapped\",[12490]],[[13029,13029],\"mapped\",[12491]],[[13030,13030],\"mapped\",[12492]],[[13031,13031],\"mapped\",[12493]],[[13032,13032],\"mapped\",[12494]],[[13033,13033],\"mapped\",[12495]],[[13034,13034],\"mapped\",[12498]],[[13035,13035],\"mapped\",[12501]],[[13036,13036],\"mapped\",[12504]],[[13037,13037],\"mapped\",[12507]],[[13038,13038],\"mapped\",[12510]],[[13039,13039],\"mapped\",[12511]],[[13040,13040],\"mapped\",[12512]],[[13041,13041],\"mapped\",[12513]],[[13042,13042],\"mapped\",[12514]],[[13043,13043],\"mapped\",[12516]],[[13044,13044],\"mapped\",[12518]],[[13045,13045],\"mapped\",[12520]],[[13046,13046],\"mapped\",[12521]],[[13047,13047],\"mapped\",[12522]],[[13048,13048],\"mapped\",[12523]],[[13049,13049],\"mapped\",[12524]],[[13050,13050],\"mapped\",[12525]],[[13051,13051],\"mapped\",[12527]],[[13052,13052],\"mapped\",[12528]],[[13053,13053],\"mapped\",[12529]],[[13054,13054],\"mapped\",[12530]],[[13055,13055],\"disallowed\"],[[13056,13056],\"mapped\",[12450,12497,12540,12488]],[[13057,13057],\"mapped\",[12450,12523,12501,12449]],[[13058,13058],\"mapped\",[12450,12531,12506,12450]],[[13059,13059],\"mapped\",[12450,12540,12523]],[[13060,13060],\"mapped\",[12452,12491,12531,12464]],[[13061,13061],\"mapped\",[12452,12531,12481]],[[13062,13062],\"mapped\",[12454,12457,12531]],[[13063,13063],\"mapped\",[12456,12473,12463,12540,12489]],[[13064,13064],\"mapped\",[12456,12540,12459,12540]],[[13065,13065],\"mapped\",[12458,12531,12473]],[[13066,13066],\"mapped\",[12458,12540,12512]],[[13067,13067],\"mapped\",[12459,12452,12522]],[[13068,13068],\"mapped\",[12459,12521,12483,12488]],[[13069,13069],\"mapped\",[12459,12525,12522,12540]],[[13070,13070],\"mapped\",[12460,12525,12531]],[[13071,13071],\"mapped\",[12460,12531,12510]],[[13072,13072],\"mapped\",[12462,12460]],[[13073,13073],\"mapped\",[12462,12491,12540]],[[13074,13074],\"mapped\",[12461,12517,12522,12540]],[[13075,13075],\"mapped\",[12462,12523,12480,12540]],[[13076,13076],\"mapped\",[12461,12525]],[[13077,13077],\"mapped\",[12461,12525,12464,12521,12512]],[[13078,13078],\"mapped\",[12461,12525,12513,12540,12488,12523]],[[13079,13079],\"mapped\",[12461,12525,12527,12483,12488]],[[13080,13080],\"mapped\",[12464,12521,12512]],[[13081,13081],\"mapped\",[12464,12521,12512,12488,12531]],[[13082,13082],\"mapped\",[12463,12523,12476,12452,12525]],[[13083,13083],\"mapped\",[12463,12525,12540,12493]],[[13084,13084],\"mapped\",[12465,12540,12473]],[[13085,13085],\"mapped\",[12467,12523,12490]],[[13086,13086],\"mapped\",[12467,12540,12509]],[[13087,13087],\"mapped\",[12469,12452,12463,12523]],[[13088,13088],\"mapped\",[12469,12531,12481,12540,12512]],[[13089,13089],\"mapped\",[12471,12522,12531,12464]],[[13090,13090],\"mapped\",[12475,12531,12481]],[[13091,13091],\"mapped\",[12475,12531,12488]],[[13092,13092],\"mapped\",[12480,12540,12473]],[[13093,13093],\"mapped\",[12487,12471]],[[13094,13094],\"mapped\",[12489,12523]],[[13095,13095],\"mapped\",[12488,12531]],[[13096,13096],\"mapped\",[12490,12494]],[[13097,13097],\"mapped\",[12494,12483,12488]],[[13098,13098],\"mapped\",[12495,12452,12484]],[[13099,13099],\"mapped\",[12497,12540,12475,12531,12488]],[[13100,13100],\"mapped\",[12497,12540,12484]],[[13101,13101],\"mapped\",[12496,12540,12524,12523]],[[13102,13102],\"mapped\",[12500,12450,12473,12488,12523]],[[13103,13103],\"mapped\",[12500,12463,12523]],[[13104,13104],\"mapped\",[12500,12467]],[[13105,13105],\"mapped\",[12499,12523]],[[13106,13106],\"mapped\",[12501,12449,12521,12483,12489]],[[13107,13107],\"mapped\",[12501,12451,12540,12488]],[[13108,13108],\"mapped\",[12502,12483,12471,12455,12523]],[[13109,13109],\"mapped\",[12501,12521,12531]],[[13110,13110],\"mapped\",[12504,12463,12479,12540,12523]],[[13111,13111],\"mapped\",[12506,12477]],[[13112,13112],\"mapped\",[12506,12491,12498]],[[13113,13113],\"mapped\",[12504,12523,12484]],[[13114,13114],\"mapped\",[12506,12531,12473]],[[13115,13115],\"mapped\",[12506,12540,12472]],[[13116,13116],\"mapped\",[12505,12540,12479]],[[13117,13117],\"mapped\",[12509,12452,12531,12488]],[[13118,13118],\"mapped\",[12508,12523,12488]],[[13119,13119],\"mapped\",[12507,12531]],[[13120,13120],\"mapped\",[12509,12531,12489]],[[13121,13121],\"mapped\",[12507,12540,12523]],[[13122,13122],\"mapped\",[12507,12540,12531]],[[13123,13123],\"mapped\",[12510,12452,12463,12525]],[[13124,13124],\"mapped\",[12510,12452,12523]],[[13125,13125],\"mapped\",[12510,12483,12495]],[[13126,13126],\"mapped\",[12510,12523,12463]],[[13127,13127],\"mapped\",[12510,12531,12471,12519,12531]],[[13128,13128],\"mapped\",[12511,12463,12525,12531]],[[13129,13129],\"mapped\",[12511,12522]],[[13130,13130],\"mapped\",[12511,12522,12496,12540,12523]],[[13131,13131],\"mapped\",[12513,12460]],[[13132,13132],\"mapped\",[12513,12460,12488,12531]],[[13133,13133],\"mapped\",[12513,12540,12488,12523]],[[13134,13134],\"mapped\",[12516,12540,12489]],[[13135,13135],\"mapped\",[12516,12540,12523]],[[13136,13136],\"mapped\",[12518,12450,12531]],[[13137,13137],\"mapped\",[12522,12483,12488,12523]],[[13138,13138],\"mapped\",[12522,12521]],[[13139,13139],\"mapped\",[12523,12500,12540]],[[13140,13140],\"mapped\",[12523,12540,12502,12523]],[[13141,13141],\"mapped\",[12524,12512]],[[13142,13142],\"mapped\",[12524,12531,12488,12466,12531]],[[13143,13143],\"mapped\",[12527,12483,12488]],[[13144,13144],\"mapped\",[48,28857]],[[13145,13145],\"mapped\",[49,28857]],[[13146,13146],\"mapped\",[50,28857]],[[13147,13147],\"mapped\",[51,28857]],[[13148,13148],\"mapped\",[52,28857]],[[13149,13149],\"mapped\",[53,28857]],[[13150,13150],\"mapped\",[54,28857]],[[13151,13151],\"mapped\",[55,28857]],[[13152,13152],\"mapped\",[56,28857]],[[13153,13153],\"mapped\",[57,28857]],[[13154,13154],\"mapped\",[49,48,28857]],[[13155,13155],\"mapped\",[49,49,28857]],[[13156,13156],\"mapped\",[49,50,28857]],[[13157,13157],\"mapped\",[49,51,28857]],[[13158,13158],\"mapped\",[49,52,28857]],[[13159,13159],\"mapped\",[49,53,28857]],[[13160,13160],\"mapped\",[49,54,28857]],[[13161,13161],\"mapped\",[49,55,28857]],[[13162,13162],\"mapped\",[49,56,28857]],[[13163,13163],\"mapped\",[49,57,28857]],[[13164,13164],\"mapped\",[50,48,28857]],[[13165,13165],\"mapped\",[50,49,28857]],[[13166,13166],\"mapped\",[50,50,28857]],[[13167,13167],\"mapped\",[50,51,28857]],[[13168,13168],\"mapped\",[50,52,28857]],[[13169,13169],\"mapped\",[104,112,97]],[[13170,13170],\"mapped\",[100,97]],[[13171,13171],\"mapped\",[97,117]],[[13172,13172],\"mapped\",[98,97,114]],[[13173,13173],\"mapped\",[111,118]],[[13174,13174],\"mapped\",[112,99]],[[13175,13175],\"mapped\",[100,109]],[[13176,13176],\"mapped\",[100,109,50]],[[13177,13177],\"mapped\",[100,109,51]],[[13178,13178],\"mapped\",[105,117]],[[13179,13179],\"mapped\",[24179,25104]],[[13180,13180],\"mapped\",[26157,21644]],[[13181,13181],\"mapped\",[22823,27491]],[[13182,13182],\"mapped\",[26126,27835]],[[13183,13183],\"mapped\",[26666,24335,20250,31038]],[[13184,13184],\"mapped\",[112,97]],[[13185,13185],\"mapped\",[110,97]],[[13186,13186],\"mapped\",[956,97]],[[13187,13187],\"mapped\",[109,97]],[[13188,13188],\"mapped\",[107,97]],[[13189,13189],\"mapped\",[107,98]],[[13190,13190],\"mapped\",[109,98]],[[13191,13191],\"mapped\",[103,98]],[[13192,13192],\"mapped\",[99,97,108]],[[13193,13193],\"mapped\",[107,99,97,108]],[[13194,13194],\"mapped\",[112,102]],[[13195,13195],\"mapped\",[110,102]],[[13196,13196],\"mapped\",[956,102]],[[13197,13197],\"mapped\",[956,103]],[[13198,13198],\"mapped\",[109,103]],[[13199,13199],\"mapped\",[107,103]],[[13200,13200],\"mapped\",[104,122]],[[13201,13201],\"mapped\",[107,104,122]],[[13202,13202],\"mapped\",[109,104,122]],[[13203,13203],\"mapped\",[103,104,122]],[[13204,13204],\"mapped\",[116,104,122]],[[13205,13205],\"mapped\",[956,108]],[[13206,13206],\"mapped\",[109,108]],[[13207,13207],\"mapped\",[100,108]],[[13208,13208],\"mapped\",[107,108]],[[13209,13209],\"mapped\",[102,109]],[[13210,13210],\"mapped\",[110,109]],[[13211,13211],\"mapped\",[956,109]],[[13212,13212],\"mapped\",[109,109]],[[13213,13213],\"mapped\",[99,109]],[[13214,13214],\"mapped\",[107,109]],[[13215,13215],\"mapped\",[109,109,50]],[[13216,13216],\"mapped\",[99,109,50]],[[13217,13217],\"mapped\",[109,50]],[[13218,13218],\"mapped\",[107,109,50]],[[13219,13219],\"mapped\",[109,109,51]],[[13220,13220],\"mapped\",[99,109,51]],[[13221,13221],\"mapped\",[109,51]],[[13222,13222],\"mapped\",[107,109,51]],[[13223,13223],\"mapped\",[109,8725,115]],[[13224,13224],\"mapped\",[109,8725,115,50]],[[13225,13225],\"mapped\",[112,97]],[[13226,13226],\"mapped\",[107,112,97]],[[13227,13227],\"mapped\",[109,112,97]],[[13228,13228],\"mapped\",[103,112,97]],[[13229,13229],\"mapped\",[114,97,100]],[[13230,13230],\"mapped\",[114,97,100,8725,115]],[[13231,13231],\"mapped\",[114,97,100,8725,115,50]],[[13232,13232],\"mapped\",[112,115]],[[13233,13233],\"mapped\",[110,115]],[[13234,13234],\"mapped\",[956,115]],[[13235,13235],\"mapped\",[109,115]],[[13236,13236],\"mapped\",[112,118]],[[13237,13237],\"mapped\",[110,118]],[[13238,13238],\"mapped\",[956,118]],[[13239,13239],\"mapped\",[109,118]],[[13240,13240],\"mapped\",[107,118]],[[13241,13241],\"mapped\",[109,118]],[[13242,13242],\"mapped\",[112,119]],[[13243,13243],\"mapped\",[110,119]],[[13244,13244],\"mapped\",[956,119]],[[13245,13245],\"mapped\",[109,119]],[[13246,13246],\"mapped\",[107,119]],[[13247,13247],\"mapped\",[109,119]],[[13248,13248],\"mapped\",[107,969]],[[13249,13249],\"mapped\",[109,969]],[[13250,13250],\"disallowed\"],[[13251,13251],\"mapped\",[98,113]],[[13252,13252],\"mapped\",[99,99]],[[13253,13253],\"mapped\",[99,100]],[[13254,13254],\"mapped\",[99,8725,107,103]],[[13255,13255],\"disallowed\"],[[13256,13256],\"mapped\",[100,98]],[[13257,13257],\"mapped\",[103,121]],[[13258,13258],\"mapped\",[104,97]],[[13259,13259],\"mapped\",[104,112]],[[13260,13260],\"mapped\",[105,110]],[[13261,13261],\"mapped\",[107,107]],[[13262,13262],\"mapped\",[107,109]],[[13263,13263],\"mapped\",[107,116]],[[13264,13264],\"mapped\",[108,109]],[[13265,13265],\"mapped\",[108,110]],[[13266,13266],\"mapped\",[108,111,103]],[[13267,13267],\"mapped\",[108,120]],[[13268,13268],\"mapped\",[109,98]],[[13269,13269],\"mapped\",[109,105,108]],[[13270,13270],\"mapped\",[109,111,108]],[[13271,13271],\"mapped\",[112,104]],[[13272,13272],\"disallowed\"],[[13273,13273],\"mapped\",[112,112,109]],[[13274,13274],\"mapped\",[112,114]],[[13275,13275],\"mapped\",[115,114]],[[13276,13276],\"mapped\",[115,118]],[[13277,13277],\"mapped\",[119,98]],[[13278,13278],\"mapped\",[118,8725,109]],[[13279,13279],\"mapped\",[97,8725,109]],[[13280,13280],\"mapped\",[49,26085]],[[13281,13281],\"mapped\",[50,26085]],[[13282,13282],\"mapped\",[51,26085]],[[13283,13283],\"mapped\",[52,26085]],[[13284,13284],\"mapped\",[53,26085]],[[13285,13285],\"mapped\",[54,26085]],[[13286,13286],\"mapped\",[55,26085]],[[13287,13287],\"mapped\",[56,26085]],[[13288,13288],\"mapped\",[57,26085]],[[13289,13289],\"mapped\",[49,48,26085]],[[13290,13290],\"mapped\",[49,49,26085]],[[13291,13291],\"mapped\",[49,50,26085]],[[13292,13292],\"mapped\",[49,51,26085]],[[13293,13293],\"mapped\",[49,52,26085]],[[13294,13294],\"mapped\",[49,53,26085]],[[13295,13295],\"mapped\",[49,54,26085]],[[13296,13296],\"mapped\",[49,55,26085]],[[13297,13297],\"mapped\",[49,56,26085]],[[13298,13298],\"mapped\",[49,57,26085]],[[13299,13299],\"mapped\",[50,48,26085]],[[13300,13300],\"mapped\",[50,49,26085]],[[13301,13301],\"mapped\",[50,50,26085]],[[13302,13302],\"mapped\",[50,51,26085]],[[13303,13303],\"mapped\",[50,52,26085]],[[13304,13304],\"mapped\",[50,53,26085]],[[13305,13305],\"mapped\",[50,54,26085]],[[13306,13306],\"mapped\",[50,55,26085]],[[13307,13307],\"mapped\",[50,56,26085]],[[13308,13308],\"mapped\",[50,57,26085]],[[13309,13309],\"mapped\",[51,48,26085]],[[13310,13310],\"mapped\",[51,49,26085]],[[13311,13311],\"mapped\",[103,97,108]],[[13312,19893],\"valid\"],[[19894,19903],\"disallowed\"],[[19904,19967],\"valid\",[],\"NV8\"],[[19968,40869],\"valid\"],[[40870,40891],\"valid\"],[[40892,40899],\"valid\"],[[40900,40907],\"valid\"],[[40908,40908],\"valid\"],[[40909,40917],\"valid\"],[[40918,40959],\"disallowed\"],[[40960,42124],\"valid\"],[[42125,42127],\"disallowed\"],[[42128,42145],\"valid\",[],\"NV8\"],[[42146,42147],\"valid\",[],\"NV8\"],[[42148,42163],\"valid\",[],\"NV8\"],[[42164,42164],\"valid\",[],\"NV8\"],[[42165,42176],\"valid\",[],\"NV8\"],[[42177,42177],\"valid\",[],\"NV8\"],[[42178,42180],\"valid\",[],\"NV8\"],[[42181,42181],\"valid\",[],\"NV8\"],[[42182,42182],\"valid\",[],\"NV8\"],[[42183,42191],\"disallowed\"],[[42192,42237],\"valid\"],[[42238,42239],\"valid\",[],\"NV8\"],[[42240,42508],\"valid\"],[[42509,42511],\"valid\",[],\"NV8\"],[[42512,42539],\"valid\"],[[42540,42559],\"disallowed\"],[[42560,42560],\"mapped\",[42561]],[[42561,42561],\"valid\"],[[42562,42562],\"mapped\",[42563]],[[42563,42563],\"valid\"],[[42564,42564],\"mapped\",[42565]],[[42565,42565],\"valid\"],[[42566,42566],\"mapped\",[42567]],[[42567,42567],\"valid\"],[[42568,42568],\"mapped\",[42569]],[[42569,42569],\"valid\"],[[42570,42570],\"mapped\",[42571]],[[42571,42571],\"valid\"],[[42572,42572],\"mapped\",[42573]],[[42573,42573],\"valid\"],[[42574,42574],\"mapped\",[42575]],[[42575,42575],\"valid\"],[[42576,42576],\"mapped\",[42577]],[[42577,42577],\"valid\"],[[42578,42578],\"mapped\",[42579]],[[42579,42579],\"valid\"],[[42580,42580],\"mapped\",[42581]],[[42581,42581],\"valid\"],[[42582,42582],\"mapped\",[42583]],[[42583,42583],\"valid\"],[[42584,42584],\"mapped\",[42585]],[[42585,42585],\"valid\"],[[42586,42586],\"mapped\",[42587]],[[42587,42587],\"valid\"],[[42588,42588],\"mapped\",[42589]],[[42589,42589],\"valid\"],[[42590,42590],\"mapped\",[42591]],[[42591,42591],\"valid\"],[[42592,42592],\"mapped\",[42593]],[[42593,42593],\"valid\"],[[42594,42594],\"mapped\",[42595]],[[42595,42595],\"valid\"],[[42596,42596],\"mapped\",[42597]],[[42597,42597],\"valid\"],[[42598,42598],\"mapped\",[42599]],[[42599,42599],\"valid\"],[[42600,42600],\"mapped\",[42601]],[[42601,42601],\"valid\"],[[42602,42602],\"mapped\",[42603]],[[42603,42603],\"valid\"],[[42604,42604],\"mapped\",[42605]],[[42605,42607],\"valid\"],[[42608,42611],\"valid\",[],\"NV8\"],[[42612,42619],\"valid\"],[[42620,42621],\"valid\"],[[42622,42622],\"valid\",[],\"NV8\"],[[42623,42623],\"valid\"],[[42624,42624],\"mapped\",[42625]],[[42625,42625],\"valid\"],[[42626,42626],\"mapped\",[42627]],[[42627,42627],\"valid\"],[[42628,42628],\"mapped\",[42629]],[[42629,42629],\"valid\"],[[42630,42630],\"mapped\",[42631]],[[42631,42631],\"valid\"],[[42632,42632],\"mapped\",[42633]],[[42633,42633],\"valid\"],[[42634,42634],\"mapped\",[42635]],[[42635,42635],\"valid\"],[[42636,42636],\"mapped\",[42637]],[[42637,42637],\"valid\"],[[42638,42638],\"mapped\",[42639]],[[42639,42639],\"valid\"],[[42640,42640],\"mapped\",[42641]],[[42641,42641],\"valid\"],[[42642,42642],\"mapped\",[42643]],[[42643,42643],\"valid\"],[[42644,42644],\"mapped\",[42645]],[[42645,42645],\"valid\"],[[42646,42646],\"mapped\",[42647]],[[42647,42647],\"valid\"],[[42648,42648],\"mapped\",[42649]],[[42649,42649],\"valid\"],[[42650,42650],\"mapped\",[42651]],[[42651,42651],\"valid\"],[[42652,42652],\"mapped\",[1098]],[[42653,42653],\"mapped\",[1100]],[[42654,42654],\"valid\"],[[42655,42655],\"valid\"],[[42656,42725],\"valid\"],[[42726,42735],\"valid\",[],\"NV8\"],[[42736,42737],\"valid\"],[[42738,42743],\"valid\",[],\"NV8\"],[[42744,42751],\"disallowed\"],[[42752,42774],\"valid\",[],\"NV8\"],[[42775,42778],\"valid\"],[[42779,42783],\"valid\"],[[42784,42785],\"valid\",[],\"NV8\"],[[42786,42786],\"mapped\",[42787]],[[42787,42787],\"valid\"],[[42788,42788],\"mapped\",[42789]],[[42789,42789],\"valid\"],[[42790,42790],\"mapped\",[42791]],[[42791,42791],\"valid\"],[[42792,42792],\"mapped\",[42793]],[[42793,42793],\"valid\"],[[42794,42794],\"mapped\",[42795]],[[42795,42795],\"valid\"],[[42796,42796],\"mapped\",[42797]],[[42797,42797],\"valid\"],[[42798,42798],\"mapped\",[42799]],[[42799,42801],\"valid\"],[[42802,42802],\"mapped\",[42803]],[[42803,42803],\"valid\"],[[42804,42804],\"mapped\",[42805]],[[42805,42805],\"valid\"],[[42806,42806],\"mapped\",[42807]],[[42807,42807],\"valid\"],[[42808,42808],\"mapped\",[42809]],[[42809,42809],\"valid\"],[[42810,42810],\"mapped\",[42811]],[[42811,42811],\"valid\"],[[42812,42812],\"mapped\",[42813]],[[42813,42813],\"valid\"],[[42814,42814],\"mapped\",[42815]],[[42815,42815],\"valid\"],[[42816,42816],\"mapped\",[42817]],[[42817,42817],\"valid\"],[[42818,42818],\"mapped\",[42819]],[[42819,42819],\"valid\"],[[42820,42820],\"mapped\",[42821]],[[42821,42821],\"valid\"],[[42822,42822],\"mapped\",[42823]],[[42823,42823],\"valid\"],[[42824,42824],\"mapped\",[42825]],[[42825,42825],\"valid\"],[[42826,42826],\"mapped\",[42827]],[[42827,42827],\"valid\"],[[42828,42828],\"mapped\",[42829]],[[42829,42829],\"valid\"],[[42830,42830],\"mapped\",[42831]],[[42831,42831],\"valid\"],[[42832,42832],\"mapped\",[42833]],[[42833,42833],\"valid\"],[[42834,42834],\"mapped\",[42835]],[[42835,42835],\"valid\"],[[42836,42836],\"mapped\",[42837]],[[42837,42837],\"valid\"],[[42838,42838],\"mapped\",[42839]],[[42839,42839],\"valid\"],[[42840,42840],\"mapped\",[42841]],[[42841,42841],\"valid\"],[[42842,42842],\"mapped\",[42843]],[[42843,42843],\"valid\"],[[42844,42844],\"mapped\",[42845]],[[42845,42845],\"valid\"],[[42846,42846],\"mapped\",[42847]],[[42847,42847],\"valid\"],[[42848,42848],\"mapped\",[42849]],[[42849,42849],\"valid\"],[[42850,42850],\"mapped\",[42851]],[[42851,42851],\"valid\"],[[42852,42852],\"mapped\",[42853]],[[42853,42853],\"valid\"],[[42854,42854],\"mapped\",[42855]],[[42855,42855],\"valid\"],[[42856,42856],\"mapped\",[42857]],[[42857,42857],\"valid\"],[[42858,42858],\"mapped\",[42859]],[[42859,42859],\"valid\"],[[42860,42860],\"mapped\",[42861]],[[42861,42861],\"valid\"],[[42862,42862],\"mapped\",[42863]],[[42863,42863],\"valid\"],[[42864,42864],\"mapped\",[42863]],[[42865,42872],\"valid\"],[[42873,42873],\"mapped\",[42874]],[[42874,42874],\"valid\"],[[42875,42875],\"mapped\",[42876]],[[42876,42876],\"valid\"],[[42877,42877],\"mapped\",[7545]],[[42878,42878],\"mapped\",[42879]],[[42879,42879],\"valid\"],[[42880,42880],\"mapped\",[42881]],[[42881,42881],\"valid\"],[[42882,42882],\"mapped\",[42883]],[[42883,42883],\"valid\"],[[42884,42884],\"mapped\",[42885]],[[42885,42885],\"valid\"],[[42886,42886],\"mapped\",[42887]],[[42887,42888],\"valid\"],[[42889,42890],\"valid\",[],\"NV8\"],[[42891,42891],\"mapped\",[42892]],[[42892,42892],\"valid\"],[[42893,42893],\"mapped\",[613]],[[42894,42894],\"valid\"],[[42895,42895],\"valid\"],[[42896,42896],\"mapped\",[42897]],[[42897,42897],\"valid\"],[[42898,42898],\"mapped\",[42899]],[[42899,42899],\"valid\"],[[42900,42901],\"valid\"],[[42902,42902],\"mapped\",[42903]],[[42903,42903],\"valid\"],[[42904,42904],\"mapped\",[42905]],[[42905,42905],\"valid\"],[[42906,42906],\"mapped\",[42907]],[[42907,42907],\"valid\"],[[42908,42908],\"mapped\",[42909]],[[42909,42909],\"valid\"],[[42910,42910],\"mapped\",[42911]],[[42911,42911],\"valid\"],[[42912,42912],\"mapped\",[42913]],[[42913,42913],\"valid\"],[[42914,42914],\"mapped\",[42915]],[[42915,42915],\"valid\"],[[42916,42916],\"mapped\",[42917]],[[42917,42917],\"valid\"],[[42918,42918],\"mapped\",[42919]],[[42919,42919],\"valid\"],[[42920,42920],\"mapped\",[42921]],[[42921,42921],\"valid\"],[[42922,42922],\"mapped\",[614]],[[42923,42923],\"mapped\",[604]],[[42924,42924],\"mapped\",[609]],[[42925,42925],\"mapped\",[620]],[[42926,42927],\"disallowed\"],[[42928,42928],\"mapped\",[670]],[[42929,42929],\"mapped\",[647]],[[42930,42930],\"mapped\",[669]],[[42931,42931],\"mapped\",[43859]],[[42932,42932],\"mapped\",[42933]],[[42933,42933],\"valid\"],[[42934,42934],\"mapped\",[42935]],[[42935,42935],\"valid\"],[[42936,42998],\"disallowed\"],[[42999,42999],\"valid\"],[[43000,43000],\"mapped\",[295]],[[43001,43001],\"mapped\",[339]],[[43002,43002],\"valid\"],[[43003,43007],\"valid\"],[[43008,43047],\"valid\"],[[43048,43051],\"valid\",[],\"NV8\"],[[43052,43055],\"disallowed\"],[[43056,43065],\"valid\",[],\"NV8\"],[[43066,43071],\"disallowed\"],[[43072,43123],\"valid\"],[[43124,43127],\"valid\",[],\"NV8\"],[[43128,43135],\"disallowed\"],[[43136,43204],\"valid\"],[[43205,43213],\"disallowed\"],[[43214,43215],\"valid\",[],\"NV8\"],[[43216,43225],\"valid\"],[[43226,43231],\"disallowed\"],[[43232,43255],\"valid\"],[[43256,43258],\"valid\",[],\"NV8\"],[[43259,43259],\"valid\"],[[43260,43260],\"valid\",[],\"NV8\"],[[43261,43261],\"valid\"],[[43262,43263],\"disallowed\"],[[43264,43309],\"valid\"],[[43310,43311],\"valid\",[],\"NV8\"],[[43312,43347],\"valid\"],[[43348,43358],\"disallowed\"],[[43359,43359],\"valid\",[],\"NV8\"],[[43360,43388],\"valid\",[],\"NV8\"],[[43389,43391],\"disallowed\"],[[43392,43456],\"valid\"],[[43457,43469],\"valid\",[],\"NV8\"],[[43470,43470],\"disallowed\"],[[43471,43481],\"valid\"],[[43482,43485],\"disallowed\"],[[43486,43487],\"valid\",[],\"NV8\"],[[43488,43518],\"valid\"],[[43519,43519],\"disallowed\"],[[43520,43574],\"valid\"],[[43575,43583],\"disallowed\"],[[43584,43597],\"valid\"],[[43598,43599],\"disallowed\"],[[43600,43609],\"valid\"],[[43610,43611],\"disallowed\"],[[43612,43615],\"valid\",[],\"NV8\"],[[43616,43638],\"valid\"],[[43639,43641],\"valid\",[],\"NV8\"],[[43642,43643],\"valid\"],[[43644,43647],\"valid\"],[[43648,43714],\"valid\"],[[43715,43738],\"disallowed\"],[[43739,43741],\"valid\"],[[43742,43743],\"valid\",[],\"NV8\"],[[43744,43759],\"valid\"],[[43760,43761],\"valid\",[],\"NV8\"],[[43762,43766],\"valid\"],[[43767,43776],\"disallowed\"],[[43777,43782],\"valid\"],[[43783,43784],\"disallowed\"],[[43785,43790],\"valid\"],[[43791,43792],\"disallowed\"],[[43793,43798],\"valid\"],[[43799,43807],\"disallowed\"],[[43808,43814],\"valid\"],[[43815,43815],\"disallowed\"],[[43816,43822],\"valid\"],[[43823,43823],\"disallowed\"],[[43824,43866],\"valid\"],[[43867,43867],\"valid\",[],\"NV8\"],[[43868,43868],\"mapped\",[42791]],[[43869,43869],\"mapped\",[43831]],[[43870,43870],\"mapped\",[619]],[[43871,43871],\"mapped\",[43858]],[[43872,43875],\"valid\"],[[43876,43877],\"valid\"],[[43878,43887],\"disallowed\"],[[43888,43888],\"mapped\",[5024]],[[43889,43889],\"mapped\",[5025]],[[43890,43890],\"mapped\",[5026]],[[43891,43891],\"mapped\",[5027]],[[43892,43892],\"mapped\",[5028]],[[43893,43893],\"mapped\",[5029]],[[43894,43894],\"mapped\",[5030]],[[43895,43895],\"mapped\",[5031]],[[43896,43896],\"mapped\",[5032]],[[43897,43897],\"mapped\",[5033]],[[43898,43898],\"mapped\",[5034]],[[43899,43899],\"mapped\",[5035]],[[43900,43900],\"mapped\",[5036]],[[43901,43901],\"mapped\",[5037]],[[43902,43902],\"mapped\",[5038]],[[43903,43903],\"mapped\",[5039]],[[43904,43904],\"mapped\",[5040]],[[43905,43905],\"mapped\",[5041]],[[43906,43906],\"mapped\",[5042]],[[43907,43907],\"mapped\",[5043]],[[43908,43908],\"mapped\",[5044]],[[43909,43909],\"mapped\",[5045]],[[43910,43910],\"mapped\",[5046]],[[43911,43911],\"mapped\",[5047]],[[43912,43912],\"mapped\",[5048]],[[43913,43913],\"mapped\",[5049]],[[43914,43914],\"mapped\",[5050]],[[43915,43915],\"mapped\",[5051]],[[43916,43916],\"mapped\",[5052]],[[43917,43917],\"mapped\",[5053]],[[43918,43918],\"mapped\",[5054]],[[43919,43919],\"mapped\",[5055]],[[43920,43920],\"mapped\",[5056]],[[43921,43921],\"mapped\",[5057]],[[43922,43922],\"mapped\",[5058]],[[43923,43923],\"mapped\",[5059]],[[43924,43924],\"mapped\",[5060]],[[43925,43925],\"mapped\",[5061]],[[43926,43926],\"mapped\",[5062]],[[43927,43927],\"mapped\",[5063]],[[43928,43928],\"mapped\",[5064]],[[43929,43929],\"mapped\",[5065]],[[43930,43930],\"mapped\",[5066]],[[43931,43931],\"mapped\",[5067]],[[43932,43932],\"mapped\",[5068]],[[43933,43933],\"mapped\",[5069]],[[43934,43934],\"mapped\",[5070]],[[43935,43935],\"mapped\",[5071]],[[43936,43936],\"mapped\",[5072]],[[43937,43937],\"mapped\",[5073]],[[43938,43938],\"mapped\",[5074]],[[43939,43939],\"mapped\",[5075]],[[43940,43940],\"mapped\",[5076]],[[43941,43941],\"mapped\",[5077]],[[43942,43942],\"mapped\",[5078]],[[43943,43943],\"mapped\",[5079]],[[43944,43944],\"mapped\",[5080]],[[43945,43945],\"mapped\",[5081]],[[43946,43946],\"mapped\",[5082]],[[43947,43947],\"mapped\",[5083]],[[43948,43948],\"mapped\",[5084]],[[43949,43949],\"mapped\",[5085]],[[43950,43950],\"mapped\",[5086]],[[43951,43951],\"mapped\",[5087]],[[43952,43952],\"mapped\",[5088]],[[43953,43953],\"mapped\",[5089]],[[43954,43954],\"mapped\",[5090]],[[43955,43955],\"mapped\",[5091]],[[43956,43956],\"mapped\",[5092]],[[43957,43957],\"mapped\",[5093]],[[43958,43958],\"mapped\",[5094]],[[43959,43959],\"mapped\",[5095]],[[43960,43960],\"mapped\",[5096]],[[43961,43961],\"mapped\",[5097]],[[43962,43962],\"mapped\",[5098]],[[43963,43963],\"mapped\",[5099]],[[43964,43964],\"mapped\",[5100]],[[43965,43965],\"mapped\",[5101]],[[43966,43966],\"mapped\",[5102]],[[43967,43967],\"mapped\",[5103]],[[43968,44010],\"valid\"],[[44011,44011],\"valid\",[],\"NV8\"],[[44012,44013],\"valid\"],[[44014,44015],\"disallowed\"],[[44016,44025],\"valid\"],[[44026,44031],\"disallowed\"],[[44032,55203],\"valid\"],[[55204,55215],\"disallowed\"],[[55216,55238],\"valid\",[],\"NV8\"],[[55239,55242],\"disallowed\"],[[55243,55291],\"valid\",[],\"NV8\"],[[55292,55295],\"disallowed\"],[[55296,57343],\"disallowed\"],[[57344,63743],\"disallowed\"],[[63744,63744],\"mapped\",[35912]],[[63745,63745],\"mapped\",[26356]],[[63746,63746],\"mapped\",[36554]],[[63747,63747],\"mapped\",[36040]],[[63748,63748],\"mapped\",[28369]],[[63749,63749],\"mapped\",[20018]],[[63750,63750],\"mapped\",[21477]],[[63751,63752],\"mapped\",[40860]],[[63753,63753],\"mapped\",[22865]],[[63754,63754],\"mapped\",[37329]],[[63755,63755],\"mapped\",[21895]],[[63756,63756],\"mapped\",[22856]],[[63757,63757],\"mapped\",[25078]],[[63758,63758],\"mapped\",[30313]],[[63759,63759],\"mapped\",[32645]],[[63760,63760],\"mapped\",[34367]],[[63761,63761],\"mapped\",[34746]],[[63762,63762],\"mapped\",[35064]],[[63763,63763],\"mapped\",[37007]],[[63764,63764],\"mapped\",[27138]],[[63765,63765],\"mapped\",[27931]],[[63766,63766],\"mapped\",[28889]],[[63767,63767],\"mapped\",[29662]],[[63768,63768],\"mapped\",[33853]],[[63769,63769],\"mapped\",[37226]],[[63770,63770],\"mapped\",[39409]],[[63771,63771],\"mapped\",[20098]],[[63772,63772],\"mapped\",[21365]],[[63773,63773],\"mapped\",[27396]],[[63774,63774],\"mapped\",[29211]],[[63775,63775],\"mapped\",[34349]],[[63776,63776],\"mapped\",[40478]],[[63777,63777],\"mapped\",[23888]],[[63778,63778],\"mapped\",[28651]],[[63779,63779],\"mapped\",[34253]],[[63780,63780],\"mapped\",[35172]],[[63781,63781],\"mapped\",[25289]],[[63782,63782],\"mapped\",[33240]],[[63783,63783],\"mapped\",[34847]],[[63784,63784],\"mapped\",[24266]],[[63785,63785],\"mapped\",[26391]],[[63786,63786],\"mapped\",[28010]],[[63787,63787],\"mapped\",[29436]],[[63788,63788],\"mapped\",[37070]],[[63789,63789],\"mapped\",[20358]],[[63790,63790],\"mapped\",[20919]],[[63791,63791],\"mapped\",[21214]],[[63792,63792],\"mapped\",[25796]],[[63793,63793],\"mapped\",[27347]],[[63794,63794],\"mapped\",[29200]],[[63795,63795],\"mapped\",[30439]],[[63796,63796],\"mapped\",[32769]],[[63797,63797],\"mapped\",[34310]],[[63798,63798],\"mapped\",[34396]],[[63799,63799],\"mapped\",[36335]],[[63800,63800],\"mapped\",[38706]],[[63801,63801],\"mapped\",[39791]],[[63802,63802],\"mapped\",[40442]],[[63803,63803],\"mapped\",[30860]],[[63804,63804],\"mapped\",[31103]],[[63805,63805],\"mapped\",[32160]],[[63806,63806],\"mapped\",[33737]],[[63807,63807],\"mapped\",[37636]],[[63808,63808],\"mapped\",[40575]],[[63809,63809],\"mapped\",[35542]],[[63810,63810],\"mapped\",[22751]],[[63811,63811],\"mapped\",[24324]],[[63812,63812],\"mapped\",[31840]],[[63813,63813],\"mapped\",[32894]],[[63814,63814],\"mapped\",[29282]],[[63815,63815],\"mapped\",[30922]],[[63816,63816],\"mapped\",[36034]],[[63817,63817],\"mapped\",[38647]],[[63818,63818],\"mapped\",[22744]],[[63819,63819],\"mapped\",[23650]],[[63820,63820],\"mapped\",[27155]],[[63821,63821],\"mapped\",[28122]],[[63822,63822],\"mapped\",[28431]],[[63823,63823],\"mapped\",[32047]],[[63824,63824],\"mapped\",[32311]],[[63825,63825],\"mapped\",[38475]],[[63826,63826],\"mapped\",[21202]],[[63827,63827],\"mapped\",[32907]],[[63828,63828],\"mapped\",[20956]],[[63829,63829],\"mapped\",[20940]],[[63830,63830],\"mapped\",[31260]],[[63831,63831],\"mapped\",[32190]],[[63832,63832],\"mapped\",[33777]],[[63833,63833],\"mapped\",[38517]],[[63834,63834],\"mapped\",[35712]],[[63835,63835],\"mapped\",[25295]],[[63836,63836],\"mapped\",[27138]],[[63837,63837],\"mapped\",[35582]],[[63838,63838],\"mapped\",[20025]],[[63839,63839],\"mapped\",[23527]],[[63840,63840],\"mapped\",[24594]],[[63841,63841],\"mapped\",[29575]],[[63842,63842],\"mapped\",[30064]],[[63843,63843],\"mapped\",[21271]],[[63844,63844],\"mapped\",[30971]],[[63845,63845],\"mapped\",[20415]],[[63846,63846],\"mapped\",[24489]],[[63847,63847],\"mapped\",[19981]],[[63848,63848],\"mapped\",[27852]],[[63849,63849],\"mapped\",[25976]],[[63850,63850],\"mapped\",[32034]],[[63851,63851],\"mapped\",[21443]],[[63852,63852],\"mapped\",[22622]],[[63853,63853],\"mapped\",[30465]],[[63854,63854],\"mapped\",[33865]],[[63855,63855],\"mapped\",[35498]],[[63856,63856],\"mapped\",[27578]],[[63857,63857],\"mapped\",[36784]],[[63858,63858],\"mapped\",[27784]],[[63859,63859],\"mapped\",[25342]],[[63860,63860],\"mapped\",[33509]],[[63861,63861],\"mapped\",[25504]],[[63862,63862],\"mapped\",[30053]],[[63863,63863],\"mapped\",[20142]],[[63864,63864],\"mapped\",[20841]],[[63865,63865],\"mapped\",[20937]],[[63866,63866],\"mapped\",[26753]],[[63867,63867],\"mapped\",[31975]],[[63868,63868],\"mapped\",[33391]],[[63869,63869],\"mapped\",[35538]],[[63870,63870],\"mapped\",[37327]],[[63871,63871],\"mapped\",[21237]],[[63872,63872],\"mapped\",[21570]],[[63873,63873],\"mapped\",[22899]],[[63874,63874],\"mapped\",[24300]],[[63875,63875],\"mapped\",[26053]],[[63876,63876],\"mapped\",[28670]],[[63877,63877],\"mapped\",[31018]],[[63878,63878],\"mapped\",[38317]],[[63879,63879],\"mapped\",[39530]],[[63880,63880],\"mapped\",[40599]],[[63881,63881],\"mapped\",[40654]],[[63882,63882],\"mapped\",[21147]],[[63883,63883],\"mapped\",[26310]],[[63884,63884],\"mapped\",[27511]],[[63885,63885],\"mapped\",[36706]],[[63886,63886],\"mapped\",[24180]],[[63887,63887],\"mapped\",[24976]],[[63888,63888],\"mapped\",[25088]],[[63889,63889],\"mapped\",[25754]],[[63890,63890],\"mapped\",[28451]],[[63891,63891],\"mapped\",[29001]],[[63892,63892],\"mapped\",[29833]],[[63893,63893],\"mapped\",[31178]],[[63894,63894],\"mapped\",[32244]],[[63895,63895],\"mapped\",[32879]],[[63896,63896],\"mapped\",[36646]],[[63897,63897],\"mapped\",[34030]],[[63898,63898],\"mapped\",[36899]],[[63899,63899],\"mapped\",[37706]],[[63900,63900],\"mapped\",[21015]],[[63901,63901],\"mapped\",[21155]],[[63902,63902],\"mapped\",[21693]],[[63903,63903],\"mapped\",[28872]],[[63904,63904],\"mapped\",[35010]],[[63905,63905],\"mapped\",[35498]],[[63906,63906],\"mapped\",[24265]],[[63907,63907],\"mapped\",[24565]],[[63908,63908],\"mapped\",[25467]],[[63909,63909],\"mapped\",[27566]],[[63910,63910],\"mapped\",[31806]],[[63911,63911],\"mapped\",[29557]],[[63912,63912],\"mapped\",[20196]],[[63913,63913],\"mapped\",[22265]],[[63914,63914],\"mapped\",[23527]],[[63915,63915],\"mapped\",[23994]],[[63916,63916],\"mapped\",[24604]],[[63917,63917],\"mapped\",[29618]],[[63918,63918],\"mapped\",[29801]],[[63919,63919],\"mapped\",[32666]],[[63920,63920],\"mapped\",[32838]],[[63921,63921],\"mapped\",[37428]],[[63922,63922],\"mapped\",[38646]],[[63923,63923],\"mapped\",[38728]],[[63924,63924],\"mapped\",[38936]],[[63925,63925],\"mapped\",[20363]],[[63926,63926],\"mapped\",[31150]],[[63927,63927],\"mapped\",[37300]],[[63928,63928],\"mapped\",[38584]],[[63929,63929],\"mapped\",[24801]],[[63930,63930],\"mapped\",[20102]],[[63931,63931],\"mapped\",[20698]],[[63932,63932],\"mapped\",[23534]],[[63933,63933],\"mapped\",[23615]],[[63934,63934],\"mapped\",[26009]],[[63935,63935],\"mapped\",[27138]],[[63936,63936],\"mapped\",[29134]],[[63937,63937],\"mapped\",[30274]],[[63938,63938],\"mapped\",[34044]],[[63939,63939],\"mapped\",[36988]],[[63940,63940],\"mapped\",[40845]],[[63941,63941],\"mapped\",[26248]],[[63942,63942],\"mapped\",[38446]],[[63943,63943],\"mapped\",[21129]],[[63944,63944],\"mapped\",[26491]],[[63945,63945],\"mapped\",[26611]],[[63946,63946],\"mapped\",[27969]],[[63947,63947],\"mapped\",[28316]],[[63948,63948],\"mapped\",[29705]],[[63949,63949],\"mapped\",[30041]],[[63950,63950],\"mapped\",[30827]],[[63951,63951],\"mapped\",[32016]],[[63952,63952],\"mapped\",[39006]],[[63953,63953],\"mapped\",[20845]],[[63954,63954],\"mapped\",[25134]],[[63955,63955],\"mapped\",[38520]],[[63956,63956],\"mapped\",[20523]],[[63957,63957],\"mapped\",[23833]],[[63958,63958],\"mapped\",[28138]],[[63959,63959],\"mapped\",[36650]],[[63960,63960],\"mapped\",[24459]],[[63961,63961],\"mapped\",[24900]],[[63962,63962],\"mapped\",[26647]],[[63963,63963],\"mapped\",[29575]],[[63964,63964],\"mapped\",[38534]],[[63965,63965],\"mapped\",[21033]],[[63966,63966],\"mapped\",[21519]],[[63967,63967],\"mapped\",[23653]],[[63968,63968],\"mapped\",[26131]],[[63969,63969],\"mapped\",[26446]],[[63970,63970],\"mapped\",[26792]],[[63971,63971],\"mapped\",[27877]],[[63972,63972],\"mapped\",[29702]],[[63973,63973],\"mapped\",[30178]],[[63974,63974],\"mapped\",[32633]],[[63975,63975],\"mapped\",[35023]],[[63976,63976],\"mapped\",[35041]],[[63977,63977],\"mapped\",[37324]],[[63978,63978],\"mapped\",[38626]],[[63979,63979],\"mapped\",[21311]],[[63980,63980],\"mapped\",[28346]],[[63981,63981],\"mapped\",[21533]],[[63982,63982],\"mapped\",[29136]],[[63983,63983],\"mapped\",[29848]],[[63984,63984],\"mapped\",[34298]],[[63985,63985],\"mapped\",[38563]],[[63986,63986],\"mapped\",[40023]],[[63987,63987],\"mapped\",[40607]],[[63988,63988],\"mapped\",[26519]],[[63989,63989],\"mapped\",[28107]],[[63990,63990],\"mapped\",[33256]],[[63991,63991],\"mapped\",[31435]],[[63992,63992],\"mapped\",[31520]],[[63993,63993],\"mapped\",[31890]],[[63994,63994],\"mapped\",[29376]],[[63995,63995],\"mapped\",[28825]],[[63996,63996],\"mapped\",[35672]],[[63997,63997],\"mapped\",[20160]],[[63998,63998],\"mapped\",[33590]],[[63999,63999],\"mapped\",[21050]],[[64000,64000],\"mapped\",[20999]],[[64001,64001],\"mapped\",[24230]],[[64002,64002],\"mapped\",[25299]],[[64003,64003],\"mapped\",[31958]],[[64004,64004],\"mapped\",[23429]],[[64005,64005],\"mapped\",[27934]],[[64006,64006],\"mapped\",[26292]],[[64007,64007],\"mapped\",[36667]],[[64008,64008],\"mapped\",[34892]],[[64009,64009],\"mapped\",[38477]],[[64010,64010],\"mapped\",[35211]],[[64011,64011],\"mapped\",[24275]],[[64012,64012],\"mapped\",[20800]],[[64013,64013],\"mapped\",[21952]],[[64014,64015],\"valid\"],[[64016,64016],\"mapped\",[22618]],[[64017,64017],\"valid\"],[[64018,64018],\"mapped\",[26228]],[[64019,64020],\"valid\"],[[64021,64021],\"mapped\",[20958]],[[64022,64022],\"mapped\",[29482]],[[64023,64023],\"mapped\",[30410]],[[64024,64024],\"mapped\",[31036]],[[64025,64025],\"mapped\",[31070]],[[64026,64026],\"mapped\",[31077]],[[64027,64027],\"mapped\",[31119]],[[64028,64028],\"mapped\",[38742]],[[64029,64029],\"mapped\",[31934]],[[64030,64030],\"mapped\",[32701]],[[64031,64031],\"valid\"],[[64032,64032],\"mapped\",[34322]],[[64033,64033],\"valid\"],[[64034,64034],\"mapped\",[35576]],[[64035,64036],\"valid\"],[[64037,64037],\"mapped\",[36920]],[[64038,64038],\"mapped\",[37117]],[[64039,64041],\"valid\"],[[64042,64042],\"mapped\",[39151]],[[64043,64043],\"mapped\",[39164]],[[64044,64044],\"mapped\",[39208]],[[64045,64045],\"mapped\",[40372]],[[64046,64046],\"mapped\",[37086]],[[64047,64047],\"mapped\",[38583]],[[64048,64048],\"mapped\",[20398]],[[64049,64049],\"mapped\",[20711]],[[64050,64050],\"mapped\",[20813]],[[64051,64051],\"mapped\",[21193]],[[64052,64052],\"mapped\",[21220]],[[64053,64053],\"mapped\",[21329]],[[64054,64054],\"mapped\",[21917]],[[64055,64055],\"mapped\",[22022]],[[64056,64056],\"mapped\",[22120]],[[64057,64057],\"mapped\",[22592]],[[64058,64058],\"mapped\",[22696]],[[64059,64059],\"mapped\",[23652]],[[64060,64060],\"mapped\",[23662]],[[64061,64061],\"mapped\",[24724]],[[64062,64062],\"mapped\",[24936]],[[64063,64063],\"mapped\",[24974]],[[64064,64064],\"mapped\",[25074]],[[64065,64065],\"mapped\",[25935]],[[64066,64066],\"mapped\",[26082]],[[64067,64067],\"mapped\",[26257]],[[64068,64068],\"mapped\",[26757]],[[64069,64069],\"mapped\",[28023]],[[64070,64070],\"mapped\",[28186]],[[64071,64071],\"mapped\",[28450]],[[64072,64072],\"mapped\",[29038]],[[64073,64073],\"mapped\",[29227]],[[64074,64074],\"mapped\",[29730]],[[64075,64075],\"mapped\",[30865]],[[64076,64076],\"mapped\",[31038]],[[64077,64077],\"mapped\",[31049]],[[64078,64078],\"mapped\",[31048]],[[64079,64079],\"mapped\",[31056]],[[64080,64080],\"mapped\",[31062]],[[64081,64081],\"mapped\",[31069]],[[64082,64082],\"mapped\",[31117]],[[64083,64083],\"mapped\",[31118]],[[64084,64084],\"mapped\",[31296]],[[64085,64085],\"mapped\",[31361]],[[64086,64086],\"mapped\",[31680]],[[64087,64087],\"mapped\",[32244]],[[64088,64088],\"mapped\",[32265]],[[64089,64089],\"mapped\",[32321]],[[64090,64090],\"mapped\",[32626]],[[64091,64091],\"mapped\",[32773]],[[64092,64092],\"mapped\",[33261]],[[64093,64094],\"mapped\",[33401]],[[64095,64095],\"mapped\",[33879]],[[64096,64096],\"mapped\",[35088]],[[64097,64097],\"mapped\",[35222]],[[64098,64098],\"mapped\",[35585]],[[64099,64099],\"mapped\",[35641]],[[64100,64100],\"mapped\",[36051]],[[64101,64101],\"mapped\",[36104]],[[64102,64102],\"mapped\",[36790]],[[64103,64103],\"mapped\",[36920]],[[64104,64104],\"mapped\",[38627]],[[64105,64105],\"mapped\",[38911]],[[64106,64106],\"mapped\",[38971]],[[64107,64107],\"mapped\",[24693]],[[64108,64108],\"mapped\",[148206]],[[64109,64109],\"mapped\",[33304]],[[64110,64111],\"disallowed\"],[[64112,64112],\"mapped\",[20006]],[[64113,64113],\"mapped\",[20917]],[[64114,64114],\"mapped\",[20840]],[[64115,64115],\"mapped\",[20352]],[[64116,64116],\"mapped\",[20805]],[[64117,64117],\"mapped\",[20864]],[[64118,64118],\"mapped\",[21191]],[[64119,64119],\"mapped\",[21242]],[[64120,64120],\"mapped\",[21917]],[[64121,64121],\"mapped\",[21845]],[[64122,64122],\"mapped\",[21913]],[[64123,64123],\"mapped\",[21986]],[[64124,64124],\"mapped\",[22618]],[[64125,64125],\"mapped\",[22707]],[[64126,64126],\"mapped\",[22852]],[[64127,64127],\"mapped\",[22868]],[[64128,64128],\"mapped\",[23138]],[[64129,64129],\"mapped\",[23336]],[[64130,64130],\"mapped\",[24274]],[[64131,64131],\"mapped\",[24281]],[[64132,64132],\"mapped\",[24425]],[[64133,64133],\"mapped\",[24493]],[[64134,64134],\"mapped\",[24792]],[[64135,64135],\"mapped\",[24910]],[[64136,64136],\"mapped\",[24840]],[[64137,64137],\"mapped\",[24974]],[[64138,64138],\"mapped\",[24928]],[[64139,64139],\"mapped\",[25074]],[[64140,64140],\"mapped\",[25140]],[[64141,64141],\"mapped\",[25540]],[[64142,64142],\"mapped\",[25628]],[[64143,64143],\"mapped\",[25682]],[[64144,64144],\"mapped\",[25942]],[[64145,64145],\"mapped\",[26228]],[[64146,64146],\"mapped\",[26391]],[[64147,64147],\"mapped\",[26395]],[[64148,64148],\"mapped\",[26454]],[[64149,64149],\"mapped\",[27513]],[[64150,64150],\"mapped\",[27578]],[[64151,64151],\"mapped\",[27969]],[[64152,64152],\"mapped\",[28379]],[[64153,64153],\"mapped\",[28363]],[[64154,64154],\"mapped\",[28450]],[[64155,64155],\"mapped\",[28702]],[[64156,64156],\"mapped\",[29038]],[[64157,64157],\"mapped\",[30631]],[[64158,64158],\"mapped\",[29237]],[[64159,64159],\"mapped\",[29359]],[[64160,64160],\"mapped\",[29482]],[[64161,64161],\"mapped\",[29809]],[[64162,64162],\"mapped\",[29958]],[[64163,64163],\"mapped\",[30011]],[[64164,64164],\"mapped\",[30237]],[[64165,64165],\"mapped\",[30239]],[[64166,64166],\"mapped\",[30410]],[[64167,64167],\"mapped\",[30427]],[[64168,64168],\"mapped\",[30452]],[[64169,64169],\"mapped\",[30538]],[[64170,64170],\"mapped\",[30528]],[[64171,64171],\"mapped\",[30924]],[[64172,64172],\"mapped\",[31409]],[[64173,64173],\"mapped\",[31680]],[[64174,64174],\"mapped\",[31867]],[[64175,64175],\"mapped\",[32091]],[[64176,64176],\"mapped\",[32244]],[[64177,64177],\"mapped\",[32574]],[[64178,64178],\"mapped\",[32773]],[[64179,64179],\"mapped\",[33618]],[[64180,64180],\"mapped\",[33775]],[[64181,64181],\"mapped\",[34681]],[[64182,64182],\"mapped\",[35137]],[[64183,64183],\"mapped\",[35206]],[[64184,64184],\"mapped\",[35222]],[[64185,64185],\"mapped\",[35519]],[[64186,64186],\"mapped\",[35576]],[[64187,64187],\"mapped\",[35531]],[[64188,64188],\"mapped\",[35585]],[[64189,64189],\"mapped\",[35582]],[[64190,64190],\"mapped\",[35565]],[[64191,64191],\"mapped\",[35641]],[[64192,64192],\"mapped\",[35722]],[[64193,64193],\"mapped\",[36104]],[[64194,64194],\"mapped\",[36664]],[[64195,64195],\"mapped\",[36978]],[[64196,64196],\"mapped\",[37273]],[[64197,64197],\"mapped\",[37494]],[[64198,64198],\"mapped\",[38524]],[[64199,64199],\"mapped\",[38627]],[[64200,64200],\"mapped\",[38742]],[[64201,64201],\"mapped\",[38875]],[[64202,64202],\"mapped\",[38911]],[[64203,64203],\"mapped\",[38923]],[[64204,64204],\"mapped\",[38971]],[[64205,64205],\"mapped\",[39698]],[[64206,64206],\"mapped\",[40860]],[[64207,64207],\"mapped\",[141386]],[[64208,64208],\"mapped\",[141380]],[[64209,64209],\"mapped\",[144341]],[[64210,64210],\"mapped\",[15261]],[[64211,64211],\"mapped\",[16408]],[[64212,64212],\"mapped\",[16441]],[[64213,64213],\"mapped\",[152137]],[[64214,64214],\"mapped\",[154832]],[[64215,64215],\"mapped\",[163539]],[[64216,64216],\"mapped\",[40771]],[[64217,64217],\"mapped\",[40846]],[[64218,64255],\"disallowed\"],[[64256,64256],\"mapped\",[102,102]],[[64257,64257],\"mapped\",[102,105]],[[64258,64258],\"mapped\",[102,108]],[[64259,64259],\"mapped\",[102,102,105]],[[64260,64260],\"mapped\",[102,102,108]],[[64261,64262],\"mapped\",[115,116]],[[64263,64274],\"disallowed\"],[[64275,64275],\"mapped\",[1396,1398]],[[64276,64276],\"mapped\",[1396,1381]],[[64277,64277],\"mapped\",[1396,1387]],[[64278,64278],\"mapped\",[1406,1398]],[[64279,64279],\"mapped\",[1396,1389]],[[64280,64284],\"disallowed\"],[[64285,64285],\"mapped\",[1497,1460]],[[64286,64286],\"valid\"],[[64287,64287],\"mapped\",[1522,1463]],[[64288,64288],\"mapped\",[1506]],[[64289,64289],\"mapped\",[1488]],[[64290,64290],\"mapped\",[1491]],[[64291,64291],\"mapped\",[1492]],[[64292,64292],\"mapped\",[1499]],[[64293,64293],\"mapped\",[1500]],[[64294,64294],\"mapped\",[1501]],[[64295,64295],\"mapped\",[1512]],[[64296,64296],\"mapped\",[1514]],[[64297,64297],\"disallowed_STD3_mapped\",[43]],[[64298,64298],\"mapped\",[1513,1473]],[[64299,64299],\"mapped\",[1513,1474]],[[64300,64300],\"mapped\",[1513,1468,1473]],[[64301,64301],\"mapped\",[1513,1468,1474]],[[64302,64302],\"mapped\",[1488,1463]],[[64303,64303],\"mapped\",[1488,1464]],[[64304,64304],\"mapped\",[1488,1468]],[[64305,64305],\"mapped\",[1489,1468]],[[64306,64306],\"mapped\",[1490,1468]],[[64307,64307],\"mapped\",[1491,1468]],[[64308,64308],\"mapped\",[1492,1468]],[[64309,64309],\"mapped\",[1493,1468]],[[64310,64310],\"mapped\",[1494,1468]],[[64311,64311],\"disallowed\"],[[64312,64312],\"mapped\",[1496,1468]],[[64313,64313],\"mapped\",[1497,1468]],[[64314,64314],\"mapped\",[1498,1468]],[[64315,64315],\"mapped\",[1499,1468]],[[64316,64316],\"mapped\",[1500,1468]],[[64317,64317],\"disallowed\"],[[64318,64318],\"mapped\",[1502,1468]],[[64319,64319],\"disallowed\"],[[64320,64320],\"mapped\",[1504,1468]],[[64321,64321],\"mapped\",[1505,1468]],[[64322,64322],\"disallowed\"],[[64323,64323],\"mapped\",[1507,1468]],[[64324,64324],\"mapped\",[1508,1468]],[[64325,64325],\"disallowed\"],[[64326,64326],\"mapped\",[1510,1468]],[[64327,64327],\"mapped\",[1511,1468]],[[64328,64328],\"mapped\",[1512,1468]],[[64329,64329],\"mapped\",[1513,1468]],[[64330,64330],\"mapped\",[1514,1468]],[[64331,64331],\"mapped\",[1493,1465]],[[64332,64332],\"mapped\",[1489,1471]],[[64333,64333],\"mapped\",[1499,1471]],[[64334,64334],\"mapped\",[1508,1471]],[[64335,64335],\"mapped\",[1488,1500]],[[64336,64337],\"mapped\",[1649]],[[64338,64341],\"mapped\",[1659]],[[64342,64345],\"mapped\",[1662]],[[64346,64349],\"mapped\",[1664]],[[64350,64353],\"mapped\",[1658]],[[64354,64357],\"mapped\",[1663]],[[64358,64361],\"mapped\",[1657]],[[64362,64365],\"mapped\",[1700]],[[64366,64369],\"mapped\",[1702]],[[64370,64373],\"mapped\",[1668]],[[64374,64377],\"mapped\",[1667]],[[64378,64381],\"mapped\",[1670]],[[64382,64385],\"mapped\",[1671]],[[64386,64387],\"mapped\",[1677]],[[64388,64389],\"mapped\",[1676]],[[64390,64391],\"mapped\",[1678]],[[64392,64393],\"mapped\",[1672]],[[64394,64395],\"mapped\",[1688]],[[64396,64397],\"mapped\",[1681]],[[64398,64401],\"mapped\",[1705]],[[64402,64405],\"mapped\",[1711]],[[64406,64409],\"mapped\",[1715]],[[64410,64413],\"mapped\",[1713]],[[64414,64415],\"mapped\",[1722]],[[64416,64419],\"mapped\",[1723]],[[64420,64421],\"mapped\",[1728]],[[64422,64425],\"mapped\",[1729]],[[64426,64429],\"mapped\",[1726]],[[64430,64431],\"mapped\",[1746]],[[64432,64433],\"mapped\",[1747]],[[64434,64449],\"valid\",[],\"NV8\"],[[64450,64466],\"disallowed\"],[[64467,64470],\"mapped\",[1709]],[[64471,64472],\"mapped\",[1735]],[[64473,64474],\"mapped\",[1734]],[[64475,64476],\"mapped\",[1736]],[[64477,64477],\"mapped\",[1735,1652]],[[64478,64479],\"mapped\",[1739]],[[64480,64481],\"mapped\",[1733]],[[64482,64483],\"mapped\",[1737]],[[64484,64487],\"mapped\",[1744]],[[64488,64489],\"mapped\",[1609]],[[64490,64491],\"mapped\",[1574,1575]],[[64492,64493],\"mapped\",[1574,1749]],[[64494,64495],\"mapped\",[1574,1608]],[[64496,64497],\"mapped\",[1574,1735]],[[64498,64499],\"mapped\",[1574,1734]],[[64500,64501],\"mapped\",[1574,1736]],[[64502,64504],\"mapped\",[1574,1744]],[[64505,64507],\"mapped\",[1574,1609]],[[64508,64511],\"mapped\",[1740]],[[64512,64512],\"mapped\",[1574,1580]],[[64513,64513],\"mapped\",[1574,1581]],[[64514,64514],\"mapped\",[1574,1605]],[[64515,64515],\"mapped\",[1574,1609]],[[64516,64516],\"mapped\",[1574,1610]],[[64517,64517],\"mapped\",[1576,1580]],[[64518,64518],\"mapped\",[1576,1581]],[[64519,64519],\"mapped\",[1576,1582]],[[64520,64520],\"mapped\",[1576,1605]],[[64521,64521],\"mapped\",[1576,1609]],[[64522,64522],\"mapped\",[1576,1610]],[[64523,64523],\"mapped\",[1578,1580]],[[64524,64524],\"mapped\",[1578,1581]],[[64525,64525],\"mapped\",[1578,1582]],[[64526,64526],\"mapped\",[1578,1605]],[[64527,64527],\"mapped\",[1578,1609]],[[64528,64528],\"mapped\",[1578,1610]],[[64529,64529],\"mapped\",[1579,1580]],[[64530,64530],\"mapped\",[1579,1605]],[[64531,64531],\"mapped\",[1579,1609]],[[64532,64532],\"mapped\",[1579,1610]],[[64533,64533],\"mapped\",[1580,1581]],[[64534,64534],\"mapped\",[1580,1605]],[[64535,64535],\"mapped\",[1581,1580]],[[64536,64536],\"mapped\",[1581,1605]],[[64537,64537],\"mapped\",[1582,1580]],[[64538,64538],\"mapped\",[1582,1581]],[[64539,64539],\"mapped\",[1582,1605]],[[64540,64540],\"mapped\",[1587,1580]],[[64541,64541],\"mapped\",[1587,1581]],[[64542,64542],\"mapped\",[1587,1582]],[[64543,64543],\"mapped\",[1587,1605]],[[64544,64544],\"mapped\",[1589,1581]],[[64545,64545],\"mapped\",[1589,1605]],[[64546,64546],\"mapped\",[1590,1580]],[[64547,64547],\"mapped\",[1590,1581]],[[64548,64548],\"mapped\",[1590,1582]],[[64549,64549],\"mapped\",[1590,1605]],[[64550,64550],\"mapped\",[1591,1581]],[[64551,64551],\"mapped\",[1591,1605]],[[64552,64552],\"mapped\",[1592,1605]],[[64553,64553],\"mapped\",[1593,1580]],[[64554,64554],\"mapped\",[1593,1605]],[[64555,64555],\"mapped\",[1594,1580]],[[64556,64556],\"mapped\",[1594,1605]],[[64557,64557],\"mapped\",[1601,1580]],[[64558,64558],\"mapped\",[1601,1581]],[[64559,64559],\"mapped\",[1601,1582]],[[64560,64560],\"mapped\",[1601,1605]],[[64561,64561],\"mapped\",[1601,1609]],[[64562,64562],\"mapped\",[1601,1610]],[[64563,64563],\"mapped\",[1602,1581]],[[64564,64564],\"mapped\",[1602,1605]],[[64565,64565],\"mapped\",[1602,1609]],[[64566,64566],\"mapped\",[1602,1610]],[[64567,64567],\"mapped\",[1603,1575]],[[64568,64568],\"mapped\",[1603,1580]],[[64569,64569],\"mapped\",[1603,1581]],[[64570,64570],\"mapped\",[1603,1582]],[[64571,64571],\"mapped\",[1603,1604]],[[64572,64572],\"mapped\",[1603,1605]],[[64573,64573],\"mapped\",[1603,1609]],[[64574,64574],\"mapped\",[1603,1610]],[[64575,64575],\"mapped\",[1604,1580]],[[64576,64576],\"mapped\",[1604,1581]],[[64577,64577],\"mapped\",[1604,1582]],[[64578,64578],\"mapped\",[1604,1605]],[[64579,64579],\"mapped\",[1604,1609]],[[64580,64580],\"mapped\",[1604,1610]],[[64581,64581],\"mapped\",[1605,1580]],[[64582,64582],\"mapped\",[1605,1581]],[[64583,64583],\"mapped\",[1605,1582]],[[64584,64584],\"mapped\",[1605,1605]],[[64585,64585],\"mapped\",[1605,1609]],[[64586,64586],\"mapped\",[1605,1610]],[[64587,64587],\"mapped\",[1606,1580]],[[64588,64588],\"mapped\",[1606,1581]],[[64589,64589],\"mapped\",[1606,1582]],[[64590,64590],\"mapped\",[1606,1605]],[[64591,64591],\"mapped\",[1606,1609]],[[64592,64592],\"mapped\",[1606,1610]],[[64593,64593],\"mapped\",[1607,1580]],[[64594,64594],\"mapped\",[1607,1605]],[[64595,64595],\"mapped\",[1607,1609]],[[64596,64596],\"mapped\",[1607,1610]],[[64597,64597],\"mapped\",[1610,1580]],[[64598,64598],\"mapped\",[1610,1581]],[[64599,64599],\"mapped\",[1610,1582]],[[64600,64600],\"mapped\",[1610,1605]],[[64601,64601],\"mapped\",[1610,1609]],[[64602,64602],\"mapped\",[1610,1610]],[[64603,64603],\"mapped\",[1584,1648]],[[64604,64604],\"mapped\",[1585,1648]],[[64605,64605],\"mapped\",[1609,1648]],[[64606,64606],\"disallowed_STD3_mapped\",[32,1612,1617]],[[64607,64607],\"disallowed_STD3_mapped\",[32,1613,1617]],[[64608,64608],\"disallowed_STD3_mapped\",[32,1614,1617]],[[64609,64609],\"disallowed_STD3_mapped\",[32,1615,1617]],[[64610,64610],\"disallowed_STD3_mapped\",[32,1616,1617]],[[64611,64611],\"disallowed_STD3_mapped\",[32,1617,1648]],[[64612,64612],\"mapped\",[1574,1585]],[[64613,64613],\"mapped\",[1574,1586]],[[64614,64614],\"mapped\",[1574,1605]],[[64615,64615],\"mapped\",[1574,1606]],[[64616,64616],\"mapped\",[1574,1609]],[[64617,64617],\"mapped\",[1574,1610]],[[64618,64618],\"mapped\",[1576,1585]],[[64619,64619],\"mapped\",[1576,1586]],[[64620,64620],\"mapped\",[1576,1605]],[[64621,64621],\"mapped\",[1576,1606]],[[64622,64622],\"mapped\",[1576,1609]],[[64623,64623],\"mapped\",[1576,1610]],[[64624,64624],\"mapped\",[1578,1585]],[[64625,64625],\"mapped\",[1578,1586]],[[64626,64626],\"mapped\",[1578,1605]],[[64627,64627],\"mapped\",[1578,1606]],[[64628,64628],\"mapped\",[1578,1609]],[[64629,64629],\"mapped\",[1578,1610]],[[64630,64630],\"mapped\",[1579,1585]],[[64631,64631],\"mapped\",[1579,1586]],[[64632,64632],\"mapped\",[1579,1605]],[[64633,64633],\"mapped\",[1579,1606]],[[64634,64634],\"mapped\",[1579,1609]],[[64635,64635],\"mapped\",[1579,1610]],[[64636,64636],\"mapped\",[1601,1609]],[[64637,64637],\"mapped\",[1601,1610]],[[64638,64638],\"mapped\",[1602,1609]],[[64639,64639],\"mapped\",[1602,1610]],[[64640,64640],\"mapped\",[1603,1575]],[[64641,64641],\"mapped\",[1603,1604]],[[64642,64642],\"mapped\",[1603,1605]],[[64643,64643],\"mapped\",[1603,1609]],[[64644,64644],\"mapped\",[1603,1610]],[[64645,64645],\"mapped\",[1604,1605]],[[64646,64646],\"mapped\",[1604,1609]],[[64647,64647],\"mapped\",[1604,1610]],[[64648,64648],\"mapped\",[1605,1575]],[[64649,64649],\"mapped\",[1605,1605]],[[64650,64650],\"mapped\",[1606,1585]],[[64651,64651],\"mapped\",[1606,1586]],[[64652,64652],\"mapped\",[1606,1605]],[[64653,64653],\"mapped\",[1606,1606]],[[64654,64654],\"mapped\",[1606,1609]],[[64655,64655],\"mapped\",[1606,1610]],[[64656,64656],\"mapped\",[1609,1648]],[[64657,64657],\"mapped\",[1610,1585]],[[64658,64658],\"mapped\",[1610,1586]],[[64659,64659],\"mapped\",[1610,1605]],[[64660,64660],\"mapped\",[1610,1606]],[[64661,64661],\"mapped\",[1610,1609]],[[64662,64662],\"mapped\",[1610,1610]],[[64663,64663],\"mapped\",[1574,1580]],[[64664,64664],\"mapped\",[1574,1581]],[[64665,64665],\"mapped\",[1574,1582]],[[64666,64666],\"mapped\",[1574,1605]],[[64667,64667],\"mapped\",[1574,1607]],[[64668,64668],\"mapped\",[1576,1580]],[[64669,64669],\"mapped\",[1576,1581]],[[64670,64670],\"mapped\",[1576,1582]],[[64671,64671],\"mapped\",[1576,1605]],[[64672,64672],\"mapped\",[1576,1607]],[[64673,64673],\"mapped\",[1578,1580]],[[64674,64674],\"mapped\",[1578,1581]],[[64675,64675],\"mapped\",[1578,1582]],[[64676,64676],\"mapped\",[1578,1605]],[[64677,64677],\"mapped\",[1578,1607]],[[64678,64678],\"mapped\",[1579,1605]],[[64679,64679],\"mapped\",[1580,1581]],[[64680,64680],\"mapped\",[1580,1605]],[[64681,64681],\"mapped\",[1581,1580]],[[64682,64682],\"mapped\",[1581,1605]],[[64683,64683],\"mapped\",[1582,1580]],[[64684,64684],\"mapped\",[1582,1605]],[[64685,64685],\"mapped\",[1587,1580]],[[64686,64686],\"mapped\",[1587,1581]],[[64687,64687],\"mapped\",[1587,1582]],[[64688,64688],\"mapped\",[1587,1605]],[[64689,64689],\"mapped\",[1589,1581]],[[64690,64690],\"mapped\",[1589,1582]],[[64691,64691],\"mapped\",[1589,1605]],[[64692,64692],\"mapped\",[1590,1580]],[[64693,64693],\"mapped\",[1590,1581]],[[64694,64694],\"mapped\",[1590,1582]],[[64695,64695],\"mapped\",[1590,1605]],[[64696,64696],\"mapped\",[1591,1581]],[[64697,64697],\"mapped\",[1592,1605]],[[64698,64698],\"mapped\",[1593,1580]],[[64699,64699],\"mapped\",[1593,1605]],[[64700,64700],\"mapped\",[1594,1580]],[[64701,64701],\"mapped\",[1594,1605]],[[64702,64702],\"mapped\",[1601,1580]],[[64703,64703],\"mapped\",[1601,1581]],[[64704,64704],\"mapped\",[1601,1582]],[[64705,64705],\"mapped\",[1601,1605]],[[64706,64706],\"mapped\",[1602,1581]],[[64707,64707],\"mapped\",[1602,1605]],[[64708,64708],\"mapped\",[1603,1580]],[[64709,64709],\"mapped\",[1603,1581]],[[64710,64710],\"mapped\",[1603,1582]],[[64711,64711],\"mapped\",[1603,1604]],[[64712,64712],\"mapped\",[1603,1605]],[[64713,64713],\"mapped\",[1604,1580]],[[64714,64714],\"mapped\",[1604,1581]],[[64715,64715],\"mapped\",[1604,1582]],[[64716,64716],\"mapped\",[1604,1605]],[[64717,64717],\"mapped\",[1604,1607]],[[64718,64718],\"mapped\",[1605,1580]],[[64719,64719],\"mapped\",[1605,1581]],[[64720,64720],\"mapped\",[1605,1582]],[[64721,64721],\"mapped\",[1605,1605]],[[64722,64722],\"mapped\",[1606,1580]],[[64723,64723],\"mapped\",[1606,1581]],[[64724,64724],\"mapped\",[1606,1582]],[[64725,64725],\"mapped\",[1606,1605]],[[64726,64726],\"mapped\",[1606,1607]],[[64727,64727],\"mapped\",[1607,1580]],[[64728,64728],\"mapped\",[1607,1605]],[[64729,64729],\"mapped\",[1607,1648]],[[64730,64730],\"mapped\",[1610,1580]],[[64731,64731],\"mapped\",[1610,1581]],[[64732,64732],\"mapped\",[1610,1582]],[[64733,64733],\"mapped\",[1610,1605]],[[64734,64734],\"mapped\",[1610,1607]],[[64735,64735],\"mapped\",[1574,1605]],[[64736,64736],\"mapped\",[1574,1607]],[[64737,64737],\"mapped\",[1576,1605]],[[64738,64738],\"mapped\",[1576,1607]],[[64739,64739],\"mapped\",[1578,1605]],[[64740,64740],\"mapped\",[1578,1607]],[[64741,64741],\"mapped\",[1579,1605]],[[64742,64742],\"mapped\",[1579,1607]],[[64743,64743],\"mapped\",[1587,1605]],[[64744,64744],\"mapped\",[1587,1607]],[[64745,64745],\"mapped\",[1588,1605]],[[64746,64746],\"mapped\",[1588,1607]],[[64747,64747],\"mapped\",[1603,1604]],[[64748,64748],\"mapped\",[1603,1605]],[[64749,64749],\"mapped\",[1604,1605]],[[64750,64750],\"mapped\",[1606,1605]],[[64751,64751],\"mapped\",[1606,1607]],[[64752,64752],\"mapped\",[1610,1605]],[[64753,64753],\"mapped\",[1610,1607]],[[64754,64754],\"mapped\",[1600,1614,1617]],[[64755,64755],\"mapped\",[1600,1615,1617]],[[64756,64756],\"mapped\",[1600,1616,1617]],[[64757,64757],\"mapped\",[1591,1609]],[[64758,64758],\"mapped\",[1591,1610]],[[64759,64759],\"mapped\",[1593,1609]],[[64760,64760],\"mapped\",[1593,1610]],[[64761,64761],\"mapped\",[1594,1609]],[[64762,64762],\"mapped\",[1594,1610]],[[64763,64763],\"mapped\",[1587,1609]],[[64764,64764],\"mapped\",[1587,1610]],[[64765,64765],\"mapped\",[1588,1609]],[[64766,64766],\"mapped\",[1588,1610]],[[64767,64767],\"mapped\",[1581,1609]],[[64768,64768],\"mapped\",[1581,1610]],[[64769,64769],\"mapped\",[1580,1609]],[[64770,64770],\"mapped\",[1580,1610]],[[64771,64771],\"mapped\",[1582,1609]],[[64772,64772],\"mapped\",[1582,1610]],[[64773,64773],\"mapped\",[1589,1609]],[[64774,64774],\"mapped\",[1589,1610]],[[64775,64775],\"mapped\",[1590,1609]],[[64776,64776],\"mapped\",[1590,1610]],[[64777,64777],\"mapped\",[1588,1580]],[[64778,64778],\"mapped\",[1588,1581]],[[64779,64779],\"mapped\",[1588,1582]],[[64780,64780],\"mapped\",[1588,1605]],[[64781,64781],\"mapped\",[1588,1585]],[[64782,64782],\"mapped\",[1587,1585]],[[64783,64783],\"mapped\",[1589,1585]],[[64784,64784],\"mapped\",[1590,1585]],[[64785,64785],\"mapped\",[1591,1609]],[[64786,64786],\"mapped\",[1591,1610]],[[64787,64787],\"mapped\",[1593,1609]],[[64788,64788],\"mapped\",[1593,1610]],[[64789,64789],\"mapped\",[1594,1609]],[[64790,64790],\"mapped\",[1594,1610]],[[64791,64791],\"mapped\",[1587,1609]],[[64792,64792],\"mapped\",[1587,1610]],[[64793,64793],\"mapped\",[1588,1609]],[[64794,64794],\"mapped\",[1588,1610]],[[64795,64795],\"mapped\",[1581,1609]],[[64796,64796],\"mapped\",[1581,1610]],[[64797,64797],\"mapped\",[1580,1609]],[[64798,64798],\"mapped\",[1580,1610]],[[64799,64799],\"mapped\",[1582,1609]],[[64800,64800],\"mapped\",[1582,1610]],[[64801,64801],\"mapped\",[1589,1609]],[[64802,64802],\"mapped\",[1589,1610]],[[64803,64803],\"mapped\",[1590,1609]],[[64804,64804],\"mapped\",[1590,1610]],[[64805,64805],\"mapped\",[1588,1580]],[[64806,64806],\"mapped\",[1588,1581]],[[64807,64807],\"mapped\",[1588,1582]],[[64808,64808],\"mapped\",[1588,1605]],[[64809,64809],\"mapped\",[1588,1585]],[[64810,64810],\"mapped\",[1587,1585]],[[64811,64811],\"mapped\",[1589,1585]],[[64812,64812],\"mapped\",[1590,1585]],[[64813,64813],\"mapped\",[1588,1580]],[[64814,64814],\"mapped\",[1588,1581]],[[64815,64815],\"mapped\",[1588,1582]],[[64816,64816],\"mapped\",[1588,1605]],[[64817,64817],\"mapped\",[1587,1607]],[[64818,64818],\"mapped\",[1588,1607]],[[64819,64819],\"mapped\",[1591,1605]],[[64820,64820],\"mapped\",[1587,1580]],[[64821,64821],\"mapped\",[1587,1581]],[[64822,64822],\"mapped\",[1587,1582]],[[64823,64823],\"mapped\",[1588,1580]],[[64824,64824],\"mapped\",[1588,1581]],[[64825,64825],\"mapped\",[1588,1582]],[[64826,64826],\"mapped\",[1591,1605]],[[64827,64827],\"mapped\",[1592,1605]],[[64828,64829],\"mapped\",[1575,1611]],[[64830,64831],\"valid\",[],\"NV8\"],[[64832,64847],\"disallowed\"],[[64848,64848],\"mapped\",[1578,1580,1605]],[[64849,64850],\"mapped\",[1578,1581,1580]],[[64851,64851],\"mapped\",[1578,1581,1605]],[[64852,64852],\"mapped\",[1578,1582,1605]],[[64853,64853],\"mapped\",[1578,1605,1580]],[[64854,64854],\"mapped\",[1578,1605,1581]],[[64855,64855],\"mapped\",[1578,1605,1582]],[[64856,64857],\"mapped\",[1580,1605,1581]],[[64858,64858],\"mapped\",[1581,1605,1610]],[[64859,64859],\"mapped\",[1581,1605,1609]],[[64860,64860],\"mapped\",[1587,1581,1580]],[[64861,64861],\"mapped\",[1587,1580,1581]],[[64862,64862],\"mapped\",[1587,1580,1609]],[[64863,64864],\"mapped\",[1587,1605,1581]],[[64865,64865],\"mapped\",[1587,1605,1580]],[[64866,64867],\"mapped\",[1587,1605,1605]],[[64868,64869],\"mapped\",[1589,1581,1581]],[[64870,64870],\"mapped\",[1589,1605,1605]],[[64871,64872],\"mapped\",[1588,1581,1605]],[[64873,64873],\"mapped\",[1588,1580,1610]],[[64874,64875],\"mapped\",[1588,1605,1582]],[[64876,64877],\"mapped\",[1588,1605,1605]],[[64878,64878],\"mapped\",[1590,1581,1609]],[[64879,64880],\"mapped\",[1590,1582,1605]],[[64881,64882],\"mapped\",[1591,1605,1581]],[[64883,64883],\"mapped\",[1591,1605,1605]],[[64884,64884],\"mapped\",[1591,1605,1610]],[[64885,64885],\"mapped\",[1593,1580,1605]],[[64886,64887],\"mapped\",[1593,1605,1605]],[[64888,64888],\"mapped\",[1593,1605,1609]],[[64889,64889],\"mapped\",[1594,1605,1605]],[[64890,64890],\"mapped\",[1594,1605,1610]],[[64891,64891],\"mapped\",[1594,1605,1609]],[[64892,64893],\"mapped\",[1601,1582,1605]],[[64894,64894],\"mapped\",[1602,1605,1581]],[[64895,64895],\"mapped\",[1602,1605,1605]],[[64896,64896],\"mapped\",[1604,1581,1605]],[[64897,64897],\"mapped\",[1604,1581,1610]],[[64898,64898],\"mapped\",[1604,1581,1609]],[[64899,64900],\"mapped\",[1604,1580,1580]],[[64901,64902],\"mapped\",[1604,1582,1605]],[[64903,64904],\"mapped\",[1604,1605,1581]],[[64905,64905],\"mapped\",[1605,1581,1580]],[[64906,64906],\"mapped\",[1605,1581,1605]],[[64907,64907],\"mapped\",[1605,1581,1610]],[[64908,64908],\"mapped\",[1605,1580,1581]],[[64909,64909],\"mapped\",[1605,1580,1605]],[[64910,64910],\"mapped\",[1605,1582,1580]],[[64911,64911],\"mapped\",[1605,1582,1605]],[[64912,64913],\"disallowed\"],[[64914,64914],\"mapped\",[1605,1580,1582]],[[64915,64915],\"mapped\",[1607,1605,1580]],[[64916,64916],\"mapped\",[1607,1605,1605]],[[64917,64917],\"mapped\",[1606,1581,1605]],[[64918,64918],\"mapped\",[1606,1581,1609]],[[64919,64920],\"mapped\",[1606,1580,1605]],[[64921,64921],\"mapped\",[1606,1580,1609]],[[64922,64922],\"mapped\",[1606,1605,1610]],[[64923,64923],\"mapped\",[1606,1605,1609]],[[64924,64925],\"mapped\",[1610,1605,1605]],[[64926,64926],\"mapped\",[1576,1582,1610]],[[64927,64927],\"mapped\",[1578,1580,1610]],[[64928,64928],\"mapped\",[1578,1580,1609]],[[64929,64929],\"mapped\",[1578,1582,1610]],[[64930,64930],\"mapped\",[1578,1582,1609]],[[64931,64931],\"mapped\",[1578,1605,1610]],[[64932,64932],\"mapped\",[1578,1605,1609]],[[64933,64933],\"mapped\",[1580,1605,1610]],[[64934,64934],\"mapped\",[1580,1581,1609]],[[64935,64935],\"mapped\",[1580,1605,1609]],[[64936,64936],\"mapped\",[1587,1582,1609]],[[64937,64937],\"mapped\",[1589,1581,1610]],[[64938,64938],\"mapped\",[1588,1581,1610]],[[64939,64939],\"mapped\",[1590,1581,1610]],[[64940,64940],\"mapped\",[1604,1580,1610]],[[64941,64941],\"mapped\",[1604,1605,1610]],[[64942,64942],\"mapped\",[1610,1581,1610]],[[64943,64943],\"mapped\",[1610,1580,1610]],[[64944,64944],\"mapped\",[1610,1605,1610]],[[64945,64945],\"mapped\",[1605,1605,1610]],[[64946,64946],\"mapped\",[1602,1605,1610]],[[64947,64947],\"mapped\",[1606,1581,1610]],[[64948,64948],\"mapped\",[1602,1605,1581]],[[64949,64949],\"mapped\",[1604,1581,1605]],[[64950,64950],\"mapped\",[1593,1605,1610]],[[64951,64951],\"mapped\",[1603,1605,1610]],[[64952,64952],\"mapped\",[1606,1580,1581]],[[64953,64953],\"mapped\",[1605,1582,1610]],[[64954,64954],\"mapped\",[1604,1580,1605]],[[64955,64955],\"mapped\",[1603,1605,1605]],[[64956,64956],\"mapped\",[1604,1580,1605]],[[64957,64957],\"mapped\",[1606,1580,1581]],[[64958,64958],\"mapped\",[1580,1581,1610]],[[64959,64959],\"mapped\",[1581,1580,1610]],[[64960,64960],\"mapped\",[1605,1580,1610]],[[64961,64961],\"mapped\",[1601,1605,1610]],[[64962,64962],\"mapped\",[1576,1581,1610]],[[64963,64963],\"mapped\",[1603,1605,1605]],[[64964,64964],\"mapped\",[1593,1580,1605]],[[64965,64965],\"mapped\",[1589,1605,1605]],[[64966,64966],\"mapped\",[1587,1582,1610]],[[64967,64967],\"mapped\",[1606,1580,1610]],[[64968,64975],\"disallowed\"],[[64976,65007],\"disallowed\"],[[65008,65008],\"mapped\",[1589,1604,1746]],[[65009,65009],\"mapped\",[1602,1604,1746]],[[65010,65010],\"mapped\",[1575,1604,1604,1607]],[[65011,65011],\"mapped\",[1575,1603,1576,1585]],[[65012,65012],\"mapped\",[1605,1581,1605,1583]],[[65013,65013],\"mapped\",[1589,1604,1593,1605]],[[65014,65014],\"mapped\",[1585,1587,1608,1604]],[[65015,65015],\"mapped\",[1593,1604,1610,1607]],[[65016,65016],\"mapped\",[1608,1587,1604,1605]],[[65017,65017],\"mapped\",[1589,1604,1609]],[[65018,65018],\"disallowed_STD3_mapped\",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],\"disallowed_STD3_mapped\",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],\"mapped\",[1585,1740,1575,1604]],[[65021,65021],\"valid\",[],\"NV8\"],[[65022,65023],\"disallowed\"],[[65024,65039],\"ignored\"],[[65040,65040],\"disallowed_STD3_mapped\",[44]],[[65041,65041],\"mapped\",[12289]],[[65042,65042],\"disallowed\"],[[65043,65043],\"disallowed_STD3_mapped\",[58]],[[65044,65044],\"disallowed_STD3_mapped\",[59]],[[65045,65045],\"disallowed_STD3_mapped\",[33]],[[65046,65046],\"disallowed_STD3_mapped\",[63]],[[65047,65047],\"mapped\",[12310]],[[65048,65048],\"mapped\",[12311]],[[65049,65049],\"disallowed\"],[[65050,65055],\"disallowed\"],[[65056,65059],\"valid\"],[[65060,65062],\"valid\"],[[65063,65069],\"valid\"],[[65070,65071],\"valid\"],[[65072,65072],\"disallowed\"],[[65073,65073],\"mapped\",[8212]],[[65074,65074],\"mapped\",[8211]],[[65075,65076],\"disallowed_STD3_mapped\",[95]],[[65077,65077],\"disallowed_STD3_mapped\",[40]],[[65078,65078],\"disallowed_STD3_mapped\",[41]],[[65079,65079],\"disallowed_STD3_mapped\",[123]],[[65080,65080],\"disallowed_STD3_mapped\",[125]],[[65081,65081],\"mapped\",[12308]],[[65082,65082],\"mapped\",[12309]],[[65083,65083],\"mapped\",[12304]],[[65084,65084],\"mapped\",[12305]],[[65085,65085],\"mapped\",[12298]],[[65086,65086],\"mapped\",[12299]],[[65087,65087],\"mapped\",[12296]],[[65088,65088],\"mapped\",[12297]],[[65089,65089],\"mapped\",[12300]],[[65090,65090],\"mapped\",[12301]],[[65091,65091],\"mapped\",[12302]],[[65092,65092],\"mapped\",[12303]],[[65093,65094],\"valid\",[],\"NV8\"],[[65095,65095],\"disallowed_STD3_mapped\",[91]],[[65096,65096],\"disallowed_STD3_mapped\",[93]],[[65097,65100],\"disallowed_STD3_mapped\",[32,773]],[[65101,65103],\"disallowed_STD3_mapped\",[95]],[[65104,65104],\"disallowed_STD3_mapped\",[44]],[[65105,65105],\"mapped\",[12289]],[[65106,65106],\"disallowed\"],[[65107,65107],\"disallowed\"],[[65108,65108],\"disallowed_STD3_mapped\",[59]],[[65109,65109],\"disallowed_STD3_mapped\",[58]],[[65110,65110],\"disallowed_STD3_mapped\",[63]],[[65111,65111],\"disallowed_STD3_mapped\",[33]],[[65112,65112],\"mapped\",[8212]],[[65113,65113],\"disallowed_STD3_mapped\",[40]],[[65114,65114],\"disallowed_STD3_mapped\",[41]],[[65115,65115],\"disallowed_STD3_mapped\",[123]],[[65116,65116],\"disallowed_STD3_mapped\",[125]],[[65117,65117],\"mapped\",[12308]],[[65118,65118],\"mapped\",[12309]],[[65119,65119],\"disallowed_STD3_mapped\",[35]],[[65120,65120],\"disallowed_STD3_mapped\",[38]],[[65121,65121],\"disallowed_STD3_mapped\",[42]],[[65122,65122],\"disallowed_STD3_mapped\",[43]],[[65123,65123],\"mapped\",[45]],[[65124,65124],\"disallowed_STD3_mapped\",[60]],[[65125,65125],\"disallowed_STD3_mapped\",[62]],[[65126,65126],\"disallowed_STD3_mapped\",[61]],[[65127,65127],\"disallowed\"],[[65128,65128],\"disallowed_STD3_mapped\",[92]],[[65129,65129],\"disallowed_STD3_mapped\",[36]],[[65130,65130],\"disallowed_STD3_mapped\",[37]],[[65131,65131],\"disallowed_STD3_mapped\",[64]],[[65132,65135],\"disallowed\"],[[65136,65136],\"disallowed_STD3_mapped\",[32,1611]],[[65137,65137],\"mapped\",[1600,1611]],[[65138,65138],\"disallowed_STD3_mapped\",[32,1612]],[[65139,65139],\"valid\"],[[65140,65140],\"disallowed_STD3_mapped\",[32,1613]],[[65141,65141],\"disallowed\"],[[65142,65142],\"disallowed_STD3_mapped\",[32,1614]],[[65143,65143],\"mapped\",[1600,1614]],[[65144,65144],\"disallowed_STD3_mapped\",[32,1615]],[[65145,65145],\"mapped\",[1600,1615]],[[65146,65146],\"disallowed_STD3_mapped\",[32,1616]],[[65147,65147],\"mapped\",[1600,1616]],[[65148,65148],\"disallowed_STD3_mapped\",[32,1617]],[[65149,65149],\"mapped\",[1600,1617]],[[65150,65150],\"disallowed_STD3_mapped\",[32,1618]],[[65151,65151],\"mapped\",[1600,1618]],[[65152,65152],\"mapped\",[1569]],[[65153,65154],\"mapped\",[1570]],[[65155,65156],\"mapped\",[1571]],[[65157,65158],\"mapped\",[1572]],[[65159,65160],\"mapped\",[1573]],[[65161,65164],\"mapped\",[1574]],[[65165,65166],\"mapped\",[1575]],[[65167,65170],\"mapped\",[1576]],[[65171,65172],\"mapped\",[1577]],[[65173,65176],\"mapped\",[1578]],[[65177,65180],\"mapped\",[1579]],[[65181,65184],\"mapped\",[1580]],[[65185,65188],\"mapped\",[1581]],[[65189,65192],\"mapped\",[1582]],[[65193,65194],\"mapped\",[1583]],[[65195,65196],\"mapped\",[1584]],[[65197,65198],\"mapped\",[1585]],[[65199,65200],\"mapped\",[1586]],[[65201,65204],\"mapped\",[1587]],[[65205,65208],\"mapped\",[1588]],[[65209,65212],\"mapped\",[1589]],[[65213,65216],\"mapped\",[1590]],[[65217,65220],\"mapped\",[1591]],[[65221,65224],\"mapped\",[1592]],[[65225,65228],\"mapped\",[1593]],[[65229,65232],\"mapped\",[1594]],[[65233,65236],\"mapped\",[1601]],[[65237,65240],\"mapped\",[1602]],[[65241,65244],\"mapped\",[1603]],[[65245,65248],\"mapped\",[1604]],[[65249,65252],\"mapped\",[1605]],[[65253,65256],\"mapped\",[1606]],[[65257,65260],\"mapped\",[1607]],[[65261,65262],\"mapped\",[1608]],[[65263,65264],\"mapped\",[1609]],[[65265,65268],\"mapped\",[1610]],[[65269,65270],\"mapped\",[1604,1570]],[[65271,65272],\"mapped\",[1604,1571]],[[65273,65274],\"mapped\",[1604,1573]],[[65275,65276],\"mapped\",[1604,1575]],[[65277,65278],\"disallowed\"],[[65279,65279],\"ignored\"],[[65280,65280],\"disallowed\"],[[65281,65281],\"disallowed_STD3_mapped\",[33]],[[65282,65282],\"disallowed_STD3_mapped\",[34]],[[65283,65283],\"disallowed_STD3_mapped\",[35]],[[65284,65284],\"disallowed_STD3_mapped\",[36]],[[65285,65285],\"disallowed_STD3_mapped\",[37]],[[65286,65286],\"disallowed_STD3_mapped\",[38]],[[65287,65287],\"disallowed_STD3_mapped\",[39]],[[65288,65288],\"disallowed_STD3_mapped\",[40]],[[65289,65289],\"disallowed_STD3_mapped\",[41]],[[65290,65290],\"disallowed_STD3_mapped\",[42]],[[65291,65291],\"disallowed_STD3_mapped\",[43]],[[65292,65292],\"disallowed_STD3_mapped\",[44]],[[65293,65293],\"mapped\",[45]],[[65294,65294],\"mapped\",[46]],[[65295,65295],\"disallowed_STD3_mapped\",[47]],[[65296,65296],\"mapped\",[48]],[[65297,65297],\"mapped\",[49]],[[65298,65298],\"mapped\",[50]],[[65299,65299],\"mapped\",[51]],[[65300,65300],\"mapped\",[52]],[[65301,65301],\"mapped\",[53]],[[65302,65302],\"mapped\",[54]],[[65303,65303],\"mapped\",[55]],[[65304,65304],\"mapped\",[56]],[[65305,65305],\"mapped\",[57]],[[65306,65306],\"disallowed_STD3_mapped\",[58]],[[65307,65307],\"disallowed_STD3_mapped\",[59]],[[65308,65308],\"disallowed_STD3_mapped\",[60]],[[65309,65309],\"disallowed_STD3_mapped\",[61]],[[65310,65310],\"disallowed_STD3_mapped\",[62]],[[65311,65311],\"disallowed_STD3_mapped\",[63]],[[65312,65312],\"disallowed_STD3_mapped\",[64]],[[65313,65313],\"mapped\",[97]],[[65314,65314],\"mapped\",[98]],[[65315,65315],\"mapped\",[99]],[[65316,65316],\"mapped\",[100]],[[65317,65317],\"mapped\",[101]],[[65318,65318],\"mapped\",[102]],[[65319,65319],\"mapped\",[103]],[[65320,65320],\"mapped\",[104]],[[65321,65321],\"mapped\",[105]],[[65322,65322],\"mapped\",[106]],[[65323,65323],\"mapped\",[107]],[[65324,65324],\"mapped\",[108]],[[65325,65325],\"mapped\",[109]],[[65326,65326],\"mapped\",[110]],[[65327,65327],\"mapped\",[111]],[[65328,65328],\"mapped\",[112]],[[65329,65329],\"mapped\",[113]],[[65330,65330],\"mapped\",[114]],[[65331,65331],\"mapped\",[115]],[[65332,65332],\"mapped\",[116]],[[65333,65333],\"mapped\",[117]],[[65334,65334],\"mapped\",[118]],[[65335,65335],\"mapped\",[119]],[[65336,65336],\"mapped\",[120]],[[65337,65337],\"mapped\",[121]],[[65338,65338],\"mapped\",[122]],[[65339,65339],\"disallowed_STD3_mapped\",[91]],[[65340,65340],\"disallowed_STD3_mapped\",[92]],[[65341,65341],\"disallowed_STD3_mapped\",[93]],[[65342,65342],\"disallowed_STD3_mapped\",[94]],[[65343,65343],\"disallowed_STD3_mapped\",[95]],[[65344,65344],\"disallowed_STD3_mapped\",[96]],[[65345,65345],\"mapped\",[97]],[[65346,65346],\"mapped\",[98]],[[65347,65347],\"mapped\",[99]],[[65348,65348],\"mapped\",[100]],[[65349,65349],\"mapped\",[101]],[[65350,65350],\"mapped\",[102]],[[65351,65351],\"mapped\",[103]],[[65352,65352],\"mapped\",[104]],[[65353,65353],\"mapped\",[105]],[[65354,65354],\"mapped\",[106]],[[65355,65355],\"mapped\",[107]],[[65356,65356],\"mapped\",[108]],[[65357,65357],\"mapped\",[109]],[[65358,65358],\"mapped\",[110]],[[65359,65359],\"mapped\",[111]],[[65360,65360],\"mapped\",[112]],[[65361,65361],\"mapped\",[113]],[[65362,65362],\"mapped\",[114]],[[65363,65363],\"mapped\",[115]],[[65364,65364],\"mapped\",[116]],[[65365,65365],\"mapped\",[117]],[[65366,65366],\"mapped\",[118]],[[65367,65367],\"mapped\",[119]],[[65368,65368],\"mapped\",[120]],[[65369,65369],\"mapped\",[121]],[[65370,65370],\"mapped\",[122]],[[65371,65371],\"disallowed_STD3_mapped\",[123]],[[65372,65372],\"disallowed_STD3_mapped\",[124]],[[65373,65373],\"disallowed_STD3_mapped\",[125]],[[65374,65374],\"disallowed_STD3_mapped\",[126]],[[65375,65375],\"mapped\",[10629]],[[65376,65376],\"mapped\",[10630]],[[65377,65377],\"mapped\",[46]],[[65378,65378],\"mapped\",[12300]],[[65379,65379],\"mapped\",[12301]],[[65380,65380],\"mapped\",[12289]],[[65381,65381],\"mapped\",[12539]],[[65382,65382],\"mapped\",[12530]],[[65383,65383],\"mapped\",[12449]],[[65384,65384],\"mapped\",[12451]],[[65385,65385],\"mapped\",[12453]],[[65386,65386],\"mapped\",[12455]],[[65387,65387],\"mapped\",[12457]],[[65388,65388],\"mapped\",[12515]],[[65389,65389],\"mapped\",[12517]],[[65390,65390],\"mapped\",[12519]],[[65391,65391],\"mapped\",[12483]],[[65392,65392],\"mapped\",[12540]],[[65393,65393],\"mapped\",[12450]],[[65394,65394],\"mapped\",[12452]],[[65395,65395],\"mapped\",[12454]],[[65396,65396],\"mapped\",[12456]],[[65397,65397],\"mapped\",[12458]],[[65398,65398],\"mapped\",[12459]],[[65399,65399],\"mapped\",[12461]],[[65400,65400],\"mapped\",[12463]],[[65401,65401],\"mapped\",[12465]],[[65402,65402],\"mapped\",[12467]],[[65403,65403],\"mapped\",[12469]],[[65404,65404],\"mapped\",[12471]],[[65405,65405],\"mapped\",[12473]],[[65406,65406],\"mapped\",[12475]],[[65407,65407],\"mapped\",[12477]],[[65408,65408],\"mapped\",[12479]],[[65409,65409],\"mapped\",[12481]],[[65410,65410],\"mapped\",[12484]],[[65411,65411],\"mapped\",[12486]],[[65412,65412],\"mapped\",[12488]],[[65413,65413],\"mapped\",[12490]],[[65414,65414],\"mapped\",[12491]],[[65415,65415],\"mapped\",[12492]],[[65416,65416],\"mapped\",[12493]],[[65417,65417],\"mapped\",[12494]],[[65418,65418],\"mapped\",[12495]],[[65419,65419],\"mapped\",[12498]],[[65420,65420],\"mapped\",[12501]],[[65421,65421],\"mapped\",[12504]],[[65422,65422],\"mapped\",[12507]],[[65423,65423],\"mapped\",[12510]],[[65424,65424],\"mapped\",[12511]],[[65425,65425],\"mapped\",[12512]],[[65426,65426],\"mapped\",[12513]],[[65427,65427],\"mapped\",[12514]],[[65428,65428],\"mapped\",[12516]],[[65429,65429],\"mapped\",[12518]],[[65430,65430],\"mapped\",[12520]],[[65431,65431],\"mapped\",[12521]],[[65432,65432],\"mapped\",[12522]],[[65433,65433],\"mapped\",[12523]],[[65434,65434],\"mapped\",[12524]],[[65435,65435],\"mapped\",[12525]],[[65436,65436],\"mapped\",[12527]],[[65437,65437],\"mapped\",[12531]],[[65438,65438],\"mapped\",[12441]],[[65439,65439],\"mapped\",[12442]],[[65440,65440],\"disallowed\"],[[65441,65441],\"mapped\",[4352]],[[65442,65442],\"mapped\",[4353]],[[65443,65443],\"mapped\",[4522]],[[65444,65444],\"mapped\",[4354]],[[65445,65445],\"mapped\",[4524]],[[65446,65446],\"mapped\",[4525]],[[65447,65447],\"mapped\",[4355]],[[65448,65448],\"mapped\",[4356]],[[65449,65449],\"mapped\",[4357]],[[65450,65450],\"mapped\",[4528]],[[65451,65451],\"mapped\",[4529]],[[65452,65452],\"mapped\",[4530]],[[65453,65453],\"mapped\",[4531]],[[65454,65454],\"mapped\",[4532]],[[65455,65455],\"mapped\",[4533]],[[65456,65456],\"mapped\",[4378]],[[65457,65457],\"mapped\",[4358]],[[65458,65458],\"mapped\",[4359]],[[65459,65459],\"mapped\",[4360]],[[65460,65460],\"mapped\",[4385]],[[65461,65461],\"mapped\",[4361]],[[65462,65462],\"mapped\",[4362]],[[65463,65463],\"mapped\",[4363]],[[65464,65464],\"mapped\",[4364]],[[65465,65465],\"mapped\",[4365]],[[65466,65466],\"mapped\",[4366]],[[65467,65467],\"mapped\",[4367]],[[65468,65468],\"mapped\",[4368]],[[65469,65469],\"mapped\",[4369]],[[65470,65470],\"mapped\",[4370]],[[65471,65473],\"disallowed\"],[[65474,65474],\"mapped\",[4449]],[[65475,65475],\"mapped\",[4450]],[[65476,65476],\"mapped\",[4451]],[[65477,65477],\"mapped\",[4452]],[[65478,65478],\"mapped\",[4453]],[[65479,65479],\"mapped\",[4454]],[[65480,65481],\"disallowed\"],[[65482,65482],\"mapped\",[4455]],[[65483,65483],\"mapped\",[4456]],[[65484,65484],\"mapped\",[4457]],[[65485,65485],\"mapped\",[4458]],[[65486,65486],\"mapped\",[4459]],[[65487,65487],\"mapped\",[4460]],[[65488,65489],\"disallowed\"],[[65490,65490],\"mapped\",[4461]],[[65491,65491],\"mapped\",[4462]],[[65492,65492],\"mapped\",[4463]],[[65493,65493],\"mapped\",[4464]],[[65494,65494],\"mapped\",[4465]],[[65495,65495],\"mapped\",[4466]],[[65496,65497],\"disallowed\"],[[65498,65498],\"mapped\",[4467]],[[65499,65499],\"mapped\",[4468]],[[65500,65500],\"mapped\",[4469]],[[65501,65503],\"disallowed\"],[[65504,65504],\"mapped\",[162]],[[65505,65505],\"mapped\",[163]],[[65506,65506],\"mapped\",[172]],[[65507,65507],\"disallowed_STD3_mapped\",[32,772]],[[65508,65508],\"mapped\",[166]],[[65509,65509],\"mapped\",[165]],[[65510,65510],\"mapped\",[8361]],[[65511,65511],\"disallowed\"],[[65512,65512],\"mapped\",[9474]],[[65513,65513],\"mapped\",[8592]],[[65514,65514],\"mapped\",[8593]],[[65515,65515],\"mapped\",[8594]],[[65516,65516],\"mapped\",[8595]],[[65517,65517],\"mapped\",[9632]],[[65518,65518],\"mapped\",[9675]],[[65519,65528],\"disallowed\"],[[65529,65531],\"disallowed\"],[[65532,65532],\"disallowed\"],[[65533,65533],\"disallowed\"],[[65534,65535],\"disallowed\"],[[65536,65547],\"valid\"],[[65548,65548],\"disallowed\"],[[65549,65574],\"valid\"],[[65575,65575],\"disallowed\"],[[65576,65594],\"valid\"],[[65595,65595],\"disallowed\"],[[65596,65597],\"valid\"],[[65598,65598],\"disallowed\"],[[65599,65613],\"valid\"],[[65614,65615],\"disallowed\"],[[65616,65629],\"valid\"],[[65630,65663],\"disallowed\"],[[65664,65786],\"valid\"],[[65787,65791],\"disallowed\"],[[65792,65794],\"valid\",[],\"NV8\"],[[65795,65798],\"disallowed\"],[[65799,65843],\"valid\",[],\"NV8\"],[[65844,65846],\"disallowed\"],[[65847,65855],\"valid\",[],\"NV8\"],[[65856,65930],\"valid\",[],\"NV8\"],[[65931,65932],\"valid\",[],\"NV8\"],[[65933,65935],\"disallowed\"],[[65936,65947],\"valid\",[],\"NV8\"],[[65948,65951],\"disallowed\"],[[65952,65952],\"valid\",[],\"NV8\"],[[65953,65999],\"disallowed\"],[[66000,66044],\"valid\",[],\"NV8\"],[[66045,66045],\"valid\"],[[66046,66175],\"disallowed\"],[[66176,66204],\"valid\"],[[66205,66207],\"disallowed\"],[[66208,66256],\"valid\"],[[66257,66271],\"disallowed\"],[[66272,66272],\"valid\"],[[66273,66299],\"valid\",[],\"NV8\"],[[66300,66303],\"disallowed\"],[[66304,66334],\"valid\"],[[66335,66335],\"valid\"],[[66336,66339],\"valid\",[],\"NV8\"],[[66340,66351],\"disallowed\"],[[66352,66368],\"valid\"],[[66369,66369],\"valid\",[],\"NV8\"],[[66370,66377],\"valid\"],[[66378,66378],\"valid\",[],\"NV8\"],[[66379,66383],\"disallowed\"],[[66384,66426],\"valid\"],[[66427,66431],\"disallowed\"],[[66432,66461],\"valid\"],[[66462,66462],\"disallowed\"],[[66463,66463],\"valid\",[],\"NV8\"],[[66464,66499],\"valid\"],[[66500,66503],\"disallowed\"],[[66504,66511],\"valid\"],[[66512,66517],\"valid\",[],\"NV8\"],[[66518,66559],\"disallowed\"],[[66560,66560],\"mapped\",[66600]],[[66561,66561],\"mapped\",[66601]],[[66562,66562],\"mapped\",[66602]],[[66563,66563],\"mapped\",[66603]],[[66564,66564],\"mapped\",[66604]],[[66565,66565],\"mapped\",[66605]],[[66566,66566],\"mapped\",[66606]],[[66567,66567],\"mapped\",[66607]],[[66568,66568],\"mapped\",[66608]],[[66569,66569],\"mapped\",[66609]],[[66570,66570],\"mapped\",[66610]],[[66571,66571],\"mapped\",[66611]],[[66572,66572],\"mapped\",[66612]],[[66573,66573],\"mapped\",[66613]],[[66574,66574],\"mapped\",[66614]],[[66575,66575],\"mapped\",[66615]],[[66576,66576],\"mapped\",[66616]],[[66577,66577],\"mapped\",[66617]],[[66578,66578],\"mapped\",[66618]],[[66579,66579],\"mapped\",[66619]],[[66580,66580],\"mapped\",[66620]],[[66581,66581],\"mapped\",[66621]],[[66582,66582],\"mapped\",[66622]],[[66583,66583],\"mapped\",[66623]],[[66584,66584],\"mapped\",[66624]],[[66585,66585],\"mapped\",[66625]],[[66586,66586],\"mapped\",[66626]],[[66587,66587],\"mapped\",[66627]],[[66588,66588],\"mapped\",[66628]],[[66589,66589],\"mapped\",[66629]],[[66590,66590],\"mapped\",[66630]],[[66591,66591],\"mapped\",[66631]],[[66592,66592],\"mapped\",[66632]],[[66593,66593],\"mapped\",[66633]],[[66594,66594],\"mapped\",[66634]],[[66595,66595],\"mapped\",[66635]],[[66596,66596],\"mapped\",[66636]],[[66597,66597],\"mapped\",[66637]],[[66598,66598],\"mapped\",[66638]],[[66599,66599],\"mapped\",[66639]],[[66600,66637],\"valid\"],[[66638,66717],\"valid\"],[[66718,66719],\"disallowed\"],[[66720,66729],\"valid\"],[[66730,66815],\"disallowed\"],[[66816,66855],\"valid\"],[[66856,66863],\"disallowed\"],[[66864,66915],\"valid\"],[[66916,66926],\"disallowed\"],[[66927,66927],\"valid\",[],\"NV8\"],[[66928,67071],\"disallowed\"],[[67072,67382],\"valid\"],[[67383,67391],\"disallowed\"],[[67392,67413],\"valid\"],[[67414,67423],\"disallowed\"],[[67424,67431],\"valid\"],[[67432,67583],\"disallowed\"],[[67584,67589],\"valid\"],[[67590,67591],\"disallowed\"],[[67592,67592],\"valid\"],[[67593,67593],\"disallowed\"],[[67594,67637],\"valid\"],[[67638,67638],\"disallowed\"],[[67639,67640],\"valid\"],[[67641,67643],\"disallowed\"],[[67644,67644],\"valid\"],[[67645,67646],\"disallowed\"],[[67647,67647],\"valid\"],[[67648,67669],\"valid\"],[[67670,67670],\"disallowed\"],[[67671,67679],\"valid\",[],\"NV8\"],[[67680,67702],\"valid\"],[[67703,67711],\"valid\",[],\"NV8\"],[[67712,67742],\"valid\"],[[67743,67750],\"disallowed\"],[[67751,67759],\"valid\",[],\"NV8\"],[[67760,67807],\"disallowed\"],[[67808,67826],\"valid\"],[[67827,67827],\"disallowed\"],[[67828,67829],\"valid\"],[[67830,67834],\"disallowed\"],[[67835,67839],\"valid\",[],\"NV8\"],[[67840,67861],\"valid\"],[[67862,67865],\"valid\",[],\"NV8\"],[[67866,67867],\"valid\",[],\"NV8\"],[[67868,67870],\"disallowed\"],[[67871,67871],\"valid\",[],\"NV8\"],[[67872,67897],\"valid\"],[[67898,67902],\"disallowed\"],[[67903,67903],\"valid\",[],\"NV8\"],[[67904,67967],\"disallowed\"],[[67968,68023],\"valid\"],[[68024,68027],\"disallowed\"],[[68028,68029],\"valid\",[],\"NV8\"],[[68030,68031],\"valid\"],[[68032,68047],\"valid\",[],\"NV8\"],[[68048,68049],\"disallowed\"],[[68050,68095],\"valid\",[],\"NV8\"],[[68096,68099],\"valid\"],[[68100,68100],\"disallowed\"],[[68101,68102],\"valid\"],[[68103,68107],\"disallowed\"],[[68108,68115],\"valid\"],[[68116,68116],\"disallowed\"],[[68117,68119],\"valid\"],[[68120,68120],\"disallowed\"],[[68121,68147],\"valid\"],[[68148,68151],\"disallowed\"],[[68152,68154],\"valid\"],[[68155,68158],\"disallowed\"],[[68159,68159],\"valid\"],[[68160,68167],\"valid\",[],\"NV8\"],[[68168,68175],\"disallowed\"],[[68176,68184],\"valid\",[],\"NV8\"],[[68185,68191],\"disallowed\"],[[68192,68220],\"valid\"],[[68221,68223],\"valid\",[],\"NV8\"],[[68224,68252],\"valid\"],[[68253,68255],\"valid\",[],\"NV8\"],[[68256,68287],\"disallowed\"],[[68288,68295],\"valid\"],[[68296,68296],\"valid\",[],\"NV8\"],[[68297,68326],\"valid\"],[[68327,68330],\"disallowed\"],[[68331,68342],\"valid\",[],\"NV8\"],[[68343,68351],\"disallowed\"],[[68352,68405],\"valid\"],[[68406,68408],\"disallowed\"],[[68409,68415],\"valid\",[],\"NV8\"],[[68416,68437],\"valid\"],[[68438,68439],\"disallowed\"],[[68440,68447],\"valid\",[],\"NV8\"],[[68448,68466],\"valid\"],[[68467,68471],\"disallowed\"],[[68472,68479],\"valid\",[],\"NV8\"],[[68480,68497],\"valid\"],[[68498,68504],\"disallowed\"],[[68505,68508],\"valid\",[],\"NV8\"],[[68509,68520],\"disallowed\"],[[68521,68527],\"valid\",[],\"NV8\"],[[68528,68607],\"disallowed\"],[[68608,68680],\"valid\"],[[68681,68735],\"disallowed\"],[[68736,68736],\"mapped\",[68800]],[[68737,68737],\"mapped\",[68801]],[[68738,68738],\"mapped\",[68802]],[[68739,68739],\"mapped\",[68803]],[[68740,68740],\"mapped\",[68804]],[[68741,68741],\"mapped\",[68805]],[[68742,68742],\"mapped\",[68806]],[[68743,68743],\"mapped\",[68807]],[[68744,68744],\"mapped\",[68808]],[[68745,68745],\"mapped\",[68809]],[[68746,68746],\"mapped\",[68810]],[[68747,68747],\"mapped\",[68811]],[[68748,68748],\"mapped\",[68812]],[[68749,68749],\"mapped\",[68813]],[[68750,68750],\"mapped\",[68814]],[[68751,68751],\"mapped\",[68815]],[[68752,68752],\"mapped\",[68816]],[[68753,68753],\"mapped\",[68817]],[[68754,68754],\"mapped\",[68818]],[[68755,68755],\"mapped\",[68819]],[[68756,68756],\"mapped\",[68820]],[[68757,68757],\"mapped\",[68821]],[[68758,68758],\"mapped\",[68822]],[[68759,68759],\"mapped\",[68823]],[[68760,68760],\"mapped\",[68824]],[[68761,68761],\"mapped\",[68825]],[[68762,68762],\"mapped\",[68826]],[[68763,68763],\"mapped\",[68827]],[[68764,68764],\"mapped\",[68828]],[[68765,68765],\"mapped\",[68829]],[[68766,68766],\"mapped\",[68830]],[[68767,68767],\"mapped\",[68831]],[[68768,68768],\"mapped\",[68832]],[[68769,68769],\"mapped\",[68833]],[[68770,68770],\"mapped\",[68834]],[[68771,68771],\"mapped\",[68835]],[[68772,68772],\"mapped\",[68836]],[[68773,68773],\"mapped\",[68837]],[[68774,68774],\"mapped\",[68838]],[[68775,68775],\"mapped\",[68839]],[[68776,68776],\"mapped\",[68840]],[[68777,68777],\"mapped\",[68841]],[[68778,68778],\"mapped\",[68842]],[[68779,68779],\"mapped\",[68843]],[[68780,68780],\"mapped\",[68844]],[[68781,68781],\"mapped\",[68845]],[[68782,68782],\"mapped\",[68846]],[[68783,68783],\"mapped\",[68847]],[[68784,68784],\"mapped\",[68848]],[[68785,68785],\"mapped\",[68849]],[[68786,68786],\"mapped\",[68850]],[[68787,68799],\"disallowed\"],[[68800,68850],\"valid\"],[[68851,68857],\"disallowed\"],[[68858,68863],\"valid\",[],\"NV8\"],[[68864,69215],\"disallowed\"],[[69216,69246],\"valid\",[],\"NV8\"],[[69247,69631],\"disallowed\"],[[69632,69702],\"valid\"],[[69703,69709],\"valid\",[],\"NV8\"],[[69710,69713],\"disallowed\"],[[69714,69733],\"valid\",[],\"NV8\"],[[69734,69743],\"valid\"],[[69744,69758],\"disallowed\"],[[69759,69759],\"valid\"],[[69760,69818],\"valid\"],[[69819,69820],\"valid\",[],\"NV8\"],[[69821,69821],\"disallowed\"],[[69822,69825],\"valid\",[],\"NV8\"],[[69826,69839],\"disallowed\"],[[69840,69864],\"valid\"],[[69865,69871],\"disallowed\"],[[69872,69881],\"valid\"],[[69882,69887],\"disallowed\"],[[69888,69940],\"valid\"],[[69941,69941],\"disallowed\"],[[69942,69951],\"valid\"],[[69952,69955],\"valid\",[],\"NV8\"],[[69956,69967],\"disallowed\"],[[69968,70003],\"valid\"],[[70004,70005],\"valid\",[],\"NV8\"],[[70006,70006],\"valid\"],[[70007,70015],\"disallowed\"],[[70016,70084],\"valid\"],[[70085,70088],\"valid\",[],\"NV8\"],[[70089,70089],\"valid\",[],\"NV8\"],[[70090,70092],\"valid\"],[[70093,70093],\"valid\",[],\"NV8\"],[[70094,70095],\"disallowed\"],[[70096,70105],\"valid\"],[[70106,70106],\"valid\"],[[70107,70107],\"valid\",[],\"NV8\"],[[70108,70108],\"valid\"],[[70109,70111],\"valid\",[],\"NV8\"],[[70112,70112],\"disallowed\"],[[70113,70132],\"valid\",[],\"NV8\"],[[70133,70143],\"disallowed\"],[[70144,70161],\"valid\"],[[70162,70162],\"disallowed\"],[[70163,70199],\"valid\"],[[70200,70205],\"valid\",[],\"NV8\"],[[70206,70271],\"disallowed\"],[[70272,70278],\"valid\"],[[70279,70279],\"disallowed\"],[[70280,70280],\"valid\"],[[70281,70281],\"disallowed\"],[[70282,70285],\"valid\"],[[70286,70286],\"disallowed\"],[[70287,70301],\"valid\"],[[70302,70302],\"disallowed\"],[[70303,70312],\"valid\"],[[70313,70313],\"valid\",[],\"NV8\"],[[70314,70319],\"disallowed\"],[[70320,70378],\"valid\"],[[70379,70383],\"disallowed\"],[[70384,70393],\"valid\"],[[70394,70399],\"disallowed\"],[[70400,70400],\"valid\"],[[70401,70403],\"valid\"],[[70404,70404],\"disallowed\"],[[70405,70412],\"valid\"],[[70413,70414],\"disallowed\"],[[70415,70416],\"valid\"],[[70417,70418],\"disallowed\"],[[70419,70440],\"valid\"],[[70441,70441],\"disallowed\"],[[70442,70448],\"valid\"],[[70449,70449],\"disallowed\"],[[70450,70451],\"valid\"],[[70452,70452],\"disallowed\"],[[70453,70457],\"valid\"],[[70458,70459],\"disallowed\"],[[70460,70468],\"valid\"],[[70469,70470],\"disallowed\"],[[70471,70472],\"valid\"],[[70473,70474],\"disallowed\"],[[70475,70477],\"valid\"],[[70478,70479],\"disallowed\"],[[70480,70480],\"valid\"],[[70481,70486],\"disallowed\"],[[70487,70487],\"valid\"],[[70488,70492],\"disallowed\"],[[70493,70499],\"valid\"],[[70500,70501],\"disallowed\"],[[70502,70508],\"valid\"],[[70509,70511],\"disallowed\"],[[70512,70516],\"valid\"],[[70517,70783],\"disallowed\"],[[70784,70853],\"valid\"],[[70854,70854],\"valid\",[],\"NV8\"],[[70855,70855],\"valid\"],[[70856,70863],\"disallowed\"],[[70864,70873],\"valid\"],[[70874,71039],\"disallowed\"],[[71040,71093],\"valid\"],[[71094,71095],\"disallowed\"],[[71096,71104],\"valid\"],[[71105,71113],\"valid\",[],\"NV8\"],[[71114,71127],\"valid\",[],\"NV8\"],[[71128,71133],\"valid\"],[[71134,71167],\"disallowed\"],[[71168,71232],\"valid\"],[[71233,71235],\"valid\",[],\"NV8\"],[[71236,71236],\"valid\"],[[71237,71247],\"disallowed\"],[[71248,71257],\"valid\"],[[71258,71295],\"disallowed\"],[[71296,71351],\"valid\"],[[71352,71359],\"disallowed\"],[[71360,71369],\"valid\"],[[71370,71423],\"disallowed\"],[[71424,71449],\"valid\"],[[71450,71452],\"disallowed\"],[[71453,71467],\"valid\"],[[71468,71471],\"disallowed\"],[[71472,71481],\"valid\"],[[71482,71487],\"valid\",[],\"NV8\"],[[71488,71839],\"disallowed\"],[[71840,71840],\"mapped\",[71872]],[[71841,71841],\"mapped\",[71873]],[[71842,71842],\"mapped\",[71874]],[[71843,71843],\"mapped\",[71875]],[[71844,71844],\"mapped\",[71876]],[[71845,71845],\"mapped\",[71877]],[[71846,71846],\"mapped\",[71878]],[[71847,71847],\"mapped\",[71879]],[[71848,71848],\"mapped\",[71880]],[[71849,71849],\"mapped\",[71881]],[[71850,71850],\"mapped\",[71882]],[[71851,71851],\"mapped\",[71883]],[[71852,71852],\"mapped\",[71884]],[[71853,71853],\"mapped\",[71885]],[[71854,71854],\"mapped\",[71886]],[[71855,71855],\"mapped\",[71887]],[[71856,71856],\"mapped\",[71888]],[[71857,71857],\"mapped\",[71889]],[[71858,71858],\"mapped\",[71890]],[[71859,71859],\"mapped\",[71891]],[[71860,71860],\"mapped\",[71892]],[[71861,71861],\"mapped\",[71893]],[[71862,71862],\"mapped\",[71894]],[[71863,71863],\"mapped\",[71895]],[[71864,71864],\"mapped\",[71896]],[[71865,71865],\"mapped\",[71897]],[[71866,71866],\"mapped\",[71898]],[[71867,71867],\"mapped\",[71899]],[[71868,71868],\"mapped\",[71900]],[[71869,71869],\"mapped\",[71901]],[[71870,71870],\"mapped\",[71902]],[[71871,71871],\"mapped\",[71903]],[[71872,71913],\"valid\"],[[71914,71922],\"valid\",[],\"NV8\"],[[71923,71934],\"disallowed\"],[[71935,71935],\"valid\"],[[71936,72383],\"disallowed\"],[[72384,72440],\"valid\"],[[72441,73727],\"disallowed\"],[[73728,74606],\"valid\"],[[74607,74648],\"valid\"],[[74649,74649],\"valid\"],[[74650,74751],\"disallowed\"],[[74752,74850],\"valid\",[],\"NV8\"],[[74851,74862],\"valid\",[],\"NV8\"],[[74863,74863],\"disallowed\"],[[74864,74867],\"valid\",[],\"NV8\"],[[74868,74868],\"valid\",[],\"NV8\"],[[74869,74879],\"disallowed\"],[[74880,75075],\"valid\"],[[75076,77823],\"disallowed\"],[[77824,78894],\"valid\"],[[78895,82943],\"disallowed\"],[[82944,83526],\"valid\"],[[83527,92159],\"disallowed\"],[[92160,92728],\"valid\"],[[92729,92735],\"disallowed\"],[[92736,92766],\"valid\"],[[92767,92767],\"disallowed\"],[[92768,92777],\"valid\"],[[92778,92781],\"disallowed\"],[[92782,92783],\"valid\",[],\"NV8\"],[[92784,92879],\"disallowed\"],[[92880,92909],\"valid\"],[[92910,92911],\"disallowed\"],[[92912,92916],\"valid\"],[[92917,92917],\"valid\",[],\"NV8\"],[[92918,92927],\"disallowed\"],[[92928,92982],\"valid\"],[[92983,92991],\"valid\",[],\"NV8\"],[[92992,92995],\"valid\"],[[92996,92997],\"valid\",[],\"NV8\"],[[92998,93007],\"disallowed\"],[[93008,93017],\"valid\"],[[93018,93018],\"disallowed\"],[[93019,93025],\"valid\",[],\"NV8\"],[[93026,93026],\"disallowed\"],[[93027,93047],\"valid\"],[[93048,93052],\"disallowed\"],[[93053,93071],\"valid\"],[[93072,93951],\"disallowed\"],[[93952,94020],\"valid\"],[[94021,94031],\"disallowed\"],[[94032,94078],\"valid\"],[[94079,94094],\"disallowed\"],[[94095,94111],\"valid\"],[[94112,110591],\"disallowed\"],[[110592,110593],\"valid\"],[[110594,113663],\"disallowed\"],[[113664,113770],\"valid\"],[[113771,113775],\"disallowed\"],[[113776,113788],\"valid\"],[[113789,113791],\"disallowed\"],[[113792,113800],\"valid\"],[[113801,113807],\"disallowed\"],[[113808,113817],\"valid\"],[[113818,113819],\"disallowed\"],[[113820,113820],\"valid\",[],\"NV8\"],[[113821,113822],\"valid\"],[[113823,113823],\"valid\",[],\"NV8\"],[[113824,113827],\"ignored\"],[[113828,118783],\"disallowed\"],[[118784,119029],\"valid\",[],\"NV8\"],[[119030,119039],\"disallowed\"],[[119040,119078],\"valid\",[],\"NV8\"],[[119079,119080],\"disallowed\"],[[119081,119081],\"valid\",[],\"NV8\"],[[119082,119133],\"valid\",[],\"NV8\"],[[119134,119134],\"mapped\",[119127,119141]],[[119135,119135],\"mapped\",[119128,119141]],[[119136,119136],\"mapped\",[119128,119141,119150]],[[119137,119137],\"mapped\",[119128,119141,119151]],[[119138,119138],\"mapped\",[119128,119141,119152]],[[119139,119139],\"mapped\",[119128,119141,119153]],[[119140,119140],\"mapped\",[119128,119141,119154]],[[119141,119154],\"valid\",[],\"NV8\"],[[119155,119162],\"disallowed\"],[[119163,119226],\"valid\",[],\"NV8\"],[[119227,119227],\"mapped\",[119225,119141]],[[119228,119228],\"mapped\",[119226,119141]],[[119229,119229],\"mapped\",[119225,119141,119150]],[[119230,119230],\"mapped\",[119226,119141,119150]],[[119231,119231],\"mapped\",[119225,119141,119151]],[[119232,119232],\"mapped\",[119226,119141,119151]],[[119233,119261],\"valid\",[],\"NV8\"],[[119262,119272],\"valid\",[],\"NV8\"],[[119273,119295],\"disallowed\"],[[119296,119365],\"valid\",[],\"NV8\"],[[119366,119551],\"disallowed\"],[[119552,119638],\"valid\",[],\"NV8\"],[[119639,119647],\"disallowed\"],[[119648,119665],\"valid\",[],\"NV8\"],[[119666,119807],\"disallowed\"],[[119808,119808],\"mapped\",[97]],[[119809,119809],\"mapped\",[98]],[[119810,119810],\"mapped\",[99]],[[119811,119811],\"mapped\",[100]],[[119812,119812],\"mapped\",[101]],[[119813,119813],\"mapped\",[102]],[[119814,119814],\"mapped\",[103]],[[119815,119815],\"mapped\",[104]],[[119816,119816],\"mapped\",[105]],[[119817,119817],\"mapped\",[106]],[[119818,119818],\"mapped\",[107]],[[119819,119819],\"mapped\",[108]],[[119820,119820],\"mapped\",[109]],[[119821,119821],\"mapped\",[110]],[[119822,119822],\"mapped\",[111]],[[119823,119823],\"mapped\",[112]],[[119824,119824],\"mapped\",[113]],[[119825,119825],\"mapped\",[114]],[[119826,119826],\"mapped\",[115]],[[119827,119827],\"mapped\",[116]],[[119828,119828],\"mapped\",[117]],[[119829,119829],\"mapped\",[118]],[[119830,119830],\"mapped\",[119]],[[119831,119831],\"mapped\",[120]],[[119832,119832],\"mapped\",[121]],[[119833,119833],\"mapped\",[122]],[[119834,119834],\"mapped\",[97]],[[119835,119835],\"mapped\",[98]],[[119836,119836],\"mapped\",[99]],[[119837,119837],\"mapped\",[100]],[[119838,119838],\"mapped\",[101]],[[119839,119839],\"mapped\",[102]],[[119840,119840],\"mapped\",[103]],[[119841,119841],\"mapped\",[104]],[[119842,119842],\"mapped\",[105]],[[119843,119843],\"mapped\",[106]],[[119844,119844],\"mapped\",[107]],[[119845,119845],\"mapped\",[108]],[[119846,119846],\"mapped\",[109]],[[119847,119847],\"mapped\",[110]],[[119848,119848],\"mapped\",[111]],[[119849,119849],\"mapped\",[112]],[[119850,119850],\"mapped\",[113]],[[119851,119851],\"mapped\",[114]],[[119852,119852],\"mapped\",[115]],[[119853,119853],\"mapped\",[116]],[[119854,119854],\"mapped\",[117]],[[119855,119855],\"mapped\",[118]],[[119856,119856],\"mapped\",[119]],[[119857,119857],\"mapped\",[120]],[[119858,119858],\"mapped\",[121]],[[119859,119859],\"mapped\",[122]],[[119860,119860],\"mapped\",[97]],[[119861,119861],\"mapped\",[98]],[[119862,119862],\"mapped\",[99]],[[119863,119863],\"mapped\",[100]],[[119864,119864],\"mapped\",[101]],[[119865,119865],\"mapped\",[102]],[[119866,119866],\"mapped\",[103]],[[119867,119867],\"mapped\",[104]],[[119868,119868],\"mapped\",[105]],[[119869,119869],\"mapped\",[106]],[[119870,119870],\"mapped\",[107]],[[119871,119871],\"mapped\",[108]],[[119872,119872],\"mapped\",[109]],[[119873,119873],\"mapped\",[110]],[[119874,119874],\"mapped\",[111]],[[119875,119875],\"mapped\",[112]],[[119876,119876],\"mapped\",[113]],[[119877,119877],\"mapped\",[114]],[[119878,119878],\"mapped\",[115]],[[119879,119879],\"mapped\",[116]],[[119880,119880],\"mapped\",[117]],[[119881,119881],\"mapped\",[118]],[[119882,119882],\"mapped\",[119]],[[119883,119883],\"mapped\",[120]],[[119884,119884],\"mapped\",[121]],[[119885,119885],\"mapped\",[122]],[[119886,119886],\"mapped\",[97]],[[119887,119887],\"mapped\",[98]],[[119888,119888],\"mapped\",[99]],[[119889,119889],\"mapped\",[100]],[[119890,119890],\"mapped\",[101]],[[119891,119891],\"mapped\",[102]],[[119892,119892],\"mapped\",[103]],[[119893,119893],\"disallowed\"],[[119894,119894],\"mapped\",[105]],[[119895,119895],\"mapped\",[106]],[[119896,119896],\"mapped\",[107]],[[119897,119897],\"mapped\",[108]],[[119898,119898],\"mapped\",[109]],[[119899,119899],\"mapped\",[110]],[[119900,119900],\"mapped\",[111]],[[119901,119901],\"mapped\",[112]],[[119902,119902],\"mapped\",[113]],[[119903,119903],\"mapped\",[114]],[[119904,119904],\"mapped\",[115]],[[119905,119905],\"mapped\",[116]],[[119906,119906],\"mapped\",[117]],[[119907,119907],\"mapped\",[118]],[[119908,119908],\"mapped\",[119]],[[119909,119909],\"mapped\",[120]],[[119910,119910],\"mapped\",[121]],[[119911,119911],\"mapped\",[122]],[[119912,119912],\"mapped\",[97]],[[119913,119913],\"mapped\",[98]],[[119914,119914],\"mapped\",[99]],[[119915,119915],\"mapped\",[100]],[[119916,119916],\"mapped\",[101]],[[119917,119917],\"mapped\",[102]],[[119918,119918],\"mapped\",[103]],[[119919,119919],\"mapped\",[104]],[[119920,119920],\"mapped\",[105]],[[119921,119921],\"mapped\",[106]],[[119922,119922],\"mapped\",[107]],[[119923,119923],\"mapped\",[108]],[[119924,119924],\"mapped\",[109]],[[119925,119925],\"mapped\",[110]],[[119926,119926],\"mapped\",[111]],[[119927,119927],\"mapped\",[112]],[[119928,119928],\"mapped\",[113]],[[119929,119929],\"mapped\",[114]],[[119930,119930],\"mapped\",[115]],[[119931,119931],\"mapped\",[116]],[[119932,119932],\"mapped\",[117]],[[119933,119933],\"mapped\",[118]],[[119934,119934],\"mapped\",[119]],[[119935,119935],\"mapped\",[120]],[[119936,119936],\"mapped\",[121]],[[119937,119937],\"mapped\",[122]],[[119938,119938],\"mapped\",[97]],[[119939,119939],\"mapped\",[98]],[[119940,119940],\"mapped\",[99]],[[119941,119941],\"mapped\",[100]],[[119942,119942],\"mapped\",[101]],[[119943,119943],\"mapped\",[102]],[[119944,119944],\"mapped\",[103]],[[119945,119945],\"mapped\",[104]],[[119946,119946],\"mapped\",[105]],[[119947,119947],\"mapped\",[106]],[[119948,119948],\"mapped\",[107]],[[119949,119949],\"mapped\",[108]],[[119950,119950],\"mapped\",[109]],[[119951,119951],\"mapped\",[110]],[[119952,119952],\"mapped\",[111]],[[119953,119953],\"mapped\",[112]],[[119954,119954],\"mapped\",[113]],[[119955,119955],\"mapped\",[114]],[[119956,119956],\"mapped\",[115]],[[119957,119957],\"mapped\",[116]],[[119958,119958],\"mapped\",[117]],[[119959,119959],\"mapped\",[118]],[[119960,119960],\"mapped\",[119]],[[119961,119961],\"mapped\",[120]],[[119962,119962],\"mapped\",[121]],[[119963,119963],\"mapped\",[122]],[[119964,119964],\"mapped\",[97]],[[119965,119965],\"disallowed\"],[[119966,119966],\"mapped\",[99]],[[119967,119967],\"mapped\",[100]],[[119968,119969],\"disallowed\"],[[119970,119970],\"mapped\",[103]],[[119971,119972],\"disallowed\"],[[119973,119973],\"mapped\",[106]],[[119974,119974],\"mapped\",[107]],[[119975,119976],\"disallowed\"],[[119977,119977],\"mapped\",[110]],[[119978,119978],\"mapped\",[111]],[[119979,119979],\"mapped\",[112]],[[119980,119980],\"mapped\",[113]],[[119981,119981],\"disallowed\"],[[119982,119982],\"mapped\",[115]],[[119983,119983],\"mapped\",[116]],[[119984,119984],\"mapped\",[117]],[[119985,119985],\"mapped\",[118]],[[119986,119986],\"mapped\",[119]],[[119987,119987],\"mapped\",[120]],[[119988,119988],\"mapped\",[121]],[[119989,119989],\"mapped\",[122]],[[119990,119990],\"mapped\",[97]],[[119991,119991],\"mapped\",[98]],[[119992,119992],\"mapped\",[99]],[[119993,119993],\"mapped\",[100]],[[119994,119994],\"disallowed\"],[[119995,119995],\"mapped\",[102]],[[119996,119996],\"disallowed\"],[[119997,119997],\"mapped\",[104]],[[119998,119998],\"mapped\",[105]],[[119999,119999],\"mapped\",[106]],[[120000,120000],\"mapped\",[107]],[[120001,120001],\"mapped\",[108]],[[120002,120002],\"mapped\",[109]],[[120003,120003],\"mapped\",[110]],[[120004,120004],\"disallowed\"],[[120005,120005],\"mapped\",[112]],[[120006,120006],\"mapped\",[113]],[[120007,120007],\"mapped\",[114]],[[120008,120008],\"mapped\",[115]],[[120009,120009],\"mapped\",[116]],[[120010,120010],\"mapped\",[117]],[[120011,120011],\"mapped\",[118]],[[120012,120012],\"mapped\",[119]],[[120013,120013],\"mapped\",[120]],[[120014,120014],\"mapped\",[121]],[[120015,120015],\"mapped\",[122]],[[120016,120016],\"mapped\",[97]],[[120017,120017],\"mapped\",[98]],[[120018,120018],\"mapped\",[99]],[[120019,120019],\"mapped\",[100]],[[120020,120020],\"mapped\",[101]],[[120021,120021],\"mapped\",[102]],[[120022,120022],\"mapped\",[103]],[[120023,120023],\"mapped\",[104]],[[120024,120024],\"mapped\",[105]],[[120025,120025],\"mapped\",[106]],[[120026,120026],\"mapped\",[107]],[[120027,120027],\"mapped\",[108]],[[120028,120028],\"mapped\",[109]],[[120029,120029],\"mapped\",[110]],[[120030,120030],\"mapped\",[111]],[[120031,120031],\"mapped\",[112]],[[120032,120032],\"mapped\",[113]],[[120033,120033],\"mapped\",[114]],[[120034,120034],\"mapped\",[115]],[[120035,120035],\"mapped\",[116]],[[120036,120036],\"mapped\",[117]],[[120037,120037],\"mapped\",[118]],[[120038,120038],\"mapped\",[119]],[[120039,120039],\"mapped\",[120]],[[120040,120040],\"mapped\",[121]],[[120041,120041],\"mapped\",[122]],[[120042,120042],\"mapped\",[97]],[[120043,120043],\"mapped\",[98]],[[120044,120044],\"mapped\",[99]],[[120045,120045],\"mapped\",[100]],[[120046,120046],\"mapped\",[101]],[[120047,120047],\"mapped\",[102]],[[120048,120048],\"mapped\",[103]],[[120049,120049],\"mapped\",[104]],[[120050,120050],\"mapped\",[105]],[[120051,120051],\"mapped\",[106]],[[120052,120052],\"mapped\",[107]],[[120053,120053],\"mapped\",[108]],[[120054,120054],\"mapped\",[109]],[[120055,120055],\"mapped\",[110]],[[120056,120056],\"mapped\",[111]],[[120057,120057],\"mapped\",[112]],[[120058,120058],\"mapped\",[113]],[[120059,120059],\"mapped\",[114]],[[120060,120060],\"mapped\",[115]],[[120061,120061],\"mapped\",[116]],[[120062,120062],\"mapped\",[117]],[[120063,120063],\"mapped\",[118]],[[120064,120064],\"mapped\",[119]],[[120065,120065],\"mapped\",[120]],[[120066,120066],\"mapped\",[121]],[[120067,120067],\"mapped\",[122]],[[120068,120068],\"mapped\",[97]],[[120069,120069],\"mapped\",[98]],[[120070,120070],\"disallowed\"],[[120071,120071],\"mapped\",[100]],[[120072,120072],\"mapped\",[101]],[[120073,120073],\"mapped\",[102]],[[120074,120074],\"mapped\",[103]],[[120075,120076],\"disallowed\"],[[120077,120077],\"mapped\",[106]],[[120078,120078],\"mapped\",[107]],[[120079,120079],\"mapped\",[108]],[[120080,120080],\"mapped\",[109]],[[120081,120081],\"mapped\",[110]],[[120082,120082],\"mapped\",[111]],[[120083,120083],\"mapped\",[112]],[[120084,120084],\"mapped\",[113]],[[120085,120085],\"disallowed\"],[[120086,120086],\"mapped\",[115]],[[120087,120087],\"mapped\",[116]],[[120088,120088],\"mapped\",[117]],[[120089,120089],\"mapped\",[118]],[[120090,120090],\"mapped\",[119]],[[120091,120091],\"mapped\",[120]],[[120092,120092],\"mapped\",[121]],[[120093,120093],\"disallowed\"],[[120094,120094],\"mapped\",[97]],[[120095,120095],\"mapped\",[98]],[[120096,120096],\"mapped\",[99]],[[120097,120097],\"mapped\",[100]],[[120098,120098],\"mapped\",[101]],[[120099,120099],\"mapped\",[102]],[[120100,120100],\"mapped\",[103]],[[120101,120101],\"mapped\",[104]],[[120102,120102],\"mapped\",[105]],[[120103,120103],\"mapped\",[106]],[[120104,120104],\"mapped\",[107]],[[120105,120105],\"mapped\",[108]],[[120106,120106],\"mapped\",[109]],[[120107,120107],\"mapped\",[110]],[[120108,120108],\"mapped\",[111]],[[120109,120109],\"mapped\",[112]],[[120110,120110],\"mapped\",[113]],[[120111,120111],\"mapped\",[114]],[[120112,120112],\"mapped\",[115]],[[120113,120113],\"mapped\",[116]],[[120114,120114],\"mapped\",[117]],[[120115,120115],\"mapped\",[118]],[[120116,120116],\"mapped\",[119]],[[120117,120117],\"mapped\",[120]],[[120118,120118],\"mapped\",[121]],[[120119,120119],\"mapped\",[122]],[[120120,120120],\"mapped\",[97]],[[120121,120121],\"mapped\",[98]],[[120122,120122],\"disallowed\"],[[120123,120123],\"mapped\",[100]],[[120124,120124],\"mapped\",[101]],[[120125,120125],\"mapped\",[102]],[[120126,120126],\"mapped\",[103]],[[120127,120127],\"disallowed\"],[[120128,120128],\"mapped\",[105]],[[120129,120129],\"mapped\",[106]],[[120130,120130],\"mapped\",[107]],[[120131,120131],\"mapped\",[108]],[[120132,120132],\"mapped\",[109]],[[120133,120133],\"disallowed\"],[[120134,120134],\"mapped\",[111]],[[120135,120137],\"disallowed\"],[[120138,120138],\"mapped\",[115]],[[120139,120139],\"mapped\",[116]],[[120140,120140],\"mapped\",[117]],[[120141,120141],\"mapped\",[118]],[[120142,120142],\"mapped\",[119]],[[120143,120143],\"mapped\",[120]],[[120144,120144],\"mapped\",[121]],[[120145,120145],\"disallowed\"],[[120146,120146],\"mapped\",[97]],[[120147,120147],\"mapped\",[98]],[[120148,120148],\"mapped\",[99]],[[120149,120149],\"mapped\",[100]],[[120150,120150],\"mapped\",[101]],[[120151,120151],\"mapped\",[102]],[[120152,120152],\"mapped\",[103]],[[120153,120153],\"mapped\",[104]],[[120154,120154],\"mapped\",[105]],[[120155,120155],\"mapped\",[106]],[[120156,120156],\"mapped\",[107]],[[120157,120157],\"mapped\",[108]],[[120158,120158],\"mapped\",[109]],[[120159,120159],\"mapped\",[110]],[[120160,120160],\"mapped\",[111]],[[120161,120161],\"mapped\",[112]],[[120162,120162],\"mapped\",[113]],[[120163,120163],\"mapped\",[114]],[[120164,120164],\"mapped\",[115]],[[120165,120165],\"mapped\",[116]],[[120166,120166],\"mapped\",[117]],[[120167,120167],\"mapped\",[118]],[[120168,120168],\"mapped\",[119]],[[120169,120169],\"mapped\",[120]],[[120170,120170],\"mapped\",[121]],[[120171,120171],\"mapped\",[122]],[[120172,120172],\"mapped\",[97]],[[120173,120173],\"mapped\",[98]],[[120174,120174],\"mapped\",[99]],[[120175,120175],\"mapped\",[100]],[[120176,120176],\"mapped\",[101]],[[120177,120177],\"mapped\",[102]],[[120178,120178],\"mapped\",[103]],[[120179,120179],\"mapped\",[104]],[[120180,120180],\"mapped\",[105]],[[120181,120181],\"mapped\",[106]],[[120182,120182],\"mapped\",[107]],[[120183,120183],\"mapped\",[108]],[[120184,120184],\"mapped\",[109]],[[120185,120185],\"mapped\",[110]],[[120186,120186],\"mapped\",[111]],[[120187,120187],\"mapped\",[112]],[[120188,120188],\"mapped\",[113]],[[120189,120189],\"mapped\",[114]],[[120190,120190],\"mapped\",[115]],[[120191,120191],\"mapped\",[116]],[[120192,120192],\"mapped\",[117]],[[120193,120193],\"mapped\",[118]],[[120194,120194],\"mapped\",[119]],[[120195,120195],\"mapped\",[120]],[[120196,120196],\"mapped\",[121]],[[120197,120197],\"mapped\",[122]],[[120198,120198],\"mapped\",[97]],[[120199,120199],\"mapped\",[98]],[[120200,120200],\"mapped\",[99]],[[120201,120201],\"mapped\",[100]],[[120202,120202],\"mapped\",[101]],[[120203,120203],\"mapped\",[102]],[[120204,120204],\"mapped\",[103]],[[120205,120205],\"mapped\",[104]],[[120206,120206],\"mapped\",[105]],[[120207,120207],\"mapped\",[106]],[[120208,120208],\"mapped\",[107]],[[120209,120209],\"mapped\",[108]],[[120210,120210],\"mapped\",[109]],[[120211,120211],\"mapped\",[110]],[[120212,120212],\"mapped\",[111]],[[120213,120213],\"mapped\",[112]],[[120214,120214],\"mapped\",[113]],[[120215,120215],\"mapped\",[114]],[[120216,120216],\"mapped\",[115]],[[120217,120217],\"mapped\",[116]],[[120218,120218],\"mapped\",[117]],[[120219,120219],\"mapped\",[118]],[[120220,120220],\"mapped\",[119]],[[120221,120221],\"mapped\",[120]],[[120222,120222],\"mapped\",[121]],[[120223,120223],\"mapped\",[122]],[[120224,120224],\"mapped\",[97]],[[120225,120225],\"mapped\",[98]],[[120226,120226],\"mapped\",[99]],[[120227,120227],\"mapped\",[100]],[[120228,120228],\"mapped\",[101]],[[120229,120229],\"mapped\",[102]],[[120230,120230],\"mapped\",[103]],[[120231,120231],\"mapped\",[104]],[[120232,120232],\"mapped\",[105]],[[120233,120233],\"mapped\",[106]],[[120234,120234],\"mapped\",[107]],[[120235,120235],\"mapped\",[108]],[[120236,120236],\"mapped\",[109]],[[120237,120237],\"mapped\",[110]],[[120238,120238],\"mapped\",[111]],[[120239,120239],\"mapped\",[112]],[[120240,120240],\"mapped\",[113]],[[120241,120241],\"mapped\",[114]],[[120242,120242],\"mapped\",[115]],[[120243,120243],\"mapped\",[116]],[[120244,120244],\"mapped\",[117]],[[120245,120245],\"mapped\",[118]],[[120246,120246],\"mapped\",[119]],[[120247,120247],\"mapped\",[120]],[[120248,120248],\"mapped\",[121]],[[120249,120249],\"mapped\",[122]],[[120250,120250],\"mapped\",[97]],[[120251,120251],\"mapped\",[98]],[[120252,120252],\"mapped\",[99]],[[120253,120253],\"mapped\",[100]],[[120254,120254],\"mapped\",[101]],[[120255,120255],\"mapped\",[102]],[[120256,120256],\"mapped\",[103]],[[120257,120257],\"mapped\",[104]],[[120258,120258],\"mapped\",[105]],[[120259,120259],\"mapped\",[106]],[[120260,120260],\"mapped\",[107]],[[120261,120261],\"mapped\",[108]],[[120262,120262],\"mapped\",[109]],[[120263,120263],\"mapped\",[110]],[[120264,120264],\"mapped\",[111]],[[120265,120265],\"mapped\",[112]],[[120266,120266],\"mapped\",[113]],[[120267,120267],\"mapped\",[114]],[[120268,120268],\"mapped\",[115]],[[120269,120269],\"mapped\",[116]],[[120270,120270],\"mapped\",[117]],[[120271,120271],\"mapped\",[118]],[[120272,120272],\"mapped\",[119]],[[120273,120273],\"mapped\",[120]],[[120274,120274],\"mapped\",[121]],[[120275,120275],\"mapped\",[122]],[[120276,120276],\"mapped\",[97]],[[120277,120277],\"mapped\",[98]],[[120278,120278],\"mapped\",[99]],[[120279,120279],\"mapped\",[100]],[[120280,120280],\"mapped\",[101]],[[120281,120281],\"mapped\",[102]],[[120282,120282],\"mapped\",[103]],[[120283,120283],\"mapped\",[104]],[[120284,120284],\"mapped\",[105]],[[120285,120285],\"mapped\",[106]],[[120286,120286],\"mapped\",[107]],[[120287,120287],\"mapped\",[108]],[[120288,120288],\"mapped\",[109]],[[120289,120289],\"mapped\",[110]],[[120290,120290],\"mapped\",[111]],[[120291,120291],\"mapped\",[112]],[[120292,120292],\"mapped\",[113]],[[120293,120293],\"mapped\",[114]],[[120294,120294],\"mapped\",[115]],[[120295,120295],\"mapped\",[116]],[[120296,120296],\"mapped\",[117]],[[120297,120297],\"mapped\",[118]],[[120298,120298],\"mapped\",[119]],[[120299,120299],\"mapped\",[120]],[[120300,120300],\"mapped\",[121]],[[120301,120301],\"mapped\",[122]],[[120302,120302],\"mapped\",[97]],[[120303,120303],\"mapped\",[98]],[[120304,120304],\"mapped\",[99]],[[120305,120305],\"mapped\",[100]],[[120306,120306],\"mapped\",[101]],[[120307,120307],\"mapped\",[102]],[[120308,120308],\"mapped\",[103]],[[120309,120309],\"mapped\",[104]],[[120310,120310],\"mapped\",[105]],[[120311,120311],\"mapped\",[106]],[[120312,120312],\"mapped\",[107]],[[120313,120313],\"mapped\",[108]],[[120314,120314],\"mapped\",[109]],[[120315,120315],\"mapped\",[110]],[[120316,120316],\"mapped\",[111]],[[120317,120317],\"mapped\",[112]],[[120318,120318],\"mapped\",[113]],[[120319,120319],\"mapped\",[114]],[[120320,120320],\"mapped\",[115]],[[120321,120321],\"mapped\",[116]],[[120322,120322],\"mapped\",[117]],[[120323,120323],\"mapped\",[118]],[[120324,120324],\"mapped\",[119]],[[120325,120325],\"mapped\",[120]],[[120326,120326],\"mapped\",[121]],[[120327,120327],\"mapped\",[122]],[[120328,120328],\"mapped\",[97]],[[120329,120329],\"mapped\",[98]],[[120330,120330],\"mapped\",[99]],[[120331,120331],\"mapped\",[100]],[[120332,120332],\"mapped\",[101]],[[120333,120333],\"mapped\",[102]],[[120334,120334],\"mapped\",[103]],[[120335,120335],\"mapped\",[104]],[[120336,120336],\"mapped\",[105]],[[120337,120337],\"mapped\",[106]],[[120338,120338],\"mapped\",[107]],[[120339,120339],\"mapped\",[108]],[[120340,120340],\"mapped\",[109]],[[120341,120341],\"mapped\",[110]],[[120342,120342],\"mapped\",[111]],[[120343,120343],\"mapped\",[112]],[[120344,120344],\"mapped\",[113]],[[120345,120345],\"mapped\",[114]],[[120346,120346],\"mapped\",[115]],[[120347,120347],\"mapped\",[116]],[[120348,120348],\"mapped\",[117]],[[120349,120349],\"mapped\",[118]],[[120350,120350],\"mapped\",[119]],[[120351,120351],\"mapped\",[120]],[[120352,120352],\"mapped\",[121]],[[120353,120353],\"mapped\",[122]],[[120354,120354],\"mapped\",[97]],[[120355,120355],\"mapped\",[98]],[[120356,120356],\"mapped\",[99]],[[120357,120357],\"mapped\",[100]],[[120358,120358],\"mapped\",[101]],[[120359,120359],\"mapped\",[102]],[[120360,120360],\"mapped\",[103]],[[120361,120361],\"mapped\",[104]],[[120362,120362],\"mapped\",[105]],[[120363,120363],\"mapped\",[106]],[[120364,120364],\"mapped\",[107]],[[120365,120365],\"mapped\",[108]],[[120366,120366],\"mapped\",[109]],[[120367,120367],\"mapped\",[110]],[[120368,120368],\"mapped\",[111]],[[120369,120369],\"mapped\",[112]],[[120370,120370],\"mapped\",[113]],[[120371,120371],\"mapped\",[114]],[[120372,120372],\"mapped\",[115]],[[120373,120373],\"mapped\",[116]],[[120374,120374],\"mapped\",[117]],[[120375,120375],\"mapped\",[118]],[[120376,120376],\"mapped\",[119]],[[120377,120377],\"mapped\",[120]],[[120378,120378],\"mapped\",[121]],[[120379,120379],\"mapped\",[122]],[[120380,120380],\"mapped\",[97]],[[120381,120381],\"mapped\",[98]],[[120382,120382],\"mapped\",[99]],[[120383,120383],\"mapped\",[100]],[[120384,120384],\"mapped\",[101]],[[120385,120385],\"mapped\",[102]],[[120386,120386],\"mapped\",[103]],[[120387,120387],\"mapped\",[104]],[[120388,120388],\"mapped\",[105]],[[120389,120389],\"mapped\",[106]],[[120390,120390],\"mapped\",[107]],[[120391,120391],\"mapped\",[108]],[[120392,120392],\"mapped\",[109]],[[120393,120393],\"mapped\",[110]],[[120394,120394],\"mapped\",[111]],[[120395,120395],\"mapped\",[112]],[[120396,120396],\"mapped\",[113]],[[120397,120397],\"mapped\",[114]],[[120398,120398],\"mapped\",[115]],[[120399,120399],\"mapped\",[116]],[[120400,120400],\"mapped\",[117]],[[120401,120401],\"mapped\",[118]],[[120402,120402],\"mapped\",[119]],[[120403,120403],\"mapped\",[120]],[[120404,120404],\"mapped\",[121]],[[120405,120405],\"mapped\",[122]],[[120406,120406],\"mapped\",[97]],[[120407,120407],\"mapped\",[98]],[[120408,120408],\"mapped\",[99]],[[120409,120409],\"mapped\",[100]],[[120410,120410],\"mapped\",[101]],[[120411,120411],\"mapped\",[102]],[[120412,120412],\"mapped\",[103]],[[120413,120413],\"mapped\",[104]],[[120414,120414],\"mapped\",[105]],[[120415,120415],\"mapped\",[106]],[[120416,120416],\"mapped\",[107]],[[120417,120417],\"mapped\",[108]],[[120418,120418],\"mapped\",[109]],[[120419,120419],\"mapped\",[110]],[[120420,120420],\"mapped\",[111]],[[120421,120421],\"mapped\",[112]],[[120422,120422],\"mapped\",[113]],[[120423,120423],\"mapped\",[114]],[[120424,120424],\"mapped\",[115]],[[120425,120425],\"mapped\",[116]],[[120426,120426],\"mapped\",[117]],[[120427,120427],\"mapped\",[118]],[[120428,120428],\"mapped\",[119]],[[120429,120429],\"mapped\",[120]],[[120430,120430],\"mapped\",[121]],[[120431,120431],\"mapped\",[122]],[[120432,120432],\"mapped\",[97]],[[120433,120433],\"mapped\",[98]],[[120434,120434],\"mapped\",[99]],[[120435,120435],\"mapped\",[100]],[[120436,120436],\"mapped\",[101]],[[120437,120437],\"mapped\",[102]],[[120438,120438],\"mapped\",[103]],[[120439,120439],\"mapped\",[104]],[[120440,120440],\"mapped\",[105]],[[120441,120441],\"mapped\",[106]],[[120442,120442],\"mapped\",[107]],[[120443,120443],\"mapped\",[108]],[[120444,120444],\"mapped\",[109]],[[120445,120445],\"mapped\",[110]],[[120446,120446],\"mapped\",[111]],[[120447,120447],\"mapped\",[112]],[[120448,120448],\"mapped\",[113]],[[120449,120449],\"mapped\",[114]],[[120450,120450],\"mapped\",[115]],[[120451,120451],\"mapped\",[116]],[[120452,120452],\"mapped\",[117]],[[120453,120453],\"mapped\",[118]],[[120454,120454],\"mapped\",[119]],[[120455,120455],\"mapped\",[120]],[[120456,120456],\"mapped\",[121]],[[120457,120457],\"mapped\",[122]],[[120458,120458],\"mapped\",[97]],[[120459,120459],\"mapped\",[98]],[[120460,120460],\"mapped\",[99]],[[120461,120461],\"mapped\",[100]],[[120462,120462],\"mapped\",[101]],[[120463,120463],\"mapped\",[102]],[[120464,120464],\"mapped\",[103]],[[120465,120465],\"mapped\",[104]],[[120466,120466],\"mapped\",[105]],[[120467,120467],\"mapped\",[106]],[[120468,120468],\"mapped\",[107]],[[120469,120469],\"mapped\",[108]],[[120470,120470],\"mapped\",[109]],[[120471,120471],\"mapped\",[110]],[[120472,120472],\"mapped\",[111]],[[120473,120473],\"mapped\",[112]],[[120474,120474],\"mapped\",[113]],[[120475,120475],\"mapped\",[114]],[[120476,120476],\"mapped\",[115]],[[120477,120477],\"mapped\",[116]],[[120478,120478],\"mapped\",[117]],[[120479,120479],\"mapped\",[118]],[[120480,120480],\"mapped\",[119]],[[120481,120481],\"mapped\",[120]],[[120482,120482],\"mapped\",[121]],[[120483,120483],\"mapped\",[122]],[[120484,120484],\"mapped\",[305]],[[120485,120485],\"mapped\",[567]],[[120486,120487],\"disallowed\"],[[120488,120488],\"mapped\",[945]],[[120489,120489],\"mapped\",[946]],[[120490,120490],\"mapped\",[947]],[[120491,120491],\"mapped\",[948]],[[120492,120492],\"mapped\",[949]],[[120493,120493],\"mapped\",[950]],[[120494,120494],\"mapped\",[951]],[[120495,120495],\"mapped\",[952]],[[120496,120496],\"mapped\",[953]],[[120497,120497],\"mapped\",[954]],[[120498,120498],\"mapped\",[955]],[[120499,120499],\"mapped\",[956]],[[120500,120500],\"mapped\",[957]],[[120501,120501],\"mapped\",[958]],[[120502,120502],\"mapped\",[959]],[[120503,120503],\"mapped\",[960]],[[120504,120504],\"mapped\",[961]],[[120505,120505],\"mapped\",[952]],[[120506,120506],\"mapped\",[963]],[[120507,120507],\"mapped\",[964]],[[120508,120508],\"mapped\",[965]],[[120509,120509],\"mapped\",[966]],[[120510,120510],\"mapped\",[967]],[[120511,120511],\"mapped\",[968]],[[120512,120512],\"mapped\",[969]],[[120513,120513],\"mapped\",[8711]],[[120514,120514],\"mapped\",[945]],[[120515,120515],\"mapped\",[946]],[[120516,120516],\"mapped\",[947]],[[120517,120517],\"mapped\",[948]],[[120518,120518],\"mapped\",[949]],[[120519,120519],\"mapped\",[950]],[[120520,120520],\"mapped\",[951]],[[120521,120521],\"mapped\",[952]],[[120522,120522],\"mapped\",[953]],[[120523,120523],\"mapped\",[954]],[[120524,120524],\"mapped\",[955]],[[120525,120525],\"mapped\",[956]],[[120526,120526],\"mapped\",[957]],[[120527,120527],\"mapped\",[958]],[[120528,120528],\"mapped\",[959]],[[120529,120529],\"mapped\",[960]],[[120530,120530],\"mapped\",[961]],[[120531,120532],\"mapped\",[963]],[[120533,120533],\"mapped\",[964]],[[120534,120534],\"mapped\",[965]],[[120535,120535],\"mapped\",[966]],[[120536,120536],\"mapped\",[967]],[[120537,120537],\"mapped\",[968]],[[120538,120538],\"mapped\",[969]],[[120539,120539],\"mapped\",[8706]],[[120540,120540],\"mapped\",[949]],[[120541,120541],\"mapped\",[952]],[[120542,120542],\"mapped\",[954]],[[120543,120543],\"mapped\",[966]],[[120544,120544],\"mapped\",[961]],[[120545,120545],\"mapped\",[960]],[[120546,120546],\"mapped\",[945]],[[120547,120547],\"mapped\",[946]],[[120548,120548],\"mapped\",[947]],[[120549,120549],\"mapped\",[948]],[[120550,120550],\"mapped\",[949]],[[120551,120551],\"mapped\",[950]],[[120552,120552],\"mapped\",[951]],[[120553,120553],\"mapped\",[952]],[[120554,120554],\"mapped\",[953]],[[120555,120555],\"mapped\",[954]],[[120556,120556],\"mapped\",[955]],[[120557,120557],\"mapped\",[956]],[[120558,120558],\"mapped\",[957]],[[120559,120559],\"mapped\",[958]],[[120560,120560],\"mapped\",[959]],[[120561,120561],\"mapped\",[960]],[[120562,120562],\"mapped\",[961]],[[120563,120563],\"mapped\",[952]],[[120564,120564],\"mapped\",[963]],[[120565,120565],\"mapped\",[964]],[[120566,120566],\"mapped\",[965]],[[120567,120567],\"mapped\",[966]],[[120568,120568],\"mapped\",[967]],[[120569,120569],\"mapped\",[968]],[[120570,120570],\"mapped\",[969]],[[120571,120571],\"mapped\",[8711]],[[120572,120572],\"mapped\",[945]],[[120573,120573],\"mapped\",[946]],[[120574,120574],\"mapped\",[947]],[[120575,120575],\"mapped\",[948]],[[120576,120576],\"mapped\",[949]],[[120577,120577],\"mapped\",[950]],[[120578,120578],\"mapped\",[951]],[[120579,120579],\"mapped\",[952]],[[120580,120580],\"mapped\",[953]],[[120581,120581],\"mapped\",[954]],[[120582,120582],\"mapped\",[955]],[[120583,120583],\"mapped\",[956]],[[120584,120584],\"mapped\",[957]],[[120585,120585],\"mapped\",[958]],[[120586,120586],\"mapped\",[959]],[[120587,120587],\"mapped\",[960]],[[120588,120588],\"mapped\",[961]],[[120589,120590],\"mapped\",[963]],[[120591,120591],\"mapped\",[964]],[[120592,120592],\"mapped\",[965]],[[120593,120593],\"mapped\",[966]],[[120594,120594],\"mapped\",[967]],[[120595,120595],\"mapped\",[968]],[[120596,120596],\"mapped\",[969]],[[120597,120597],\"mapped\",[8706]],[[120598,120598],\"mapped\",[949]],[[120599,120599],\"mapped\",[952]],[[120600,120600],\"mapped\",[954]],[[120601,120601],\"mapped\",[966]],[[120602,120602],\"mapped\",[961]],[[120603,120603],\"mapped\",[960]],[[120604,120604],\"mapped\",[945]],[[120605,120605],\"mapped\",[946]],[[120606,120606],\"mapped\",[947]],[[120607,120607],\"mapped\",[948]],[[120608,120608],\"mapped\",[949]],[[120609,120609],\"mapped\",[950]],[[120610,120610],\"mapped\",[951]],[[120611,120611],\"mapped\",[952]],[[120612,120612],\"mapped\",[953]],[[120613,120613],\"mapped\",[954]],[[120614,120614],\"mapped\",[955]],[[120615,120615],\"mapped\",[956]],[[120616,120616],\"mapped\",[957]],[[120617,120617],\"mapped\",[958]],[[120618,120618],\"mapped\",[959]],[[120619,120619],\"mapped\",[960]],[[120620,120620],\"mapped\",[961]],[[120621,120621],\"mapped\",[952]],[[120622,120622],\"mapped\",[963]],[[120623,120623],\"mapped\",[964]],[[120624,120624],\"mapped\",[965]],[[120625,120625],\"mapped\",[966]],[[120626,120626],\"mapped\",[967]],[[120627,120627],\"mapped\",[968]],[[120628,120628],\"mapped\",[969]],[[120629,120629],\"mapped\",[8711]],[[120630,120630],\"mapped\",[945]],[[120631,120631],\"mapped\",[946]],[[120632,120632],\"mapped\",[947]],[[120633,120633],\"mapped\",[948]],[[120634,120634],\"mapped\",[949]],[[120635,120635],\"mapped\",[950]],[[120636,120636],\"mapped\",[951]],[[120637,120637],\"mapped\",[952]],[[120638,120638],\"mapped\",[953]],[[120639,120639],\"mapped\",[954]],[[120640,120640],\"mapped\",[955]],[[120641,120641],\"mapped\",[956]],[[120642,120642],\"mapped\",[957]],[[120643,120643],\"mapped\",[958]],[[120644,120644],\"mapped\",[959]],[[120645,120645],\"mapped\",[960]],[[120646,120646],\"mapped\",[961]],[[120647,120648],\"mapped\",[963]],[[120649,120649],\"mapped\",[964]],[[120650,120650],\"mapped\",[965]],[[120651,120651],\"mapped\",[966]],[[120652,120652],\"mapped\",[967]],[[120653,120653],\"mapped\",[968]],[[120654,120654],\"mapped\",[969]],[[120655,120655],\"mapped\",[8706]],[[120656,120656],\"mapped\",[949]],[[120657,120657],\"mapped\",[952]],[[120658,120658],\"mapped\",[954]],[[120659,120659],\"mapped\",[966]],[[120660,120660],\"mapped\",[961]],[[120661,120661],\"mapped\",[960]],[[120662,120662],\"mapped\",[945]],[[120663,120663],\"mapped\",[946]],[[120664,120664],\"mapped\",[947]],[[120665,120665],\"mapped\",[948]],[[120666,120666],\"mapped\",[949]],[[120667,120667],\"mapped\",[950]],[[120668,120668],\"mapped\",[951]],[[120669,120669],\"mapped\",[952]],[[120670,120670],\"mapped\",[953]],[[120671,120671],\"mapped\",[954]],[[120672,120672],\"mapped\",[955]],[[120673,120673],\"mapped\",[956]],[[120674,120674],\"mapped\",[957]],[[120675,120675],\"mapped\",[958]],[[120676,120676],\"mapped\",[959]],[[120677,120677],\"mapped\",[960]],[[120678,120678],\"mapped\",[961]],[[120679,120679],\"mapped\",[952]],[[120680,120680],\"mapped\",[963]],[[120681,120681],\"mapped\",[964]],[[120682,120682],\"mapped\",[965]],[[120683,120683],\"mapped\",[966]],[[120684,120684],\"mapped\",[967]],[[120685,120685],\"mapped\",[968]],[[120686,120686],\"mapped\",[969]],[[120687,120687],\"mapped\",[8711]],[[120688,120688],\"mapped\",[945]],[[120689,120689],\"mapped\",[946]],[[120690,120690],\"mapped\",[947]],[[120691,120691],\"mapped\",[948]],[[120692,120692],\"mapped\",[949]],[[120693,120693],\"mapped\",[950]],[[120694,120694],\"mapped\",[951]],[[120695,120695],\"mapped\",[952]],[[120696,120696],\"mapped\",[953]],[[120697,120697],\"mapped\",[954]],[[120698,120698],\"mapped\",[955]],[[120699,120699],\"mapped\",[956]],[[120700,120700],\"mapped\",[957]],[[120701,120701],\"mapped\",[958]],[[120702,120702],\"mapped\",[959]],[[120703,120703],\"mapped\",[960]],[[120704,120704],\"mapped\",[961]],[[120705,120706],\"mapped\",[963]],[[120707,120707],\"mapped\",[964]],[[120708,120708],\"mapped\",[965]],[[120709,120709],\"mapped\",[966]],[[120710,120710],\"mapped\",[967]],[[120711,120711],\"mapped\",[968]],[[120712,120712],\"mapped\",[969]],[[120713,120713],\"mapped\",[8706]],[[120714,120714],\"mapped\",[949]],[[120715,120715],\"mapped\",[952]],[[120716,120716],\"mapped\",[954]],[[120717,120717],\"mapped\",[966]],[[120718,120718],\"mapped\",[961]],[[120719,120719],\"mapped\",[960]],[[120720,120720],\"mapped\",[945]],[[120721,120721],\"mapped\",[946]],[[120722,120722],\"mapped\",[947]],[[120723,120723],\"mapped\",[948]],[[120724,120724],\"mapped\",[949]],[[120725,120725],\"mapped\",[950]],[[120726,120726],\"mapped\",[951]],[[120727,120727],\"mapped\",[952]],[[120728,120728],\"mapped\",[953]],[[120729,120729],\"mapped\",[954]],[[120730,120730],\"mapped\",[955]],[[120731,120731],\"mapped\",[956]],[[120732,120732],\"mapped\",[957]],[[120733,120733],\"mapped\",[958]],[[120734,120734],\"mapped\",[959]],[[120735,120735],\"mapped\",[960]],[[120736,120736],\"mapped\",[961]],[[120737,120737],\"mapped\",[952]],[[120738,120738],\"mapped\",[963]],[[120739,120739],\"mapped\",[964]],[[120740,120740],\"mapped\",[965]],[[120741,120741],\"mapped\",[966]],[[120742,120742],\"mapped\",[967]],[[120743,120743],\"mapped\",[968]],[[120744,120744],\"mapped\",[969]],[[120745,120745],\"mapped\",[8711]],[[120746,120746],\"mapped\",[945]],[[120747,120747],\"mapped\",[946]],[[120748,120748],\"mapped\",[947]],[[120749,120749],\"mapped\",[948]],[[120750,120750],\"mapped\",[949]],[[120751,120751],\"mapped\",[950]],[[120752,120752],\"mapped\",[951]],[[120753,120753],\"mapped\",[952]],[[120754,120754],\"mapped\",[953]],[[120755,120755],\"mapped\",[954]],[[120756,120756],\"mapped\",[955]],[[120757,120757],\"mapped\",[956]],[[120758,120758],\"mapped\",[957]],[[120759,120759],\"mapped\",[958]],[[120760,120760],\"mapped\",[959]],[[120761,120761],\"mapped\",[960]],[[120762,120762],\"mapped\",[961]],[[120763,120764],\"mapped\",[963]],[[120765,120765],\"mapped\",[964]],[[120766,120766],\"mapped\",[965]],[[120767,120767],\"mapped\",[966]],[[120768,120768],\"mapped\",[967]],[[120769,120769],\"mapped\",[968]],[[120770,120770],\"mapped\",[969]],[[120771,120771],\"mapped\",[8706]],[[120772,120772],\"mapped\",[949]],[[120773,120773],\"mapped\",[952]],[[120774,120774],\"mapped\",[954]],[[120775,120775],\"mapped\",[966]],[[120776,120776],\"mapped\",[961]],[[120777,120777],\"mapped\",[960]],[[120778,120779],\"mapped\",[989]],[[120780,120781],\"disallowed\"],[[120782,120782],\"mapped\",[48]],[[120783,120783],\"mapped\",[49]],[[120784,120784],\"mapped\",[50]],[[120785,120785],\"mapped\",[51]],[[120786,120786],\"mapped\",[52]],[[120787,120787],\"mapped\",[53]],[[120788,120788],\"mapped\",[54]],[[120789,120789],\"mapped\",[55]],[[120790,120790],\"mapped\",[56]],[[120791,120791],\"mapped\",[57]],[[120792,120792],\"mapped\",[48]],[[120793,120793],\"mapped\",[49]],[[120794,120794],\"mapped\",[50]],[[120795,120795],\"mapped\",[51]],[[120796,120796],\"mapped\",[52]],[[120797,120797],\"mapped\",[53]],[[120798,120798],\"mapped\",[54]],[[120799,120799],\"mapped\",[55]],[[120800,120800],\"mapped\",[56]],[[120801,120801],\"mapped\",[57]],[[120802,120802],\"mapped\",[48]],[[120803,120803],\"mapped\",[49]],[[120804,120804],\"mapped\",[50]],[[120805,120805],\"mapped\",[51]],[[120806,120806],\"mapped\",[52]],[[120807,120807],\"mapped\",[53]],[[120808,120808],\"mapped\",[54]],[[120809,120809],\"mapped\",[55]],[[120810,120810],\"mapped\",[56]],[[120811,120811],\"mapped\",[57]],[[120812,120812],\"mapped\",[48]],[[120813,120813],\"mapped\",[49]],[[120814,120814],\"mapped\",[50]],[[120815,120815],\"mapped\",[51]],[[120816,120816],\"mapped\",[52]],[[120817,120817],\"mapped\",[53]],[[120818,120818],\"mapped\",[54]],[[120819,120819],\"mapped\",[55]],[[120820,120820],\"mapped\",[56]],[[120821,120821],\"mapped\",[57]],[[120822,120822],\"mapped\",[48]],[[120823,120823],\"mapped\",[49]],[[120824,120824],\"mapped\",[50]],[[120825,120825],\"mapped\",[51]],[[120826,120826],\"mapped\",[52]],[[120827,120827],\"mapped\",[53]],[[120828,120828],\"mapped\",[54]],[[120829,120829],\"mapped\",[55]],[[120830,120830],\"mapped\",[56]],[[120831,120831],\"mapped\",[57]],[[120832,121343],\"valid\",[],\"NV8\"],[[121344,121398],\"valid\"],[[121399,121402],\"valid\",[],\"NV8\"],[[121403,121452],\"valid\"],[[121453,121460],\"valid\",[],\"NV8\"],[[121461,121461],\"valid\"],[[121462,121475],\"valid\",[],\"NV8\"],[[121476,121476],\"valid\"],[[121477,121483],\"valid\",[],\"NV8\"],[[121484,121498],\"disallowed\"],[[121499,121503],\"valid\"],[[121504,121504],\"disallowed\"],[[121505,121519],\"valid\"],[[121520,124927],\"disallowed\"],[[124928,125124],\"valid\"],[[125125,125126],\"disallowed\"],[[125127,125135],\"valid\",[],\"NV8\"],[[125136,125142],\"valid\"],[[125143,126463],\"disallowed\"],[[126464,126464],\"mapped\",[1575]],[[126465,126465],\"mapped\",[1576]],[[126466,126466],\"mapped\",[1580]],[[126467,126467],\"mapped\",[1583]],[[126468,126468],\"disallowed\"],[[126469,126469],\"mapped\",[1608]],[[126470,126470],\"mapped\",[1586]],[[126471,126471],\"mapped\",[1581]],[[126472,126472],\"mapped\",[1591]],[[126473,126473],\"mapped\",[1610]],[[126474,126474],\"mapped\",[1603]],[[126475,126475],\"mapped\",[1604]],[[126476,126476],\"mapped\",[1605]],[[126477,126477],\"mapped\",[1606]],[[126478,126478],\"mapped\",[1587]],[[126479,126479],\"mapped\",[1593]],[[126480,126480],\"mapped\",[1601]],[[126481,126481],\"mapped\",[1589]],[[126482,126482],\"mapped\",[1602]],[[126483,126483],\"mapped\",[1585]],[[126484,126484],\"mapped\",[1588]],[[126485,126485],\"mapped\",[1578]],[[126486,126486],\"mapped\",[1579]],[[126487,126487],\"mapped\",[1582]],[[126488,126488],\"mapped\",[1584]],[[126489,126489],\"mapped\",[1590]],[[126490,126490],\"mapped\",[1592]],[[126491,126491],\"mapped\",[1594]],[[126492,126492],\"mapped\",[1646]],[[126493,126493],\"mapped\",[1722]],[[126494,126494],\"mapped\",[1697]],[[126495,126495],\"mapped\",[1647]],[[126496,126496],\"disallowed\"],[[126497,126497],\"mapped\",[1576]],[[126498,126498],\"mapped\",[1580]],[[126499,126499],\"disallowed\"],[[126500,126500],\"mapped\",[1607]],[[126501,126502],\"disallowed\"],[[126503,126503],\"mapped\",[1581]],[[126504,126504],\"disallowed\"],[[126505,126505],\"mapped\",[1610]],[[126506,126506],\"mapped\",[1603]],[[126507,126507],\"mapped\",[1604]],[[126508,126508],\"mapped\",[1605]],[[126509,126509],\"mapped\",[1606]],[[126510,126510],\"mapped\",[1587]],[[126511,126511],\"mapped\",[1593]],[[126512,126512],\"mapped\",[1601]],[[126513,126513],\"mapped\",[1589]],[[126514,126514],\"mapped\",[1602]],[[126515,126515],\"disallowed\"],[[126516,126516],\"mapped\",[1588]],[[126517,126517],\"mapped\",[1578]],[[126518,126518],\"mapped\",[1579]],[[126519,126519],\"mapped\",[1582]],[[126520,126520],\"disallowed\"],[[126521,126521],\"mapped\",[1590]],[[126522,126522],\"disallowed\"],[[126523,126523],\"mapped\",[1594]],[[126524,126529],\"disallowed\"],[[126530,126530],\"mapped\",[1580]],[[126531,126534],\"disallowed\"],[[126535,126535],\"mapped\",[1581]],[[126536,126536],\"disallowed\"],[[126537,126537],\"mapped\",[1610]],[[126538,126538],\"disallowed\"],[[126539,126539],\"mapped\",[1604]],[[126540,126540],\"disallowed\"],[[126541,126541],\"mapped\",[1606]],[[126542,126542],\"mapped\",[1587]],[[126543,126543],\"mapped\",[1593]],[[126544,126544],\"disallowed\"],[[126545,126545],\"mapped\",[1589]],[[126546,126546],\"mapped\",[1602]],[[126547,126547],\"disallowed\"],[[126548,126548],\"mapped\",[1588]],[[126549,126550],\"disallowed\"],[[126551,126551],\"mapped\",[1582]],[[126552,126552],\"disallowed\"],[[126553,126553],\"mapped\",[1590]],[[126554,126554],\"disallowed\"],[[126555,126555],\"mapped\",[1594]],[[126556,126556],\"disallowed\"],[[126557,126557],\"mapped\",[1722]],[[126558,126558],\"disallowed\"],[[126559,126559],\"mapped\",[1647]],[[126560,126560],\"disallowed\"],[[126561,126561],\"mapped\",[1576]],[[126562,126562],\"mapped\",[1580]],[[126563,126563],\"disallowed\"],[[126564,126564],\"mapped\",[1607]],[[126565,126566],\"disallowed\"],[[126567,126567],\"mapped\",[1581]],[[126568,126568],\"mapped\",[1591]],[[126569,126569],\"mapped\",[1610]],[[126570,126570],\"mapped\",[1603]],[[126571,126571],\"disallowed\"],[[126572,126572],\"mapped\",[1605]],[[126573,126573],\"mapped\",[1606]],[[126574,126574],\"mapped\",[1587]],[[126575,126575],\"mapped\",[1593]],[[126576,126576],\"mapped\",[1601]],[[126577,126577],\"mapped\",[1589]],[[126578,126578],\"mapped\",[1602]],[[126579,126579],\"disallowed\"],[[126580,126580],\"mapped\",[1588]],[[126581,126581],\"mapped\",[1578]],[[126582,126582],\"mapped\",[1579]],[[126583,126583],\"mapped\",[1582]],[[126584,126584],\"disallowed\"],[[126585,126585],\"mapped\",[1590]],[[126586,126586],\"mapped\",[1592]],[[126587,126587],\"mapped\",[1594]],[[126588,126588],\"mapped\",[1646]],[[126589,126589],\"disallowed\"],[[126590,126590],\"mapped\",[1697]],[[126591,126591],\"disallowed\"],[[126592,126592],\"mapped\",[1575]],[[126593,126593],\"mapped\",[1576]],[[126594,126594],\"mapped\",[1580]],[[126595,126595],\"mapped\",[1583]],[[126596,126596],\"mapped\",[1607]],[[126597,126597],\"mapped\",[1608]],[[126598,126598],\"mapped\",[1586]],[[126599,126599],\"mapped\",[1581]],[[126600,126600],\"mapped\",[1591]],[[126601,126601],\"mapped\",[1610]],[[126602,126602],\"disallowed\"],[[126603,126603],\"mapped\",[1604]],[[126604,126604],\"mapped\",[1605]],[[126605,126605],\"mapped\",[1606]],[[126606,126606],\"mapped\",[1587]],[[126607,126607],\"mapped\",[1593]],[[126608,126608],\"mapped\",[1601]],[[126609,126609],\"mapped\",[1589]],[[126610,126610],\"mapped\",[1602]],[[126611,126611],\"mapped\",[1585]],[[126612,126612],\"mapped\",[1588]],[[126613,126613],\"mapped\",[1578]],[[126614,126614],\"mapped\",[1579]],[[126615,126615],\"mapped\",[1582]],[[126616,126616],\"mapped\",[1584]],[[126617,126617],\"mapped\",[1590]],[[126618,126618],\"mapped\",[1592]],[[126619,126619],\"mapped\",[1594]],[[126620,126624],\"disallowed\"],[[126625,126625],\"mapped\",[1576]],[[126626,126626],\"mapped\",[1580]],[[126627,126627],\"mapped\",[1583]],[[126628,126628],\"disallowed\"],[[126629,126629],\"mapped\",[1608]],[[126630,126630],\"mapped\",[1586]],[[126631,126631],\"mapped\",[1581]],[[126632,126632],\"mapped\",[1591]],[[126633,126633],\"mapped\",[1610]],[[126634,126634],\"disallowed\"],[[126635,126635],\"mapped\",[1604]],[[126636,126636],\"mapped\",[1605]],[[126637,126637],\"mapped\",[1606]],[[126638,126638],\"mapped\",[1587]],[[126639,126639],\"mapped\",[1593]],[[126640,126640],\"mapped\",[1601]],[[126641,126641],\"mapped\",[1589]],[[126642,126642],\"mapped\",[1602]],[[126643,126643],\"mapped\",[1585]],[[126644,126644],\"mapped\",[1588]],[[126645,126645],\"mapped\",[1578]],[[126646,126646],\"mapped\",[1579]],[[126647,126647],\"mapped\",[1582]],[[126648,126648],\"mapped\",[1584]],[[126649,126649],\"mapped\",[1590]],[[126650,126650],\"mapped\",[1592]],[[126651,126651],\"mapped\",[1594]],[[126652,126703],\"disallowed\"],[[126704,126705],\"valid\",[],\"NV8\"],[[126706,126975],\"disallowed\"],[[126976,127019],\"valid\",[],\"NV8\"],[[127020,127023],\"disallowed\"],[[127024,127123],\"valid\",[],\"NV8\"],[[127124,127135],\"disallowed\"],[[127136,127150],\"valid\",[],\"NV8\"],[[127151,127152],\"disallowed\"],[[127153,127166],\"valid\",[],\"NV8\"],[[127167,127167],\"valid\",[],\"NV8\"],[[127168,127168],\"disallowed\"],[[127169,127183],\"valid\",[],\"NV8\"],[[127184,127184],\"disallowed\"],[[127185,127199],\"valid\",[],\"NV8\"],[[127200,127221],\"valid\",[],\"NV8\"],[[127222,127231],\"disallowed\"],[[127232,127232],\"disallowed\"],[[127233,127233],\"disallowed_STD3_mapped\",[48,44]],[[127234,127234],\"disallowed_STD3_mapped\",[49,44]],[[127235,127235],\"disallowed_STD3_mapped\",[50,44]],[[127236,127236],\"disallowed_STD3_mapped\",[51,44]],[[127237,127237],\"disallowed_STD3_mapped\",[52,44]],[[127238,127238],\"disallowed_STD3_mapped\",[53,44]],[[127239,127239],\"disallowed_STD3_mapped\",[54,44]],[[127240,127240],\"disallowed_STD3_mapped\",[55,44]],[[127241,127241],\"disallowed_STD3_mapped\",[56,44]],[[127242,127242],\"disallowed_STD3_mapped\",[57,44]],[[127243,127244],\"valid\",[],\"NV8\"],[[127245,127247],\"disallowed\"],[[127248,127248],\"disallowed_STD3_mapped\",[40,97,41]],[[127249,127249],\"disallowed_STD3_mapped\",[40,98,41]],[[127250,127250],\"disallowed_STD3_mapped\",[40,99,41]],[[127251,127251],\"disallowed_STD3_mapped\",[40,100,41]],[[127252,127252],\"disallowed_STD3_mapped\",[40,101,41]],[[127253,127253],\"disallowed_STD3_mapped\",[40,102,41]],[[127254,127254],\"disallowed_STD3_mapped\",[40,103,41]],[[127255,127255],\"disallowed_STD3_mapped\",[40,104,41]],[[127256,127256],\"disallowed_STD3_mapped\",[40,105,41]],[[127257,127257],\"disallowed_STD3_mapped\",[40,106,41]],[[127258,127258],\"disallowed_STD3_mapped\",[40,107,41]],[[127259,127259],\"disallowed_STD3_mapped\",[40,108,41]],[[127260,127260],\"disallowed_STD3_mapped\",[40,109,41]],[[127261,127261],\"disallowed_STD3_mapped\",[40,110,41]],[[127262,127262],\"disallowed_STD3_mapped\",[40,111,41]],[[127263,127263],\"disallowed_STD3_mapped\",[40,112,41]],[[127264,127264],\"disallowed_STD3_mapped\",[40,113,41]],[[127265,127265],\"disallowed_STD3_mapped\",[40,114,41]],[[127266,127266],\"disallowed_STD3_mapped\",[40,115,41]],[[127267,127267],\"disallowed_STD3_mapped\",[40,116,41]],[[127268,127268],\"disallowed_STD3_mapped\",[40,117,41]],[[127269,127269],\"disallowed_STD3_mapped\",[40,118,41]],[[127270,127270],\"disallowed_STD3_mapped\",[40,119,41]],[[127271,127271],\"disallowed_STD3_mapped\",[40,120,41]],[[127272,127272],\"disallowed_STD3_mapped\",[40,121,41]],[[127273,127273],\"disallowed_STD3_mapped\",[40,122,41]],[[127274,127274],\"mapped\",[12308,115,12309]],[[127275,127275],\"mapped\",[99]],[[127276,127276],\"mapped\",[114]],[[127277,127277],\"mapped\",[99,100]],[[127278,127278],\"mapped\",[119,122]],[[127279,127279],\"disallowed\"],[[127280,127280],\"mapped\",[97]],[[127281,127281],\"mapped\",[98]],[[127282,127282],\"mapped\",[99]],[[127283,127283],\"mapped\",[100]],[[127284,127284],\"mapped\",[101]],[[127285,127285],\"mapped\",[102]],[[127286,127286],\"mapped\",[103]],[[127287,127287],\"mapped\",[104]],[[127288,127288],\"mapped\",[105]],[[127289,127289],\"mapped\",[106]],[[127290,127290],\"mapped\",[107]],[[127291,127291],\"mapped\",[108]],[[127292,127292],\"mapped\",[109]],[[127293,127293],\"mapped\",[110]],[[127294,127294],\"mapped\",[111]],[[127295,127295],\"mapped\",[112]],[[127296,127296],\"mapped\",[113]],[[127297,127297],\"mapped\",[114]],[[127298,127298],\"mapped\",[115]],[[127299,127299],\"mapped\",[116]],[[127300,127300],\"mapped\",[117]],[[127301,127301],\"mapped\",[118]],[[127302,127302],\"mapped\",[119]],[[127303,127303],\"mapped\",[120]],[[127304,127304],\"mapped\",[121]],[[127305,127305],\"mapped\",[122]],[[127306,127306],\"mapped\",[104,118]],[[127307,127307],\"mapped\",[109,118]],[[127308,127308],\"mapped\",[115,100]],[[127309,127309],\"mapped\",[115,115]],[[127310,127310],\"mapped\",[112,112,118]],[[127311,127311],\"mapped\",[119,99]],[[127312,127318],\"valid\",[],\"NV8\"],[[127319,127319],\"valid\",[],\"NV8\"],[[127320,127326],\"valid\",[],\"NV8\"],[[127327,127327],\"valid\",[],\"NV8\"],[[127328,127337],\"valid\",[],\"NV8\"],[[127338,127338],\"mapped\",[109,99]],[[127339,127339],\"mapped\",[109,100]],[[127340,127343],\"disallowed\"],[[127344,127352],\"valid\",[],\"NV8\"],[[127353,127353],\"valid\",[],\"NV8\"],[[127354,127354],\"valid\",[],\"NV8\"],[[127355,127356],\"valid\",[],\"NV8\"],[[127357,127358],\"valid\",[],\"NV8\"],[[127359,127359],\"valid\",[],\"NV8\"],[[127360,127369],\"valid\",[],\"NV8\"],[[127370,127373],\"valid\",[],\"NV8\"],[[127374,127375],\"valid\",[],\"NV8\"],[[127376,127376],\"mapped\",[100,106]],[[127377,127386],\"valid\",[],\"NV8\"],[[127387,127461],\"disallowed\"],[[127462,127487],\"valid\",[],\"NV8\"],[[127488,127488],\"mapped\",[12411,12363]],[[127489,127489],\"mapped\",[12467,12467]],[[127490,127490],\"mapped\",[12469]],[[127491,127503],\"disallowed\"],[[127504,127504],\"mapped\",[25163]],[[127505,127505],\"mapped\",[23383]],[[127506,127506],\"mapped\",[21452]],[[127507,127507],\"mapped\",[12487]],[[127508,127508],\"mapped\",[20108]],[[127509,127509],\"mapped\",[22810]],[[127510,127510],\"mapped\",[35299]],[[127511,127511],\"mapped\",[22825]],[[127512,127512],\"mapped\",[20132]],[[127513,127513],\"mapped\",[26144]],[[127514,127514],\"mapped\",[28961]],[[127515,127515],\"mapped\",[26009]],[[127516,127516],\"mapped\",[21069]],[[127517,127517],\"mapped\",[24460]],[[127518,127518],\"mapped\",[20877]],[[127519,127519],\"mapped\",[26032]],[[127520,127520],\"mapped\",[21021]],[[127521,127521],\"mapped\",[32066]],[[127522,127522],\"mapped\",[29983]],[[127523,127523],\"mapped\",[36009]],[[127524,127524],\"mapped\",[22768]],[[127525,127525],\"mapped\",[21561]],[[127526,127526],\"mapped\",[28436]],[[127527,127527],\"mapped\",[25237]],[[127528,127528],\"mapped\",[25429]],[[127529,127529],\"mapped\",[19968]],[[127530,127530],\"mapped\",[19977]],[[127531,127531],\"mapped\",[36938]],[[127532,127532],\"mapped\",[24038]],[[127533,127533],\"mapped\",[20013]],[[127534,127534],\"mapped\",[21491]],[[127535,127535],\"mapped\",[25351]],[[127536,127536],\"mapped\",[36208]],[[127537,127537],\"mapped\",[25171]],[[127538,127538],\"mapped\",[31105]],[[127539,127539],\"mapped\",[31354]],[[127540,127540],\"mapped\",[21512]],[[127541,127541],\"mapped\",[28288]],[[127542,127542],\"mapped\",[26377]],[[127543,127543],\"mapped\",[26376]],[[127544,127544],\"mapped\",[30003]],[[127545,127545],\"mapped\",[21106]],[[127546,127546],\"mapped\",[21942]],[[127547,127551],\"disallowed\"],[[127552,127552],\"mapped\",[12308,26412,12309]],[[127553,127553],\"mapped\",[12308,19977,12309]],[[127554,127554],\"mapped\",[12308,20108,12309]],[[127555,127555],\"mapped\",[12308,23433,12309]],[[127556,127556],\"mapped\",[12308,28857,12309]],[[127557,127557],\"mapped\",[12308,25171,12309]],[[127558,127558],\"mapped\",[12308,30423,12309]],[[127559,127559],\"mapped\",[12308,21213,12309]],[[127560,127560],\"mapped\",[12308,25943,12309]],[[127561,127567],\"disallowed\"],[[127568,127568],\"mapped\",[24471]],[[127569,127569],\"mapped\",[21487]],[[127570,127743],\"disallowed\"],[[127744,127776],\"valid\",[],\"NV8\"],[[127777,127788],\"valid\",[],\"NV8\"],[[127789,127791],\"valid\",[],\"NV8\"],[[127792,127797],\"valid\",[],\"NV8\"],[[127798,127798],\"valid\",[],\"NV8\"],[[127799,127868],\"valid\",[],\"NV8\"],[[127869,127869],\"valid\",[],\"NV8\"],[[127870,127871],\"valid\",[],\"NV8\"],[[127872,127891],\"valid\",[],\"NV8\"],[[127892,127903],\"valid\",[],\"NV8\"],[[127904,127940],\"valid\",[],\"NV8\"],[[127941,127941],\"valid\",[],\"NV8\"],[[127942,127946],\"valid\",[],\"NV8\"],[[127947,127950],\"valid\",[],\"NV8\"],[[127951,127955],\"valid\",[],\"NV8\"],[[127956,127967],\"valid\",[],\"NV8\"],[[127968,127984],\"valid\",[],\"NV8\"],[[127985,127991],\"valid\",[],\"NV8\"],[[127992,127999],\"valid\",[],\"NV8\"],[[128000,128062],\"valid\",[],\"NV8\"],[[128063,128063],\"valid\",[],\"NV8\"],[[128064,128064],\"valid\",[],\"NV8\"],[[128065,128065],\"valid\",[],\"NV8\"],[[128066,128247],\"valid\",[],\"NV8\"],[[128248,128248],\"valid\",[],\"NV8\"],[[128249,128252],\"valid\",[],\"NV8\"],[[128253,128254],\"valid\",[],\"NV8\"],[[128255,128255],\"valid\",[],\"NV8\"],[[128256,128317],\"valid\",[],\"NV8\"],[[128318,128319],\"valid\",[],\"NV8\"],[[128320,128323],\"valid\",[],\"NV8\"],[[128324,128330],\"valid\",[],\"NV8\"],[[128331,128335],\"valid\",[],\"NV8\"],[[128336,128359],\"valid\",[],\"NV8\"],[[128360,128377],\"valid\",[],\"NV8\"],[[128378,128378],\"disallowed\"],[[128379,128419],\"valid\",[],\"NV8\"],[[128420,128420],\"disallowed\"],[[128421,128506],\"valid\",[],\"NV8\"],[[128507,128511],\"valid\",[],\"NV8\"],[[128512,128512],\"valid\",[],\"NV8\"],[[128513,128528],\"valid\",[],\"NV8\"],[[128529,128529],\"valid\",[],\"NV8\"],[[128530,128532],\"valid\",[],\"NV8\"],[[128533,128533],\"valid\",[],\"NV8\"],[[128534,128534],\"valid\",[],\"NV8\"],[[128535,128535],\"valid\",[],\"NV8\"],[[128536,128536],\"valid\",[],\"NV8\"],[[128537,128537],\"valid\",[],\"NV8\"],[[128538,128538],\"valid\",[],\"NV8\"],[[128539,128539],\"valid\",[],\"NV8\"],[[128540,128542],\"valid\",[],\"NV8\"],[[128543,128543],\"valid\",[],\"NV8\"],[[128544,128549],\"valid\",[],\"NV8\"],[[128550,128551],\"valid\",[],\"NV8\"],[[128552,128555],\"valid\",[],\"NV8\"],[[128556,128556],\"valid\",[],\"NV8\"],[[128557,128557],\"valid\",[],\"NV8\"],[[128558,128559],\"valid\",[],\"NV8\"],[[128560,128563],\"valid\",[],\"NV8\"],[[128564,128564],\"valid\",[],\"NV8\"],[[128565,128576],\"valid\",[],\"NV8\"],[[128577,128578],\"valid\",[],\"NV8\"],[[128579,128580],\"valid\",[],\"NV8\"],[[128581,128591],\"valid\",[],\"NV8\"],[[128592,128639],\"valid\",[],\"NV8\"],[[128640,128709],\"valid\",[],\"NV8\"],[[128710,128719],\"valid\",[],\"NV8\"],[[128720,128720],\"valid\",[],\"NV8\"],[[128721,128735],\"disallowed\"],[[128736,128748],\"valid\",[],\"NV8\"],[[128749,128751],\"disallowed\"],[[128752,128755],\"valid\",[],\"NV8\"],[[128756,128767],\"disallowed\"],[[128768,128883],\"valid\",[],\"NV8\"],[[128884,128895],\"disallowed\"],[[128896,128980],\"valid\",[],\"NV8\"],[[128981,129023],\"disallowed\"],[[129024,129035],\"valid\",[],\"NV8\"],[[129036,129039],\"disallowed\"],[[129040,129095],\"valid\",[],\"NV8\"],[[129096,129103],\"disallowed\"],[[129104,129113],\"valid\",[],\"NV8\"],[[129114,129119],\"disallowed\"],[[129120,129159],\"valid\",[],\"NV8\"],[[129160,129167],\"disallowed\"],[[129168,129197],\"valid\",[],\"NV8\"],[[129198,129295],\"disallowed\"],[[129296,129304],\"valid\",[],\"NV8\"],[[129305,129407],\"disallowed\"],[[129408,129412],\"valid\",[],\"NV8\"],[[129413,129471],\"disallowed\"],[[129472,129472],\"valid\",[],\"NV8\"],[[129473,131069],\"disallowed\"],[[131070,131071],\"disallowed\"],[[131072,173782],\"valid\"],[[173783,173823],\"disallowed\"],[[173824,177972],\"valid\"],[[177973,177983],\"disallowed\"],[[177984,178205],\"valid\"],[[178206,178207],\"disallowed\"],[[178208,183969],\"valid\"],[[183970,194559],\"disallowed\"],[[194560,194560],\"mapped\",[20029]],[[194561,194561],\"mapped\",[20024]],[[194562,194562],\"mapped\",[20033]],[[194563,194563],\"mapped\",[131362]],[[194564,194564],\"mapped\",[20320]],[[194565,194565],\"mapped\",[20398]],[[194566,194566],\"mapped\",[20411]],[[194567,194567],\"mapped\",[20482]],[[194568,194568],\"mapped\",[20602]],[[194569,194569],\"mapped\",[20633]],[[194570,194570],\"mapped\",[20711]],[[194571,194571],\"mapped\",[20687]],[[194572,194572],\"mapped\",[13470]],[[194573,194573],\"mapped\",[132666]],[[194574,194574],\"mapped\",[20813]],[[194575,194575],\"mapped\",[20820]],[[194576,194576],\"mapped\",[20836]],[[194577,194577],\"mapped\",[20855]],[[194578,194578],\"mapped\",[132380]],[[194579,194579],\"mapped\",[13497]],[[194580,194580],\"mapped\",[20839]],[[194581,194581],\"mapped\",[20877]],[[194582,194582],\"mapped\",[132427]],[[194583,194583],\"mapped\",[20887]],[[194584,194584],\"mapped\",[20900]],[[194585,194585],\"mapped\",[20172]],[[194586,194586],\"mapped\",[20908]],[[194587,194587],\"mapped\",[20917]],[[194588,194588],\"mapped\",[168415]],[[194589,194589],\"mapped\",[20981]],[[194590,194590],\"mapped\",[20995]],[[194591,194591],\"mapped\",[13535]],[[194592,194592],\"mapped\",[21051]],[[194593,194593],\"mapped\",[21062]],[[194594,194594],\"mapped\",[21106]],[[194595,194595],\"mapped\",[21111]],[[194596,194596],\"mapped\",[13589]],[[194597,194597],\"mapped\",[21191]],[[194598,194598],\"mapped\",[21193]],[[194599,194599],\"mapped\",[21220]],[[194600,194600],\"mapped\",[21242]],[[194601,194601],\"mapped\",[21253]],[[194602,194602],\"mapped\",[21254]],[[194603,194603],\"mapped\",[21271]],[[194604,194604],\"mapped\",[21321]],[[194605,194605],\"mapped\",[21329]],[[194606,194606],\"mapped\",[21338]],[[194607,194607],\"mapped\",[21363]],[[194608,194608],\"mapped\",[21373]],[[194609,194611],\"mapped\",[21375]],[[194612,194612],\"mapped\",[133676]],[[194613,194613],\"mapped\",[28784]],[[194614,194614],\"mapped\",[21450]],[[194615,194615],\"mapped\",[21471]],[[194616,194616],\"mapped\",[133987]],[[194617,194617],\"mapped\",[21483]],[[194618,194618],\"mapped\",[21489]],[[194619,194619],\"mapped\",[21510]],[[194620,194620],\"mapped\",[21662]],[[194621,194621],\"mapped\",[21560]],[[194622,194622],\"mapped\",[21576]],[[194623,194623],\"mapped\",[21608]],[[194624,194624],\"mapped\",[21666]],[[194625,194625],\"mapped\",[21750]],[[194626,194626],\"mapped\",[21776]],[[194627,194627],\"mapped\",[21843]],[[194628,194628],\"mapped\",[21859]],[[194629,194630],\"mapped\",[21892]],[[194631,194631],\"mapped\",[21913]],[[194632,194632],\"mapped\",[21931]],[[194633,194633],\"mapped\",[21939]],[[194634,194634],\"mapped\",[21954]],[[194635,194635],\"mapped\",[22294]],[[194636,194636],\"mapped\",[22022]],[[194637,194637],\"mapped\",[22295]],[[194638,194638],\"mapped\",[22097]],[[194639,194639],\"mapped\",[22132]],[[194640,194640],\"mapped\",[20999]],[[194641,194641],\"mapped\",[22766]],[[194642,194642],\"mapped\",[22478]],[[194643,194643],\"mapped\",[22516]],[[194644,194644],\"mapped\",[22541]],[[194645,194645],\"mapped\",[22411]],[[194646,194646],\"mapped\",[22578]],[[194647,194647],\"mapped\",[22577]],[[194648,194648],\"mapped\",[22700]],[[194649,194649],\"mapped\",[136420]],[[194650,194650],\"mapped\",[22770]],[[194651,194651],\"mapped\",[22775]],[[194652,194652],\"mapped\",[22790]],[[194653,194653],\"mapped\",[22810]],[[194654,194654],\"mapped\",[22818]],[[194655,194655],\"mapped\",[22882]],[[194656,194656],\"mapped\",[136872]],[[194657,194657],\"mapped\",[136938]],[[194658,194658],\"mapped\",[23020]],[[194659,194659],\"mapped\",[23067]],[[194660,194660],\"mapped\",[23079]],[[194661,194661],\"mapped\",[23000]],[[194662,194662],\"mapped\",[23142]],[[194663,194663],\"mapped\",[14062]],[[194664,194664],\"disallowed\"],[[194665,194665],\"mapped\",[23304]],[[194666,194667],\"mapped\",[23358]],[[194668,194668],\"mapped\",[137672]],[[194669,194669],\"mapped\",[23491]],[[194670,194670],\"mapped\",[23512]],[[194671,194671],\"mapped\",[23527]],[[194672,194672],\"mapped\",[23539]],[[194673,194673],\"mapped\",[138008]],[[194674,194674],\"mapped\",[23551]],[[194675,194675],\"mapped\",[23558]],[[194676,194676],\"disallowed\"],[[194677,194677],\"mapped\",[23586]],[[194678,194678],\"mapped\",[14209]],[[194679,194679],\"mapped\",[23648]],[[194680,194680],\"mapped\",[23662]],[[194681,194681],\"mapped\",[23744]],[[194682,194682],\"mapped\",[23693]],[[194683,194683],\"mapped\",[138724]],[[194684,194684],\"mapped\",[23875]],[[194685,194685],\"mapped\",[138726]],[[194686,194686],\"mapped\",[23918]],[[194687,194687],\"mapped\",[23915]],[[194688,194688],\"mapped\",[23932]],[[194689,194689],\"mapped\",[24033]],[[194690,194690],\"mapped\",[24034]],[[194691,194691],\"mapped\",[14383]],[[194692,194692],\"mapped\",[24061]],[[194693,194693],\"mapped\",[24104]],[[194694,194694],\"mapped\",[24125]],[[194695,194695],\"mapped\",[24169]],[[194696,194696],\"mapped\",[14434]],[[194697,194697],\"mapped\",[139651]],[[194698,194698],\"mapped\",[14460]],[[194699,194699],\"mapped\",[24240]],[[194700,194700],\"mapped\",[24243]],[[194701,194701],\"mapped\",[24246]],[[194702,194702],\"mapped\",[24266]],[[194703,194703],\"mapped\",[172946]],[[194704,194704],\"mapped\",[24318]],[[194705,194706],\"mapped\",[140081]],[[194707,194707],\"mapped\",[33281]],[[194708,194709],\"mapped\",[24354]],[[194710,194710],\"mapped\",[14535]],[[194711,194711],\"mapped\",[144056]],[[194712,194712],\"mapped\",[156122]],[[194713,194713],\"mapped\",[24418]],[[194714,194714],\"mapped\",[24427]],[[194715,194715],\"mapped\",[14563]],[[194716,194716],\"mapped\",[24474]],[[194717,194717],\"mapped\",[24525]],[[194718,194718],\"mapped\",[24535]],[[194719,194719],\"mapped\",[24569]],[[194720,194720],\"mapped\",[24705]],[[194721,194721],\"mapped\",[14650]],[[194722,194722],\"mapped\",[14620]],[[194723,194723],\"mapped\",[24724]],[[194724,194724],\"mapped\",[141012]],[[194725,194725],\"mapped\",[24775]],[[194726,194726],\"mapped\",[24904]],[[194727,194727],\"mapped\",[24908]],[[194728,194728],\"mapped\",[24910]],[[194729,194729],\"mapped\",[24908]],[[194730,194730],\"mapped\",[24954]],[[194731,194731],\"mapped\",[24974]],[[194732,194732],\"mapped\",[25010]],[[194733,194733],\"mapped\",[24996]],[[194734,194734],\"mapped\",[25007]],[[194735,194735],\"mapped\",[25054]],[[194736,194736],\"mapped\",[25074]],[[194737,194737],\"mapped\",[25078]],[[194738,194738],\"mapped\",[25104]],[[194739,194739],\"mapped\",[25115]],[[194740,194740],\"mapped\",[25181]],[[194741,194741],\"mapped\",[25265]],[[194742,194742],\"mapped\",[25300]],[[194743,194743],\"mapped\",[25424]],[[194744,194744],\"mapped\",[142092]],[[194745,194745],\"mapped\",[25405]],[[194746,194746],\"mapped\",[25340]],[[194747,194747],\"mapped\",[25448]],[[194748,194748],\"mapped\",[25475]],[[194749,194749],\"mapped\",[25572]],[[194750,194750],\"mapped\",[142321]],[[194751,194751],\"mapped\",[25634]],[[194752,194752],\"mapped\",[25541]],[[194753,194753],\"mapped\",[25513]],[[194754,194754],\"mapped\",[14894]],[[194755,194755],\"mapped\",[25705]],[[194756,194756],\"mapped\",[25726]],[[194757,194757],\"mapped\",[25757]],[[194758,194758],\"mapped\",[25719]],[[194759,194759],\"mapped\",[14956]],[[194760,194760],\"mapped\",[25935]],[[194761,194761],\"mapped\",[25964]],[[194762,194762],\"mapped\",[143370]],[[194763,194763],\"mapped\",[26083]],[[194764,194764],\"mapped\",[26360]],[[194765,194765],\"mapped\",[26185]],[[194766,194766],\"mapped\",[15129]],[[194767,194767],\"mapped\",[26257]],[[194768,194768],\"mapped\",[15112]],[[194769,194769],\"mapped\",[15076]],[[194770,194770],\"mapped\",[20882]],[[194771,194771],\"mapped\",[20885]],[[194772,194772],\"mapped\",[26368]],[[194773,194773],\"mapped\",[26268]],[[194774,194774],\"mapped\",[32941]],[[194775,194775],\"mapped\",[17369]],[[194776,194776],\"mapped\",[26391]],[[194777,194777],\"mapped\",[26395]],[[194778,194778],\"mapped\",[26401]],[[194779,194779],\"mapped\",[26462]],[[194780,194780],\"mapped\",[26451]],[[194781,194781],\"mapped\",[144323]],[[194782,194782],\"mapped\",[15177]],[[194783,194783],\"mapped\",[26618]],[[194784,194784],\"mapped\",[26501]],[[194785,194785],\"mapped\",[26706]],[[194786,194786],\"mapped\",[26757]],[[194787,194787],\"mapped\",[144493]],[[194788,194788],\"mapped\",[26766]],[[194789,194789],\"mapped\",[26655]],[[194790,194790],\"mapped\",[26900]],[[194791,194791],\"mapped\",[15261]],[[194792,194792],\"mapped\",[26946]],[[194793,194793],\"mapped\",[27043]],[[194794,194794],\"mapped\",[27114]],[[194795,194795],\"mapped\",[27304]],[[194796,194796],\"mapped\",[145059]],[[194797,194797],\"mapped\",[27355]],[[194798,194798],\"mapped\",[15384]],[[194799,194799],\"mapped\",[27425]],[[194800,194800],\"mapped\",[145575]],[[194801,194801],\"mapped\",[27476]],[[194802,194802],\"mapped\",[15438]],[[194803,194803],\"mapped\",[27506]],[[194804,194804],\"mapped\",[27551]],[[194805,194805],\"mapped\",[27578]],[[194806,194806],\"mapped\",[27579]],[[194807,194807],\"mapped\",[146061]],[[194808,194808],\"mapped\",[138507]],[[194809,194809],\"mapped\",[146170]],[[194810,194810],\"mapped\",[27726]],[[194811,194811],\"mapped\",[146620]],[[194812,194812],\"mapped\",[27839]],[[194813,194813],\"mapped\",[27853]],[[194814,194814],\"mapped\",[27751]],[[194815,194815],\"mapped\",[27926]],[[194816,194816],\"mapped\",[27966]],[[194817,194817],\"mapped\",[28023]],[[194818,194818],\"mapped\",[27969]],[[194819,194819],\"mapped\",[28009]],[[194820,194820],\"mapped\",[28024]],[[194821,194821],\"mapped\",[28037]],[[194822,194822],\"mapped\",[146718]],[[194823,194823],\"mapped\",[27956]],[[194824,194824],\"mapped\",[28207]],[[194825,194825],\"mapped\",[28270]],[[194826,194826],\"mapped\",[15667]],[[194827,194827],\"mapped\",[28363]],[[194828,194828],\"mapped\",[28359]],[[194829,194829],\"mapped\",[147153]],[[194830,194830],\"mapped\",[28153]],[[194831,194831],\"mapped\",[28526]],[[194832,194832],\"mapped\",[147294]],[[194833,194833],\"mapped\",[147342]],[[194834,194834],\"mapped\",[28614]],[[194835,194835],\"mapped\",[28729]],[[194836,194836],\"mapped\",[28702]],[[194837,194837],\"mapped\",[28699]],[[194838,194838],\"mapped\",[15766]],[[194839,194839],\"mapped\",[28746]],[[194840,194840],\"mapped\",[28797]],[[194841,194841],\"mapped\",[28791]],[[194842,194842],\"mapped\",[28845]],[[194843,194843],\"mapped\",[132389]],[[194844,194844],\"mapped\",[28997]],[[194845,194845],\"mapped\",[148067]],[[194846,194846],\"mapped\",[29084]],[[194847,194847],\"disallowed\"],[[194848,194848],\"mapped\",[29224]],[[194849,194849],\"mapped\",[29237]],[[194850,194850],\"mapped\",[29264]],[[194851,194851],\"mapped\",[149000]],[[194852,194852],\"mapped\",[29312]],[[194853,194853],\"mapped\",[29333]],[[194854,194854],\"mapped\",[149301]],[[194855,194855],\"mapped\",[149524]],[[194856,194856],\"mapped\",[29562]],[[194857,194857],\"mapped\",[29579]],[[194858,194858],\"mapped\",[16044]],[[194859,194859],\"mapped\",[29605]],[[194860,194861],\"mapped\",[16056]],[[194862,194862],\"mapped\",[29767]],[[194863,194863],\"mapped\",[29788]],[[194864,194864],\"mapped\",[29809]],[[194865,194865],\"mapped\",[29829]],[[194866,194866],\"mapped\",[29898]],[[194867,194867],\"mapped\",[16155]],[[194868,194868],\"mapped\",[29988]],[[194869,194869],\"mapped\",[150582]],[[194870,194870],\"mapped\",[30014]],[[194871,194871],\"mapped\",[150674]],[[194872,194872],\"mapped\",[30064]],[[194873,194873],\"mapped\",[139679]],[[194874,194874],\"mapped\",[30224]],[[194875,194875],\"mapped\",[151457]],[[194876,194876],\"mapped\",[151480]],[[194877,194877],\"mapped\",[151620]],[[194878,194878],\"mapped\",[16380]],[[194879,194879],\"mapped\",[16392]],[[194880,194880],\"mapped\",[30452]],[[194881,194881],\"mapped\",[151795]],[[194882,194882],\"mapped\",[151794]],[[194883,194883],\"mapped\",[151833]],[[194884,194884],\"mapped\",[151859]],[[194885,194885],\"mapped\",[30494]],[[194886,194887],\"mapped\",[30495]],[[194888,194888],\"mapped\",[30538]],[[194889,194889],\"mapped\",[16441]],[[194890,194890],\"mapped\",[30603]],[[194891,194891],\"mapped\",[16454]],[[194892,194892],\"mapped\",[16534]],[[194893,194893],\"mapped\",[152605]],[[194894,194894],\"mapped\",[30798]],[[194895,194895],\"mapped\",[30860]],[[194896,194896],\"mapped\",[30924]],[[194897,194897],\"mapped\",[16611]],[[194898,194898],\"mapped\",[153126]],[[194899,194899],\"mapped\",[31062]],[[194900,194900],\"mapped\",[153242]],[[194901,194901],\"mapped\",[153285]],[[194902,194902],\"mapped\",[31119]],[[194903,194903],\"mapped\",[31211]],[[194904,194904],\"mapped\",[16687]],[[194905,194905],\"mapped\",[31296]],[[194906,194906],\"mapped\",[31306]],[[194907,194907],\"mapped\",[31311]],[[194908,194908],\"mapped\",[153980]],[[194909,194910],\"mapped\",[154279]],[[194911,194911],\"disallowed\"],[[194912,194912],\"mapped\",[16898]],[[194913,194913],\"mapped\",[154539]],[[194914,194914],\"mapped\",[31686]],[[194915,194915],\"mapped\",[31689]],[[194916,194916],\"mapped\",[16935]],[[194917,194917],\"mapped\",[154752]],[[194918,194918],\"mapped\",[31954]],[[194919,194919],\"mapped\",[17056]],[[194920,194920],\"mapped\",[31976]],[[194921,194921],\"mapped\",[31971]],[[194922,194922],\"mapped\",[32000]],[[194923,194923],\"mapped\",[155526]],[[194924,194924],\"mapped\",[32099]],[[194925,194925],\"mapped\",[17153]],[[194926,194926],\"mapped\",[32199]],[[194927,194927],\"mapped\",[32258]],[[194928,194928],\"mapped\",[32325]],[[194929,194929],\"mapped\",[17204]],[[194930,194930],\"mapped\",[156200]],[[194931,194931],\"mapped\",[156231]],[[194932,194932],\"mapped\",[17241]],[[194933,194933],\"mapped\",[156377]],[[194934,194934],\"mapped\",[32634]],[[194935,194935],\"mapped\",[156478]],[[194936,194936],\"mapped\",[32661]],[[194937,194937],\"mapped\",[32762]],[[194938,194938],\"mapped\",[32773]],[[194939,194939],\"mapped\",[156890]],[[194940,194940],\"mapped\",[156963]],[[194941,194941],\"mapped\",[32864]],[[194942,194942],\"mapped\",[157096]],[[194943,194943],\"mapped\",[32880]],[[194944,194944],\"mapped\",[144223]],[[194945,194945],\"mapped\",[17365]],[[194946,194946],\"mapped\",[32946]],[[194947,194947],\"mapped\",[33027]],[[194948,194948],\"mapped\",[17419]],[[194949,194949],\"mapped\",[33086]],[[194950,194950],\"mapped\",[23221]],[[194951,194951],\"mapped\",[157607]],[[194952,194952],\"mapped\",[157621]],[[194953,194953],\"mapped\",[144275]],[[194954,194954],\"mapped\",[144284]],[[194955,194955],\"mapped\",[33281]],[[194956,194956],\"mapped\",[33284]],[[194957,194957],\"mapped\",[36766]],[[194958,194958],\"mapped\",[17515]],[[194959,194959],\"mapped\",[33425]],[[194960,194960],\"mapped\",[33419]],[[194961,194961],\"mapped\",[33437]],[[194962,194962],\"mapped\",[21171]],[[194963,194963],\"mapped\",[33457]],[[194964,194964],\"mapped\",[33459]],[[194965,194965],\"mapped\",[33469]],[[194966,194966],\"mapped\",[33510]],[[194967,194967],\"mapped\",[158524]],[[194968,194968],\"mapped\",[33509]],[[194969,194969],\"mapped\",[33565]],[[194970,194970],\"mapped\",[33635]],[[194971,194971],\"mapped\",[33709]],[[194972,194972],\"mapped\",[33571]],[[194973,194973],\"mapped\",[33725]],[[194974,194974],\"mapped\",[33767]],[[194975,194975],\"mapped\",[33879]],[[194976,194976],\"mapped\",[33619]],[[194977,194977],\"mapped\",[33738]],[[194978,194978],\"mapped\",[33740]],[[194979,194979],\"mapped\",[33756]],[[194980,194980],\"mapped\",[158774]],[[194981,194981],\"mapped\",[159083]],[[194982,194982],\"mapped\",[158933]],[[194983,194983],\"mapped\",[17707]],[[194984,194984],\"mapped\",[34033]],[[194985,194985],\"mapped\",[34035]],[[194986,194986],\"mapped\",[34070]],[[194987,194987],\"mapped\",[160714]],[[194988,194988],\"mapped\",[34148]],[[194989,194989],\"mapped\",[159532]],[[194990,194990],\"mapped\",[17757]],[[194991,194991],\"mapped\",[17761]],[[194992,194992],\"mapped\",[159665]],[[194993,194993],\"mapped\",[159954]],[[194994,194994],\"mapped\",[17771]],[[194995,194995],\"mapped\",[34384]],[[194996,194996],\"mapped\",[34396]],[[194997,194997],\"mapped\",[34407]],[[194998,194998],\"mapped\",[34409]],[[194999,194999],\"mapped\",[34473]],[[195000,195000],\"mapped\",[34440]],[[195001,195001],\"mapped\",[34574]],[[195002,195002],\"mapped\",[34530]],[[195003,195003],\"mapped\",[34681]],[[195004,195004],\"mapped\",[34600]],[[195005,195005],\"mapped\",[34667]],[[195006,195006],\"mapped\",[34694]],[[195007,195007],\"disallowed\"],[[195008,195008],\"mapped\",[34785]],[[195009,195009],\"mapped\",[34817]],[[195010,195010],\"mapped\",[17913]],[[195011,195011],\"mapped\",[34912]],[[195012,195012],\"mapped\",[34915]],[[195013,195013],\"mapped\",[161383]],[[195014,195014],\"mapped\",[35031]],[[195015,195015],\"mapped\",[35038]],[[195016,195016],\"mapped\",[17973]],[[195017,195017],\"mapped\",[35066]],[[195018,195018],\"mapped\",[13499]],[[195019,195019],\"mapped\",[161966]],[[195020,195020],\"mapped\",[162150]],[[195021,195021],\"mapped\",[18110]],[[195022,195022],\"mapped\",[18119]],[[195023,195023],\"mapped\",[35488]],[[195024,195024],\"mapped\",[35565]],[[195025,195025],\"mapped\",[35722]],[[195026,195026],\"mapped\",[35925]],[[195027,195027],\"mapped\",[162984]],[[195028,195028],\"mapped\",[36011]],[[195029,195029],\"mapped\",[36033]],[[195030,195030],\"mapped\",[36123]],[[195031,195031],\"mapped\",[36215]],[[195032,195032],\"mapped\",[163631]],[[195033,195033],\"mapped\",[133124]],[[195034,195034],\"mapped\",[36299]],[[195035,195035],\"mapped\",[36284]],[[195036,195036],\"mapped\",[36336]],[[195037,195037],\"mapped\",[133342]],[[195038,195038],\"mapped\",[36564]],[[195039,195039],\"mapped\",[36664]],[[195040,195040],\"mapped\",[165330]],[[195041,195041],\"mapped\",[165357]],[[195042,195042],\"mapped\",[37012]],[[195043,195043],\"mapped\",[37105]],[[195044,195044],\"mapped\",[37137]],[[195045,195045],\"mapped\",[165678]],[[195046,195046],\"mapped\",[37147]],[[195047,195047],\"mapped\",[37432]],[[195048,195048],\"mapped\",[37591]],[[195049,195049],\"mapped\",[37592]],[[195050,195050],\"mapped\",[37500]],[[195051,195051],\"mapped\",[37881]],[[195052,195052],\"mapped\",[37909]],[[195053,195053],\"mapped\",[166906]],[[195054,195054],\"mapped\",[38283]],[[195055,195055],\"mapped\",[18837]],[[195056,195056],\"mapped\",[38327]],[[195057,195057],\"mapped\",[167287]],[[195058,195058],\"mapped\",[18918]],[[195059,195059],\"mapped\",[38595]],[[195060,195060],\"mapped\",[23986]],[[195061,195061],\"mapped\",[38691]],[[195062,195062],\"mapped\",[168261]],[[195063,195063],\"mapped\",[168474]],[[195064,195064],\"mapped\",[19054]],[[195065,195065],\"mapped\",[19062]],[[195066,195066],\"mapped\",[38880]],[[195067,195067],\"mapped\",[168970]],[[195068,195068],\"mapped\",[19122]],[[195069,195069],\"mapped\",[169110]],[[195070,195071],\"mapped\",[38923]],[[195072,195072],\"mapped\",[38953]],[[195073,195073],\"mapped\",[169398]],[[195074,195074],\"mapped\",[39138]],[[195075,195075],\"mapped\",[19251]],[[195076,195076],\"mapped\",[39209]],[[195077,195077],\"mapped\",[39335]],[[195078,195078],\"mapped\",[39362]],[[195079,195079],\"mapped\",[39422]],[[195080,195080],\"mapped\",[19406]],[[195081,195081],\"mapped\",[170800]],[[195082,195082],\"mapped\",[39698]],[[195083,195083],\"mapped\",[40000]],[[195084,195084],\"mapped\",[40189]],[[195085,195085],\"mapped\",[19662]],[[195086,195086],\"mapped\",[19693]],[[195087,195087],\"mapped\",[40295]],[[195088,195088],\"mapped\",[172238]],[[195089,195089],\"mapped\",[19704]],[[195090,195090],\"mapped\",[172293]],[[195091,195091],\"mapped\",[172558]],[[195092,195092],\"mapped\",[172689]],[[195093,195093],\"mapped\",[40635]],[[195094,195094],\"mapped\",[19798]],[[195095,195095],\"mapped\",[40697]],[[195096,195096],\"mapped\",[40702]],[[195097,195097],\"mapped\",[40709]],[[195098,195098],\"mapped\",[40719]],[[195099,195099],\"mapped\",[40726]],[[195100,195100],\"mapped\",[40763]],[[195101,195101],\"mapped\",[173568]],[[195102,196605],\"disallowed\"],[[196606,196607],\"disallowed\"],[[196608,262141],\"disallowed\"],[[262142,262143],\"disallowed\"],[[262144,327677],\"disallowed\"],[[327678,327679],\"disallowed\"],[[327680,393213],\"disallowed\"],[[393214,393215],\"disallowed\"],[[393216,458749],\"disallowed\"],[[458750,458751],\"disallowed\"],[[458752,524285],\"disallowed\"],[[524286,524287],\"disallowed\"],[[524288,589821],\"disallowed\"],[[589822,589823],\"disallowed\"],[[589824,655357],\"disallowed\"],[[655358,655359],\"disallowed\"],[[655360,720893],\"disallowed\"],[[720894,720895],\"disallowed\"],[[720896,786429],\"disallowed\"],[[786430,786431],\"disallowed\"],[[786432,851965],\"disallowed\"],[[851966,851967],\"disallowed\"],[[851968,917501],\"disallowed\"],[[917502,917503],\"disallowed\"],[[917504,917504],\"disallowed\"],[[917505,917505],\"disallowed\"],[[917506,917535],\"disallowed\"],[[917536,917631],\"disallowed\"],[[917632,917759],\"disallowed\"],[[917760,917999],\"ignored\"],[[918000,983037],\"disallowed\"],[[983038,983039],\"disallowed\"],[[983040,1048573],\"disallowed\"],[[1048574,1048575],\"disallowed\"],[[1048576,1114109],\"disallowed\"],[[1114110,1114111],\"disallowed\"]]", "\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n", "\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n", "\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\nexports.AbortError = AbortError;\n", "const nodeFetch = require('node-fetch')\nconst realFetch = nodeFetch.default || nodeFetch\n\nconst fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nfetch.ponyfill = true\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n", "var has = Object.prototype.hasOwnProperty;\n\nfunction dequal(foo, bar) {\n\tvar ctor, len;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n\nexports.dequal = dequal;", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useDeepMemo = void 0;\nconst react_1 = require(\"react\");\nconst lite_1 = require(\"dequal/lite\");\n/**\n * @param value the value to be memoized (usually a dependency list)\n * @returns a memoized version of the value as long as it remains deeply equal\n */\nfunction useDeepMemo(value) {\n    const ref = (0, react_1.useRef)(value);\n    const signalRef = (0, react_1.useRef)(0);\n    if (!(0, lite_1.dequal)(value, ref.current)) {\n        ref.current = value;\n        signalRef.current += 1;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return (0, react_1.useMemo)(() => ref.current, [signalRef.current]);\n}\nexports.useDeepMemo = useDeepMemo;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useLatest = void 0;\nconst react_1 = require(\"react\");\n/**\n * Returns the latest state.\n *\n * This is mostly useful to get access to the latest value of some props or state inside an asynchronous callback, instead of that value at the time the callback was created from.\n */\nfunction useLatest(value) {\n    const ref = (0, react_1.useRef)(value);\n    ref.current = value;\n    return ref;\n}\nexports.useLatest = useLatest;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.showFailureToast = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst path = __importStar(require(\"path\"));\nconst api_1 = require(\"@raycast/api\");\n/**\n * Shows a failure Toast for a given Error.\n *\n * @example\n * ```typescript\n * import { showHUD } from \"@raycast/api\";\n * import { runAppleScript, showFailureToast } from \"@raycast/utils\";\n *\n * export default async function () {\n *   try {\n *     const res = await runAppleScript(\n *       `\n *       on run argv\n *         return \"hello, \" & item 1 of argv & \".\"\n *       end run\n *       `,\n *       [\"world\"]\n *     );\n *     await showHUD(res);\n *   } catch (error) {\n *     showFailureToast(error, { title: \"Could not run AppleScript\" });\n *   }\n * }\n * ```\n */\nfunction showFailureToast(error, options) {\n    const message = error instanceof Error ? error.message : String(error);\n    return (0, api_1.showToast)({\n        style: api_1.Toast.Style.Failure,\n        title: options?.title ?? \"Something went wrong\",\n        message: options?.message ?? message,\n        primaryAction: options?.primaryAction ?? handleErrorToastAction(error),\n        secondaryAction: options?.primaryAction ? handleErrorToastAction(error) : undefined,\n    });\n}\nexports.showFailureToast = showFailureToast;\nconst handleErrorToastAction = (error) => {\n    let privateExtension = true;\n    let title = \"[Extension Name]...\";\n    let extensionURL = \"\";\n    try {\n        const packageJSON = JSON.parse(fs.readFileSync(path.join(api_1.environment.assetsPath, \"..\", \"package.json\"), \"utf8\"));\n        title = `[${packageJSON.title}]...`;\n        extensionURL = `https://raycast.com/${packageJSON.owner || packageJSON.author}/${packageJSON.name}`;\n        if (!packageJSON.owner || packageJSON.access === \"public\") {\n            privateExtension = false;\n        }\n    }\n    catch (err) {\n        // no-op\n    }\n    // if it's a private extension, we can't construct the URL to report the error\n    // so we fallback to copying the error to the clipboard\n    const fallback = api_1.environment.isDevelopment || privateExtension;\n    const stack = error instanceof Error ? error?.stack || error?.message || \"\" : String(error);\n    return {\n        title: fallback ? \"Copy Logs\" : \"Report Error\",\n        onAction(toast) {\n            toast.hide();\n            if (fallback) {\n                api_1.Clipboard.copy(stack);\n            }\n            else {\n                (0, api_1.open)(`https://github.com/raycast/extensions/issues/new?&labels=extension%2Cbug&template=extension_bug_report.yml&title=${encodeURIComponent(title)}&extension-url=${encodeURI(extensionURL)}&description=${encodeURIComponent(`#### Error:\n\\`\\`\\`\n${stack}\n\\`\\`\\`\n`)}`);\n            }\n        },\n    };\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.usePromise = void 0;\nconst react_1 = require(\"react\");\nconst api_1 = require(\"@raycast/api\");\nconst useDeepMemo_1 = require(\"./useDeepMemo\");\nconst useLatest_1 = require(\"./useLatest\");\nconst showFailureToast_1 = require(\"./showFailureToast\");\nfunction usePromise(fn, args, options) {\n    const lastCallId = (0, react_1.useRef)(0);\n    const [state, set] = (0, react_1.useState)({ isLoading: true });\n    const fnRef = (0, useLatest_1.useLatest)(fn);\n    const latestAbortable = (0, useLatest_1.useLatest)(options?.abortable);\n    const latestArgs = (0, useLatest_1.useLatest)(args || []);\n    const latestOnError = (0, useLatest_1.useLatest)(options?.onError);\n    const latestOnData = (0, useLatest_1.useLatest)(options?.onData);\n    const latestOnWillExecute = (0, useLatest_1.useLatest)(options?.onWillExecute);\n    const latestFailureToast = (0, useLatest_1.useLatest)(options?.failureToastOptions);\n    const latestValue = (0, useLatest_1.useLatest)(state.data);\n    const latestCallback = (0, react_1.useRef)();\n    const paginationArgsRef = (0, react_1.useRef)({ page: 0 });\n    const usePaginationRef = (0, react_1.useRef)(false);\n    const hasMoreRef = (0, react_1.useRef)(true);\n    const pageSizeRef = (0, react_1.useRef)(50);\n    const callback = (0, react_1.useCallback)((...args) => {\n        const callId = ++lastCallId.current;\n        if (latestAbortable.current) {\n            latestAbortable.current.current?.abort();\n            latestAbortable.current.current = new AbortController();\n        }\n        latestOnWillExecute.current?.(args);\n        set((prevState) => ({ ...prevState, isLoading: true }));\n        const promiseOrPaginatedPromise = bindPromiseIfNeeded(fnRef.current)(...args);\n        function handleError(error) {\n            if (error.name == \"AbortError\") {\n                return error;\n            }\n            if (callId === lastCallId.current) {\n                // handle errors\n                if (latestOnError.current) {\n                    latestOnError.current(error);\n                }\n                else {\n                    if (api_1.environment.launchType !== api_1.LaunchType.Background) {\n                        (0, showFailureToast_1.showFailureToast)(error, {\n                            title: \"Failed to fetch latest data\",\n                            primaryAction: {\n                                title: \"Retry\",\n                                onAction(toast) {\n                                    toast.hide();\n                                    latestCallback.current?.(...(latestArgs.current || []));\n                                },\n                            },\n                            ...latestFailureToast.current,\n                        });\n                    }\n                }\n                set({ error, isLoading: false });\n            }\n            return error;\n        }\n        if (typeof promiseOrPaginatedPromise === \"function\") {\n            usePaginationRef.current = true;\n            return promiseOrPaginatedPromise(paginationArgsRef.current).then(\n            // @ts-expect-error too complicated for TS\n            ({ data, hasMore, cursor }) => {\n                if (callId === lastCallId.current) {\n                    if (paginationArgsRef.current) {\n                        paginationArgsRef.current.cursor = cursor;\n                        paginationArgsRef.current.lastItem = data?.[data.length - 1];\n                    }\n                    if (latestOnData.current) {\n                        latestOnData.current(data, paginationArgsRef.current);\n                    }\n                    if (hasMore) {\n                        pageSizeRef.current = data.length;\n                    }\n                    hasMoreRef.current = hasMore;\n                    set((previousData) => {\n                        if (paginationArgsRef.current.page === 0) {\n                            return { data, isLoading: false };\n                        }\n                        // @ts-expect-error we know it's an array here\n                        return { data: (previousData.data || [])?.concat(data), isLoading: false };\n                    });\n                }\n                return data;\n            }, (error) => {\n                hasMoreRef.current = false;\n                return handleError(error);\n            });\n        }\n        usePaginationRef.current = false;\n        return promiseOrPaginatedPromise.then((data) => {\n            if (callId === lastCallId.current) {\n                if (latestOnData.current) {\n                    latestOnData.current(data);\n                }\n                set({ data, isLoading: false });\n            }\n            return data;\n        }, handleError);\n    }, [\n        latestAbortable,\n        latestOnData,\n        latestOnError,\n        latestArgs,\n        fnRef,\n        set,\n        latestCallback,\n        latestOnWillExecute,\n        paginationArgsRef,\n        latestFailureToast,\n    ]);\n    latestCallback.current = callback;\n    const revalidate = (0, react_1.useCallback)(() => {\n        // reset the pagination\n        paginationArgsRef.current = { page: 0 };\n        const args = (latestArgs.current || []);\n        return callback(...args);\n    }, [callback, latestArgs]);\n    const mutate = (0, react_1.useCallback)(async (asyncUpdate, options) => {\n        let dataBeforeOptimisticUpdate;\n        try {\n            if (options?.optimisticUpdate) {\n                if (typeof options?.rollbackOnError !== \"function\" && options?.rollbackOnError !== false) {\n                    // keep track of the data before the optimistic update,\n                    // but only if we need it (eg. only when we want to automatically rollback after)\n                    dataBeforeOptimisticUpdate = structuredClone(latestValue.current?.value);\n                }\n                const update = options.optimisticUpdate;\n                set((prevState) => ({ ...prevState, data: update(prevState.data) }));\n            }\n            return await asyncUpdate;\n        }\n        catch (err) {\n            if (typeof options?.rollbackOnError === \"function\") {\n                const update = options.rollbackOnError;\n                set((prevState) => ({ ...prevState, data: update(prevState.data) }));\n            }\n            else if (options?.optimisticUpdate && options?.rollbackOnError !== false) {\n                set((prevState) => ({ ...prevState, data: dataBeforeOptimisticUpdate }));\n            }\n            throw err;\n        }\n        finally {\n            if (options?.shouldRevalidateAfter !== false) {\n                if (api_1.environment.launchType === api_1.LaunchType.Background || api_1.environment.commandMode === \"menu-bar\") {\n                    // when in the background or in a menu bar, we are going to await the revalidation\n                    // to make sure we get the right data at the end of the mutation\n                    await revalidate();\n                }\n                else {\n                    revalidate();\n                }\n            }\n        }\n    }, [revalidate, latestValue, set]);\n    const onLoadMore = (0, react_1.useCallback)(() => {\n        paginationArgsRef.current.page += 1;\n        const args = (latestArgs.current || []);\n        callback(...args);\n    }, [paginationArgsRef, latestArgs, callback]);\n    // revalidate when the args change\n    (0, react_1.useEffect)(() => {\n        // reset the pagination\n        paginationArgsRef.current = { page: 0 };\n        if (options?.execute !== false) {\n            callback(...(args || []));\n        }\n        else {\n            // cancel the previous request if we don't want to execute anymore\n            if (latestAbortable.current) {\n                latestAbortable.current.current?.abort();\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [(0, useDeepMemo_1.useDeepMemo)([args, options?.execute, callback]), latestAbortable, paginationArgsRef]);\n    // abort request when unmounting\n    (0, react_1.useEffect)(() => {\n        return () => {\n            if (latestAbortable.current) {\n                // eslint-disable-next-line react-hooks/exhaustive-deps\n                latestAbortable.current.current?.abort();\n            }\n        };\n    }, [latestAbortable]);\n    // we only want to show the loading indicator if the promise is executing\n    const isLoading = options?.execute !== false ? state.isLoading : false;\n    // @ts-expect-error loading is has some fixed value in the enum which\n    const stateWithLoadingFixed = { ...state, isLoading };\n    const pagination = usePaginationRef.current\n        ? {\n            pageSize: pageSizeRef.current,\n            hasMore: hasMoreRef.current,\n            onLoadMore,\n        }\n        : undefined;\n    return { ...stateWithLoadingFixed, revalidate, mutate, pagination };\n}\nexports.usePromise = usePromise;\n/** Bind the fn if it's a Promise method */\nfunction bindPromiseIfNeeded(fn) {\n    if (fn === Promise.all) {\n        // @ts-expect-error this is fine\n        return fn.bind(Promise);\n    }\n    if (fn === Promise.race) {\n        // @ts-expect-error this is fine\n        return fn.bind(Promise);\n    }\n    if (fn === Promise.resolve) {\n        // @ts-expect-error this is fine\n        return fn.bind(Promise);\n    }\n    if (fn === Promise.reject) {\n        // @ts-expect-error this is fine\n        return fn.bind(Promise);\n    }\n    return fn;\n}\n", "'use strict';\n\nvar crypto = require('crypto');\n\n/**\n * Exported function\n *\n * Options:\n *\n *  - `algorithm` hash algo to be used by this instance: *'sha1', 'md5'\n *  - `excludeValues` {true|*false} hash object keys, values ignored\n *  - `encoding` hash encoding, supports 'buffer', '*hex', 'binary', 'base64'\n *  - `ignoreUnknown` {true|*false} ignore unknown object types\n *  - `replacer` optional function that replaces values before hashing\n *  - `respectFunctionProperties` {*true|false} consider function properties when hashing\n *  - `respectFunctionNames` {*true|false} consider 'name' property of functions for hashing\n *  - `respectType` {*true|false} Respect special properties (prototype, constructor)\n *    when hashing to distinguish between types\n *  - `unorderedArrays` {true|*false} Sort all arrays before hashing\n *  - `unorderedSets` {*true|false} Sort `Set` and `Map` instances before hashing\n *  * = default\n *\n * @param {object} object value to hash\n * @param {object} options hashing options\n * @return {string} hash value\n * @api public\n */\nexports = module.exports = objectHash;\n\nfunction objectHash(object, options){\n  options = applyDefaults(object, options);\n\n  return hash(object, options);\n}\n\n/**\n * Exported sugar methods\n *\n * @param {object} object value to hash\n * @return {string} hash value\n * @api public\n */\nexports.sha1 = function(object){\n  return objectHash(object);\n};\nexports.keys = function(object){\n  return objectHash(object, {excludeValues: true, algorithm: 'sha1', encoding: 'hex'});\n};\nexports.MD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex'});\n};\nexports.keysMD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex', excludeValues: true});\n};\n\n// Internals\nvar hashes = crypto.getHashes ? crypto.getHashes().slice() : ['sha1', 'md5'];\nhashes.push('passthrough');\nvar encodings = ['buffer', 'hex', 'binary', 'base64'];\n\nfunction applyDefaults(object, sourceOptions){\n  sourceOptions = sourceOptions || {};\n\n  // create a copy rather than mutating\n  var options = {};\n  options.algorithm = sourceOptions.algorithm || 'sha1';\n  options.encoding = sourceOptions.encoding || 'hex';\n  options.excludeValues = sourceOptions.excludeValues ? true : false;\n  options.algorithm = options.algorithm.toLowerCase();\n  options.encoding = options.encoding.toLowerCase();\n  options.ignoreUnknown = sourceOptions.ignoreUnknown !== true ? false : true; // default to false\n  options.respectType = sourceOptions.respectType === false ? false : true; // default to true\n  options.respectFunctionNames = sourceOptions.respectFunctionNames === false ? false : true;\n  options.respectFunctionProperties = sourceOptions.respectFunctionProperties === false ? false : true;\n  options.unorderedArrays = sourceOptions.unorderedArrays !== true ? false : true; // default to false\n  options.unorderedSets = sourceOptions.unorderedSets === false ? false : true; // default to false\n  options.unorderedObjects = sourceOptions.unorderedObjects === false ? false : true; // default to true\n  options.replacer = sourceOptions.replacer || undefined;\n  options.excludeKeys = sourceOptions.excludeKeys || undefined;\n\n  if(typeof object === 'undefined') {\n    throw new Error('Object argument required.');\n  }\n\n  // if there is a case-insensitive match in the hashes list, accept it\n  // (i.e. SHA256 for sha256)\n  for (var i = 0; i < hashes.length; ++i) {\n    if (hashes[i].toLowerCase() === options.algorithm.toLowerCase()) {\n      options.algorithm = hashes[i];\n    }\n  }\n\n  if(hashes.indexOf(options.algorithm) === -1){\n    throw new Error('Algorithm \"' + options.algorithm + '\"  not supported. ' +\n      'supported values: ' + hashes.join(', '));\n  }\n\n  if(encodings.indexOf(options.encoding) === -1 &&\n     options.algorithm !== 'passthrough'){\n    throw new Error('Encoding \"' + options.encoding + '\"  not supported. ' +\n      'supported values: ' + encodings.join(', '));\n  }\n\n  return options;\n}\n\n/** Check if the given function is a native function */\nfunction isNativeFunction(f) {\n  if ((typeof f) !== 'function') {\n    return false;\n  }\n  var exp = /^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i;\n  return exp.exec(Function.prototype.toString.call(f)) != null;\n}\n\nfunction hash(object, options) {\n  var hashingStream;\n\n  if (options.algorithm !== 'passthrough') {\n    hashingStream = crypto.createHash(options.algorithm);\n  } else {\n    hashingStream = new PassThrough();\n  }\n\n  if (typeof hashingStream.write === 'undefined') {\n    hashingStream.write = hashingStream.update;\n    hashingStream.end   = hashingStream.update;\n  }\n\n  var hasher = typeHasher(options, hashingStream);\n  hasher.dispatch(object);\n  if (!hashingStream.update) {\n    hashingStream.end('');\n  }\n\n  if (hashingStream.digest) {\n    return hashingStream.digest(options.encoding === 'buffer' ? undefined : options.encoding);\n  }\n\n  var buf = hashingStream.read();\n  if (options.encoding === 'buffer') {\n    return buf;\n  }\n\n  return buf.toString(options.encoding);\n}\n\n/**\n * Expose streaming API\n *\n * @param {object} object  Value to serialize\n * @param {object} options  Options, as for hash()\n * @param {object} stream  A stream to write the serializiation to\n * @api public\n */\nexports.writeToStream = function(object, options, stream) {\n  if (typeof stream === 'undefined') {\n    stream = options;\n    options = {};\n  }\n\n  options = applyDefaults(object, options);\n\n  return typeHasher(options, stream).dispatch(object);\n};\n\nfunction typeHasher(options, writeTo, context){\n  context = context || [];\n  var write = function(str) {\n    if (writeTo.update) {\n      return writeTo.update(str, 'utf8');\n    } else {\n      return writeTo.write(str, 'utf8');\n    }\n  };\n\n  return {\n    dispatch: function(value){\n      if (options.replacer) {\n        value = options.replacer(value);\n      }\n\n      var type = typeof value;\n      if (value === null) {\n        type = 'null';\n      }\n\n      //console.log(\"[DEBUG] Dispatch: \", value, \"->\", type, \" -> \", \"_\" + type);\n\n      return this['_' + type](value);\n    },\n    _object: function(object) {\n      var pattern = (/\\[object (.*)\\]/i);\n      var objString = Object.prototype.toString.call(object);\n      var objType = pattern.exec(objString);\n      if (!objType) { // object type did not match [object ...]\n        objType = 'unknown:[' + objString + ']';\n      } else {\n        objType = objType[1]; // take only the class name\n      }\n\n      objType = objType.toLowerCase();\n\n      var objectNumber = null;\n\n      if ((objectNumber = context.indexOf(object)) >= 0) {\n        return this.dispatch('[CIRCULAR:' + objectNumber + ']');\n      } else {\n        context.push(object);\n      }\n\n      if (typeof Buffer !== 'undefined' && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write('buffer:');\n        return write(object);\n      }\n\n      if(objType !== 'object' && objType !== 'function' && objType !== 'asyncfunction') {\n        if(this['_' + objType]) {\n          this['_' + objType](object);\n        } else if (options.ignoreUnknown) {\n          return write('[' + objType + ']');\n        } else {\n          throw new Error('Unknown object type \"' + objType + '\"');\n        }\n      }else{\n        var keys = Object.keys(object);\n        if (options.unorderedObjects) {\n          keys = keys.sort();\n        }\n        // Make sure to incorporate special properties, so\n        // Types with different prototypes will produce\n        // a different hash and objects derived from\n        // different functions (`new Foo`, `new Bar`) will\n        // produce different hashes.\n        // We never do this for native functions since some\n        // seem to break because of that.\n        if (options.respectType !== false && !isNativeFunction(object)) {\n          keys.splice(0, 0, 'prototype', '__proto__', 'constructor');\n        }\n\n        if (options.excludeKeys) {\n          keys = keys.filter(function(key) { return !options.excludeKeys(key); });\n        }\n\n        write('object:' + keys.length + ':');\n        var self = this;\n        return keys.forEach(function(key){\n          self.dispatch(key);\n          write(':');\n          if(!options.excludeValues) {\n            self.dispatch(object[key]);\n          }\n          write(',');\n        });\n      }\n    },\n    _array: function(arr, unordered){\n      unordered = typeof unordered !== 'undefined' ? unordered :\n        options.unorderedArrays !== false; // default to options.unorderedArrays\n\n      var self = this;\n      write('array:' + arr.length + ':');\n      if (!unordered || arr.length <= 1) {\n        return arr.forEach(function(entry) {\n          return self.dispatch(entry);\n        });\n      }\n\n      // the unordered case is a little more complicated:\n      // since there is no canonical ordering on objects,\n      // i.e. {a:1} < {a:2} and {a:1} > {a:2} are both false,\n      // we first serialize each entry using a PassThrough stream\n      // before sorting.\n      // also: we can\u2019t use the same context array for all entries\n      // since the order of hashing should *not* matter. instead,\n      // we keep track of the additions to a copy of the context array\n      // and add all of them to the global context array when we\u2019re done\n      var contextAdditions = [];\n      var entries = arr.map(function(entry) {\n        var strm = new PassThrough();\n        var localContext = context.slice(); // make copy\n        var hasher = typeHasher(options, strm, localContext);\n        hasher.dispatch(entry);\n        // take only what was added to localContext and append it to contextAdditions\n        contextAdditions = contextAdditions.concat(localContext.slice(context.length));\n        return strm.read().toString();\n      });\n      context = context.concat(contextAdditions);\n      entries.sort();\n      return this._array(entries, false);\n    },\n    _date: function(date){\n      return write('date:' + date.toJSON());\n    },\n    _symbol: function(sym){\n      return write('symbol:' + sym.toString());\n    },\n    _error: function(err){\n      return write('error:' + err.toString());\n    },\n    _boolean: function(bool){\n      return write('bool:' + bool.toString());\n    },\n    _string: function(string){\n      write('string:' + string.length + ':');\n      write(string.toString());\n    },\n    _function: function(fn){\n      write('fn:');\n      if (isNativeFunction(fn)) {\n        this.dispatch('[native]');\n      } else {\n        this.dispatch(fn.toString());\n      }\n\n      if (options.respectFunctionNames !== false) {\n        // Make sure we can still distinguish native functions\n        // by their name, otherwise String and Function will\n        // have the same hash\n        this.dispatch(\"function-name:\" + String(fn.name));\n      }\n\n      if (options.respectFunctionProperties) {\n        this._object(fn);\n      }\n    },\n    _number: function(number){\n      return write('number:' + number.toString());\n    },\n    _xml: function(xml){\n      return write('xml:' + xml.toString());\n    },\n    _null: function() {\n      return write('Null');\n    },\n    _undefined: function() {\n      return write('Undefined');\n    },\n    _regexp: function(regex){\n      return write('regex:' + regex.toString());\n    },\n    _uint8array: function(arr){\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint8clampedarray: function(arr){\n      write('uint8clampedarray:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int8array: function(arr){\n      write('int8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint16array: function(arr){\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int16array: function(arr){\n      write('int16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint32array: function(arr){\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int32array: function(arr){\n      write('int32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float32array: function(arr){\n      write('float32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float64array: function(arr){\n      write('float64array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _arraybuffer: function(arr){\n      write('arraybuffer:');\n      return this.dispatch(new Uint8Array(arr));\n    },\n    _url: function(url) {\n      return write('url:' + url.toString(), 'utf8');\n    },\n    _map: function(map) {\n      write('map:');\n      var arr = Array.from(map);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _set: function(set) {\n      write('set:');\n      var arr = Array.from(set);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _file: function(file) {\n      write('file:');\n      return this.dispatch([file.name, file.size, file.type, file.lastModfied]);\n    },\n    _blob: function() {\n      if (options.ignoreUnknown) {\n        return write('[blob]');\n      }\n\n      throw Error('Hashing Blob objects is currently not supported\\n' +\n        '(see https://github.com/puleos/object-hash/issues/26)\\n' +\n        'Use \"options.replacer\" or \"options.ignoreUnknown\"\\n');\n    },\n    _domwindow: function() { return write('domwindow'); },\n    _bigint: function(number){\n      return write('bigint:' + number.toString());\n    },\n    /* Node.js standard native objects */\n    _process: function() { return write('process'); },\n    _timer: function() { return write('timer'); },\n    _pipe: function() { return write('pipe'); },\n    _tcp: function() { return write('tcp'); },\n    _udp: function() { return write('udp'); },\n    _tty: function() { return write('tty'); },\n    _statwatcher: function() { return write('statwatcher'); },\n    _securecontext: function() { return write('securecontext'); },\n    _connection: function() { return write('connection'); },\n    _zlib: function() { return write('zlib'); },\n    _context: function() { return write('context'); },\n    _nodescript: function() { return write('nodescript'); },\n    _httpparser: function() { return write('httpparser'); },\n    _dataview: function() { return write('dataview'); },\n    _signal: function() { return write('signal'); },\n    _fsevent: function() { return write('fsevent'); },\n    _tlswrap: function() { return write('tlswrap'); },\n  };\n}\n\n// Mini-implementation of stream.PassThrough\n// We are far from having need for the full implementation, and we can\n// make assumptions like \"many writes, then only one final read\"\n// and we can ignore encoding specifics\nfunction PassThrough() {\n  return {\n    buf: '',\n\n    write: function(b) {\n      this.buf += b;\n    },\n\n    end: function(b) {\n      this.buf += b;\n    },\n\n    read: function() {\n      return this.buf;\n    }\n  };\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hash = exports.reviver = exports.replacer = void 0;\nconst object_hash_1 = __importDefault(require(\"object-hash\"));\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction replacer(key, _value) {\n    const value = this[key];\n    if (value instanceof Date) {\n        return `__raycast_cached_date__${value.toString()}`;\n    }\n    if (Buffer.isBuffer(value)) {\n        return `__raycast_cached_buffer__${value.toString(\"base64\")}`;\n    }\n    return _value;\n}\nexports.replacer = replacer;\nfunction reviver(_key, value) {\n    if (typeof value === \"string\" && value.startsWith(\"__raycast_cached_date__\")) {\n        return new Date(value.replace(\"__raycast_cached_date__\", \"\"));\n    }\n    if (typeof value === \"string\" && value.startsWith(\"__raycast_cached_buffer__\")) {\n        return Buffer.from(value.replace(\"__raycast_cached_buffer__\", \"\"), \"base64\");\n    }\n    return value;\n}\nexports.reviver = reviver;\nfunction hash(object, options) {\n    return (0, object_hash_1.default)(object, {\n        replacer: (value) => {\n            if (value instanceof URLSearchParams) {\n                return value.toString();\n            }\n            return value;\n        },\n        ...options,\n    });\n}\nexports.hash = hash;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useCachedState = void 0;\nconst react_1 = require(\"react\");\nconst api_1 = require(\"@raycast/api\");\nconst useLatest_1 = require(\"./useLatest\");\nconst helpers_1 = require(\"./helpers\");\nconst rootCache = Symbol(\"cache without namespace\");\nconst cacheMap = new Map();\nfunction useCachedState(key, initialState, config) {\n    const cacheKey = config?.cacheNamespace || rootCache;\n    const cache = cacheMap.get(cacheKey) || cacheMap.set(cacheKey, new api_1.Cache({ namespace: config?.cacheNamespace })).get(cacheKey);\n    if (!cache) {\n        throw new Error(\"Missing cache\");\n    }\n    const keyRef = (0, useLatest_1.useLatest)(key);\n    const initialValueRef = (0, useLatest_1.useLatest)(initialState);\n    const cachedState = (0, react_1.useSyncExternalStore)(cache.subscribe, () => {\n        try {\n            return cache.get(keyRef.current);\n        }\n        catch (error) {\n            console.error(\"Could not get Cache data:\", error);\n            return undefined;\n        }\n    });\n    const state = (0, react_1.useMemo)(() => {\n        if (typeof cachedState !== \"undefined\") {\n            if (cachedState === \"undefined\") {\n                return undefined;\n            }\n            try {\n                return JSON.parse(cachedState, helpers_1.reviver);\n            }\n            catch (err) {\n                // the data got corrupted somehow\n                console.warn(\"The cached data is corrupted\", err);\n                return initialValueRef.current;\n            }\n        }\n        else {\n            return initialValueRef.current;\n        }\n    }, [cachedState, initialValueRef]);\n    const stateRef = (0, useLatest_1.useLatest)(state);\n    const setStateAndCache = (0, react_1.useCallback)((updater) => {\n        // @ts-expect-error TS struggles to infer the types as T could potentially be a function\n        const newValue = typeof updater === \"function\" ? updater(stateRef.current) : updater;\n        if (typeof newValue === \"undefined\") {\n            cache.set(keyRef.current, \"undefined\");\n        }\n        else {\n            const stringifiedValue = JSON.stringify(newValue, helpers_1.replacer);\n            cache.set(keyRef.current, stringifiedValue);\n        }\n        return newValue;\n    }, [cache, keyRef, stateRef]);\n    return [state, setStateAndCache];\n}\nexports.useCachedState = useCachedState;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useCachedPromise = void 0;\nconst react_1 = require(\"react\");\nconst useCachedState_1 = require(\"./useCachedState\");\nconst usePromise_1 = require(\"./usePromise\");\nconst useLatest_1 = require(\"./useLatest\");\nconst helpers_1 = require(\"./helpers\");\n// Symbol to differentiate an empty cache from `undefined`\nconst emptyCache = Symbol();\nfunction useCachedPromise(fn, args, options) {\n    /**\n     * The hook generates a cache key from the promise it receives & its arguments.\n     * Sometimes that's not enough to guarantee uniqueness, so hooks that build on top of `useCachedPromise` can\n     * use an `internal_cacheKeySuffix` to help it.\n     *\n     * @remark For internal use only.\n     */\n    const { initialData, keepPreviousData, internal_cacheKeySuffix, ...usePromiseOptions } = options || {};\n    const lastUpdateFrom = (0, react_1.useRef)();\n    const [cachedData, mutateCache] = (0, useCachedState_1.useCachedState)((0, helpers_1.hash)(args || []) + internal_cacheKeySuffix ?? \"\", emptyCache, {\n        cacheNamespace: (0, helpers_1.hash)(fn),\n    });\n    // Use a ref to store previous returned data. Use the inital data as its inital value from the cache.\n    const laggyDataRef = (0, react_1.useRef)(cachedData !== emptyCache ? cachedData : initialData);\n    const paginationArgsRef = (0, react_1.useRef)(undefined);\n    const { mutate: _mutate, revalidate, ...state\n    // @ts-expect-error fn has the same signature in both usePromise and useCachedPromise\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n     } = (0, usePromise_1.usePromise)(fn, args || [], {\n        ...usePromiseOptions,\n        onData(data, pagination) {\n            paginationArgsRef.current = pagination;\n            if (usePromiseOptions.onData) {\n                usePromiseOptions.onData(data, pagination);\n            }\n            if (pagination && pagination.page > 0) {\n                // don't cache beyond the first page\n                return;\n            }\n            lastUpdateFrom.current = \"promise\";\n            laggyDataRef.current = data;\n            mutateCache(data);\n        },\n    });\n    let returnedData;\n    const pagination = state.pagination;\n    // when paginating, only the first page gets cached, so we return the data we get from `usePromise`, because\n    // it will be accumulated.\n    if (paginationArgsRef.current && paginationArgsRef.current.page > 0 && state.data) {\n        returnedData = state.data;\n        // if the latest update if from the Promise, we keep it\n    }\n    else if (lastUpdateFrom.current === \"promise\") {\n        returnedData = laggyDataRef.current;\n    }\n    else if (keepPreviousData && cachedData !== emptyCache) {\n        // if we want to keep the latest data, we pick the cache but only if it's not empty\n        returnedData = cachedData;\n        if (pagination) {\n            pagination.hasMore = true;\n            pagination.pageSize = cachedData.length;\n        }\n    }\n    else if (keepPreviousData && cachedData === emptyCache) {\n        // if the cache is empty, we will return the previous data\n        returnedData = laggyDataRef.current;\n        // there are no special cases, so either return the cache or initial data\n    }\n    else if (cachedData !== emptyCache) {\n        returnedData = cachedData;\n        if (pagination) {\n            pagination.hasMore = true;\n            pagination.pageSize = cachedData.length;\n        }\n    }\n    else {\n        returnedData = initialData;\n    }\n    const latestData = (0, useLatest_1.useLatest)(returnedData);\n    // we rewrite the mutate function to update the cache instead\n    const mutate = (0, react_1.useCallback)(async (asyncUpdate, options) => {\n        let dataBeforeOptimisticUpdate;\n        try {\n            if (options?.optimisticUpdate) {\n                if (typeof options?.rollbackOnError !== \"function\" && options?.rollbackOnError !== false) {\n                    // keep track of the data before the optimistic update,\n                    // but only if we need it (eg. only when we want to automatically rollback after)\n                    dataBeforeOptimisticUpdate = structuredClone(latestData.current);\n                }\n                const data = options.optimisticUpdate(latestData.current);\n                lastUpdateFrom.current = \"cache\";\n                laggyDataRef.current = data;\n                mutateCache(data);\n            }\n            return await _mutate(asyncUpdate, { shouldRevalidateAfter: options?.shouldRevalidateAfter });\n        }\n        catch (err) {\n            if (typeof options?.rollbackOnError === \"function\") {\n                const data = options.rollbackOnError(latestData.current);\n                lastUpdateFrom.current = \"cache\";\n                laggyDataRef.current = data;\n                mutateCache(data);\n            }\n            else if (options?.optimisticUpdate && options?.rollbackOnError !== false) {\n                lastUpdateFrom.current = \"cache\";\n                // @ts-expect-error when undefined, it's expected\n                laggyDataRef.current = dataBeforeOptimisticUpdate;\n                // @ts-expect-error when undefined, it's expected\n                mutateCache(dataBeforeOptimisticUpdate);\n            }\n            throw err;\n        }\n    }, [mutateCache, _mutate, latestData, laggyDataRef, lastUpdateFrom]);\n    (0, react_1.useEffect)(() => {\n        if (cachedData !== emptyCache) {\n            lastUpdateFrom.current = \"cache\";\n            laggyDataRef.current = cachedData;\n        }\n    }, [cachedData]);\n    return {\n        data: returnedData,\n        isLoading: state.isLoading,\n        error: state.error,\n        mutate: paginationArgsRef.current && paginationArgsRef.current.page > 0 ? _mutate : mutate,\n        pagination,\n        revalidate,\n    };\n}\nexports.useCachedPromise = useCachedPromise;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJSON = void 0;\nfunction isJSON(contentTypeHeader) {\n    if (contentTypeHeader) {\n        const mediaType = parseContentType(contentTypeHeader);\n        if (!mediaType) {\n            return false;\n        }\n        if (mediaType.subtype === \"json\") {\n            return true;\n        }\n        if (mediaType.suffix === \"json\") {\n            return true;\n        }\n        if (mediaType.suffix && /\\bjson\\b/i.test(mediaType.suffix)) {\n            return true;\n        }\n        if (mediaType.subtype && /\\bjson\\b/i.test(mediaType.subtype)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isJSON = isJSON;\n/**\n * RegExp to match type in RFC 6838 with an optional trailing `;` because some Apple APIs returns one...\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nconst MEDIA_TYPE_REGEXP = /^([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126});?$/;\nfunction parseContentType(header) {\n    const headerDelimitationindex = header.indexOf(\";\");\n    const contentType = headerDelimitationindex !== -1 ? header.slice(0, headerDelimitationindex).trim() : header.trim();\n    const match = MEDIA_TYPE_REGEXP.exec(contentType.toLowerCase().toLowerCase());\n    if (!match) {\n        return;\n    }\n    const type = match[1];\n    let subtype = match[2];\n    let suffix;\n    // suffix after last +\n    const index = subtype.lastIndexOf(\"+\");\n    if (index !== -1) {\n        suffix = subtype.substring(index + 1);\n        subtype = subtype.substring(0, index);\n    }\n    return { type, subtype, suffix };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useFetch = void 0;\nconst react_1 = require(\"react\");\nconst useCachedPromise_1 = require(\"./useCachedPromise\");\nconst useLatest_1 = require(\"./useLatest\");\nconst cross_fetch_1 = require(\"cross-fetch\");\nconst fetch_utils_1 = require(\"./fetch-utils\");\nconst helpers_1 = require(\"./helpers\");\nasync function defaultParsing(response) {\n    if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n    const contentTypeHeader = response.headers.get(\"content-type\");\n    if (contentTypeHeader && (0, fetch_utils_1.isJSON)(contentTypeHeader)) {\n        return await response.json();\n    }\n    return await response.text();\n}\nfunction defaultMapping(result) {\n    return { data: result, hasMore: false };\n}\nfunction useFetch(url, options) {\n    const { parseResponse, mapResult, initialData, execute, keepPreviousData, onError, onData, onWillExecute, failureToastOptions, ...fetchOptions } = options || {};\n    const useCachedPromiseOptions = {\n        initialData,\n        execute,\n        keepPreviousData,\n        onError,\n        onData,\n        onWillExecute,\n        failureToastOptions,\n    };\n    const parseResponseRef = (0, useLatest_1.useLatest)(parseResponse || defaultParsing);\n    const mapResultRef = (0, useLatest_1.useLatest)(mapResult || defaultMapping);\n    const urlRef = (0, react_1.useRef)();\n    const firstPageUrlRef = (0, react_1.useRef)();\n    const firstPageUrl = typeof url === \"function\" ? url({ page: 0 }) : undefined;\n    /**\n     * When paginating, `url` is a `PaginatedRequestInfo`, so we only want to update the ref when the `firstPageUrl` changes.\n     * When not paginating, `url` is a `RequestInfo`, so we want to update the ref whenever `url` changes.\n     */\n    if (!urlRef.current || typeof firstPageUrlRef.current === \"undefined\" || firstPageUrlRef.current !== firstPageUrl) {\n        urlRef.current = url;\n    }\n    firstPageUrlRef.current = firstPageUrl;\n    const abortable = (0, react_1.useRef)();\n    const paginatedFn = (0, react_1.useCallback)((url, options) => async (pagination) => {\n        const res = await (0, cross_fetch_1.fetch)(url(pagination), { signal: abortable.current?.signal, ...options });\n        const parsed = (await parseResponseRef.current(res));\n        return mapResultRef.current?.(parsed);\n    }, [parseResponseRef, mapResultRef]);\n    const fn = (0, react_1.useCallback)(async (url, options) => {\n        const res = await (0, cross_fetch_1.fetch)(url, { signal: abortable.current?.signal, ...options });\n        const parsed = (await parseResponseRef.current(res));\n        const mapped = mapResultRef.current(parsed);\n        return mapped?.data;\n    }, [parseResponseRef, mapResultRef]);\n    const promise = (0, react_1.useMemo)(() => {\n        if (firstPageUrlRef.current) {\n            return paginatedFn;\n        }\n        return fn;\n    }, [firstPageUrlRef, fn, paginatedFn]);\n    // @ts-expect-error lastItem can't be inferred properly\n    return (0, useCachedPromise_1.useCachedPromise)(promise, [urlRef.current, fetchOptions], {\n        ...useCachedPromiseOptions,\n        internal_cacheKeySuffix: firstPageUrlRef.current + (0, helpers_1.hash)(mapResultRef.current) + (0, helpers_1.hash)(parseResponseRef.current),\n        abortable,\n    });\n}\nexports.useFetch = useFetch;\n", "/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals: NodeJS.Signals[] = []\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM')\n\nif (process.platform !== 'win32') {\n  signals.push(\n    'SIGALRM',\n    'SIGABRT',\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT')\n}\n", "// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js'\nexport { signals }\n\n// just a loosened process type so we can do some evil things\ntype ProcessRE = NodeJS.Process & {\n  reallyExit: (code?: number | undefined | null) => any\n  emit: (ev: string, ...a: any[]) => any\n}\n\nconst processOk = (process: any): process is ProcessRE =>\n  !!process &&\n  typeof process === 'object' &&\n  typeof process.removeListener === 'function' &&\n  typeof process.emit === 'function' &&\n  typeof process.reallyExit === 'function' &&\n  typeof process.listeners === 'function' &&\n  typeof process.kill === 'function' &&\n  typeof process.pid === 'number' &&\n  typeof process.on === 'function'\n\nconst kExitEmitter = Symbol.for('signal-exit emitter')\nconst global: typeof globalThis & { [kExitEmitter]?: Emitter } = globalThis\nconst ObjectDefineProperty = Object.defineProperty.bind(Object)\n\n/**\n * A function that takes an exit code and signal as arguments\n *\n * In the case of signal exits *only*, a return value of true\n * will indicate that the signal is being handled, and we should\n * not synthetically exit with the signal we received. Regardless\n * of the handler return value, the handler is unloaded when an\n * otherwise fatal signal is received, so you get exactly 1 shot\n * at it, unless you add another onExit handler at that point.\n *\n * In the case of numeric code exits, we may already have committed\n * to exiting the process, for example via a fatal exception or\n * unhandled promise rejection, so it is impossible to stop safely.\n */\nexport type Handler = (\n  code: number | null | undefined,\n  signal: NodeJS.Signals | null\n) => true | void\ntype ExitEvent = 'afterExit' | 'exit'\ntype Emitted = { [k in ExitEvent]: boolean }\ntype Listeners = { [k in ExitEvent]: Handler[] }\n\n// teeny special purpose ee\nclass Emitter {\n  emitted: Emitted = {\n    afterExit: false,\n    exit: false,\n  }\n\n  listeners: Listeners = {\n    afterExit: [],\n    exit: [],\n  }\n\n  count: number = 0\n  id: number = Math.random()\n\n  constructor() {\n    if (global[kExitEmitter]) {\n      return global[kExitEmitter]\n    }\n    ObjectDefineProperty(global, kExitEmitter, {\n      value: this,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    })\n  }\n\n  on(ev: ExitEvent, fn: Handler) {\n    this.listeners[ev].push(fn)\n  }\n\n  removeListener(ev: ExitEvent, fn: Handler) {\n    const list = this.listeners[ev]\n    const i = list.indexOf(fn)\n    /* c8 ignore start */\n    if (i === -1) {\n      return\n    }\n    /* c8 ignore stop */\n    if (i === 0 && list.length === 1) {\n      list.length = 0\n    } else {\n      list.splice(i, 1)\n    }\n  }\n\n  emit(\n    ev: ExitEvent,\n    code: number | null | undefined,\n    signal: NodeJS.Signals | null\n  ): boolean {\n    if (this.emitted[ev]) {\n      return false\n    }\n    this.emitted[ev] = true\n    let ret: boolean = false\n    for (const fn of this.listeners[ev]) {\n      ret = fn(code, signal) === true || ret\n    }\n    if (ev === 'exit') {\n      ret = this.emit('afterExit', code, signal) || ret\n    }\n    return ret\n  }\n}\n\nabstract class SignalExitBase {\n  abstract onExit(cb: Handler, opts?: { alwaysLast?: boolean }): () => void\n  abstract load(): void\n  abstract unload(): void\n}\n\nconst signalExitWrap = <T extends SignalExitBase>(handler: T) => {\n  return {\n    onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n      return handler.onExit(cb, opts)\n    },\n    load() {\n      return handler.load()\n    },\n    unload() {\n      return handler.unload()\n    },\n  }\n}\n\nclass SignalExitFallback extends SignalExitBase {\n  onExit() {\n    return () => {}\n  }\n  load() {}\n  unload() {}\n}\n\nclass SignalExit extends SignalExitBase {\n  // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n  // so use a supported signal instead\n  /* c8 ignore start */\n  #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP'\n  /* c8 ignore stop */\n  #emitter = new Emitter()\n  #process: ProcessRE\n  #originalProcessEmit: ProcessRE['emit']\n  #originalProcessReallyExit: ProcessRE['reallyExit']\n\n  #sigListeners: { [k in NodeJS.Signals]?: () => void } = {}\n  #loaded: boolean = false\n\n  constructor(process: ProcessRE) {\n    super()\n    this.#process = process\n    // { <signal>: <listener fn>, ... }\n    this.#sigListeners = {}\n    for (const sig of signals) {\n      this.#sigListeners[sig] = () => {\n        // If there are no other listeners, an exit is coming!\n        // Simplest way: remove us and then re-send the signal.\n        // We know that this will kill the process, so we can\n        // safely emit now.\n        const listeners = this.#process.listeners(sig)\n        let { count } = this.#emitter\n        // This is a workaround for the fact that signal-exit v3 and signal\n        // exit v4 are not aware of each other, and each will attempt to let\n        // the other handle it, so neither of them do. To correct this, we\n        // detect if we're the only handler *except* for previous versions\n        // of signal-exit, and increment by the count of listeners it has\n        // created.\n        /* c8 ignore start */\n        const p = process as unknown as {\n          __signal_exit_emitter__?: { count: number }\n        }\n        if (\n          typeof p.__signal_exit_emitter__ === 'object' &&\n          typeof p.__signal_exit_emitter__.count === 'number'\n        ) {\n          count += p.__signal_exit_emitter__.count\n        }\n        /* c8 ignore stop */\n        if (listeners.length === count) {\n          this.unload()\n          const ret = this.#emitter.emit('exit', null, sig)\n          /* c8 ignore start */\n          const s = sig === 'SIGHUP' ? this.#hupSig : sig\n          if (!ret) process.kill(process.pid, s)\n          /* c8 ignore stop */\n        }\n      }\n    }\n\n    this.#originalProcessReallyExit = process.reallyExit\n    this.#originalProcessEmit = process.emit\n  }\n\n  onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return () => {}\n    }\n    /* c8 ignore stop */\n\n    if (this.#loaded === false) {\n      this.load()\n    }\n\n    const ev = opts?.alwaysLast ? 'afterExit' : 'exit'\n    this.#emitter.on(ev, cb)\n    return () => {\n      this.#emitter.removeListener(ev, cb)\n      if (\n        this.#emitter.listeners['exit'].length === 0 &&\n        this.#emitter.listeners['afterExit'].length === 0\n      ) {\n        this.unload()\n      }\n    }\n  }\n\n  load() {\n    if (this.#loaded) {\n      return\n    }\n    this.#loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    this.#emitter.count += 1\n\n    for (const sig of signals) {\n      try {\n        const fn = this.#sigListeners[sig]\n        if (fn) this.#process.on(sig, fn)\n      } catch (_) {}\n    }\n\n    this.#process.emit = (ev: string, ...a: any[]) => {\n      return this.#processEmit(ev, ...a)\n    }\n    this.#process.reallyExit = (code?: number | null | undefined) => {\n      return this.#processReallyExit(code)\n    }\n  }\n\n  unload() {\n    if (!this.#loaded) {\n      return\n    }\n    this.#loaded = false\n\n    signals.forEach(sig => {\n      const listener = this.#sigListeners[sig]\n      /* c8 ignore start */\n      if (!listener) {\n        throw new Error('Listener not defined for signal: ' + sig)\n      }\n      /* c8 ignore stop */\n      try {\n        this.#process.removeListener(sig, listener)\n        /* c8 ignore start */\n      } catch (_) {}\n      /* c8 ignore stop */\n    })\n    this.#process.emit = this.#originalProcessEmit\n    this.#process.reallyExit = this.#originalProcessReallyExit\n    this.#emitter.count -= 1\n  }\n\n  #processReallyExit(code?: number | null | undefined) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return 0\n    }\n    this.#process.exitCode = code || 0\n    /* c8 ignore stop */\n\n    this.#emitter.emit('exit', this.#process.exitCode, null)\n    return this.#originalProcessReallyExit.call(\n      this.#process,\n      this.#process.exitCode\n    )\n  }\n\n  #processEmit(ev: string, ...args: any[]): any {\n    const og = this.#originalProcessEmit\n    if (ev === 'exit' && processOk(this.#process)) {\n      if (typeof args[0] === 'number') {\n        this.#process.exitCode = args[0]\n        /* c8 ignore start */\n      }\n      /* c8 ignore start */\n      const ret = og.call(this.#process, ev, ...args)\n      /* c8 ignore start */\n      this.#emitter.emit('exit', this.#process.exitCode, null)\n      /* c8 ignore stop */\n      return ret\n    } else {\n      return og.call(this.#process, ev, ...args)\n    }\n  }\n}\n\nconst process = globalThis.process\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const {\n  /**\n   * Called when the process is exiting, whether via signal, explicit\n   * exit, or running out of stuff to do.\n   *\n   * If the global process object is not suitable for instrumentation,\n   * then this will be a no-op.\n   *\n   * Returns a function that may be used to unload signal-exit.\n   */\n  onExit,\n\n  /**\n   * Load the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  load,\n\n  /**\n   * Unload the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  unload,\n} = signalExitWrap(\n  processOk(process) ? new SignalExit(process) : new SignalExitFallback()\n)\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultParsing = exports.handleOutput = exports.getSpawnedResult = exports.getSpawnedPromise = void 0;\nconst node_buffer_1 = require(\"node:buffer\");\nconst node_stream_1 = __importDefault(require(\"node:stream\"));\nconst node_util_1 = require(\"node:util\");\nconst signal_exit_1 = require(\"signal-exit\");\nfunction getSpawnedPromise(spawned, { timeout } = {}) {\n    const spawnedPromise = new Promise((resolve, reject) => {\n        spawned.on(\"exit\", (exitCode, signal) => {\n            resolve({ exitCode, signal, timedOut: false });\n        });\n        spawned.on(\"error\", (error) => {\n            reject(error);\n        });\n        if (spawned.stdin) {\n            spawned.stdin.on(\"error\", (error) => {\n                reject(error);\n            });\n        }\n    });\n    if (timeout === 0 || timeout === undefined) {\n        return spawnedPromise;\n    }\n    let timeoutId;\n    const timeoutPromise = new Promise((_resolve, reject) => {\n        timeoutId = setTimeout(() => {\n            spawned.kill(\"SIGTERM\");\n            reject(Object.assign(new Error(\"Timed out\"), { timedOut: true, signal: \"SIGTERM\" }));\n        }, timeout);\n    });\n    const safeSpawnedPromise = spawnedPromise.finally(() => {\n        clearTimeout(timeoutId);\n    });\n    const removeExitHandler = (0, signal_exit_1.onExit)(() => {\n        spawned.kill();\n    });\n    return Promise.race([timeoutPromise, safeSpawnedPromise]).finally(() => removeExitHandler());\n}\nexports.getSpawnedPromise = getSpawnedPromise;\nclass MaxBufferError extends Error {\n    constructor() {\n        super(\"The output is too big\");\n        this.name = \"MaxBufferError\";\n    }\n}\nconst streamPipelinePromisified = (0, node_util_1.promisify)(node_stream_1.default.pipeline);\nfunction bufferStream(options) {\n    const { encoding } = options;\n    const isBuffer = encoding === \"buffer\";\n    // @ts-expect-error missing the methods we are adding below\n    const stream = new node_stream_1.default.PassThrough({ objectMode: false });\n    if (encoding && encoding !== \"buffer\") {\n        stream.setEncoding(encoding);\n    }\n    let length = 0;\n    const chunks = [];\n    stream.on(\"data\", (chunk) => {\n        chunks.push(chunk);\n        length += chunk.length;\n    });\n    stream.getBufferedValue = () => {\n        return (isBuffer ? Buffer.concat(chunks, length) : chunks.join(\"\"));\n    };\n    stream.getBufferedLength = () => length;\n    return stream;\n}\nasync function getStream(inputStream, options) {\n    const stream = bufferStream(options);\n    await new Promise((resolve, reject) => {\n        const rejectPromise = (error) => {\n            // Don't retrieve an oversized buffer.\n            if (error && stream.getBufferedLength() <= node_buffer_1.constants.MAX_LENGTH) {\n                error.bufferedData = stream.getBufferedValue();\n            }\n            reject(error);\n        };\n        (async () => {\n            try {\n                await streamPipelinePromisified(inputStream, stream);\n                resolve();\n            }\n            catch (error) {\n                rejectPromise(error);\n            }\n        })();\n        stream.on(\"data\", () => {\n            // 80mb\n            if (stream.getBufferedLength() > 1000 * 1000 * 80) {\n                rejectPromise(new MaxBufferError());\n            }\n        });\n    });\n    return stream.getBufferedValue();\n}\n// On failure, `result.stdout|stderr` should contain the currently buffered stream\nasync function getBufferedData(stream, streamPromise) {\n    stream.destroy();\n    try {\n        return await streamPromise;\n    }\n    catch (error) {\n        return error.bufferedData;\n    }\n}\nasync function getSpawnedResult({ stdout, stderr }, { encoding }, processDone) {\n    const stdoutPromise = getStream(stdout, { encoding });\n    const stderrPromise = getStream(stderr, { encoding });\n    try {\n        return await Promise.all([processDone, stdoutPromise, stderrPromise]);\n    }\n    catch (error) {\n        return Promise.all([\n            {\n                error: error,\n                exitCode: null,\n                signal: error.signal,\n                timedOut: error.timedOut || false,\n            },\n            getBufferedData(stdout, stdoutPromise),\n            getBufferedData(stderr, stderrPromise),\n        ]);\n    }\n}\nexports.getSpawnedResult = getSpawnedResult;\nfunction stripFinalNewline(input) {\n    const LF = typeof input === \"string\" ? \"\\n\" : \"\\n\".charCodeAt(0);\n    const CR = typeof input === \"string\" ? \"\\r\" : \"\\r\".charCodeAt(0);\n    if (input[input.length - 1] === LF) {\n        // @ts-expect-error we are doing some nasty stuff here\n        input = input.slice(0, -1);\n    }\n    if (input[input.length - 1] === CR) {\n        // @ts-expect-error we are doing some nasty stuff here\n        input = input.slice(0, -1);\n    }\n    return input;\n}\nfunction handleOutput(options, value) {\n    if (options.stripFinalNewline) {\n        return stripFinalNewline(value);\n    }\n    return value;\n}\nexports.handleOutput = handleOutput;\nconst getErrorPrefix = ({ timedOut, timeout, signal, exitCode, }) => {\n    if (timedOut) {\n        return `timed out after ${timeout} milliseconds`;\n    }\n    if (signal !== undefined && signal !== null) {\n        return `was killed with ${signal}`;\n    }\n    if (exitCode !== undefined && exitCode !== null) {\n        return `failed with exit code ${exitCode}`;\n    }\n    return \"failed\";\n};\nconst makeError = ({ stdout, stderr, error, signal, exitCode, command, timedOut, options, parentError, }) => {\n    const prefix = getErrorPrefix({ timedOut, timeout: options?.timeout, signal, exitCode });\n    const execaMessage = `Command ${prefix}: ${command}`;\n    const shortMessage = error ? `${execaMessage}\\n${error.message}` : execaMessage;\n    const message = [shortMessage, stderr, stdout].filter(Boolean).join(\"\\n\");\n    if (error) {\n        // @ts-expect-error not on Error\n        error.originalMessage = error.message;\n    }\n    else {\n        error = parentError;\n    }\n    error.message = message;\n    // @ts-expect-error not on Error\n    error.shortMessage = shortMessage;\n    // @ts-expect-error not on Error\n    error.command = command;\n    // @ts-expect-error not on Error\n    error.exitCode = exitCode;\n    // @ts-expect-error not on Error\n    error.signal = signal;\n    // @ts-expect-error not on Error\n    error.stdout = stdout;\n    // @ts-expect-error not on Error\n    error.stderr = stderr;\n    if (\"bufferedData\" in error) {\n        delete error[\"bufferedData\"];\n    }\n    return error;\n};\nfunction defaultParsing({ stdout, stderr, error, exitCode, signal, timedOut, command, options, parentError, }) {\n    if (error || exitCode !== 0 || signal !== null) {\n        const returnedError = makeError({\n            error,\n            exitCode,\n            signal,\n            stdout,\n            stderr,\n            command,\n            timedOut,\n            options,\n            parentError,\n        });\n        throw returnedError;\n    }\n    return stdout;\n}\nexports.defaultParsing = defaultParsing;\n", "\"use strict\";\n/*\n * Inspired by Execa\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useExec = void 0;\nconst node_child_process_1 = __importDefault(require(\"node:child_process\"));\nconst react_1 = require(\"react\");\nconst useCachedPromise_1 = require(\"./useCachedPromise\");\nconst useLatest_1 = require(\"./useLatest\");\nconst exec_utils_1 = require(\"./exec-utils\");\nconst SPACES_REGEXP = / +/g;\nfunction parseCommand(command, args) {\n    if (args) {\n        return [command, ...args];\n    }\n    const tokens = [];\n    for (const token of command.trim().split(SPACES_REGEXP)) {\n        // Allow spaces to be escaped by a backslash if not meant as a delimiter\n        const previousToken = tokens[tokens.length - 1];\n        if (previousToken && previousToken.endsWith(\"\\\\\")) {\n            // Merge previous token with current one\n            tokens[tokens.length - 1] = `${previousToken.slice(0, -1)} ${token}`;\n        }\n        else {\n            tokens.push(token);\n        }\n    }\n    return tokens;\n}\nfunction useExec(command, optionsOrArgs, options) {\n    const { parseOutput, input, onData, onWillExecute, initialData, execute, keepPreviousData, onError, failureToastOptions, ...execOptions } = Array.isArray(optionsOrArgs) ? options || {} : optionsOrArgs || {};\n    const useCachedPromiseOptions = {\n        initialData,\n        execute,\n        keepPreviousData,\n        onError,\n        onData,\n        onWillExecute,\n        failureToastOptions,\n    };\n    const abortable = (0, react_1.useRef)();\n    const parseOutputRef = (0, useLatest_1.useLatest)(parseOutput || exec_utils_1.defaultParsing);\n    const fn = (0, react_1.useCallback)(async (_command, _args, _options, input) => {\n        const [file, ...args] = parseCommand(_command, _args);\n        const command = [file, ...args].join(\" \");\n        const options = {\n            stripFinalNewline: true,\n            ..._options,\n            timeout: _options?.timeout || 10000,\n            signal: abortable.current?.signal,\n            encoding: _options?.encoding === null ? \"buffer\" : _options?.encoding || \"utf8\",\n            env: { PATH: \"/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\", ...process.env, ..._options?.env },\n        };\n        const spawned = node_child_process_1.default.spawn(file, args, options);\n        const spawnedPromise = (0, exec_utils_1.getSpawnedPromise)(spawned, options);\n        if (input) {\n            spawned.stdin.end(input);\n        }\n        const [{ error, exitCode, signal, timedOut }, stdoutResult, stderrResult] = await (0, exec_utils_1.getSpawnedResult)(spawned, options, spawnedPromise);\n        const stdout = (0, exec_utils_1.handleOutput)(options, stdoutResult);\n        const stderr = (0, exec_utils_1.handleOutput)(options, stderrResult);\n        return parseOutputRef.current({\n            // @ts-expect-error too many generics, I give up\n            stdout,\n            // @ts-expect-error too many generics, I give up\n            stderr,\n            error,\n            exitCode,\n            signal,\n            timedOut,\n            command,\n            options,\n            parentError: new Error(),\n        });\n    }, [parseOutputRef]);\n    // @ts-expect-error T can't be a Promise so it's actually the same\n    return (0, useCachedPromise_1.useCachedPromise)(fn, [command, Array.isArray(optionsOrArgs) ? optionsOrArgs : [], execOptions, input], {\n        ...useCachedPromiseOptions,\n        abortable,\n    });\n}\nexports.useExec = useExec;\n", "'use strict';\n\nconst {Readable, Writable, Duplex, Transform} = require('stream');\n\nconst none = Symbol.for('object-stream.none');\nconst finalSymbol = Symbol.for('object-stream.final');\nconst manySymbol = Symbol.for('object-stream.many');\n\nconst final = value => ({[finalSymbol]: value});\nconst many = values => ({[manySymbol]: values});\n\nconst isFinal = o => o && typeof o == 'object' && finalSymbol in o;\nconst isMany = o => o && typeof o == 'object' && manySymbol in o;\n\nconst getFinalValue = o => o[finalSymbol];\nconst getManyValues = o => o[manySymbol];\n\nconst runAsyncGenerator = async (gen, stream) => {\n  for (;;) {\n    let data = gen.next();\n    if (data && typeof data.then == 'function') {\n      data = await data;\n    }\n    if (data.done) break;\n    let value = data.value;\n    if (value && typeof value.then == 'function') {\n      value = await value;\n    }\n    Chain.sanitize(value, stream);\n  }\n};\n\nconst wrapFunction = fn =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        const result = fn.call(this, chunk, encoding);\n        if (result && typeof result.then == 'function') {\n          // thenable\n          result.then(\n            result => (Chain.sanitize(result, this), callback(null)),\n            error => callback(error)\n          );\n          return;\n        }\n        if (result && typeof result.next == 'function') {\n          // generator\n          runAsyncGenerator(result, this).then(\n            () => callback(null),\n            error => callback(error)\n          );\n          return;\n        }\n        Chain.sanitize(result, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\nconst wrapArray = fns =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        let value = chunk;\n        for (let i = 0; i < fns.length; ++i) {\n          const result = fns[i].call(this, value, encoding);\n          if (result === Chain.none) {\n            callback(null);\n            return;\n          }\n          if (Chain.isFinal(result)) {\n            value = Chain.getFinalValue(result);\n            break;\n          }\n          value = result;\n        }\n        Chain.sanitize(value, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\n// is*NodeStream functions taken from https://github.com/nodejs/node/blob/master/lib/internal/streams/utils.js\nconst isReadableNodeStream = obj =>\n  obj &&\n  typeof obj.pipe === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._writableState || (typeof obj._readableState === 'object' ? obj._readableState.readable : null) !== false) && // Duplex\n  (!obj._writableState || obj._readableState); // Writable has .pipe.\n\nconst isWritableNodeStream = obj =>\n  obj &&\n  typeof obj.write === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._readableState || (typeof obj._writableState === 'object' ? obj._writableState.writable : null) !== false); // Duplex\n\nconst isDuplexNodeStream = obj =>\n  obj && typeof obj.pipe === 'function' && obj._readableState && typeof obj.on === 'function' && typeof obj.write === 'function';\n\nclass Chain extends Duplex {\n  constructor(fns, options) {\n    super(options || {writableObjectMode: true, readableObjectMode: true});\n\n    if (!(fns instanceof Array) || !fns.length) {\n      throw Error(\"Chain's argument should be a non-empty array.\");\n    }\n\n    this.streams = fns\n      .filter(fn => fn)\n      .map((fn, index, fns) => {\n        if (typeof fn === 'function' || fn instanceof Array) return Chain.convertToTransform(fn);\n        if (isDuplexNodeStream(fn) || (!index && isReadableNodeStream(fn)) || (index === fns.length - 1 && isWritableNodeStream(fn))) {\n          return fn;\n        }\n        throw Error('Arguments should be functions, arrays or streams.');\n      })\n      .filter(s => s);\n    this.input = this.streams[0];\n    this.output = this.streams.reduce((output, stream) => (output && output.pipe(stream)) || stream);\n\n    if (!isWritableNodeStream(this.input)) {\n      this._write = (_1, _2, callback) => callback(null);\n      this._final = callback => callback(null); // unavailable in Node 6\n      this.input.on('end', () => this.end());\n    }\n\n    if (isReadableNodeStream(this.output)) {\n      this.output.on('data', chunk => !this.push(chunk) && this.output.pause());\n      this.output.on('end', () => this.push(null));\n    } else {\n      this._read = () => {}; // nop\n      this.resume();\n      this.output.on('finish', () => this.push(null));\n    }\n\n    // connect events\n    if (!options || !options.skipEvents) {\n      this.streams.forEach(stream => stream.on('error', error => this.emit('error', error)));\n    }\n  }\n  _write(chunk, encoding, callback) {\n    let error = null;\n    try {\n      this.input.write(chunk, encoding, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _final(callback) {\n    let error = null;\n    try {\n      this.input.end(null, null, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _read() {\n    this.output.resume();\n  }\n  static make(fns, options) {\n    return new Chain(fns, options);\n  }\n  static sanitize(result, stream) {\n    if (Chain.isFinal(result)) {\n      result = Chain.getFinalValue(result);\n    } else if (Chain.isMany(result)) {\n      result = Chain.getManyValues(result);\n    }\n    if (result !== undefined && result !== null && result !== Chain.none) {\n      if (result instanceof Array) {\n        result.forEach(value => value !== undefined && value !== null && stream.push(value));\n      } else {\n        stream.push(result);\n      }\n    }\n  }\n  static convertToTransform(fn) {\n    if (typeof fn === 'function') return wrapFunction(fn);\n    if (fn instanceof Array) return fn.length ? wrapArray(fn) : null;\n    return null;\n  }\n}\n\nChain.none = none;\nChain.final = final;\nChain.isFinal = isFinal;\nChain.getFinalValue = getFinalValue;\nChain.many = many;\nChain.isMany = isMany;\nChain.getManyValues = getManyValues;\n\nChain.chain = Chain.make;\nChain.make.Constructor = Chain;\n\nmodule.exports = Chain;\n", "'use strict';\n\nconst {Transform} = require('stream');\nconst {StringDecoder} = require('string_decoder');\n\nclass Utf8Stream extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: false}));\n    this._buffer = '';\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (typeof chunk == 'string') {\n      this._transform = this._transformString;\n    } else {\n      this._stringDecoder = new StringDecoder();\n      this._transform = this._transformBuffer;\n    }\n    this._transform(chunk, encoding, callback);\n  }\n\n  _transformBuffer(chunk, _, callback) {\n    this._buffer += this._stringDecoder.write(chunk);\n    this._processBuffer(callback);\n  }\n\n  _transformString(chunk, _, callback) {\n    this._buffer += chunk.toString();\n    this._processBuffer(callback);\n  }\n\n  _processBuffer(callback) {\n    if (this._buffer) {\n      this.push(this._buffer, 'utf8');\n      this._buffer = '';\n    }\n    callback(null);\n  }\n\n  _flushInput() {\n    // meant to be called from _flush()\n    if (this._stringDecoder) {\n      this._buffer += this._stringDecoder.end();\n    }\n  }\n\n  _flush(callback) {\n    this._flushInput();\n    this._processBuffer(callback);\n  }\n}\n\nmodule.exports = Utf8Stream;\n", "'use strict';\n\nconst Utf8Stream = require('./utils/Utf8Stream');\n\nconst patterns = {\n  value1: /^(?:[\\\"\\{\\[\\]\\-\\d]|true\\b|false\\b|null\\b|\\s{1,256})/,\n  string: /^(?:[^\\\"\\\\]{1,256}|\\\\[bfnrt\\\"\\\\\\/]|\\\\u[\\da-fA-F]{4}|\\\")/,\n  key1: /^(?:[\\\"\\}]|\\s{1,256})/,\n  colon: /^(?:\\:|\\s{1,256})/,\n  comma: /^(?:[\\,\\]\\}]|\\s{1,256})/,\n  ws: /^\\s{1,256}/,\n  numberStart: /^\\d/,\n  numberDigit: /^\\d{0,256}/,\n  numberFraction: /^[\\.eE]/,\n  numberExponent: /^[eE]/,\n  numberExpSign: /^[-+]/\n};\nconst MAX_PATTERN_SIZE = 16;\n\nlet noSticky = true;\ntry {\n  new RegExp('.', 'y');\n  noSticky = false;\n} catch (e) {\n  // suppress\n}\n\n!noSticky &&\n  Object.keys(patterns).forEach(key => {\n    let src = patterns[key].source.slice(1); // lop off ^\n    if (src.slice(0, 3) === '(?:' && src.slice(-1) === ')') {\n      src = src.slice(3, -1);\n    }\n    patterns[key] = new RegExp(src, 'y');\n  });\n\npatterns.numberFracStart = patterns.numberExpStart = patterns.numberStart;\npatterns.numberFracDigit = patterns.numberExpDigit = patterns.numberDigit;\n\nconst values = {true: true, false: false, null: null},\n  expected = {object: 'objectStop', array: 'arrayStop', '': 'done'};\n\n// long hexadecimal codes: \\uXXXX\nconst fromHex = s => String.fromCharCode(parseInt(s.slice(2), 16));\n\n// short codes: \\b \\f \\n \\r \\t \\\" \\\\ \\/\nconst codes = {b: '\\b', f: '\\f', n: '\\n', r: '\\r', t: '\\t', '\"': '\"', '\\\\': '\\\\', '/': '/'};\n\nclass Parser extends Utf8Stream {\n  static make(options) {\n    return new Parser(options);\n  }\n\n  constructor(options) {\n    super(Object.assign({}, options, {readableObjectMode: true}));\n\n    this._packKeys = this._packStrings = this._packNumbers = this._streamKeys = this._streamStrings = this._streamNumbers = true;\n    if (options) {\n      'packValues' in options && (this._packKeys = this._packStrings = this._packNumbers = options.packValues);\n      'packKeys' in options && (this._packKeys = options.packKeys);\n      'packStrings' in options && (this._packStrings = options.packStrings);\n      'packNumbers' in options && (this._packNumbers = options.packNumbers);\n      'streamValues' in options && (this._streamKeys = this._streamStrings = this._streamNumbers = options.streamValues);\n      'streamKeys' in options && (this._streamKeys = options.streamKeys);\n      'streamStrings' in options && (this._streamStrings = options.streamStrings);\n      'streamNumbers' in options && (this._streamNumbers = options.streamNumbers);\n      this._jsonStreaming = options.jsonStreaming;\n    }\n    !this._packKeys && (this._streamKeys = true);\n    !this._packStrings && (this._streamStrings = true);\n    !this._packNumbers && (this._streamNumbers = true);\n\n    this._done = false;\n    this._expect = this._jsonStreaming ? 'done' : 'value';\n    this._stack = [];\n    this._parent = '';\n    this._open_number = false;\n    this._accumulator = '';\n  }\n\n  _flush(callback) {\n    this._done = true;\n    super._flush(error => {\n      if (error) return callback(error);\n      if (this._open_number) {\n        if (this._streamNumbers) {\n          this.push({name: 'endNumber'});\n        }\n        this._open_number = false;\n        if (this._packNumbers) {\n          this.push({name: 'numberValue', value: this._accumulator});\n          this._accumulator = '';\n        }\n      }\n      callback(null);\n    });\n  }\n\n  _processBuffer(callback) {\n    let match,\n      value,\n      index = 0;\n    main: for (;;) {\n      switch (this._expect) {\n        case 'value1':\n        case 'value':\n          patterns.value1.lastIndex = index;\n          match = patterns.value1.exec(this._buffer);\n          if (!match) {\n            if (this._done || index + MAX_PATTERN_SIZE < this._buffer.length) {\n              if (index < this._buffer.length) return callback(new Error('Parser cannot parse input: expected a value'));\n              return callback(new Error('Parser has expected a value'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          switch (value) {\n            case '\"':\n              this._streamStrings && this.push({name: 'startString'});\n              this._expect = 'string';\n              break;\n            case '{':\n              this.push({name: 'startObject'});\n              this._stack.push(this._parent);\n              this._parent = 'object';\n              this._expect = 'key1';\n              break;\n            case '[':\n              this.push({name: 'startArray'});\n              this._stack.push(this._parent);\n              this._parent = 'array';\n              this._expect = 'value1';\n              break;\n            case ']':\n              if (this._expect !== 'value1') return callback(new Error(\"Parser cannot parse input: unexpected token ']'\"));\n              if (this._open_number) {\n                this._streamNumbers && this.push({name: 'endNumber'});\n                this._open_number = false;\n                if (this._packNumbers) {\n                  this.push({name: 'numberValue', value: this._accumulator});\n                  this._accumulator = '';\n                }\n              }\n              this.push({name: 'endArray'});\n              this._parent = this._stack.pop();\n              this._expect = expected[this._parent];\n              break;\n            case '-':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '-'});\n              }\n              this._packNumbers && (this._accumulator = '-');\n              this._expect = 'numberStart';\n              break;\n            case '0':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '0'});\n              }\n              this._packNumbers && (this._accumulator = '0');\n              this._expect = 'numberFraction';\n              break;\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: value});\n              }\n              this._packNumbers && (this._accumulator = value);\n              this._expect = 'numberDigit';\n              break;\n            case 'true':\n            case 'false':\n            case 'null':\n              if (this._buffer.length - index === value.length && !this._done) break main; // wait for more input\n              this.push({name: value + 'Value', value: values[value]});\n              this._expect = expected[this._parent];\n              break;\n            // default: // ws\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'keyVal':\n        case 'string':\n          patterns.string.lastIndex = index;\n          match = patterns.string.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length && (this._done || this._buffer.length - index >= 6))\n              return callback(new Error('Parser cannot parse input: escaped characters'));\n            if (this._done) return callback(new Error('Parser has expected a string value'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            if (this._expect === 'keyVal') {\n              this._streamKeys && this.push({name: 'endKey'});\n              if (this._packKeys) {\n                this.push({name: 'keyValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = 'colon';\n            } else {\n              this._streamStrings && this.push({name: 'endString'});\n              if (this._packStrings) {\n                this.push({name: 'stringValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = expected[this._parent];\n            }\n          } else if (value.length > 1 && value.charAt(0) === '\\\\') {\n            const t = value.length == 2 ? codes[value.charAt(1)] : fromHex(value);\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: t});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += t;\n            }\n          } else {\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: value});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += value;\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'key1':\n        case 'key':\n          patterns.key1.lastIndex = index;\n          match = patterns.key1.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an object key'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            this._streamKeys && this.push({name: 'startKey'});\n            this._expect = 'keyVal';\n          } else if (value === '}') {\n            if (this._expect !== 'key1') return callback(new Error(\"Parser cannot parse input: unexpected token '}'\"));\n            this.push({name: 'endObject'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'colon':\n          patterns.colon.lastIndex = index;\n          match = patterns.colon.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ':'\"));\n            break main; // wait for more input\n          }\n          value = match[0];\n          value === ':' && (this._expect = 'value');\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'arrayStop':\n        case 'objectStop':\n          patterns.comma.lastIndex = index;\n          match = patterns.comma.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ','\"));\n            break main; // wait for more input\n          }\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          value = match[0];\n          if (value === ',') {\n            this._expect = this._expect === 'arrayStop' ? 'value' : 'key';\n          } else if (value === '}' || value === ']') {\n            if (value === '}' ? this._expect === 'arrayStop' : this._expect !== 'arrayStop') {\n              return callback(new Error(\"Parser cannot parse input: expected '\" + (this._expect === 'arrayStop' ? ']' : '}') + \"'\"));\n            }\n            this.push({name: value === '}' ? 'endObject' : 'endArray'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        // number chunks\n        case 'numberStart': // [0-9]\n          patterns.numberStart.lastIndex = index;\n          match = patterns.numberStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a starting digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '0' ? 'numberFraction' : 'numberDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberDigit': // [0-9]*\n          patterns.numberDigit.lastIndex = index;\n          match = patterns.numberDigit.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberFraction';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberFraction': // [\\.eE]?\n          patterns.numberFraction.lastIndex = index;\n          match = patterns.numberFraction.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '.' ? 'numberFracStart' : 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracStart': // [0-9]\n          patterns.numberFracStart.lastIndex = index;\n          match = patterns.numberFracStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a fractional part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberFracDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracDigit': // [0-9]*\n          patterns.numberFracDigit.lastIndex = index;\n          match = patterns.numberFracDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExponent';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberExponent': // [eE]?\n          patterns.numberExponent.lastIndex = index;\n          match = patterns.numberExponent.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            if (this._done) {\n              this._expect = 'done';\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpSign': // [-+]?\n          patterns.numberExpSign.lastIndex = index;\n          match = patterns.numberExpSign.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExpStart';\n              break;\n            }\n            if (this._done) return callback(new Error('Parser has expected an exponent value of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpStart';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpStart': // [0-9]\n          patterns.numberExpStart.lastIndex = index;\n          match = patterns.numberExpStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an exponent part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpDigit': // [0-9]*\n          patterns.numberExpDigit.lastIndex = index;\n          match = patterns.numberExpDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'done':\n          patterns.ws.lastIndex = index;\n          match = patterns.ws.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              if (this._jsonStreaming) {\n                this._expect = 'value';\n                break;\n              }\n              return callback(new Error('Parser cannot parse input: unexpected characters'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n      }\n    }\n    !noSticky && (this._buffer = this._buffer.slice(index));\n    callback(null);\n  }\n}\nParser.parser = Parser.make;\nParser.make.Constructor = Parser;\n\nmodule.exports = Parser;\n", "'use strict';\n\nconst emit = stream => stream.on('data', item => stream.emit(item.name, item.value));\n\nmodule.exports = emit;\n", "'use strict';\n\nconst Parser = require('./Parser');\nconst emit = require('./utils/emit');\n\nconst make = options => emit(new Parser(options));\n\nmake.Parser = Parser;\nmake.parser = Parser.parser;\n\nmodule.exports = make;\n", "'use strict';\n\nconst {Transform} = require('stream');\n\nclass FilterBase extends Transform {\n  static stringFilter(string, separator) {\n    return stack => {\n      const path = stack.join(separator);\n      return (\n        (path.length === string.length && path === string) ||\n        (path.length > string.length && path.substr(0, string.length) === string && path.substr(string.length, separator.length) === separator)\n      );\n    };\n  }\n\n  static regExpFilter(regExp, separator) {\n    return stack => regExp.test(stack.join(separator));\n  }\n\n  static arrayReplacement(array) {\n    return () => array;\n  }\n\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: true, readableObjectMode: true}));\n    this._transform = this._check;\n    this._stack = [];\n\n    const filter = options && options.filter,\n      separator = (options && options.pathSeparator) || '.';\n    if (typeof filter == 'string') {\n      this._filter = FilterBase.stringFilter(filter, separator);\n    } else if (typeof filter == 'function') {\n      this._filter = filter;\n    } else if (filter instanceof RegExp) {\n      this._filter = FilterBase.regExpFilter(filter, separator);\n    }\n\n    const replacement = options && options.replacement;\n    if (typeof replacement == 'function') {\n      this._replacement = replacement;\n    } else {\n      this._replacement = FilterBase.arrayReplacement(replacement || FilterBase.defaultReplacement);\n    }\n    this._allowEmptyReplacement = options && options.allowEmptyReplacement;\n\n    this._streamKeys = true;\n    if (options) {\n      'streamValues' in options && (this._streamKeys = options.streamValues);\n      'streamKeys' in options && (this._streamKeys = options.streamKeys);\n    }\n\n    this._once = options && options.once;\n    this._previousToken = '';\n  }\n\n  _check(chunk, _, callback) {\n    // update the last stack key\n    switch (chunk.name) {\n      case 'startObject':\n      case 'startArray':\n      case 'startString':\n      case 'startNumber':\n      case 'nullValue':\n      case 'trueValue':\n      case 'falseValue':\n        if (typeof this._stack[this._stack.length - 1] == 'number') {\n          // array\n          ++this._stack[this._stack.length - 1];\n        }\n        break;\n      case 'keyValue':\n        this._stack[this._stack.length - 1] = chunk.value;\n        break;\n      case 'numberValue':\n        if (this._previousToken !== 'endNumber' && typeof this._stack[this._stack.length - 1] == 'number') {\n          // array\n          ++this._stack[this._stack.length - 1];\n        }\n        break;\n      case 'stringValue':\n        if (this._previousToken !== 'endString' && typeof this._stack[this._stack.length - 1] == 'number') {\n          // array\n          ++this._stack[this._stack.length - 1];\n        }\n        break;\n    }\n    this._previousToken = chunk.name;\n    // check, if we allow a chunk\n    if (this._checkChunk(chunk)) {\n      return callback(null);\n    }\n    // update the stack\n    switch (chunk.name) {\n      case 'startObject':\n        this._stack.push(null);\n        break;\n      case 'startArray':\n        this._stack.push(-1);\n        break;\n      case 'endObject':\n      case 'endArray':\n        this._stack.pop();\n        break;\n    }\n    callback(null);\n  }\n\n  _passObject(chunk, _, callback) {\n    this.push(chunk);\n    switch (chunk.name) {\n      case 'startObject':\n      case 'startArray':\n        ++this._depth;\n        break;\n      case 'endObject':\n      case 'endArray':\n        --this._depth;\n        break;\n    }\n    if (!this._depth) {\n      this._transform = this._once ? this._skip : this._check;\n    }\n    callback(null);\n  }\n\n  _pass(chunk, _, callback) {\n    this.push(chunk);\n    callback(null);\n  }\n\n  _skipObject(chunk, _, callback) {\n    switch (chunk.name) {\n      case 'startObject':\n      case 'startArray':\n        ++this._depth;\n        break;\n      case 'endObject':\n      case 'endArray':\n        --this._depth;\n        break;\n    }\n    if (!this._depth) {\n      this._transform = this._once ? this._pass : this._check;\n    }\n    callback(null);\n  }\n\n  _skip(chunk, _, callback) {\n    callback(null);\n  }\n}\n\nFilterBase.defaultReplacement = [{name: 'nullValue', value: null}];\n\nconst passValue = (last, post) =>\n  function(chunk, _, callback) {\n    if (this._expected) {\n      const expected = this._expected;\n      this._expected = '';\n      this._transform = this._once ? this._skip : this._check;\n      if (expected === chunk.name) {\n        this.push(chunk);\n      } else {\n        return this._transform(chunk, _, callback);\n      }\n    } else {\n      this.push(chunk);\n      if (chunk.name === last) {\n        this._expected = post;\n      }\n    }\n    callback(null);\n  };\n\nFilterBase.prototype._passNumber = passValue('endNumber', 'numberValue');\nFilterBase.prototype._passString = passValue('endString', 'stringValue');\nFilterBase.prototype._passKey = passValue('endKey', 'keyValue');\n\nconst skipValue = (last, post) =>\n  function(chunk, _, callback) {\n    if (this._expected) {\n      const expected = this._expected;\n      this._expected = '';\n      this._transform = this._once ? this._pass : this._check;\n      if (expected !== chunk.name) {\n        return this._transform(chunk, _, callback);\n      }\n    } else {\n      if (chunk.name === last) {\n        this._expected = post;\n      }\n    }\n    callback(null);\n  };\n\nFilterBase.prototype._skipNumber = skipValue('endNumber', 'numberValue');\nFilterBase.prototype._skipString = skipValue('endString', 'stringValue');\nFilterBase.prototype._skipKey = skipValue('endKey', 'keyValue');\n\nmodule.exports = FilterBase;\n", "'use strict';\n\nconst Chain = require('stream-chain');\n\nconst Parser = require('../Parser');\n\nconst withParser = (fn, options) =>\n  new Chain([new Parser(options), fn(options)], Object.assign({}, options, {writableObjectMode: false, readableObjectMode: true}));\n\nmodule.exports = withParser;\n", "'use strict';\n\nconst FilterBase = require('./FilterBase');\nconst withParser = require('../utils/withParser');\n\nclass Pick extends FilterBase {\n  static make(options) {\n    return new Pick(options);\n  }\n\n  static withParser(options) {\n    return withParser(Pick.make, options);\n  }\n\n  _checkChunk(chunk) {\n    switch (chunk.name) {\n      case 'startObject':\n      case 'startArray':\n        if (this._filter(this._stack, chunk)) {\n          this.push(chunk);\n          this._transform = this._passObject;\n          this._depth = 1;\n          return true;\n        }\n        break;\n      case 'startString':\n        if (this._filter(this._stack, chunk)) {\n          this.push(chunk);\n          this._transform = this._passString;\n          return true;\n        }\n        break;\n      case 'startNumber':\n        if (this._filter(this._stack, chunk)) {\n          this.push(chunk);\n          this._transform = this._passNumber;\n          return true;\n        }\n        break;\n      case 'nullValue':\n      case 'trueValue':\n      case 'falseValue':\n      case 'stringValue':\n      case 'numberValue':\n        if (this._filter(this._stack, chunk)) {\n          this.push(chunk);\n          this._transform = this._once ? this._skip : this._check;\n          return true;\n        }\n        break;\n    }\n    return false;\n  }\n}\nPick.pick = Pick.make;\nPick.make.Constructor = Pick;\n\nmodule.exports = Pick;\n", "'use strict';\n\nconst EventEmitter = require('events');\n\nconst startObject = Ctr =>\n  function () {\n    if (this.done) {\n      this.done = false;\n    } else {\n      this.stack.push(this.current, this.key);\n    }\n    this.current = new Ctr();\n    this.key = null;\n  };\n\nclass Assembler extends EventEmitter {\n  static connectTo(stream, options) {\n    return new Assembler(options).connectTo(stream);\n  }\n\n  constructor(options) {\n    super();\n    this.stack = [];\n    this.current = this.key = null;\n    this.done = true;\n    if (options) {\n      this.reviver = typeof options.reviver == 'function' && options.reviver;\n      if (this.reviver) {\n        this.stringValue = this._saveValue = this._saveValueWithReviver;\n      }\n      if (options.numberAsString) {\n        this.numberValue = this.stringValue;\n      }\n    }\n  }\n\n  connectTo(stream) {\n    stream.on('data', chunk => {\n      if (this[chunk.name]) {\n        this[chunk.name](chunk.value);\n        if (this.done) this.emit('done', this);\n      }\n    });\n    return this;\n  }\n\n  get depth() {\n    return (this.stack.length >> 1) + (this.done ? 0 : 1);\n  }\n\n  get path() {\n    const path = [];\n    for (let i = 0; i < this.stack.length; i += 2) {\n      const key = this.stack[i + 1];\n      path.push(key === null ? this.stack[i].length : key);\n    }\n    return path;\n  }\n\n  dropToLevel(level) {\n    if (level < this.depth) {\n      if (level) {\n        const index = (level - 1) << 1;\n        this.current = this.stack[index];\n        this.key = this.stack[index + 1];\n        this.stack.splice(index);\n      } else {\n        this.stack = [];\n        this.current = this.key = null;\n        this.done = true;\n      }\n    }\n    return this;\n  }\n\n  consume(chunk) {\n    this[chunk.name] && this[chunk.name](chunk.value);\n    return this;\n  }\n\n  keyValue(value) {\n    this.key = value;\n  }\n\n  //stringValue() - aliased below to _saveValue()\n\n  numberValue(value) {\n    this._saveValue(parseFloat(value));\n  }\n  nullValue() {\n    this._saveValue(null);\n  }\n  trueValue() {\n    this._saveValue(true);\n  }\n  falseValue() {\n    this._saveValue(false);\n  }\n\n  //startObject() - assigned below\n\n  endObject() {\n    if (this.stack.length) {\n      const value = this.current;\n      this.key = this.stack.pop();\n      this.current = this.stack.pop();\n      this._saveValue(value);\n    } else {\n      this.done = true;\n    }\n  }\n\n  //startArray() - assigned below\n  //endArray() - aliased below to endObject()\n\n  _saveValue(value) {\n    if (this.done) {\n      this.current = value;\n    } else {\n      if (this.current instanceof Array) {\n        this.current.push(value);\n      } else {\n        this.current[this.key] = value;\n        this.key = null;\n      }\n    }\n  }\n  _saveValueWithReviver(value) {\n    if (this.done) {\n      this.current = this.reviver('', value);\n    } else {\n      if (this.current instanceof Array) {\n        value = this.reviver('' + this.current.length, value);\n        this.current.push(value);\n        if (value === undefined) {\n          delete this.current[this.current.length - 1];\n        }\n      } else {\n        value = this.reviver(this.key, value);\n        if (value !== undefined) {\n          this.current[this.key] = value;\n        }\n        this.key = null;\n      }\n    }\n  }\n}\n\nAssembler.prototype.stringValue = Assembler.prototype._saveValue;\nAssembler.prototype.startObject = startObject(Object);\nAssembler.prototype.startArray = startObject(Array);\nAssembler.prototype.endArray = Assembler.prototype.endObject;\n\nmodule.exports = Assembler;\n", "'use strict';\n\nconst {Transform} = require('stream');\nconst Assembler = require('../Assembler');\n\nclass Counter {\n  constructor(initialDepth) {\n    this.depth = initialDepth;\n  }\n  startObject() {\n    ++this.depth;\n  }\n  endObject() {\n    --this.depth;\n  }\n  startArray() {\n    ++this.depth;\n  }\n  endArray() {\n    --this.depth;\n  }\n}\n\nclass StreamBase extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: true, readableObjectMode: true}));\n    if (options) {\n      this.objectFilter = options.objectFilter;\n      this.includeUndecided = options.includeUndecided;\n    }\n    if (typeof this.objectFilter != 'function') {\n      this._filter = this._transform;\n    }\n    this._transform = this._wait || this._filter;\n    this._assembler = new Assembler(options);\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n      }\n    }\n    callback(null);\n  }\n\n  _filter(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      const result = this.objectFilter(this._assembler);\n      if (result) {\n        if (this._assembler.depth === this._level) {\n          this._push();\n          this._transform = this._filter;\n        }\n        this._transform = this._accept;\n        return callback(null);\n      }\n      if (result === false) {\n        this._saved_assembler = this._assembler;\n        this._assembler = new Counter(this._saved_assembler.depth);\n        this._saved_assembler.dropToLevel(this._level);\n        if (this._assembler.depth === this._level) {\n          this._assembler = this._saved_assembler;\n          this._transform = this._filter;\n        }\n        this._transform = this._reject;\n        return callback(null);\n      }\n      if (this._assembler.depth === this._level) {\n        this._push(!this.includeUndecided);\n      }\n    }\n    callback(null);\n  }\n\n  _accept(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n\n  _reject(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._assembler = this._saved_assembler;\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n}\n\nmodule.exports = StreamBase;\n", "'use strict';\n\nconst StreamBase = require('./StreamBase');\nconst withParser = require('../utils/withParser');\n\nclass StreamArray extends StreamBase {\n  static make(options) {\n    return new StreamArray(options);\n  }\n\n  static withParser(options) {\n    return withParser(StreamArray.make, options);\n  }\n\n  constructor(options) {\n    super(options);\n    this._level = 1;\n    this._counter = 0;\n  }\n\n  _wait(chunk, _, callback) {\n    // first chunk should open an array\n    if (chunk.name !== 'startArray') {\n      return callback(new Error('Top-level object should be an array.'));\n    }\n    this._transform = this._filter;\n    return this._transform(chunk, _, callback);\n  }\n\n  _push(discard) {\n    if (this._assembler.current.length) {\n      if (discard) {\n        ++this._counter;\n        this._assembler.current.pop();\n      } else {\n        this.push({key: this._counter++, value: this._assembler.current.pop()});\n      }\n    }\n  }\n}\nStreamArray.streamArray = StreamArray.make;\nStreamArray.make.Constructor = StreamArray;\n\nmodule.exports = StreamArray;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useStreamJSON = void 0;\nconst api_1 = require(\"@raycast/api\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst node_fs_1 = require(\"node:fs\");\nconst promises_1 = require(\"node:fs/promises\");\nconst node_path_1 = require(\"node:path\");\nconst promises_2 = require(\"node:stream/promises\");\nconst react_1 = require(\"react\");\nconst stream_chain_1 = __importDefault(require(\"stream-chain\"));\nconst stream_json_1 = require(\"stream-json\");\nconst Pick_1 = __importDefault(require(\"stream-json/filters/Pick\"));\nconst StreamArray_1 = __importDefault(require(\"stream-json/streamers/StreamArray\"));\nconst fetch_utils_1 = require(\"./fetch-utils\");\nconst useCachedPromise_1 = require(\"./useCachedPromise\");\nconst helpers_1 = require(\"./helpers\");\nasync function cache(url, destination, fetchOptions) {\n    if (typeof url === \"object\" || url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n        return await cacheURL(url, destination, fetchOptions);\n    }\n    else if (url.startsWith(\"file://\")) {\n        return await cacheFile((0, node_path_1.normalize)(decodeURIComponent(new URL(url).pathname)), destination, fetchOptions?.signal ? fetchOptions.signal : undefined);\n    }\n    else {\n        throw new Error(\"Only HTTP(S) or file URLs are supported\");\n    }\n}\nasync function cacheURL(url, destination, fetchOptions) {\n    const response = await (0, cross_fetch_1.default)(url, fetchOptions);\n    if (!response.ok) {\n        throw new Error(\"Failed to fetch URL\");\n    }\n    if (!(0, fetch_utils_1.isJSON)(response.headers.get(\"content-type\"))) {\n        throw new Error(\"URL does not return JSON\");\n    }\n    if (!response.body) {\n        throw new Error(\"Failed to retrieve expected JSON content: Response body is missing or inaccessible.\");\n    }\n    await (0, promises_2.pipeline)(response.body, (0, node_fs_1.createWriteStream)(destination), fetchOptions?.signal ? { signal: fetchOptions.signal } : undefined);\n}\nasync function cacheFile(source, destination, abortSignal) {\n    await (0, promises_2.pipeline)((0, node_fs_1.createReadStream)(source), (0, node_fs_1.createWriteStream)(destination), abortSignal ? { signal: abortSignal } : undefined);\n}\nasync function cacheURLIfNecessary(url, folder, fileName, forceUpdate, fetchOptions) {\n    const destination = (0, node_path_1.join)(folder, fileName);\n    try {\n        await (0, promises_1.stat)(folder);\n    }\n    catch (e) {\n        (0, node_fs_1.mkdirSync)(folder, { recursive: true });\n        await cache(url, destination, fetchOptions);\n        return;\n    }\n    if (forceUpdate) {\n        await cache(url, destination, fetchOptions);\n        return;\n    }\n    let stats = undefined;\n    try {\n        stats = await (0, promises_1.stat)(destination);\n    }\n    catch (e) {\n        await cache(url, destination, fetchOptions);\n        return;\n    }\n    if (typeof url === \"object\" || url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n        const headResponse = await (0, cross_fetch_1.default)(url, { ...fetchOptions, method: \"HEAD\" });\n        if (!headResponse.ok) {\n            throw new Error(\"Could not fetch URL\");\n        }\n        if (!(0, fetch_utils_1.isJSON)(headResponse.headers.get(\"content-type\"))) {\n            throw new Error(\"URL does not return JSON\");\n        }\n        const lastModified = Date.parse(headResponse.headers.get(\"last-modified\") ?? \"\");\n        if (stats.size === 0 || Number.isNaN(lastModified) || lastModified > stats.mtimeMs) {\n            await cache(url, destination, fetchOptions);\n            return;\n        }\n    }\n    else if (url.startsWith(\"file://\")) {\n        try {\n            const sourceStats = await (0, promises_1.stat)((0, node_path_1.normalize)(decodeURIComponent(new URL(url).pathname)));\n            if (sourceStats.mtimeMs > stats.mtimeMs) {\n                await cache(url, destination, fetchOptions);\n            }\n        }\n        catch (e) {\n            throw new Error(\"Source file could not be read\");\n        }\n    }\n    else {\n        throw new Error(\"Only HTTP(S) or file URLs are supported\");\n    }\n}\nasync function* streamJsonFile(filePath, pageSize, abortSignal, dataPath, filterFn, transformFn) {\n    let page = [];\n    const pipeline = new stream_chain_1.default([\n        (0, node_fs_1.createReadStream)(filePath),\n        dataPath ? Pick_1.default.withParser({ filter: dataPath }) : (0, stream_json_1.parser)(),\n        new StreamArray_1.default(),\n        (data) => transformFn?.(data.value) ?? data.value,\n    ]);\n    abortSignal?.addEventListener(\"abort\", () => {\n        pipeline.destroy();\n    });\n    try {\n        for await (const data of pipeline) {\n            if (abortSignal?.aborted) {\n                return [];\n            }\n            if (!filterFn || filterFn(data)) {\n                page.push(data);\n            }\n            if (page.length >= pageSize) {\n                yield page;\n                page = [];\n            }\n        }\n    }\n    catch (e) {\n        pipeline.destroy();\n        throw e;\n    }\n    if (page.length > 0) {\n        yield page;\n    }\n    return [];\n}\nfunction useStreamJSON(url, options) {\n    const { initialData, execute, keepPreviousData, onError, onData, onWillExecute, failureToastOptions, dataPath, filter, transform, pageSize = 20, ...fetchOptions } = options ?? {};\n    const previousUrl = (0, react_1.useRef)();\n    const previousDestination = (0, react_1.useRef)();\n    const useCachedPromiseOptions = {\n        initialData,\n        execute,\n        keepPreviousData,\n        onError,\n        onData,\n        onWillExecute,\n        failureToastOptions,\n    };\n    const generatorRef = (0, react_1.useRef)(null);\n    const controllerRef = (0, react_1.useRef)(null);\n    const hasMoreRef = (0, react_1.useRef)(false);\n    return (0, useCachedPromise_1.useCachedPromise)((url, pageSize, fetchOptions, dataPath, filter, transform) => async ({ page }) => {\n        const fileName = (0, helpers_1.hash)(url) + \".json\";\n        const folder = api_1.environment.supportPath;\n        if (page === 0) {\n            controllerRef.current?.abort();\n            controllerRef.current = new AbortController();\n            const destination = (0, node_path_1.join)(folder, fileName);\n            /**\n             * Force update the cache when the URL changes but the cache destination does not.\n             */\n            const forceCacheUpdate = Boolean(previousUrl.current &&\n                previousUrl.current !== url &&\n                previousDestination.current &&\n                previousDestination.current === destination);\n            previousUrl.current = url;\n            previousDestination.current = destination;\n            await cacheURLIfNecessary(url, folder, fileName, forceCacheUpdate, {\n                ...fetchOptions,\n                signal: controllerRef.current?.signal,\n            });\n            generatorRef.current = streamJsonFile(destination, pageSize, controllerRef.current?.signal, dataPath, filter, transform);\n        }\n        if (!generatorRef.current) {\n            return { hasMore: hasMoreRef.current, data: [] };\n        }\n        const { value: newData, done } = await generatorRef.current.next();\n        hasMoreRef.current = !done;\n        return { hasMore: hasMoreRef.current, data: (newData ?? []) };\n    }, [url, pageSize, fetchOptions, dataPath, filter, transform], useCachedPromiseOptions);\n}\nexports.useStreamJSON = useStreamJSON;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baseExecuteSQL = exports.isPermissionError = exports.PermissionError = void 0;\nconst node_fs_1 = require(\"node:fs\");\nconst promises_1 = require(\"node:fs/promises\");\nconst node_os_1 = __importDefault(require(\"node:os\"));\nconst node_child_process_1 = __importDefault(require(\"node:child_process\"));\nconst node_path_1 = __importDefault(require(\"node:path\"));\nconst exec_utils_1 = require(\"./exec-utils\");\nconst helpers_1 = require(\"./helpers\");\nclass PermissionError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"PermissionError\";\n    }\n}\nexports.PermissionError = PermissionError;\nfunction isPermissionError(error) {\n    return error instanceof Error && error.name === \"PermissionError\";\n}\nexports.isPermissionError = isPermissionError;\nasync function baseExecuteSQL(databasePath, query, options) {\n    if (!(0, node_fs_1.existsSync)(databasePath)) {\n        throw new Error(\"The database does not exist\");\n    }\n    const abortSignal = options?.signal;\n    let workaroundCopiedDb;\n    let spawned = node_child_process_1.default.spawn(\"sqlite3\", [\"--json\", \"--readonly\", databasePath, query], { signal: abortSignal });\n    let spawnedPromise = (0, exec_utils_1.getSpawnedPromise)(spawned);\n    let [{ error, exitCode, signal }, stdoutResult, stderrResult] = await (0, exec_utils_1.getSpawnedResult)(spawned, { encoding: \"utf-8\" }, spawnedPromise);\n    checkAborted(abortSignal);\n    if (stderrResult.match(\"(5)\") || stderrResult.match(\"(14)\")) {\n        // That means that the DB is busy because of another app is locking it\n        // This happens when Chrome or Arc is opened: they lock the History db.\n        // As an ugly workaround, we duplicate the file and read that instead\n        // (with vfs unix - none to just not care about locks)\n        if (!workaroundCopiedDb) {\n            const tempFolder = node_path_1.default.join(node_os_1.default.tmpdir(), \"useSQL\", (0, helpers_1.hash)(databasePath));\n            await (0, promises_1.mkdir)(tempFolder, { recursive: true });\n            checkAborted(abortSignal);\n            workaroundCopiedDb = node_path_1.default.join(tempFolder, \"db.db\");\n            await (0, promises_1.copyFile)(databasePath, workaroundCopiedDb);\n            await (0, promises_1.writeFile)(workaroundCopiedDb + \"-shm\", \"\");\n            await (0, promises_1.writeFile)(workaroundCopiedDb + \"-wal\", \"\");\n            checkAborted(abortSignal);\n        }\n        spawned = node_child_process_1.default.spawn(\"sqlite3\", [\"--json\", \"--readonly\", \"--vfs\", \"unix-none\", workaroundCopiedDb, query], {\n            signal: abortSignal,\n        });\n        spawnedPromise = (0, exec_utils_1.getSpawnedPromise)(spawned);\n        [{ error, exitCode, signal }, stdoutResult, stderrResult] = await (0, exec_utils_1.getSpawnedResult)(spawned, { encoding: \"utf-8\" }, spawnedPromise);\n        checkAborted(abortSignal);\n    }\n    if (error || exitCode !== 0 || signal !== null) {\n        if (stderrResult.includes(\"authorization denied\")) {\n            throw new PermissionError(\"You do not have permission to access the database.\");\n        }\n        else {\n            throw new Error(stderrResult || \"Unknown error\");\n        }\n    }\n    return JSON.parse(stdoutResult.trim() || \"[]\");\n}\nexports.baseExecuteSQL = baseExecuteSQL;\nfunction checkAborted(signal) {\n    if (signal?.aborted) {\n        const error = new Error(\"aborted\");\n        error.name = \"AbortError\";\n        throw error;\n    }\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useSQL = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst api_1 = require(\"@raycast/api\");\nconst node_fs_1 = require(\"node:fs\");\nconst node_os_1 = __importDefault(require(\"node:os\"));\nconst react_1 = require(\"react\");\nconst usePromise_1 = require(\"./usePromise\");\nconst useLatest_1 = require(\"./useLatest\");\nconst showFailureToast_1 = require(\"./showFailureToast\");\nconst sql_utils_1 = require(\"./sql-utils\");\n/**\n * Executes a query on a local SQL database and returns the {@link AsyncState} corresponding to the query of the command. The last value will be kept between command runs.\n *\n * @example\n * ```\n * import { useSQL } from \"@raycast/utils\";\n * import { resolve } from \"path\";\n * import { homedir } from \"os\";\n *\n * const NOTES_DB = resolve(homedir(), \"Library/Group Containers/group.com.apple.notes/NoteStore.sqlite\");\n * const notesQuery = `SELECT id, title FROM ...`;\n * type NoteItem = {\n *   id: string;\n *   title: string;\n * };\n *\n * export default function Command() {\n *   const { isLoading, data, permissionView } = useSQL<NoteItem>(NOTES_DB, notesQuery);\n *\n *   if (permissionView) {\n *     return permissionView;\n *   }\n *\n *   return (\n *     <List isLoading={isLoading}>\n *       {(data || []).map((item) => (\n *         <List.Item key={item.id} title={item.title} />\n *       ))}\n *     </List>\n *  );\n * };\n * ```\n */\nfunction useSQL(databasePath, query, options) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { permissionPriming, ...usePromiseOptions } = options || {};\n    const [permissionView, setPermissionView] = (0, react_1.useState)();\n    const latestOptions = (0, useLatest_1.useLatest)(options || {});\n    const abortable = (0, react_1.useRef)();\n    const handleError = (0, react_1.useCallback)((_error) => {\n        console.error(_error);\n        const error = _error instanceof Error && _error.message.includes(\"authorization denied\")\n            ? new sql_utils_1.PermissionError(\"You do not have permission to access the database.\")\n            : _error;\n        if ((0, sql_utils_1.isPermissionError)(error)) {\n            setPermissionView((0, jsx_runtime_1.jsx)(PermissionErrorScreen, { priming: latestOptions.current.permissionPriming }));\n        }\n        else {\n            if (latestOptions.current.onError) {\n                latestOptions.current.onError(error);\n            }\n            else {\n                if (api_1.environment.launchType !== api_1.LaunchType.Background) {\n                    (0, showFailureToast_1.showFailureToast)(error, {\n                        title: \"Cannot query the data\",\n                    });\n                }\n            }\n        }\n    }, [latestOptions]);\n    const fn = (0, react_1.useMemo)(() => {\n        if (!(0, node_fs_1.existsSync)(databasePath)) {\n            throw new Error(\"The database does not exist\");\n        }\n        return async (databasePath, query) => {\n            const abortSignal = abortable.current?.signal;\n            return (0, sql_utils_1.baseExecuteSQL)(databasePath, query, { signal: abortSignal });\n        };\n    }, [databasePath]);\n    return {\n        ...(0, usePromise_1.usePromise)(fn, [databasePath, query], { ...usePromiseOptions, onError: handleError }),\n        permissionView,\n    };\n}\nexports.useSQL = useSQL;\nconst macosVenturaAndLater = parseInt(node_os_1.default.release().split(\".\")[0]) >= 22;\nconst preferencesString = macosVenturaAndLater ? \"Settings\" : \"Preferences\";\nfunction PermissionErrorScreen(props) {\n    const action = macosVenturaAndLater\n        ? {\n            title: \"Open System Settings -> Privacy\",\n            target: \"x-apple.systempreferences:com.apple.preference.security?Privacy_AllFiles\",\n        }\n        : {\n            title: \"Open System Preferences -> Security\",\n            target: \"x-apple.systempreferences:com.apple.preference.security?Privacy_AllFiles\",\n        };\n    if (api_1.environment.commandMode === \"menu-bar\") {\n        return ((0, jsx_runtime_1.jsxs)(api_1.MenuBarExtra, { icon: api_1.Icon.Warning, title: api_1.environment.commandName, children: [(0, jsx_runtime_1.jsx)(api_1.MenuBarExtra.Item, { title: \"Raycast needs full disk access\", tooltip: `You can revert this access in ${preferencesString} whenever you want` }), props.priming ? ((0, jsx_runtime_1.jsx)(api_1.MenuBarExtra.Item, { title: props.priming, tooltip: `You can revert this access in ${preferencesString} whenever you want` })) : null, (0, jsx_runtime_1.jsx)(api_1.MenuBarExtra.Separator, {}), (0, jsx_runtime_1.jsx)(api_1.MenuBarExtra.Item, { title: action.title, onAction: () => (0, api_1.open)(action.target) })] }));\n    }\n    return ((0, jsx_runtime_1.jsx)(api_1.List, { children: (0, jsx_runtime_1.jsx)(api_1.List.EmptyView, { icon: {\n                source: {\n                    light: \"https://raycast.com/uploads/extensions-utils-security-permissions-light.png\",\n                    dark: \"https://raycast.com/uploads/extensions-utils-security-permissions-dark.png\",\n                },\n            }, title: \"Raycast needs full disk access.\", description: `${props.priming ? props.priming + \"\\n\" : \"\"}You can revert this access in ${preferencesString} whenever you want.`, actions: (0, jsx_runtime_1.jsx)(api_1.ActionPanel, { children: (0, jsx_runtime_1.jsx)(api_1.Action.Open, { ...action }) }) }) }));\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useForm = exports.FormValidation = void 0;\nconst react_1 = require(\"react\");\nconst useLatest_1 = require(\"./useLatest\");\n/**\n * Shorthands for common validation cases\n */\nvar FormValidation;\n(function (FormValidation) {\n    /** Show an error when the value of the item is empty */\n    FormValidation[\"Required\"] = \"required\";\n})(FormValidation || (exports.FormValidation = FormValidation = {}));\nfunction validationError(validation, value) {\n    if (validation) {\n        if (typeof validation === \"function\") {\n            return validation(value);\n        }\n        else if (validation === FormValidation.Required) {\n            let valueIsValid = typeof value !== \"undefined\" && value !== null;\n            if (valueIsValid) {\n                switch (typeof value) {\n                    case \"string\":\n                        valueIsValid = value.length > 0;\n                        break;\n                    case \"object\":\n                        if (Array.isArray(value)) {\n                            valueIsValid = value.length > 0;\n                        }\n                        else if (value instanceof Date) {\n                            valueIsValid = value.getTime() > 0;\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n            if (!valueIsValid) {\n                return \"The item is required\";\n            }\n        }\n    }\n}\n/**\n * Hook that provides a high-level interface to work with Forms, and more particularly, with Form validations. It incorporates all the good practices to provide a great User Experience for your Forms.\n *\n * @returns an object which contains the necessary methods and props to provide a good User Experience in your Form.\n *\n * @example\n * ```\n * import { Action, ActionPanel, Form, showToast, Toast } from \"@raycast/api\";\n * import { useForm, FormValidation } from \"@raycast/utils\";\n *\n * interface SignUpFormValues {\n *   nickname: string;\n *   password: string;\n * }\n *\n * export default function Command() {\n *   const { handleSubmit, itemProps } = useForm<SignUpFormValues>({\n *     onSubmit(values) {\n *       showToast(Toast.Style.Success, \"Yay!\", `${values.nickname} account created`);\n *     },\n *     validation: {\n *       nickname: FormValidation.Required,\n *       password: (value) => {\n *         if (value && value.length < 8) {\n *           return \"Password must be at least 8 symbols\";\n *         } else if (!value) {\n *           return \"The item is required\";\n *         }\n *       },\n *     },\n *   });\n *\n *   return (\n *     <Form\n *       actions={\n *         <ActionPanel>\n *           <Action.SubmitForm title=\"Submit\" onSubmit={handleSubmit} />\n *         </ActionPanel>\n *       }\n *     >\n *       <Form.TextField title=\"Nickname\" placeholder=\"Enter your nickname\" {...itemProps.nickname} />\n *       <Form.PasswordField\n *         title=\"Password\"\n *         placeholder=\"Enter password at least 8 characters long\"\n *         {...itemProps.password}\n *       />\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction useForm(props) {\n    const { onSubmit: _onSubmit, validation, initialValues = {} } = props;\n    // @ts-expect-error it's fine if we don't specify all the values\n    const [values, setValues] = (0, react_1.useState)(initialValues);\n    const [errors, setErrors] = (0, react_1.useState)({});\n    const refs = (0, react_1.useRef)({});\n    const latestValidation = (0, useLatest_1.useLatest)(validation || {});\n    const latestOnSubmit = (0, useLatest_1.useLatest)(_onSubmit);\n    const focus = (0, react_1.useCallback)((id) => {\n        refs.current[id]?.focus();\n    }, [refs]);\n    const handleSubmit = (0, react_1.useCallback)(async (values) => {\n        let validationErrors = false;\n        for (const [id, validation] of Object.entries(latestValidation.current)) {\n            const error = validationError(validation, values[id]);\n            if (error) {\n                if (!validationErrors) {\n                    validationErrors = {};\n                    // we focus the first item that has an error\n                    focus(id);\n                }\n                validationErrors[id] = error;\n            }\n        }\n        if (validationErrors) {\n            setErrors(validationErrors);\n            return false;\n        }\n        const result = await latestOnSubmit.current(values);\n        return typeof result === \"boolean\" ? result : true;\n    }, [latestValidation, latestOnSubmit, focus]);\n    const setValidationError = (0, react_1.useCallback)((id, error) => {\n        setErrors((errors) => ({ ...errors, [id]: error }));\n    }, [setErrors]);\n    const setValue = (0, react_1.useCallback)(function (id, value) {\n        // @ts-expect-error TS is always confused about SetStateAction, but it's fine here\n        setValues((values) => ({ ...values, [id]: typeof value === \"function\" ? value(values[id]) : value }));\n    }, [setValues]);\n    const itemProps = (0, react_1.useMemo)(() => {\n        // we have to use a proxy because we don't actually have any object to iterate through\n        // so instead we dynamically create the props when required\n        return new Proxy(\n        // @ts-expect-error the whole point of a proxy...\n        {}, {\n            get(target, id) {\n                const validation = latestValidation.current[id];\n                const value = values[id];\n                return {\n                    onChange(value) {\n                        if (errors[id]) {\n                            const error = validationError(validation, value);\n                            if (!error) {\n                                setValidationError(id, undefined);\n                            }\n                        }\n                        setValue(id, value);\n                    },\n                    onBlur(event) {\n                        const error = validationError(validation, event.target.value);\n                        if (error) {\n                            setValidationError(id, error);\n                        }\n                    },\n                    error: errors[id],\n                    id,\n                    // we shouldn't return `undefined` otherwise it will be an uncontrolled component\n                    value: typeof value === \"undefined\" ? null : value,\n                    ref: (instance) => {\n                        refs.current[id] = instance;\n                    },\n                };\n            },\n        });\n    }, [errors, latestValidation, setValidationError, values, refs, setValue]);\n    const reset = (0, react_1.useCallback)((values) => {\n        setErrors({});\n        Object.entries(refs.current).forEach(([id, ref]) => {\n            if (!values?.[id]) {\n                ref?.reset();\n            }\n        });\n        if (values) {\n            // @ts-expect-error it's fine if we don't specify all the values\n            setValues(values);\n        }\n    }, [setValues, setErrors, refs]);\n    return { handleSubmit, setValidationError, setValue, values, itemProps, focus, reset };\n}\nexports.useForm = useForm;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useAI = void 0;\nconst react_1 = require(\"react\");\nconst api_1 = require(\"@raycast/api\");\nconst usePromise_1 = require(\"./usePromise\");\n/**\n * Stream a prompt completion.\n *\n * @example\n * ```typescript\n * import { Detail, LaunchProps } from \"@raycast/api\";\n * import { use AI } from \"@raycast/utils\";\n *\n * export default function Command(props: LaunchProps<{ arguments: { prompt: string } }>) {\n *   const { isLoading, data } = useAI(props.arguments.prompt);\n *\n *   return <Detail isLoading={isLoading} markdown={data} />;\n * }\n * ```\n */\nfunction useAI(prompt, options = {}) {\n    const { creativity, stream, model, ...usePromiseOptions } = options;\n    const [data, setData] = (0, react_1.useState)(\"\");\n    const abortable = (0, react_1.useRef)();\n    const { isLoading, error, revalidate } = (0, usePromise_1.usePromise)(async (prompt, creativity, shouldStream) => {\n        setData(\"\");\n        const stream = api_1.AI.ask(prompt, { creativity, model, signal: abortable.current?.signal });\n        if (shouldStream === false) {\n            setData(await stream);\n        }\n        else {\n            stream.on(\"data\", (data) => {\n                setData((x) => x + data);\n            });\n            await stream;\n        }\n    }, [prompt, creativity, stream], { ...usePromiseOptions, abortable });\n    return { isLoading, data, error, revalidate };\n}\nexports.useAI = useAI;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useFrecencySorting = void 0;\nconst react_1 = require(\"react\");\nconst useLatest_1 = require(\"./useLatest\");\nconst useCachedState_1 = require(\"./useCachedState\");\nconst HALF_LIFE_DAYS = 10;\nconst MS_PER_DAY = 24 * 60 * 60 * 1000;\nconst DECAY_RATE_CONSTANT = Math.log(2) / (HALF_LIFE_DAYS * MS_PER_DAY);\nconst VISIT_TYPE_POINTS = {\n    Default: 100,\n    Embed: 0,\n    Bookmark: 140,\n};\nfunction getNewFrecency(item) {\n    const now = Date.now();\n    const lastVisited = item ? item.lastVisited : 0;\n    const frecency = item ? item.frecency : 0;\n    const visitAgeInDays = (now - lastVisited) / MS_PER_DAY;\n    const currentVisitValue = VISIT_TYPE_POINTS.Default * Math.exp(-DECAY_RATE_CONSTANT * visitAgeInDays);\n    const totalVisitValue = frecency + currentVisitValue;\n    return {\n        lastVisited: now,\n        frecency: totalVisitValue,\n    };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaultKey = (item) => {\n    if (process.env.NODE_ENV !== \"production\" &&\n        (typeof item !== \"object\" || !item || !(\"id\" in item) || typeof item.id != \"string\")) {\n        throw new Error(\"Specify a key function or make sure your items have an 'id' property\");\n    }\n    return item.id;\n};\nfunction useFrecencySorting(data, options) {\n    const keyRef = (0, useLatest_1.useLatest)(options?.key || defaultKey);\n    const sortUnvisitedRef = (0, useLatest_1.useLatest)(options?.sortUnvisited);\n    const [storedFrecencies, setStoredFrecencies] = (0, useCachedState_1.useCachedState)(`raycast_frecency_${options?.namespace}`, {});\n    const visitItem = (0, react_1.useCallback)(async function updateFrecency(item) {\n        const itemKey = keyRef.current(item);\n        setStoredFrecencies((storedFrecencies) => {\n            const frecency = storedFrecencies[itemKey];\n            const newFrecency = getNewFrecency(frecency);\n            return {\n                ...storedFrecencies,\n                [itemKey]: newFrecency,\n            };\n        });\n    }, [keyRef, setStoredFrecencies]);\n    const resetRanking = (0, react_1.useCallback)(async function removeFrecency(item) {\n        const itemKey = keyRef.current(item);\n        setStoredFrecencies((storedFrecencies) => {\n            const newFrencencies = { ...storedFrecencies };\n            delete newFrencencies[itemKey];\n            return newFrencencies;\n        });\n    }, [keyRef, setStoredFrecencies]);\n    const sortedData = (0, react_1.useMemo)(() => {\n        if (!data) {\n            return [];\n        }\n        return data.sort((a, b) => {\n            const frecencyA = storedFrecencies[keyRef.current(a)];\n            const frecencyB = storedFrecencies[keyRef.current(b)];\n            // If a has a frecency, but b doesn't, a should come first\n            if (frecencyA && !frecencyB) {\n                return -1;\n            }\n            // If b has a frecency, but a doesn't, b should come first\n            if (!frecencyA && frecencyB) {\n                return 1;\n            }\n            // If both frecencies are defined,put the one with the higher frecency first\n            if (frecencyA && frecencyB) {\n                return frecencyB.frecency - frecencyA.frecency;\n            }\n            // If both frecencies are undefined, keep the original order\n            return sortUnvisitedRef.current ? sortUnvisitedRef.current(a, b) : 0;\n        });\n    }, [storedFrecencies, data, keyRef, sortUnvisitedRef]);\n    return { data: sortedData, visitItem, resetRanking };\n}\nexports.useFrecencySorting = useFrecencySorting;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useLocalStorage = void 0;\nconst api_1 = require(\"@raycast/api\");\nconst showFailureToast_1 = require(\"./showFailureToast\");\nconst helpers_1 = require(\"./helpers\");\nconst usePromise_1 = require(\"./usePromise\");\n/**\n * A hook to manage a value in the local storage.\n *\n * @remark The value is stored as a JSON string in the local storage.\n *\n * @param key - The key to use for the value in the local storage.\n * @param initialValue - The initial value to use if the key doesn't exist in the local storage.\n * @returns An object with the following properties:\n * - `value`: The value from the local storage or the initial value if the key doesn't exist.\n * - `setValue`: A function to update the value in the local storage.\n * - `removeValue`: A function to remove the value from the local storage.\n * - `isLoading`: A boolean indicating if the value is loading.\n *\n * @example\n * ```\n * const { value, setValue } = useLocalStorage<string>(\"my-key\");\n * const { value, setValue } = useLocalStorage<string>(\"my-key\", \"default value\");\n * ```\n */\nfunction useLocalStorage(key, initialValue) {\n    const { data: value, isLoading, mutate, } = (0, usePromise_1.usePromise)(async (storageKey) => {\n        const item = await api_1.LocalStorage.getItem(storageKey);\n        return typeof item !== \"undefined\" ? JSON.parse(item, helpers_1.reviver) : initialValue;\n    }, [key]);\n    async function setValue(value) {\n        try {\n            await mutate(api_1.LocalStorage.setItem(key, JSON.stringify(value, helpers_1.replacer)), {\n                optimisticUpdate(value) {\n                    return value;\n                },\n            });\n        }\n        catch (error) {\n            await (0, showFailureToast_1.showFailureToast)(error, { title: \"Failed to set value in local storage\" });\n        }\n    }\n    async function removeValue() {\n        try {\n            await mutate(api_1.LocalStorage.removeItem(key), {\n                optimisticUpdate() {\n                    return undefined;\n                },\n            });\n        }\n        catch (error) {\n            await (0, showFailureToast_1.showFailureToast)(error, { title: \"Failed to remove value from local storage\" });\n        }\n    }\n    return { value, setValue, removeValue, isLoading };\n}\nexports.useLocalStorage = useLocalStorage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.slightlyLighterColor = exports.slightlyDarkerColor = void 0;\nfunction hexToRGB(hex) {\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    // 3 digits\n    if (hex.length === 4) {\n        r = parseInt(`${hex[1]}${hex[1]}`, 16);\n        g = parseInt(`${hex[2]}${hex[2]}`, 16);\n        b = parseInt(`${hex[3]}${hex[3]}`, 16);\n        // 6 digits\n    }\n    else if (hex.length === 7) {\n        r = parseInt(`${hex[1]}${hex[2]}`, 16);\n        g = parseInt(`${hex[3]}${hex[4]}`, 16);\n        b = parseInt(`${hex[5]}${hex[6]}`, 16);\n    }\n    else {\n        throw new Error(`Malformed hex color: ${hex}`);\n    }\n    return { r, g, b };\n}\nfunction rgbToHex({ r, g, b }) {\n    let rString = r.toString(16);\n    let gString = g.toString(16);\n    let bString = b.toString(16);\n    if (rString.length === 1) {\n        rString = `0${rString}`;\n    }\n    if (gString.length === 1) {\n        gString = `0${gString}`;\n    }\n    if (bString.length === 1) {\n        bString = `0${bString}`;\n    }\n    return `#${rString}${gString}${bString}`;\n}\nfunction rgbToHSL({ r, g, b }) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    // Find greatest and smallest channel values\n    const cmin = Math.min(r, g, b);\n    const cmax = Math.max(r, g, b);\n    const delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let l = 0;\n    // Calculate hue\n    // No difference\n    if (delta === 0) {\n        h = 0;\n    }\n    // Red is max\n    else if (cmax === r) {\n        h = ((g - b) / delta) % 6;\n    }\n    // Green is max\n    else if (cmax === g) {\n        h = (b - r) / delta + 2;\n    }\n    // Blue is max\n    else {\n        h = (r - g) / delta + 4;\n    }\n    h = Math.round(h * 60);\n    // Make negative hues positive behind 360\u00B0\n    if (h < 0) {\n        h += 360;\n    }\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n    // Calculate saturation\n    s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n    return { h, s, l };\n}\nfunction hslToRGB({ h, s, l }) {\n    // Must be fractions of 1\n    s /= 100;\n    l /= 100;\n    const c = (1 - Math.abs(2 * l - 1)) * s;\n    const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n    const m = l - c / 2;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    if (h >= 0 && h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    }\n    else if (h >= 60 && h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    }\n    else if (h >= 120 && h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    }\n    else if (h >= 180 && h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    }\n    else if (h >= 240 && h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    }\n    else if (h >= 300 && h < 360) {\n        r = c;\n        g = 0;\n        b = x;\n    }\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n    return { r, g, b };\n}\nfunction hexToHSL(hex) {\n    return rgbToHSL(hexToRGB(hex));\n}\nfunction hslToHex(hsl) {\n    return rgbToHex(hslToRGB(hsl));\n}\nfunction clamp(value, min, max) {\n    return min < max ? (value < min ? min : value > max ? max : value) : value < max ? max : value > min ? min : value;\n}\nconst offset = 12;\nfunction slightlyDarkerColor(hex) {\n    const hsl = hexToHSL(hex);\n    return hslToHex({\n        h: hsl.h,\n        s: hsl.s,\n        l: clamp(hsl.l - offset, 0, 100),\n    });\n}\nexports.slightlyDarkerColor = slightlyDarkerColor;\nfunction slightlyLighterColor(hex) {\n    const hsl = hexToHSL(hex);\n    return hslToHex({\n        h: hsl.h,\n        s: hsl.s,\n        l: clamp(hsl.l + offset, 0, 100),\n    });\n}\nexports.slightlyLighterColor = slightlyLighterColor;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAvatarIcon = void 0;\nconst color_1 = require(\"./color\");\nfunction getWholeCharAndI(str, i) {\n    const code = str.charCodeAt(i);\n    if (Number.isNaN(code)) {\n        return [\"\", i];\n    }\n    if (code < 0xd800 || code > 0xdfff) {\n        return [str.charAt(i), i]; // Normal character, keeping 'i' the same\n    }\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xd800 <= code && code <= 0xdbff) {\n        if (str.length <= i + 1) {\n            throw new Error(\"High surrogate without following low surrogate\");\n        }\n        const next = str.charCodeAt(i + 1);\n        if (0xdc00 > next || next > 0xdfff) {\n            throw new Error(\"High surrogate without following low surrogate\");\n        }\n        return [str.charAt(i) + str.charAt(i + 1), i + 1];\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n        throw new Error(\"Low surrogate without preceding high surrogate\");\n    }\n    const prev = str.charCodeAt(i - 1);\n    // (could change last hex to 0xDB7F to treat high private surrogates\n    // as single characters)\n    if (0xd800 > prev || prev > 0xdbff) {\n        throw new Error(\"Low surrogate without preceding high surrogate\");\n    }\n    // Return the next character instead (and increment)\n    return [str.charAt(i + 1), i + 1];\n}\nconst avatarColorSet = [\n    \"#DC829A\",\n    \"#D64854\",\n    \"#D47600\",\n    \"#D36CDD\",\n    \"#52A9E4\",\n    \"#7871E8\",\n    \"#70920F\",\n    \"#43B93A\",\n    \"#EB6B3E\",\n    \"#26B795\",\n    \"#D85A9B\",\n    \"#A067DC\",\n    \"#BD9500\",\n    \"#5385D9\", // Blue\n];\n/**\n * Icon to represent an avatar when you don't have one. The generated avatar\n * will be generated from the initials of the name and have a colorful but consistent background.\n *\n * @returns an Image that can be used where Raycast expects them.\n *\n * @example\n * ```\n * <List.Item icon={getAvatarIcon('Mathieu Dutour')} title=\"Project\" />\n * ```\n */\nfunction getAvatarIcon(name, options) {\n    const words = name.trim().split(\" \");\n    let initials;\n    if (words.length == 1 && getWholeCharAndI(words[0], 0)[0]) {\n        initials = getWholeCharAndI(words[0], 0)[0];\n    }\n    else if (words.length > 1) {\n        const firstWordFirstLetter = getWholeCharAndI(words[0], 0)[0] || \"\";\n        const lastWordFirstLetter = getWholeCharAndI(words[words.length - 1], 0)[0] ?? \"\";\n        initials = firstWordFirstLetter + lastWordFirstLetter;\n    }\n    else {\n        initials = \"\";\n    }\n    let backgroundColor;\n    if (options?.background) {\n        backgroundColor = options?.background;\n    }\n    else {\n        let initialsCharIndex = 0;\n        let [char, i] = getWholeCharAndI(initials, 0);\n        while (char) {\n            initialsCharIndex += char.charCodeAt(0);\n            [char, i] = getWholeCharAndI(initials, i + 1);\n        }\n        const colorIndex = initialsCharIndex % avatarColorSet.length;\n        backgroundColor = avatarColorSet[colorIndex];\n    }\n    const padding = 0;\n    const radius = 50 - padding;\n    const svg = `<svg width=\"100px\" height=\"100px\">\n  ${options?.gradient !== false\n        ? `<defs>\n      <linearGradient id=\"Gradient\" x1=\"0.25\" x2=\"0.75\" y1=\"0\" y2=\"1\">\n        <stop offset=\"0%\" stop-color=\"${(0, color_1.slightlyLighterColor)(backgroundColor)}\"/>\n        <stop offset=\"50%\" stop-color=\"${backgroundColor}\"/>\n        <stop offset=\"100%\" stop-color=\"${(0, color_1.slightlyDarkerColor)(backgroundColor)}\"/>\n      </linearGradient>\n  </defs>`\n        : \"\"}\n      <circle cx=\"50\" cy=\"50\" r=\"${radius}\" fill=\"${options?.gradient !== false ? \"url(#Gradient)\" : backgroundColor}\" />\n      ${initials\n        ? `<text x=\"50\" y=\"80\" font-size=\"${radius - 1}\" font-family=\"Inter, sans-serif\" text-anchor=\"middle\" fill=\"white\">${initials.toUpperCase()}</text>`\n        : \"\"}\n    </svg>\n  `.replaceAll(\"\\n\", \"\");\n    return `data:image/svg+xml,${svg}`;\n}\nexports.getAvatarIcon = getAvatarIcon;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFavicon = void 0;\nconst api_1 = require(\"@raycast/api\");\nconst url_1 = require(\"url\");\n/**\n * Icon showing the favicon of a website.\n *\n * A favicon (favorite icon) is a tiny icon included along with a website, which is displayed in places like the browser's address bar, page tabs, and bookmarks menu.\n *\n * @param url The URL of the website to represent.\n *\n * @returns an Image that can be used where Raycast expects them.\n *\n * @example\n * ```\n * <List.Item icon={getFavicon(\"https://raycast.com\")} title=\"Raycast Website\" />\n * ```\n */\nfunction getFavicon(url, options) {\n    try {\n        const urlObj = typeof url === \"string\" ? new url_1.URL(url) : url;\n        const hostname = urlObj.hostname;\n        return {\n            source: `https://www.google.com/s2/favicons?sz=${options?.size ?? 64}&domain=${hostname}`,\n            fallback: options?.fallback ?? api_1.Icon.Link,\n            mask: options?.mask,\n        };\n    }\n    catch (e) {\n        console.error(e);\n        return api_1.Icon.Link;\n    }\n}\nexports.getFavicon = getFavicon;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProgressIcon = void 0;\nconst api_1 = require(\"@raycast/api\");\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians),\n    };\n}\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n    const start = polarToCartesian(x, y, radius, endAngle);\n    const end = polarToCartesian(x, y, radius, startAngle);\n    const largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n    const d = [\"M\", start.x, start.y, \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(\" \");\n    return d;\n}\n/**\n * Icon to represent the progress of _something_.\n *\n * @param progress Number between 0 and 1.\n * @param color Hex color (default `\"#FF6363\"`) or Color.\n *\n * @returns an Image that can be used where Raycast expects them.\n *\n * @example\n * ```\n * <List.Item icon={getProgressIcon(0.1)} title=\"Project\" />\n * ```\n */\nfunction getProgressIcon(progress, color = api_1.Color.Red, options) {\n    const background = options?.background || (api_1.environment.appearance === \"light\" ? \"black\" : \"white\");\n    const backgroundOpacity = options?.backgroundOpacity || 0.1;\n    const stroke = 10;\n    const padding = 5;\n    const radius = 50 - padding - stroke / 2;\n    const svg = `<svg width=\"100px\" height=\"100px\">\n      <circle cx=\"50\" cy=\"50\" r=\"${radius}\" stroke-width=\"${stroke}\" stroke=\"${progress < 1 ? background : color}\" opacity=\"${progress < 1 ? backgroundOpacity : \"1\"}\" fill=\"none\" />\n      ${progress > 0 && progress < 1\n        ? `<path d=\"${describeArc(50, 50, radius, 0, progress * 360)}\" stroke=\"${color}\" stroke-width=\"${stroke}\" fill=\"none\" />`\n        : \"\"}\n    </svg>\n  `.replaceAll(\"\\n\", \"\");\n    return `data:image/svg+xml,${svg}`;\n}\nexports.getProgressIcon = getProgressIcon;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./avatar\"), exports);\n__exportStar(require(\"./favicon\"), exports);\n__exportStar(require(\"./progress\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.zoomService = exports.slackService = exports.linearService = exports.jiraService = exports.googleService = exports.githubService = exports.asanaService = void 0;\nconst api_1 = require(\"@raycast/api\");\nconst OAuthService_1 = require(\"./OAuthService\");\nconst PROVIDER_CLIENT_IDS = {\n    asana: \"1191201745684312\",\n    github: \"7235fe8d42157f1f38c0\",\n    linear: \"c8ff37b9225c3c9aefd7d66ea0e5b6f1\",\n    slack: \"851756884692.5546927290212\",\n};\nconst getIcon = (markup) => `data:image/svg+xml,${markup}`;\nconst PROVIDERS_ICONS = {\n    asana: getIcon(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"251\" height=\"232\" fill=\"none\"><path fill=\"#F06A6A\" d=\"M179.383 54.373c0 30.017-24.337 54.374-54.354 54.374-30.035 0-54.373-24.338-54.373-54.374C70.656 24.338 94.993 0 125.029 0c30.017 0 54.354 24.338 54.354 54.373ZM54.393 122.33C24.376 122.33.02 146.668.02 176.685c0 30.017 24.337 54.373 54.373 54.373 30.035 0 54.373-24.338 54.373-54.373 0-30.017-24.338-54.355-54.373-54.355Zm141.253 0c-30.035 0-54.373 24.338-54.373 54.374 0 30.035 24.338 54.373 54.373 54.373 30.017 0 54.374-24.338 54.374-54.373 0-30.036-24.338-54.374-54.374-54.374Z\"/></svg>`),\n    github: {\n        source: getIcon(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"/></svg>`),\n        tintColor: api_1.Color.PrimaryText,\n    },\n    google: getIcon(`<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display:block\" viewBox=\"0 0 48 48\"><path fill=\"#EA4335\" d=\"M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z\"/><path fill=\"#4285F4\" d=\"M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z\"/><path fill=\"#FBBC05\" d=\"M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z\"/><path fill=\"#34A853\" d=\"M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z\"/><path fill=\"none\" d=\"M0 0h48v48H0z\"/></svg>`),\n    jira: getIcon(`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2361\" height=\"2500\" viewBox=\"2.59 0 214.091 224\"><linearGradient id=\"a\" x1=\"102.4\" x2=\"56.15\" y1=\"218.63\" y2=\"172.39\" gradientTransform=\"matrix(1 0 0 -1 0 264)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".18\" stop-color=\"#0052cc\"/><stop offset=\"1\" stop-color=\"#2684ff\"/></linearGradient><linearGradient xlink:href=\"#a\" id=\"b\" x1=\"114.65\" x2=\"160.81\" y1=\"85.77\" y2=\"131.92\"/><path fill=\"#2684ff\" d=\"M214.06 105.73 117.67 9.34 108.33 0 35.77 72.56 2.59 105.73a8.89 8.89 0 0 0 0 12.54l66.29 66.29L108.33 224l72.55-72.56 1.13-1.12 32.05-32a8.87 8.87 0 0 0 0-12.59zm-105.73 39.39L75.21 112l33.12-33.12L141.44 112z\"/><path fill=\"url(#a)\" d=\"M108.33 78.88a55.75 55.75 0 0 1-.24-78.61L35.62 72.71l39.44 39.44z\"/><path fill=\"url(#b)\" d=\"m141.53 111.91-33.2 33.21a55.77 55.77 0 0 1 0 78.86L181 151.35z\"/></svg>`),\n    linear: {\n        source: {\n            light: getIcon(`<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#222326\" width=\"200\" height=\"200\" viewBox=\"0 0 100 100\"><path d=\"M1.22541 61.5228c-.2225-.9485.90748-1.5459 1.59638-.857L39.3342 97.1782c.6889.6889.0915 1.8189-.857 1.5964C20.0515 94.4522 5.54779 79.9485 1.22541 61.5228ZM.00189135 46.8891c-.01764375.2833.08887215.5599.28957165.7606L52.3503 99.7085c.2007.2007.4773.3075.7606.2896 2.3692-.1476 4.6938-.46 6.9624-.9259.7645-.157 1.0301-1.0963.4782-1.6481L2.57595 39.4485c-.55186-.5519-1.49117-.2863-1.648174.4782-.465915 2.2686-.77832 4.5932-.92588465 6.9624ZM4.21093 29.7054c-.16649.3738-.08169.8106.20765 1.1l64.77602 64.776c.2894.2894.7262.3742 1.1.2077 1.7861-.7956 3.5171-1.6927 5.1855-2.684.5521-.328.6373-1.0867.1832-1.5407L8.43566 24.3367c-.45409-.4541-1.21271-.3689-1.54074.1832-.99132 1.6684-1.88843 3.3994-2.68399 5.1855ZM12.6587 18.074c-.3701-.3701-.393-.9637-.0443-1.3541C21.7795 6.45931 35.1114 0 49.9519 0 77.5927 0 100 22.4073 100 50.0481c0 14.8405-6.4593 28.1724-16.7199 37.3375-.3903.3487-.984.3258-1.3542-.0443L12.6587 18.074Z\"/></svg>`),\n            dark: getIcon(`<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#fff\" width=\"200\" height=\"200\" viewBox=\"0 0 100 100\"><path d=\"M1.22541 61.5228c-.2225-.9485.90748-1.5459 1.59638-.857L39.3342 97.1782c.6889.6889.0915 1.8189-.857 1.5964C20.0515 94.4522 5.54779 79.9485 1.22541 61.5228ZM.00189135 46.8891c-.01764375.2833.08887215.5599.28957165.7606L52.3503 99.7085c.2007.2007.4773.3075.7606.2896 2.3692-.1476 4.6938-.46 6.9624-.9259.7645-.157 1.0301-1.0963.4782-1.6481L2.57595 39.4485c-.55186-.5519-1.49117-.2863-1.648174.4782-.465915 2.2686-.77832 4.5932-.92588465 6.9624ZM4.21093 29.7054c-.16649.3738-.08169.8106.20765 1.1l64.77602 64.776c.2894.2894.7262.3742 1.1.2077 1.7861-.7956 3.5171-1.6927 5.1855-2.684.5521-.328.6373-1.0867.1832-1.5407L8.43566 24.3367c-.45409-.4541-1.21271-.3689-1.54074.1832-.99132 1.6684-1.88843 3.3994-2.68399 5.1855ZM12.6587 18.074c-.3701-.3701-.393-.9637-.0443-1.3541C21.7795 6.45931 35.1114 0 49.9519 0 77.5927 0 100 22.4073 100 50.0481c0 14.8405-6.4593 28.1724-16.7199 37.3375-.3903.3487-.984.3258-1.3542-.0443L12.6587 18.074Z\" /></svg>`),\n        },\n    },\n    slack: getIcon(`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"73 73 124 124\"><style>.st0{fill:#e01e5a}.st1{fill:#36c5f0}.st2{fill:#2eb67d}.st3{fill:#ecb22e}</style><path d=\"M99.4 151.2c0 7.1-5.8 12.9-12.9 12.9-7.1 0-12.9-5.8-12.9-12.9 0-7.1 5.8-12.9 12.9-12.9h12.9v12.9zM105.9 151.2c0-7.1 5.8-12.9 12.9-12.9s12.9 5.8 12.9 12.9v32.3c0 7.1-5.8 12.9-12.9 12.9s-12.9-5.8-12.9-12.9v-32.3z\" class=\"st0\"/><path d=\"M118.8 99.4c-7.1 0-12.9-5.8-12.9-12.9 0-7.1 5.8-12.9 12.9-12.9s12.9 5.8 12.9 12.9v12.9h-12.9zM118.8 105.9c7.1 0 12.9 5.8 12.9 12.9s-5.8 12.9-12.9 12.9H86.5c-7.1 0-12.9-5.8-12.9-12.9s5.8-12.9 12.9-12.9h32.3z\" class=\"st1\"/><path d=\"M170.6 118.8c0-7.1 5.8-12.9 12.9-12.9 7.1 0 12.9 5.8 12.9 12.9s-5.8 12.9-12.9 12.9h-12.9v-12.9zM164.1 118.8c0 7.1-5.8 12.9-12.9 12.9-7.1 0-12.9-5.8-12.9-12.9V86.5c0-7.1 5.8-12.9 12.9-12.9 7.1 0 12.9 5.8 12.9 12.9v32.3z\" class=\"st2\"/><path d=\"M151.2 170.6c7.1 0 12.9 5.8 12.9 12.9 0 7.1-5.8 12.9-12.9 12.9-7.1 0-12.9-5.8-12.9-12.9v-12.9h12.9zM151.2 164.1c-7.1 0-12.9-5.8-12.9-12.9 0-7.1 5.8-12.9 12.9-12.9h32.3c7.1 0 12.9 5.8 12.9 12.9 0 7.1-5.8 12.9-12.9 12.9h-32.3z\" class=\"st3\"/></svg>`),\n    zoom: getIcon(`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 351.845 80\"><path d=\"M73.786 78.835H10.88A10.842 10.842 0 0 1 .833 72.122a10.841 10.841 0 0 1 2.357-11.85L46.764 16.7h-31.23C6.954 16.699 0 9.744 0 1.165h58.014c4.414 0 8.357 2.634 10.046 6.712a10.843 10.843 0 0 1-2.356 11.85L22.13 63.302h36.122c8.58 0 15.534 6.955 15.534 15.534Zm278.059-48.544C351.845 13.588 338.256 0 321.553 0c-8.934 0-16.975 3.89-22.524 10.063C293.48 3.89 285.44 0 276.505 0c-16.703 0-30.291 13.588-30.291 30.291v48.544c8.579 0 15.534-6.955 15.534-15.534v-33.01c0-8.137 6.62-14.757 14.757-14.757s14.757 6.62 14.757 14.757v33.01c0 8.58 6.955 15.534 15.534 15.534V30.291c0-8.137 6.62-14.757 14.757-14.757s14.758 6.62 14.758 14.757v33.01c0 8.58 6.954 15.534 15.534 15.534V30.291ZM238.447 40c0 22.091-17.909 40-40 40s-40-17.909-40-40 17.908-40 40-40 40 17.909 40 40Zm-15.534 0c0-13.512-10.954-24.466-24.466-24.466S173.98 26.488 173.98 40s10.953 24.466 24.466 24.466S222.913 53.512 222.913 40Zm-70.68 0c0 22.091-17.909 40-40 40s-40-17.909-40-40 17.909-40 40-40 40 17.909 40 40Zm-15.534 0c0-13.512-10.954-24.466-24.466-24.466S87.767 26.488 87.767 40s10.954 24.466 24.466 24.466S136.699 53.512 136.699 40Z\" style=\"fill:#0b5cff\"/></svg>`),\n};\nconst asanaService = (options) => new OAuthService_1.OAuthService({\n    client: new api_1.OAuth.PKCEClient({\n        redirectMethod: api_1.OAuth.RedirectMethod.Web,\n        providerName: \"Asana\",\n        providerIcon: PROVIDERS_ICONS.asana,\n        providerId: \"asana\",\n        description: \"Connect your Asana account\",\n    }),\n    clientId: options.clientId ?? PROVIDER_CLIENT_IDS.asana,\n    authorizeUrl: options.authorizeUrl ?? \"https://asana.oauth.raycast.com/authorize\",\n    tokenUrl: options.tokenUrl ?? \"https://asana.oauth.raycast.com/token\",\n    refreshTokenUrl: options.refreshTokenUrl ?? \"https://asana.oauth.raycast.com/refresh-token\",\n    scope: options.scope,\n    personalAccessToken: options.personalAccessToken,\n    onAuthorize: options.onAuthorize,\n    bodyEncoding: options.bodyEncoding,\n    tokenRefreshResponseParser: options.tokenRefreshResponseParser,\n    tokenResponseParser: options.tokenResponseParser,\n});\nexports.asanaService = asanaService;\nconst githubService = (options) => new OAuthService_1.OAuthService({\n    client: new api_1.OAuth.PKCEClient({\n        redirectMethod: api_1.OAuth.RedirectMethod.Web,\n        providerName: \"GitHub\",\n        providerIcon: PROVIDERS_ICONS.github,\n        providerId: \"github\",\n        description: \"Connect your GitHub account\",\n    }),\n    clientId: options.clientId ?? PROVIDER_CLIENT_IDS.github,\n    authorizeUrl: options.authorizeUrl ?? \"https://github.oauth.raycast.com/authorize\",\n    tokenUrl: options.tokenUrl ?? \"https://github.oauth.raycast.com/token\",\n    refreshTokenUrl: options.refreshTokenUrl ?? \"https://github.oauth.raycast.com/refresh-token\",\n    scope: options.scope,\n    personalAccessToken: options.personalAccessToken,\n    onAuthorize: options.onAuthorize,\n    bodyEncoding: options.bodyEncoding,\n    tokenRefreshResponseParser: options.tokenRefreshResponseParser,\n    tokenResponseParser: options.tokenResponseParser,\n});\nexports.githubService = githubService;\nconst googleService = (options) => new OAuthService_1.OAuthService({\n    client: new api_1.OAuth.PKCEClient({\n        redirectMethod: api_1.OAuth.RedirectMethod.AppURI,\n        providerName: \"Google\",\n        providerIcon: PROVIDERS_ICONS.google,\n        providerId: \"google\",\n        description: \"Connect your Google account\",\n    }),\n    clientId: options.clientId,\n    authorizeUrl: options.authorizeUrl ?? \"https://accounts.google.com/o/oauth2/v2/auth\",\n    tokenUrl: options.tokenUrl ?? \"https://oauth2.googleapis.com/token\",\n    refreshTokenUrl: options.tokenUrl,\n    scope: options.scope,\n    personalAccessToken: options.personalAccessToken,\n    bodyEncoding: options.bodyEncoding ?? \"url-encoded\",\n    onAuthorize: options.onAuthorize,\n    tokenRefreshResponseParser: options.tokenRefreshResponseParser,\n    tokenResponseParser: options.tokenResponseParser,\n});\nexports.googleService = googleService;\nconst jiraService = (options) => new OAuthService_1.OAuthService({\n    client: new api_1.OAuth.PKCEClient({\n        redirectMethod: api_1.OAuth.RedirectMethod.Web,\n        providerName: \"Jira\",\n        providerIcon: PROVIDERS_ICONS.jira,\n        providerId: \"jira\",\n        description: \"Connect your Jira account\",\n    }),\n    clientId: options.clientId,\n    authorizeUrl: options.authorizeUrl ?? \"https://auth.atlassian.com/authorize\",\n    tokenUrl: options.tokenUrl ?? \"https://auth.atlassian.com/oauth/token\",\n    refreshTokenUrl: options.refreshTokenUrl,\n    scope: options.scope,\n    personalAccessToken: options.personalAccessToken,\n    onAuthorize: options.onAuthorize,\n    bodyEncoding: options.bodyEncoding,\n    tokenRefreshResponseParser: options.tokenRefreshResponseParser,\n    tokenResponseParser: options.tokenResponseParser,\n});\nexports.jiraService = jiraService;\nconst linearService = (options) => new OAuthService_1.OAuthService({\n    client: new api_1.OAuth.PKCEClient({\n        redirectMethod: api_1.OAuth.RedirectMethod.Web,\n        providerName: \"Linear\",\n        providerIcon: PROVIDERS_ICONS.linear,\n        providerId: \"linear\",\n        description: \"Connect your Linear account\",\n    }),\n    clientId: options.clientId ?? PROVIDER_CLIENT_IDS.linear,\n    authorizeUrl: options.authorizeUrl ?? \"https://linear.oauth.raycast.com/authorize\",\n    tokenUrl: options.tokenUrl ?? \"https://linear.oauth.raycast.com/token\",\n    refreshTokenUrl: options.refreshTokenUrl ?? \"https://linear.oauth.raycast.com/refresh-token\",\n    scope: options.scope,\n    extraParameters: {\n        actor: \"user\",\n    },\n    onAuthorize: options.onAuthorize,\n    bodyEncoding: options.bodyEncoding,\n    tokenRefreshResponseParser: options.tokenRefreshResponseParser,\n    tokenResponseParser: options.tokenResponseParser,\n});\nexports.linearService = linearService;\nconst slackService = (options) => new OAuthService_1.OAuthService({\n    client: new api_1.OAuth.PKCEClient({\n        redirectMethod: api_1.OAuth.RedirectMethod.Web,\n        providerName: \"Slack\",\n        providerIcon: PROVIDERS_ICONS.slack,\n        providerId: \"slack\",\n        description: \"Connect your Slack account\",\n    }),\n    clientId: options.clientId ?? PROVIDER_CLIENT_IDS.slack,\n    authorizeUrl: options.authorizeUrl ?? \"https://slack.oauth.raycast.com/authorize\",\n    tokenUrl: options.tokenUrl ?? \"https://slack.oauth.raycast.com/token\",\n    refreshTokenUrl: options.tokenUrl ?? \"https://slack.oauth.raycast.com/refresh-token\",\n    scope: \"\",\n    extraParameters: {\n        user_scope: options.scope,\n    },\n    personalAccessToken: options.personalAccessToken,\n    bodyEncoding: options.tokenUrl ? options.bodyEncoding ?? \"url-encoded\" : \"json\",\n    onAuthorize: options.onAuthorize,\n    tokenRefreshResponseParser: options.tokenRefreshResponseParser,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    tokenResponseParser: options.tokenResponseParser ??\n        ((response) => {\n            return {\n                access_token: response.authed_user.access_token,\n                scope: response.authed_user.scope,\n            };\n        }),\n});\nexports.slackService = slackService;\nconst zoomService = (options) => new OAuthService_1.OAuthService({\n    client: new api_1.OAuth.PKCEClient({\n        redirectMethod: api_1.OAuth.RedirectMethod.Web,\n        providerName: \"Zoom\",\n        providerIcon: PROVIDERS_ICONS.zoom,\n        providerId: \"zoom\",\n        description: \"Connect your Zoom account\",\n    }),\n    clientId: options.clientId,\n    authorizeUrl: options.authorizeUrl ?? \"https://zoom.us/oauth/authorize\",\n    tokenUrl: options.tokenUrl ?? \"https://zoom.us/oauth/token\",\n    refreshTokenUrl: options.refreshTokenUrl,\n    scope: options.scope,\n    personalAccessToken: options.personalAccessToken,\n    bodyEncoding: options.bodyEncoding ?? \"url-encoded\",\n    onAuthorize: options.onAuthorize,\n    tokenRefreshResponseParser: options.tokenRefreshResponseParser,\n    tokenResponseParser: options.tokenResponseParser,\n});\nexports.zoomService = zoomService;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuthService = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst providers_1 = require(\"./providers\");\n/**\n * Class allowing to create an OAuth service using the the PKCE (Proof Key for Code Exchange) flow.\n *\n * This service is capable of starting the authorization process, fetching and refreshing tokens,\n * as well as managing the authentication state.\n *\n * @example\n * ```typescript\n * const oauthClient = new OAuth.PKCEClient({ ... });\n * const oauthService = new OAuthService({\n *   client: oauthClient,\n *   clientId: 'your-client-id',\n *   scope: 'required scopes',\n *   authorizeUrl: 'https://provider.com/oauth/authorize',\n *   tokenUrl: 'https://provider.com/oauth/token',\n *   refreshTokenUrl: 'https://provider.com/oauth/token',\n *   extraParameters: { 'additional_param': 'value' }\n * });\n * ```\n */\nclass OAuthService {\n    constructor(options) {\n        this.clientId = options.clientId;\n        this.scope = Array.isArray(options.scope) ? options.scope.join(\" \") : options.scope;\n        this.personalAccessToken = options.personalAccessToken;\n        this.bodyEncoding = options.bodyEncoding;\n        this.client = options.client;\n        this.extraParameters = options.extraParameters;\n        this.authorizeUrl = options.authorizeUrl;\n        this.tokenUrl = options.tokenUrl;\n        this.refreshTokenUrl = options.refreshTokenUrl;\n        this.onAuthorize = options.onAuthorize;\n        this.tokenResponseParser = options.tokenResponseParser ?? ((x) => x);\n        this.tokenRefreshResponseParser = options.tokenRefreshResponseParser ?? ((x) => x);\n        this.authorize = this.authorize.bind(this);\n    }\n    /**\n     * Initiates the OAuth authorization process or refreshes existing tokens if necessary.\n     * If the current token set has a refresh token and it is expired, then the function will refresh the tokens.\n     * If no tokens exist, it will initiate the OAuth authorization process and fetch the tokens.\n     *\n     * @returns {Promise<string>} A promise that resolves with the access token obtained from the authorization flow, or null if the token could not be obtained.\n     */\n    async authorize() {\n        const currentTokenSet = await this.client.getTokens();\n        if (currentTokenSet?.accessToken) {\n            if (currentTokenSet.refreshToken && currentTokenSet.isExpired()) {\n                const tokens = await this.refreshTokens({\n                    token: currentTokenSet.refreshToken,\n                });\n                // In the case where the refresh token flows fails, nothing is returned and the authorize function is called again.\n                if (tokens) {\n                    await this.client.setTokens(tokens);\n                    return tokens.access_token;\n                }\n            }\n            return currentTokenSet.accessToken;\n        }\n        const authRequest = await this.client.authorizationRequest({\n            endpoint: this.authorizeUrl,\n            clientId: this.clientId,\n            scope: this.scope,\n            extraParameters: this.extraParameters,\n        });\n        const { authorizationCode } = await this.client.authorize(authRequest);\n        const tokens = await this.fetchTokens({\n            authRequest,\n            authorizationCode,\n        });\n        await this.client.setTokens(tokens);\n        return tokens.access_token;\n    }\n    async fetchTokens({ authRequest, authorizationCode, }) {\n        let options;\n        if (this.bodyEncoding === \"url-encoded\") {\n            const params = new URLSearchParams();\n            params.append(\"client_id\", this.clientId);\n            params.append(\"code\", authorizationCode);\n            params.append(\"code_verifier\", authRequest.codeVerifier);\n            params.append(\"grant_type\", \"authorization_code\");\n            params.append(\"redirect_uri\", authRequest.redirectURI);\n            options = { body: params };\n        }\n        else {\n            options = {\n                body: JSON.stringify({\n                    client_id: this.clientId,\n                    code: authorizationCode,\n                    code_verifier: authRequest.codeVerifier,\n                    grant_type: \"authorization_code\",\n                    redirect_uri: authRequest.redirectURI,\n                }),\n                headers: { \"Content-Type\": \"application/json\" },\n            };\n        }\n        const response = await (0, cross_fetch_1.default)(this.tokenUrl, { method: \"POST\", ...options });\n        if (!response.ok) {\n            const responseText = await response.text();\n            console.error(\"fetch tokens error:\", responseText);\n            throw new Error(`Error while fetching tokens: ${response.status} (${response.statusText})\\n${responseText}`);\n        }\n        const tokens = this.tokenResponseParser(await response.json());\n        // Some clients such as Linear can return a scope array instead of a string\n        return Array.isArray(tokens.scope) ? { ...tokens, scope: tokens.scope.join(\" \") } : tokens;\n    }\n    async refreshTokens({ token }) {\n        let options;\n        if (this.bodyEncoding === \"url-encoded\") {\n            const params = new URLSearchParams();\n            params.append(\"client_id\", this.clientId);\n            params.append(\"refresh_token\", token);\n            params.append(\"grant_type\", \"refresh_token\");\n            options = { body: params };\n        }\n        else {\n            options = {\n                body: JSON.stringify({\n                    client_id: this.clientId,\n                    refresh_token: token,\n                    grant_type: \"refresh_token\",\n                }),\n                headers: { \"Content-Type\": \"application/json\" },\n            };\n        }\n        const response = await (0, cross_fetch_1.default)(this.refreshTokenUrl ?? this.tokenUrl, { method: \"POST\", ...options });\n        if (!response.ok) {\n            const responseText = await response.text();\n            console.error(\"refresh tokens error:\", responseText);\n            // If the refresh token is invalid, stop the flow here, log out the user and prompt them to re-authorize.\n            this.client.description = `${this.client.providerName} needs you to sign-in again. Press \u23CE or click the button below to continue.`;\n            await this.client.removeTokens();\n            await this.authorize();\n        }\n        else {\n            const tokenResponse = this.tokenRefreshResponseParser(await response.json());\n            tokenResponse.refresh_token = tokenResponse.refresh_token ?? token;\n            return tokenResponse;\n        }\n    }\n}\nexports.OAuthService = OAuthService;\n/**\n * Asana OAuth service provided out of the box.\n *\n * @example\n * ```typescript\n * const asana = OAuthService.asana({ scope: 'default' })\n * ```\n */\nOAuthService.asana = providers_1.asanaService;\n/**\n * GitHub OAuth service provided out of the box.\n *\n * @example\n * ```typescript\n * const github = OAuthService.github({ scope: 'repo user' })\n * ```\n */\nOAuthService.github = providers_1.githubService;\n/**\n * Google OAuth service provided out of the box.\n *\n * @example\n * ```typescript\n * const google = OAuthService.google({\n *   clientId: 'custom-client-id',\n *   authorizeUrl: 'https://accounts.google.com/o/oauth2/v2/auth',\n *   tokenUrl: 'https://oauth2.googleapis.com/token',\n *   scope: 'https://www.googleapis.com/auth/drive.readonly',\n * });\n * ```\n */\nOAuthService.google = providers_1.googleService;\n/**\n * Jira OAuth service provided out of the box.\n *\n * @example\n * ```typescript\n * const jira = OAuthService.jira({\n *   clientId: 'custom-client-id',\n *   authorizeUrl: 'https://auth.atlassian.com/authorize',\n *   tokenUrl: 'https://api.atlassian.com/oauth/token',\n *   scope: 'read:jira-user read:jira-work offline_access'\n * });\n * ```\n */\nOAuthService.jira = providers_1.jiraService;\n/**\n * Linear OAuth service provided out of the box.\n *\n * @example\n * ```typescript\n * const linear = OAuthService.linear({ scope: 'read write' })\n * ```\n */\nOAuthService.linear = providers_1.linearService;\n/**\n * Slack OAuth service provided out of the box.\n *\n * @example\n * ```typescript\n * const slack = OAuthService.slack({ scope: 'emoji:read' })\n * ```\n */\nOAuthService.slack = providers_1.slackService;\n/**\n * Zoom OAuth service provided out of the box.\n *\n * @example\n * ```typescript\n * const zoom = OAuthService.zoom({\n *   clientId: 'custom-client-id',\n *   authorizeUrl: 'https://zoom.us/oauth/authorize',\n *   tokenUrl: 'https://zoom.us/oauth/token',\n *   scope: 'meeting:write',\n *   personalAccessToken: 'personal-access-token',\n * });\n * ```\n */\nOAuthService.zoom = providers_1.zoomService;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccessToken = exports.withAccessToken = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst api_1 = require(\"@raycast/api\");\nlet token = null;\nlet type = null;\nlet authorize = null;\nlet getIdToken = null;\nlet onAuthorize = null;\nfunction withAccessToken(options) {\n    if (api_1.environment.commandMode === \"no-view\") {\n        return (fn) => {\n            const noViewFn = async (props) => {\n                if (!token) {\n                    token = options.personalAccessToken ?? (await options.authorize());\n                    type = options.personalAccessToken ? \"personal\" : \"oauth\";\n                    const idToken = (await options.client?.getTokens())?.idToken;\n                    if (options.onAuthorize) {\n                        await Promise.resolve(options.onAuthorize({ token, type, idToken }));\n                    }\n                }\n                return fn(props);\n            };\n            return noViewFn;\n        };\n    }\n    return (Component) => {\n        const WrappedComponent = (props) => {\n            if (options.personalAccessToken) {\n                token = options.personalAccessToken;\n                type = \"personal\";\n            }\n            else {\n                if (!authorize) {\n                    authorize = wrapPromise(options.authorize());\n                }\n                token = authorize.read();\n                type = \"oauth\";\n            }\n            let idToken;\n            if (options.client) {\n                if (!getIdToken) {\n                    getIdToken = wrapPromise(options.client.getTokens());\n                }\n                idToken = getIdToken.read()?.idToken;\n            }\n            if (!onAuthorize && options.onAuthorize) {\n                onAuthorize = wrapPromise(Promise.resolve(options.onAuthorize({ token, type, idToken })));\n            }\n            onAuthorize?.read();\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore too complicated for TS\n            return (0, jsx_runtime_1.jsx)(Component, { ...props });\n        };\n        WrappedComponent.displayName = `withAccessToken(${Component.displayName || Component.name})`;\n        return WrappedComponent;\n    };\n}\nexports.withAccessToken = withAccessToken;\n/**\n * Returns the access token and its type. Note that this function must be called in a component wrapped with `withAccessToken`.\n *\n * @throws {Error} If called outside of a component wrapped with `withAccessToken`\n * @returns {{ token: string, type: \"oauth\" | \"personal\" }} An object containing the `token`\n * and its `type`, where type can be either 'oauth' for OAuth tokens or 'personal' for a\n * personal access token.\n */\nfunction getAccessToken() {\n    if (!token || !type) {\n        throw new Error(\"getAccessToken must be used when authenticated (eg. used inside `withAccessToken`)\");\n    }\n    return { token, type };\n}\nexports.getAccessToken = getAccessToken;\nfunction wrapPromise(promise) {\n    let status = \"pending\";\n    let response;\n    const suspender = promise.then((res) => {\n        status = \"success\";\n        response = res;\n    }, (err) => {\n        status = \"error\";\n        response = err;\n    });\n    const read = () => {\n        switch (status) {\n            case \"pending\":\n                throw suspender;\n            case \"error\":\n                throw response;\n            default:\n                return response;\n        }\n    };\n    return { read };\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./OAuthService\"), exports);\n__exportStar(require(\"./withAccessToken\"), exports);\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeeplink = exports.createExtensionDeeplink = exports.createScriptCommandDeeplink = exports.DeeplinkType = void 0;\nconst api_1 = require(\"@raycast/api\");\nconst node_fs_1 = __importDefault(require(\"node:fs\"));\nconst node_path_1 = __importDefault(require(\"node:path\"));\nvar DeeplinkType;\n(function (DeeplinkType) {\n    /** A script command */\n    DeeplinkType[\"ScriptCommand\"] = \"script-command\";\n    /** An extension command */\n    DeeplinkType[\"Extension\"] = \"extension\";\n})(DeeplinkType || (exports.DeeplinkType = DeeplinkType = {}));\nfunction getProtocol() {\n    return api_1.environment.raycastVersion.includes(\"alpha\") ? \"raycastinternal://\" : \"raycast://\";\n}\nfunction getOwnerOrAuthorName() {\n    const packageJSON = JSON.parse(node_fs_1.default.readFileSync(node_path_1.default.join(api_1.environment.assetsPath, \"..\", \"package.json\"), \"utf8\"));\n    return packageJSON.owner || packageJSON.author;\n}\nfunction createScriptCommandDeeplink(options) {\n    let url = `${getProtocol()}script-commands/${options.command}`;\n    if (options.arguments) {\n        let params = \"\";\n        for (const arg of options.arguments) {\n            params += \"&arguments=\" + encodeURIComponent(arg);\n        }\n        url += \"?\" + params.substring(1);\n    }\n    return url;\n}\nexports.createScriptCommandDeeplink = createScriptCommandDeeplink;\nfunction createExtensionDeeplink(options) {\n    let ownerOrAuthorName = getOwnerOrAuthorName();\n    let extensionName = api_1.environment.extensionName;\n    if (\"ownerOrAuthorName\" in options && \"extensionName\" in options) {\n        ownerOrAuthorName = options.ownerOrAuthorName;\n        extensionName = options.extensionName;\n    }\n    let url = `${getProtocol()}extensions/${ownerOrAuthorName}/${extensionName}/${options.command}`;\n    let params = \"\";\n    if (options.launchType) {\n        params += \"&launchType=\" + encodeURIComponent(options.launchType);\n    }\n    if (options.arguments) {\n        params += \"&arguments=\" + encodeURIComponent(JSON.stringify(options.arguments));\n    }\n    if (options.context) {\n        params += \"&context=\" + encodeURIComponent(JSON.stringify(options.context));\n    }\n    if (options.fallbackText) {\n        params += \"&fallbackText=\" + encodeURIComponent(options.fallbackText);\n    }\n    if (params) {\n        url += \"?\" + params.substring(1);\n    }\n    return url;\n}\nexports.createExtensionDeeplink = createExtensionDeeplink;\n/**\n * Creates a deeplink to a script command or extension.\n */\nfunction createDeeplink(options) {\n    if (options.type === DeeplinkType.ScriptCommand) {\n        return createScriptCommandDeeplink(options);\n    }\n    else {\n        return createExtensionDeeplink(options);\n    }\n}\nexports.createDeeplink = createDeeplink;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.executeSQL = void 0;\nconst sql_utils_1 = require(\"./sql-utils\");\n/**\n * Executes a SQL query on a local SQLite database and returns the query result in JSON format.\n *\n * @param databasePath - The path to the SQLite database file.\n * @param query - The SQL query to execute.\n * @returns A Promise that resolves to an array of objects representing the query results.\n *\n * @example\n * ```typescript\n * import { closeMainWindow, Clipboard } from \"@raycast/api\";\n * import { executeSQL } from \"@raycast/utils\";\n *\n * type Message = { body: string; code: string };\n *\n * const DB_PATH = \"/path/to/chat.db\";\n *\n * export default async function Command() {\n *   const query = `SELECT body, code FROM ...`\n *\n *   const messages = await executeSQL<Message>(DB_PATH, query);\n *\n *   if (messages.length > 0) {\n *     const latestCode = messages[0].code;\n *     await Clipboard.paste(latestCode);\n *     await closeMainWindow();\n *   }\n * }\n * ```\n */\nfunction executeSQL(databasePath, query) {\n    return (0, sql_utils_1.baseExecuteSQL)(databasePath, query);\n}\nexports.executeSQL = executeSQL;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runAppleScript = void 0;\nconst node_child_process_1 = __importDefault(require(\"node:child_process\"));\nconst exec_utils_1 = require(\"./exec-utils\");\nasync function runAppleScript(script, optionsOrArgs, options) {\n    const { humanReadableOutput, language, timeout, ...execOptions } = Array.isArray(optionsOrArgs)\n        ? options || {}\n        : optionsOrArgs || {};\n    const outputArguments = humanReadableOutput !== false ? [] : [\"-ss\"];\n    if (language === \"JavaScript\") {\n        outputArguments.push(\"-l\", \"JavaScript\");\n    }\n    if (Array.isArray(optionsOrArgs)) {\n        outputArguments.push(\"-\", ...optionsOrArgs);\n    }\n    const spawned = node_child_process_1.default.spawn(\"osascript\", outputArguments, {\n        ...execOptions,\n        env: { PATH: \"/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\" },\n    });\n    const spawnedPromise = (0, exec_utils_1.getSpawnedPromise)(spawned, { timeout: timeout ?? 10000 });\n    spawned.stdin.end(script);\n    const [{ error, exitCode, signal, timedOut }, stdoutResult, stderrResult] = await (0, exec_utils_1.getSpawnedResult)(spawned, { encoding: \"utf8\" }, spawnedPromise);\n    const stdout = (0, exec_utils_1.handleOutput)({ stripFinalNewline: true }, stdoutResult);\n    const stderr = (0, exec_utils_1.handleOutput)({ stripFinalNewline: true }, stderrResult);\n    return (0, exec_utils_1.defaultParsing)({\n        stdout,\n        stderr,\n        error,\n        exitCode,\n        signal,\n        timedOut,\n        command: \"osascript\",\n        options,\n        parentError: new Error(),\n    });\n}\nexports.runAppleScript = runAppleScript;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./usePromise\"), exports);\n__exportStar(require(\"./useCachedState\"), exports);\n__exportStar(require(\"./useCachedPromise\"), exports);\n__exportStar(require(\"./useFetch\"), exports);\n__exportStar(require(\"./useExec\"), exports);\n__exportStar(require(\"./useStreamJSON\"), exports);\n__exportStar(require(\"./useSQL\"), exports);\n__exportStar(require(\"./useForm\"), exports);\n__exportStar(require(\"./useAI\"), exports);\n__exportStar(require(\"./useFrecencySorting\"), exports);\n__exportStar(require(\"./useLocalStorage\"), exports);\n__exportStar(require(\"./icon\"), exports);\n__exportStar(require(\"./oauth\"), exports);\n__exportStar(require(\"./createDeeplink\"), exports);\n__exportStar(require(\"./executeSQL\"), exports);\n__exportStar(require(\"./run-applescript\"), exports);\n__exportStar(require(\"./showFailureToast\"), exports);\n", "import { LaunchType, MenuBarExtra, launchCommand, open, showHUD } from \"@raycast/api\";\nimport {\n  MenuBarIconUrl,\n  MenuBarNotificationCacheKey,\n  NewNotification,\n  NewNotifications,\n  NoNewNotifications,\n  NotificationInMenuBarHUD,\n  NotificationTextCacheKey,\n  SessionStartFailed,\n  UpdatingMessage,\n} from \"./utils/constants\";\nimport { getAccountIcon, getAccountName } from \"./utils/common\";\nimport { getNotifications, getUnreadNotificationCount, resolveATUri } from \"./libs/atp\";\nimport { useEffect, useState } from \"react\";\n\nimport CustomAction from \"./components/actions/CustomAction\";\nimport { ExtensionConfig } from \"./config/config\";\nimport { Notification } from \"./types/types\";\nimport { parseNotifications } from \"./utils/parser\";\nimport { useCachedState } from \"@raycast/utils\";\nimport useStartATSession from \"./hooks/useStartATSession\";\n\nexport default function UnreadNotifications() {\n  const [notificationText, setNotificationText] = useCachedState<string>(NotificationTextCacheKey, \"\");\n  const [unreadNotifications, setUnreadNotifications] = useCachedState<Notification[]>(MenuBarNotificationCacheKey, []);\n\n  const [actionProps, setActionProps] = useState<{ onAction: () => Promise<void> } | null>();\n  const [sessionStarted, sessionStartFailed] = useStartATSession(() => {\n    return;\n  });\n\n  if (notificationText === \"\") {\n    showHUD(NotificationInMenuBarHUD);\n  }\n\n  useEffect(() => {\n    if (sessionStartFailed) {\n      setNotificationText(SessionStartFailed);\n    }\n  }, [sessionStartFailed]);\n\n  const fetchNotifications = async () => {\n    const data = await getNotifications(null, ExtensionConfig.menubarNotificationLimit);\n    if (!data) {\n      return [];\n    }\n\n    let notifications = parseNotifications(data.notifications);\n    notifications = notifications.filter((notifications) => !notifications.isRead);\n\n    return notifications;\n  };\n\n  useEffect(() => {\n    setActionProps(null);\n\n    setNotificationText(UpdatingMessage);\n    (async () => {\n      if (sessionStarted) {\n        setUnreadNotifications([]);\n\n        const notificationCount = await getUnreadNotificationCount();\n        const notifications = await fetchNotifications();\n\n        if (notificationCount >= 1) {\n          setActionProps({\n            onAction: async () => {\n              await launchCommand({ name: \"notifications\", type: LaunchType.UserInitiated });\n            },\n          });\n        }\n\n        setNotificationText(() => {\n          if (notificationCount > 1) {\n            return `${notificationCount} ${NewNotifications}`;\n          } else if (notificationCount == 1) {\n            return `${notificationCount} ${NewNotification}`;\n          } else {\n            return NoNewNotifications;\n          }\n        });\n\n        setUnreadNotifications(notifications);\n      }\n    })();\n  }, [sessionStarted]);\n\n  const onNotificationSelected = async (notification: Notification) => {\n    const notificationUrl = await resolveATUri(notification);\n\n    if (notificationUrl) {\n      open(notificationUrl);\n    }\n  };\n\n  return (\n    <MenuBarExtra icon={MenuBarIconUrl}>\n      {notificationText && notificationText.length > 0 && (\n        <MenuBarExtra.Section>\n          <MenuBarExtra.Item title={notificationText} {...actionProps} />\n          {unreadNotifications.length > 0 &&\n            unreadNotifications.map((notification) => {\n              return (\n                <MenuBarExtra.Item\n                  icon={getAccountIcon(notification.author)}\n                  key={notification.id}\n                  title={`${getAccountName(notification.author)} ${notification.text}`}\n                  onAction={() => onNotificationSelected(notification)}\n                />\n              );\n            })}\n        </MenuBarExtra.Section>\n      )}\n      <MenuBarExtra.Section>\n        <CustomAction\n          menuBarItem={true}\n          actionKey=\"homeView\"\n          onClick={async () => {\n            await launchCommand({ name: \"home\", type: LaunchType.UserInitiated });\n          }}\n        />\n      </MenuBarExtra.Section>\n      <MenuBarExtra.Section>\n        <CustomAction\n          menuBarItem={true}\n          actionKey=\"timelineView\"\n          onClick={async () => {\n            await launchCommand({ name: \"timeline\", type: LaunchType.UserInitiated });\n          }}\n        />\n        <CustomAction\n          menuBarItem={true}\n          actionKey=\"searchView\"\n          onClick={async () => {\n            await launchCommand({ name: \"search\", type: LaunchType.UserInitiated });\n          }}\n        />\n        <CustomAction\n          menuBarItem={true}\n          actionKey=\"newPostView\"\n          onClick={async () => {\n            await launchCommand({ name: \"new-post\", type: LaunchType.UserInitiated });\n          }}\n        />\n        <CustomAction\n          menuBarItem={true}\n          actionKey=\"recentPostsView\"\n          onClick={async () => {\n            await launchCommand({ name: \"recent-posts\", type: LaunchType.UserInitiated });\n          }}\n        />\n      </MenuBarExtra.Section>\n      <MenuBarExtra.Section>\n        <CustomAction\n          menuBarItem={true}\n          actionKey=\"aboutView\"\n          onClick={async () => {\n            await launchCommand({ name: \"home\", type: LaunchType.UserInitiated, context: { navigateTo: \"About\" } });\n          }}\n        />\n      </MenuBarExtra.Section>\n    </MenuBarExtra>\n  );\n}\n", "export const ATPSessionStorageKey = \"ATPSession\";\nexport const ATPCredentialsHashKey = \"ATPCredentialsHashKey\";\nexport const ShowAccountsViewAsGridCacheKey = \"show-accounts-view-as-grid\";\nexport const ShowPostDetailsCacheKey = \"show-post-details\";\nexport const DefaultPostCacheKey = \"draft-post\";\nexport const TimelineCacheKey = \"timeline\";\nexport const NotificationCacheKey = \"notification\";\nexport const NotificationTextCacheKey = \"notification-text\";\nexport const MenuBarNotificationCacheKey = \"menu-bar-notification\";\n\nexport const BlueskyUrl = \"https://staging.bsky.app\";\nexport const BlueskyProfileUrlBase = `${BlueskyUrl}/profile`;\nexport const BlueskySearchUrlBase = `https://search.bsky.social/search/posts?q=`;\nexport const MenuBarIconUrl = `extension-icon.png`;\n\nexport const BlueskyFeedType = \"app.bsky.feed.post\";\nexport const BlueskyQuoteType = \"app.bsky.embed.record\";\nexport const BlueskyImageEmbedType = \"app.bsky.embed.images#view\";\nexport const BlueskyPostEmbedType = \"app.bsky.embed.record#view\";\nexport const BlueskyRepostType = \"app.bsky.feed.defs#reasonRepost\";\n\nexport const ErrorInvalidHandle = \"Unable to resolve handle: \";\n\nexport const PrivacyNavigationTitle = \"Privacy and Safety\";\nexport const PrivacySectionTitle = \"Control Who Can Reach You\";\nexport const ViewBlockList = \"Blocked Accounts\";\nexport const ViewMuteList = \"Muted Accounts\";\nexport const ViewList = \"View List\";\nexport const UnblockAccount = \"Unblock Account\";\nexport const UnblockAccountSuccess = (handle: string) => `${handle} has been unblocked.`;\nexport const UnblockAccountConfirm = (handle: string) => `Are you sure you want to unblock ${handle}?`;\nexport const BlockAccountConfirm = (handle: string) => `Are you sure you want to block ${handle}?`;\n\nexport const BlockListDetails =\n  \"Blocked accounts cannot reply in your threads, mention you, or otherwise interact with you.\\n\\nYou will not see their content and they will be prevented from seeing yours.\";\nexport const MuteListDetails = \"Muted accounts have their posts removed from your feed and from your notifications.\";\nexport const ContactBlueskyTitle = \"Report to Bluesky\";\nexport const EmailBlueskySupport = \"Email Bluesky Support\";\nexport const EmailBlueskyDetails = \"Send an email to support@bsky.app.\";\nexport const SendEmailAction = \"Send Email\";\n\nexport const MentionBlueskySupport = \"Post to Bluesky Support\";\nexport const MentionBlueskyDetails = \"Post to @support.bsky.team with your issues.\";\n\nexport const ViewTimelineNavigationTitle = \"Timeline\";\nexport const ViewTimelineSearchBarPlaceholder = \"Search timeline...\";\nexport const ShowingSearchResults = \"Search Results\";\nexport const EmptySearchText = \"Enter your search query.\";\n\nexport const ViewRecentPostsNavigationTitle = \"Recent Posts\";\nexport const ViewRecentPostsSearchBarPlaceholder = \"Search posts in\";\n\nexport const UpdatingMessage = \"Updating...\";\nexport const NotificationInMenuBarHUD = \"Showing Notification Count in Menu Bar\";\nexport const ViewNotificationsNavigationTitle = \"Notifications\";\nexport const ViewNotificationsSearchBarPlaceholder = \"Search notifications...\";\nexport const MarkNotificationsAsRead = \"Mark All Notifications as Read\";\nexport const NotificationsReadToast = \"All Notifications have been marked as read.\";\nexport const ViewInBrowser = \"View in Browser\";\nexport const LoadingNotificationContent = \"Loading Notification Content.\";\nexport const ViewingNotification = \"Viewing Notification Content.\";\nexport const ErrorLoadingNotification = \"Error: Could not load notification content.\";\nexport const UnreadNotificationSectionTitle = \"Unread Notifications\";\nexport const ReadNotificationSectionTitle = \"Read Notifications\";\n\nexport const SessionStartFailed = \"Error: Failed to Start Your Session\";\n\nexport const MarkNotificationsAsReadAlert = \"Mark all notification as read?\";\nexport const NewNotification = \"New Notification\";\nexport const NewNotifications = \"New Notifications\";\nexport const NoNewNotifications = \"No new notification\";\nexport const ViewNotification = \"View Notification\";\n\nexport const CreatePostFormPlaceholder = \"Create Post\";\nexport const PublishText = \"Publish\";\nexport const PostSuccessToastMessage = \"Your Post has been Published.\";\nexport const NewPostTextAreaTitle = \"New Post\";\n\nexport const SearchTitle = \"Search\";\nexport const SearchPeopleSearchBarPlaceholder = \"Search People and entities...\";\nexport const FilterAccounts = \"Filter accounts\";\nexport const OpenProfile = \"Open Profile\";\nexport const OpenAccountLikes = \"Open Liked Posts from Account\";\nexport const Follow = \"Follow\";\nexport const FollowToastMessage = \"You are now following\";\nexport const Unfollow = \"Unfollow\";\nexport const UnfollowToastMessage = \"You are no longer following\";\nexport const Mute = \"Mute\";\nexport const MuteToastMessage = \"You have muted\";\nexport const Unmute = \"Unmute\";\nexport const UnmuteToastMessage = \"You have unmuted\";\nexport const Block = \"Block\";\nexport const Unblock = \"Unblock\";\nexport const BlockToastMessage = \"You have blocked\";\nexport const ViewAsList = \"View as List\";\nexport const ViewAsGrid = \"View as Grid\";\n\nexport const SwitchToHomeAction = \"Switch to Home View\";\n\nexport const LikePost = \"Like\";\nexport const UnlikePost = \"Unlike\";\nexport const Repost = \"Repost\";\nexport const ReplyPost = \"Reply to Post\";\nexport const InReplyToTag = \"In Reply To\";\nexport const QuotedByTag = \"Quoted By\";\nexport const QuotePost = \"Quote Post\";\nexport const RepliesTooltip = \"Replies\";\nexport const RepostsTooltip = \"Reposts\";\nexport const LikesTooltip = \"Likes\";\nexport const RepostedByTag = \"Reposted by\";\nexport const OpenPostInBrowser = \"Open Post in Browser\";\nexport const OpenProfileInBrowser = \"Open Profile in Browser\";\nexport const HideDetails = \"Hide Details\";\nexport const ShowDetails = \"Show Details\";\nexport const LoadMore = \"Load More...\";\nexport const LoadingMorePosts = \"Loading More Posts...\";\nexport const LoadMoreKey = \"load-more-items\";\nexport const LikePostToastMessage = \"You have liked this post.\";\nexport const UnlikePostToastMessage = \"You have unliked this post.\";\nexport const RepostToastMessage = \"You have reposted this post.\";\nexport const ErrorToastMessage = \"Action failed. Please try again later.\";\n\nexport const FollowersText = \"Followers\";\nexport const FollowingText = \"Following\";\nexport const MutedText = \"Muted\";\nexport const TotalPosts = \"Total Posts\";\n\nexport const NavigationViewTooltip = \"Navigate to\";\n\nexport const AboutNavigationTitle = \"About\";\nexport const HomeNavigationTitle = \"Home\";\n\nexport const SelectActionMessage = \"Select\";\nexport const ShareYourNext = \"Share your next\";\nexport const PostYourReply = \"Replying to\";\nexport const Quoting = \"Quoting\";\n\nexport const FirstSignInSuccessToast = \"You have successfully signed in to Bluesky \uD83C\uDF89\";\n\nexport const PostEndHorizontalLine = `\n\n---\n`;\n\nexport const RepliesMarkdown = `\n### Replies:\n`;\n\nexport const AboutMarkdown = `\n### Bluesky for Raycast (beta) \uD83E\uDD8B\n_by Dharam Kapila_ \n\n![](bluesky-onboarding.gif)\n\n#### \uD83E\uDE84 Tips \n- Create a keyboard shortcut for the **Home** command from Raycast settings.\n- Press \\`\u2318 + K\\` to take actions on a selected item.\n\n#### \uD83D\uDE80 Features I'd like to build next\n- Search and filtering improvements for posts.\n- Visualizing your timeline and threads in more ways.\n- Further improvements to user experience, speed and reliability.\n\n #### \uD83D\uDC4B Support\n- Reach out to me on Bluesky [@dharam.bsky.social](${BlueskyProfileUrlBase}/dharam.bsky.social) for any suggestions or problems. Or to say hi :)\n- To support my work, please consider buying me a coffee: [https://buymeacoffee.com/dharam](https://buymeacoffee.com/dharam) \uD83D\uDC95\n\n#### \uD83D\uDD12 Privacy\n- No user data is collected. No analytics are collected.\n- Your credentials are stored securely in Raycast's encrypted database.\n- Recent posts and notifications are cached. Uninstalling the extension will clear the cache.\n---\n\nThank you for using this extension. And to the special work being done by [Bluesky](https://blueskyweb.xyz/) and [Raycast](https://www.raycast.com) (*\u00B4\u2200\u4EBA)\n`;\n\nexport const ErrorMessageBody = `\n- Please check if the username and password is correct.\n- Please ensure that you are using an [App Password](https://staging.bsky.app/settings/app-passwords) and not your account password.\n- If the issue persists, reach out to me on Bluesky [@dharam.bsky.social](${BlueskyProfileUrlBase}/dharam.bsky.social).\n`;\n\nexport const OnboardingTitleMd = `\n## Welcome to Bluesky for Raycast (beta)\n\nHere are 3 things to get you started.\n\nPress enter to continue...\n`;\nexport const OnboardingImageMd = `\n\n![](bluesky-onboarding.gif)\n`;\n\nexport const OnboardingTips = [\n  \"Press `\u2318 + K` to like, reply or repost.\",\n  \"Press `\u2318 + P` to switch to another view.\",\n  \"Run the `Menu Bar Notifications` Raycast command to add Bluesky on your Mac menubar.\",\n  \"Start using Bluesky for Raycast \uD83E\uDD8B\",\n];\n", "import { Account, AllowedActionKeys } from \"../types/types\";\nimport { Icon, Toast, showToast } from \"@raycast/api\";\n\nimport { ActionMap } from \"../config/actionMap\";\nimport { BlueskyProfileUrlBase } from \"./constants\";\nimport { ProfileViewDetailed } from \"@atproto/api/dist/client/types/app/bsky/actor/defs\";\nimport crypto from \"crypto\";\nimport { getRKey } from \"../libs/atp\";\n\nexport const showLoadingToast = async (message: string) => {\n  await showToast({\n    style: Toast.Style.Animated,\n    title: message,\n  });\n};\n\nexport const buildTitle = (previousTitle: string, newTitle: string) => {\n  if (!previousTitle) return newTitle;\n\n  return `${previousTitle}/${newTitle}`;\n};\n\nexport const showSuccessToast = async (message: string) => {\n  await showToast({\n    style: Toast.Style.Success,\n    title: message,\n  });\n};\n\nexport const showDangerToast = async (message: string) => {\n  await showToast({\n    style: Toast.Style.Failure,\n    title: message,\n  });\n};\n\nexport const createHashKey = (value: string) => {\n  const hash = crypto.createHash(\"sha256\").update(value).digest(\"base64\");\n\n  return hash;\n};\n\nconst formatModifier = (modifier: string) => {\n  switch (modifier) {\n    case \"cmd\":\n      return \"\u2318\";\n    case \"shift\":\n      return \"Shift\";\n    case \"opt\":\n      return \"\u2325\";\n    default:\n      return modifier;\n  }\n};\n\nexport const getFormattedActionShortcut = (actionKey: AllowedActionKeys) => {\n  const action = ActionMap[actionKey];\n  const shortcut = action.shortcut;\n\n  return `\\`${shortcut.modifiers.map(formatModifier).join(\" + \")} + ${shortcut.key}\\``;\n};\n\nexport const getPostUrl = (handle: string, uri: string) => {\n  return `${BlueskyProfileUrlBase}/${handle}/post/${getRKey(uri)}`;\n};\n\nexport const getAccountName = (account: Account | ProfileViewDetailed) => {\n  return account.displayName || account.handle;\n};\n\nexport const getAccountIcon = (account: Account) => {\n  return account.avatarUrl ? account.avatarUrl : Icon.ChessPiece;\n};\n\nexport const getAuthorDetailsMarkdown = (author: ProfileViewDetailed): string => {\n  const displayNameText = author.displayName ? `**${author.displayName.trim()}**` : \"\";\n\n  return `\n${displayNameText} _[(${author.handle})](${BlueskyProfileUrlBase}/${author.handle})_\n\n${author.description ? author.description : \"\"}\n`;\n};\n", "import {\n  Block,\n  Follow,\n  LikePost,\n  Mute,\n  OpenAccountLikes,\n  OpenProfile,\n  QuotePost,\n  ReplyPost,\n  Repost,\n  SwitchToHomeAction,\n  Unblock,\n  Unfollow,\n  UnlikePost,\n  Unmute,\n  ViewAsGrid,\n  ViewAsList,\n} from \"../utils/constants\";\nimport { Color, Icon } from \"@raycast/api\";\n\nimport { ActionsDictionary } from \"../types/types\";\n\nexport const ActionMap: ActionsDictionary = {\n  aboutView: {\n    getTitle: () => \"About\",\n    icon: Icon.Cd,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\"], key: \"5\" },\n  },\n  homeView: {\n    getTitle: () => \"Home\",\n    icon: Icon.House,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\"], key: \"h\" },\n  },\n  timelineView: {\n    getTitle: () => \"Timeline\",\n    icon: Icon.AppWindowList,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\"], key: \"1\" },\n  },\n  newPostView: {\n    getTitle: () => \"New Post\",\n    icon: Icon.Bubble,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\"], key: \"3\" },\n  },\n  searchView: {\n    getTitle: () => \"Search\",\n    icon: Icon.MagnifyingGlass,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\"], key: \"2\" },\n  },\n  recentPostsView: {\n    getTitle: () => \"Recent Posts\",\n    icon: Icon.Person,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\"], key: \"4\" },\n  },\n  follow: {\n    getTitle: () => Follow,\n    icon: Icon.AddPerson,\n    color: Color.Green,\n    shortcut: { modifiers: [\"cmd\", \"shift\"], key: \"f\" },\n  },\n  unfollow: {\n    getTitle: () => Unfollow,\n    icon: Icon.RemovePerson,\n    color: Color.Red,\n    shortcut: { modifiers: [\"cmd\", \"shift\"], key: \"u\" },\n  },\n  mute: {\n    getTitle: () => Mute,\n    icon: Icon.SpeakerOff,\n    color: Color.Red,\n    shortcut: { modifiers: [\"cmd\", \"shift\"], key: \"m\" },\n  },\n  unmute: {\n    getTitle: () => Unmute,\n    icon: Icon.SpeakerHigh,\n    color: Color.Green,\n    shortcut: { modifiers: [\"cmd\", \"shift\"], key: \"n\" },\n  },\n  unblock: {\n    getTitle: () => Unblock,\n    icon: Icon.PlusCircleFilled,\n    color: Color.Red,\n    shortcut: { modifiers: [\"cmd\", \"shift\"], key: \"b\" },\n  },\n  block: {\n    getTitle: () => Block,\n    icon: Icon.MinusCircleFilled,\n    color: Color.Red,\n    shortcut: { modifiers: [\"cmd\", \"shift\"], key: \"b\" },\n  },\n  viewAsList: {\n    getTitle: () => ViewAsList,\n    icon: Icon.AppWindowList,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\", \"shift\"], key: \"g\" },\n  },\n  viewAsGrid: {\n    getTitle: () => ViewAsGrid,\n    icon: Icon.AppWindowGrid3x3,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\", \"shift\"], key: \"g\" },\n  },\n  like: {\n    getTitle: () => LikePost,\n    icon: Icon.Heart,\n    color: Color.Green,\n    shortcut: { modifiers: [\"ctrl\"], key: \"l\" },\n  },\n  unlike: {\n    getTitle: () => UnlikePost,\n    color: Color.Red,\n    icon: Icon.HeartDisabled,\n    shortcut: { modifiers: [\"ctrl\"], key: \"u\" },\n  },\n  repost: {\n    getTitle: () => Repost,\n    icon: Icon.Repeat,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"ctrl\"], key: \"r\" },\n  },\n  reply: {\n    getTitle: () => ReplyPost,\n    icon: Icon.Reply,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\", \"shift\"], key: \"r\" },\n  },\n  quote: {\n    getTitle: () => QuotePost,\n    icon: Icon.QuotationMarks,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"ctrl\"], key: \"q\" },\n  },\n  switchToHomeView: {\n    getTitle: () => SwitchToHomeAction,\n    icon: Icon.House,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\"], key: \"h\" },\n  },\n  openProfile: {\n    getTitle: () => OpenProfile,\n    icon: Icon.Person,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\"], key: \"return\" },\n  },\n  openAccountLikes: {\n    getTitle: () => OpenAccountLikes,\n    icon: Icon.Heartbeat,\n    color: Color.Blue,\n    shortcut: { modifiers: [\"cmd\", \"ctrl\"], key: \"l\" },\n  },\n};\n", "import {\n  ATPCredentialsHashKey,\n  ATPSessionStorageKey,\n  BlueskyFeedType,\n  BlueskyProfileUrlBase,\n  BlueskyQuoteType,\n  FirstSignInSuccessToast,\n} from \"../utils/constants\";\nimport { ATSessionResponse, Account, CredentialsHashStore, Notification, PostReference } from \"../types/types\";\nimport {\n  AppBskyActorSearchActors,\n  AppBskyFeedGetAuthorFeed,\n  AppBskyFeedGetTimeline,\n  AppBskyFeedLike,\n  AppBskyFeedPost,\n  AppBskyGraphGetBlocks,\n  AppBskyGraphGetMutes,\n  AppBskyNotificationListNotifications,\n  AtpSessionData,\n  AtpAgent,\n  ComAtprotoRepoDeleteRecord,\n  ComAtprotoRepoListRecords,\n  RichText,\n} from \"@atproto/api\";\nimport { clearLocalStore, getItemFromLocalStore } from \"../utils/localStore\";\nimport { createHashKey, showSuccessToast } from \"../utils/common\";\n\nimport { AppPasswordRegex } from \"../config/config\";\nimport { AtUri } from \"@atproto/uri\";\nimport { LocalStorage } from \"@raycast/api\";\nimport { clearCache } from \"../utils/cacheStore\";\nimport \"cross-fetch/polyfill\";\nimport { getPreferences } from \"../utils/preference\";\nimport FormData from \"cross-fetch\";\n//@ts-expect-error Incompatible FormData Types\nglobal.FormData = FormData; // we do this to make atproto client happy\n\nconst agent = new AtpAgent({\n  service: getPreferences().service,\n  persistSession: (sessionEvent, session) => {\n    switch (sessionEvent) {\n      case \"create\":\n      case \"update\":\n        LocalStorage.setItem(ATPSessionStorageKey, JSON.stringify(session));\n        break;\n      case \"expired\":\n      case \"create-failed\":\n        LocalStorage.removeItem(ATPSessionStorageKey);\n        clearCache();\n        break;\n    }\n  },\n});\n\nexport const getSignedInAccountHandle = async () => {\n  const session = await getExistingSession();\n  return session?.handle;\n};\n\nexport const getExistingSession = async () => {\n  return await getItemFromLocalStore<AtpSessionData>(ATPSessionStorageKey);\n};\n\nexport const resolveHandle = async (handle: string): Promise<boolean> => {\n  try {\n    await agent.resolveHandle({ handle });\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport const getSearchPosts = async (searchTerm: string) => {\n  const response = await agent.app.bsky.feed.searchPosts({ q: searchTerm, sort: \"latest\" });\n  if (response.data) {\n    const postResponse = response.data.posts.map((item) => ({\n      post: item,\n    }));\n    return {\n      feed: postResponse,\n    };\n  }\n  return null;\n};\n\nexport const getTimelinePosts = async (cursor: string | null, limit = 10) => {\n  const requestObject: AppBskyFeedGetTimeline.QueryParams = {\n    limit,\n  };\n  if (cursor) {\n    requestObject.cursor = cursor;\n  }\n\n  const response = await agent.getTimeline(requestObject);\n\n  if (response.data) {\n    return response.data;\n  }\n\n  return null;\n};\n\nexport const getLikePosts = async (handle: string, cursor: string | null, limit = 10) => {\n  const requestObject: ComAtprotoRepoListRecords.QueryParams = {\n    collection: \"app.bsky.feed.like\",\n    repo: handle,\n    limit,\n  };\n\n  if (cursor) {\n    requestObject.cursor = cursor;\n  }\n\n  const authorLikesResponse = await agent.com.atproto.repo.listRecords(requestObject);\n  const newCursor = authorLikesResponse.data?.cursor;\n\n  const uris =\n    authorLikesResponse.data?.records.map((record) => (record.value as AppBskyFeedLike.Record).subject.uri) || [];\n\n  const response = await Promise.all(\n    uris\n      .map(async (uri) => {\n        try {\n          const response = await getPostThread(uri);\n          if (response && response.thread) {\n            return response.thread;\n          }\n        } catch {\n          return null;\n        }\n      })\n      .filter((thread) => thread !== null),\n  );\n\n  return {\n    cursor: newCursor,\n    feed: response,\n  };\n};\n\nexport const getAccountPosts = async (handle: string, cursor: string | null, limit = 10) => {\n  const requestObject: AppBskyFeedGetAuthorFeed.QueryParams = {\n    actor: handle,\n    limit,\n  };\n  if (cursor) {\n    requestObject.cursor = cursor;\n  }\n\n  try {\n    const response = await agent.getAuthorFeed(requestObject);\n    if (response.data) {\n      return response.data;\n    }\n\n    return null;\n  } catch {\n    return null;\n  }\n};\n\nexport const getNotifications = async (cursor: string | null, limit = 10) => {\n  const requestObject: AppBskyNotificationListNotifications.QueryParams = {\n    limit,\n  };\n\n  if (cursor) {\n    requestObject.cursor = cursor;\n  }\n\n  const response = await agent.listNotifications(requestObject);\n\n  if (response.data) {\n    return response.data;\n  }\n\n  return null;\n};\n\nexport const getRKey = (uri: string) => {\n  return new AtUri(uri).rkey;\n};\n\nexport const createPost = async (postText: string, postReference?: PostReference) => {\n  const rt = new RichText({ text: postText });\n  await rt.detectFacets(agent);\n\n  const postRecord: Partial<AppBskyFeedPost.Record> & Omit<AppBskyFeedPost.Record, \"createdAt\"> = {\n    $type: BlueskyFeedType,\n    text: rt.text,\n    facets: rt.facets,\n    createdAt: new Date().toISOString(),\n  };\n\n  if (postReference && postReference.reason === \"reply\") {\n    postRecord.reply = postReference.replyRef;\n  }\n\n  if (postReference && postReference.reason === \"quote\") {\n    postRecord.embed = {\n      record: postReference.quotedRef.record,\n      $type: BlueskyQuoteType,\n    };\n  }\n\n  await agent.post(postRecord);\n};\n\nexport const like = async (uri: string, cid: string) => {\n  return await agent.like(uri, cid);\n};\n\nexport const unlike = async (likeUri: string) => {\n  await agent.deleteLike(likeUri);\n};\n\nexport const repost = async (uri: string, cid: string) => {\n  await agent.repost(uri, cid);\n};\nexport const follow = async (did: string) => {\n  await agent.follow(did);\n};\n\nexport const mute = async (did: string) => {\n  await agent.mute(did);\n};\n\nexport const unmute = async (did: string) => {\n  await agent.unmute(did);\n};\n\nexport const deleteFollow = async (followUri: string) => {\n  await agent.deleteFollow(followUri);\n};\n\nexport const getProfile = async (handle: string) => {\n  const response = await agent.getProfile({ actor: handle });\n\n  if (response.data) {\n    return response.data;\n  }\n\n  return null;\n};\n\nexport const resolveATUri = async (notification: Notification): Promise<string> => {\n  if ([\"reply\", \"quote\", \"mention\"].includes(notification.reason)) {\n    const atUri = new AtUri(notification.uri);\n    return `${BlueskyProfileUrlBase}/${notification.author.handle}/post/${atUri.rkey}`;\n  }\n\n  if ((notification.reason === \"like\" || notification.reason === \"repost\") && notification.targetPostUri) {\n    const accountHandle = await getSignedInAccountHandle();\n    const atUri = new AtUri(notification.targetPostUri);\n    return `${BlueskyProfileUrlBase}/${accountHandle}/post/${atUri.rkey}`;\n  }\n\n  return `${BlueskyProfileUrlBase}/${notification.author.handle}`;\n};\n\nexport const createNewSession = async (): Promise<ATSessionResponse> => {\n  try {\n    const { accountId, password, service } = getPreferences();\n\n    if (!AppPasswordRegex.test(password)) {\n      const response: ATSessionResponse = {\n        status: \"session-creation-failed\",\n        message: \"Please use an app password instead of your account password.\",\n      };\n\n      return response;\n    }\n\n    const identifier = accountId.startsWith(\"@\") ? accountId.slice(1) : accountId;\n\n    await agent.login({ identifier, password });\n\n    const hashStore: CredentialsHashStore = {\n      key: createHashKey(`${accountId}:${password}:${service}`),\n    };\n\n    await LocalStorage.setItem(ATPCredentialsHashKey, JSON.stringify(hashStore));\n    showSuccessToast(FirstSignInSuccessToast);\n\n    const response: ATSessionResponse = {\n      status: \"new-session-created\",\n    };\n\n    return response;\n  } catch (e: unknown) {\n    const response: ATSessionResponse = {\n      status: \"session-creation-failed\",\n      message: e instanceof Error ? e.message : \"An unknown error occurred\",\n    };\n\n    return response;\n  }\n};\n\nexport const getPostThread = async (uri: string) => {\n  const response = await agent.getPostThread({ uri });\n\n  return response.data;\n};\n\nexport const getUnreadNotificationCount = async () => {\n  const response = await agent.countUnreadNotifications();\n  return response.data.count;\n};\n\nexport const markNotificationsAsRead = async () => {\n  return await agent.updateSeenNotifications();\n};\n\nexport const getMarkdownText = async (text: string) => {\n  const rt = new RichText({ text });\n  await rt.detectFacets(agent);\n\n  let markdown = \"\";\n\n  for (const segment of rt.segments()) {\n    if (segment.isLink()) {\n      markdown += `[${segment.text}](${segment.link?.uri})`;\n    } else if (segment.isMention()) {\n      markdown += `[${segment.text}](${BlueskyProfileUrlBase}/${segment.mention?.did})`;\n    } else {\n      markdown += segment.text;\n    }\n  }\n\n  return markdown;\n};\n\nexport const getMutedAccounts = async (cursor: string | null) => {\n  const requestObject: AppBskyGraphGetMutes.QueryParams = {\n    limit: 100,\n  };\n\n  if (cursor) {\n    requestObject.cursor = cursor;\n  }\n\n  const response = await agent.app.bsky.graph.getMutes(requestObject);\n\n  if (response.data) {\n    return response.data;\n  }\n\n  return null;\n};\n\nexport const block = async (account: Account) => {\n  if (agent.session === undefined) {\n    return;\n  }\n\n  await agent.app.bsky.graph.block.create(\n    { repo: agent.session.did },\n    {\n      createdAt: new Date().toISOString(),\n      subject: account.did,\n    },\n  );\n};\n\nexport const unblock = async (account: Account) => {\n  if (!account.blockedUri || agent.session === undefined) {\n    return;\n  }\n\n  const aturi = new AtUri(account.blockedUri);\n\n  const requestObject: ComAtprotoRepoDeleteRecord.InputSchema = {\n    rkey: aturi.rkey,\n    repo: agent.session.did,\n    collection: \"app.bsky.graph.block\",\n  };\n\n  await agent.com.atproto.repo.deleteRecord(requestObject);\n};\n\nexport const getBlockedAccounts = async (cursor: string | null) => {\n  const requestObject: AppBskyGraphGetBlocks.QueryParams = {\n    limit: 100,\n  };\n\n  if (cursor) {\n    requestObject.cursor = cursor;\n  }\n\n  const response = await agent.app.bsky.graph.getBlocks(requestObject);\n\n  if (response.data) {\n    return response.data;\n  }\n\n  return null;\n};\n\nexport const getAccounts = async (searchTerm: string, cursor: string | null) => {\n  const requestObject: AppBskyActorSearchActors.QueryParams = {\n    limit: 100,\n    term: searchTerm,\n  };\n\n  if (cursor) {\n    requestObject.cursor = cursor;\n  }\n\n  const response = await agent.searchActors(requestObject);\n\n  if (response.data) {\n    return response.data;\n  }\n\n  return null;\n};\n\nexport const getExistingCredentialsHash = async () => {\n  const credentialsHash = await getItemFromLocalStore<CredentialsHashStore>(ATPCredentialsHashKey);\n  if (!credentialsHash) {\n    return null;\n  }\n\n  return credentialsHash.key;\n};\nexport const credentialsUpdatedByAccount = async () => {\n  const { accountId, password, service } = getPreferences();\n  const credentialsHashKey = createHashKey(`${accountId}:${password}:${service}`);\n\n  const existingCredentialsHash = await getExistingCredentialsHash();\n\n  return credentialsHashKey !== existingCredentialsHash;\n};\n\nexport const startNewSession = async (): Promise<ATSessionResponse> => {\n  await clearLocalStore();\n  await clearCache();\n\n  const result = await createNewSession();\n\n  return result;\n};\n\nexport const startATSession = async (): Promise<ATSessionResponse> => {\n  if (await credentialsUpdatedByAccount()) {\n    return startNewSession();\n  }\n\n  const existingSession = await getExistingSession();\n\n  if (existingSession) {\n    agent.resumeSession(existingSession);\n\n    const response: ATSessionResponse = {\n      status: \"resuming-existing-session\",\n    };\n\n    return response;\n  }\n\n  return startNewSession();\n};\n", "import { LocalStorage } from \"@raycast/api\";\n\nexport const getItemFromLocalStore = async <T>(key: string): Promise<T | null> => {\n  const item = await LocalStorage.getItem<string>(key);\n  if (item != undefined) {\n    try {\n      return JSON.parse(item);\n    } catch (error) {\n      throw new Error(`Error parsing ${key}: ${error}`);\n    }\n  } else {\n    return Promise.resolve(null);\n  }\n};\n\nexport const clearLocalStore = async (): Promise<void> => {\n  await LocalStorage.clear();\n};\n", "export const ExtensionConfig = {\n  maxPostCharacterSize: 300,\n  timelineFeedRequestLimit: 40,\n  notificationRequestLimit: 50,\n  menubarNotificationLimit: 10,\n  accountFeedRequestLimit: 30,\n  accountFeedFirstFetchLimit: 3,\n  likeFeedFirstLimit: 3,\n  likeFeedRequestLimit: 10,\n};\n\nexport const AppPasswordRegex = /^[a-zA-Z\\d]{4}-[a-zA-Z\\d]{4}-[a-zA-Z\\d]{4}-[a-zA-Z\\d]{4}$/;\n", "import { Cache } from \"@raycast/api\";\n\nexport const clearCache = async () => {\n  const cache = new Cache();\n  cache.clear();\n};\n", "const fetchNode = require('./node-ponyfill')\nconst fetch = fetchNode.fetch.bind({})\n\nfetch.polyfill = true\n\nif (!global.fetch) {\n  global.fetch = fetch\n  global.Response = fetchNode.Response\n  global.Headers = fetchNode.Headers\n  global.Request = fetchNode.Request\n}\n", "import { getPreferenceValues } from \"@raycast/api\";\n\nexport const getPreferences = () => getPreferenceValues<Preferences>();\n", "import { Action, ActionPanel, MenuBarExtra } from \"@raycast/api\";\n\nimport { ActionMap } from \"../../config/actionMap\";\nimport { AllowedActionKeys } from \"../../types/types\";\n\ninterface CustomActionsInterface {\n  onClick: () => void;\n  actionKey: AllowedActionKeys;\n  wrapInSection?: boolean;\n  menuBarItem?: boolean;\n}\n\nconst CustomAction = ({ actionKey, onClick, wrapInSection, menuBarItem }: CustomActionsInterface) => {\n  const { shortcut, getTitle, icon, color } = ActionMap[actionKey];\n\n  if (menuBarItem) {\n    const menubarItem = (\n      <MenuBarExtra.Item title={getTitle()} shortcut={shortcut} icon={icon} onAction={() => onClick()} />\n    );\n\n    return wrapInSection ? <MenuBarExtra.Section>{menubarItem}</MenuBarExtra.Section> : menubarItem;\n  }\n\n  const actionComponent = (\n    <Action shortcut={shortcut} title={getTitle()} icon={{ source: icon, tintColor: color }} onAction={onClick} />\n  );\n\n  return wrapInSection ? <ActionPanel.Section>{actionComponent}</ActionPanel.Section> : actionComponent;\n};\n\nexport default CustomAction;\n", "import { Account, BskyRecord, Post, PostReason } from \"../types/types\";\nimport {\n  $Typed,\n  AppBskyActorDefs,\n  AppBskyEmbedImages,\n  AppBskyEmbedRecord,\n  AppBskyFeedDefs,\n  AppBskyFeedPost,\n} from \"@atproto/api\";\nimport { BlueskyProfileUrlBase, PostEndHorizontalLine } from \"./constants\";\n\nimport { Notification as BskyNotification } from \"@atproto/api/dist/client/types/app/bsky/notification/listNotifications\";\nimport { Notification } from \"../types/types\";\nimport { NotificationReasonMapping } from \"../config/notificationReasonMapping\";\nimport { isBlockedPost, isPostView, isReasonRepost } from \"@atproto/api/dist/client/types/app/bsky/feed/defs\";\nimport { ViewRecord } from \"@atproto/api/dist/client/types/app/bsky/embed/record\";\nimport { getMarkdownText } from \"../libs/atp\";\nimport { getPostUrl } from \"./common\";\nimport { getReadableDate } from \"./date\";\n\nexport const getLikesUrl = (handle: string, uri: string) => {\n  return `${getPostUrl(handle, uri)}/liked-by`;\n};\n\nexport const getRepostsUrl = (handle: string, uri: string) => {\n  return `${getPostUrl(handle, uri)}/reposted-by`;\n};\n\nconst getImageMarkdown = (imageEmbeds: string[]) => {\n  return imageEmbeds.map((image) => `![image](${image})`).join(\"\\n\");\n};\n\nexport const getRepostMarkdown = (displayName: string, handle: string) => {\n  const displayNameText = displayName ? `**${displayName.trim()}**` : \"\";\n\n  return `\n## Reposted by: ${displayNameText} [(${handle})](${BlueskyProfileUrlBase}/${handle})\n---\n\n  `;\n};\n\nexport const getQuotedPostMarkdownView = async (postAuthor: string, post: ViewRecord, imageEmbeds: string[]) => {\n  const { text = \"\" } = post.value as BskyRecord;\n  const postMarkdown = (await getMarkdownText(text)).replace(/\\n/g, \"\\n\\n\").replace(/^/gm, \"> \");\n\n  const postTime = getReadableDate(post.indexedAt);\n  const displayNameText = post.author.displayName ? `**${post.author.displayName.trim()}**` : \"\";\n\n  return `\n### \\`Original Post quoted by ${postAuthor}:\\`\n\n${displayNameText} _[(${post.author.handle})](${BlueskyProfileUrlBase}/${post.author.handle})_\n\n${postMarkdown}\n\n${getImageMarkdown(imageEmbeds)}\n  \n_[${postTime}](${getPostUrl(post.author.handle, post.uri)})_\n\n---`;\n};\n\nexport const getPostMarkdownView = async (post: AppBskyFeedDefs.PostView, imageEmbeds: string[]) => {\n  const postMarkdown = (await getMarkdownText((post.record as BskyRecord).text))\n    .replace(/\\n/g, \"\\n\\n\")\n    .replace(/^/gm, \"> \");\n  const postTime = getReadableDate(post.indexedAt);\n\n  const displayNameText = post.author.displayName ? `**${post.author.displayName.trim()}**` : \"\";\n  return `\n${displayNameText} _[(${post.author.handle})](${BlueskyProfileUrlBase}/${post.author.handle})_\n\n${postMarkdown}\n\n${getImageMarkdown(imageEmbeds)}\n\n\u2661 [${post.likeCount}](${getLikesUrl(post.author.handle, post.uri)})    \u267B [${post.repostCount}](${getRepostsUrl(\n    post.author.handle,\n    post.uri,\n  )})    \u2193 [${post.replyCount}](${getPostUrl(post.author.handle, post.uri)})\n\n_[${postTime}](${getPostUrl(post.author.handle, post.uri)})_  ${\n    AppBskyEmbedRecord.isView(post.embed) ? \"\" : PostEndHorizontalLine\n  }\n`;\n};\n\nexport const parseAccounts = (bskyUsers: AppBskyActorDefs.ProfileView[]): Account[] => {\n  const accounts: Account[] = bskyUsers.map((item) => {\n    return {\n      did: item.did,\n      handle: item.handle,\n      displayName: item.displayName ? item.displayName : \"\",\n      avatarUrl: item.avatar ? item.avatar : \"\",\n      description: item.description ? item.description : \"\",\n      following: item.viewer && item.viewer.following ? true : false,\n      blockedUri: item.viewer && item.viewer.blocking ? item.viewer.blocking : null,\n      muted: item.viewer && item.viewer.muted ? item.viewer.muted : false,\n    };\n  });\n\n  return accounts;\n};\n\nexport const parseNotifications = (bskyNotifications: BskyNotification[]): Notification[] => {\n  const uniquePostIds = new Set<string>();\n\n  const notifications: Notification[] = bskyNotifications\n    .filter((item) => item.cid)\n    .map((item) => {\n      let targetPostUri = item.reasonSubject ? item.reasonSubject : null;\n      if (item.reason === \"mention\") {\n        targetPostUri = item.uri;\n      }\n\n      const text = NotificationReasonMapping[item.reason] ? NotificationReasonMapping[item.reason] : item.reason;\n      return {\n        uri: item.uri,\n        id: item.cid,\n        text,\n        reason: item.reason,\n        isRead: item.isRead,\n        targetPostUri,\n        indexedAtDate: item.indexedAt,\n        author: {\n          did: item.author.did,\n          handle: item.author.handle,\n          blockedUri: item.author.viewer && item.author.viewer.blocking ? item.author.viewer.blocking : null,\n          displayName: item.author.displayName ? item.author.displayName : \"\",\n          avatarUrl: item.author.avatar ? item.author.avatar : \"\",\n        },\n      };\n    })\n    .filter((item) => {\n      if (uniquePostIds.has(item.id)) {\n        return false;\n      } else {\n        uniquePostIds.add(item.id);\n        return true;\n      }\n    });\n\n  return notifications;\n};\n\nexport const parseFeed = async (bskyFeed: AppBskyFeedDefs.FeedViewPost[]): Promise<Post[]> => {\n  const posts: Post[] = await Promise.all(\n    bskyFeed\n      .filter((item) => item !== null && item.post !== null)\n      .filter((item) => AppBskyFeedPost.isRecord(item.post.record))\n      .filter((item) => !isBlockedPost(item.reply?.root))\n      .map(async (item) => {\n        let postReason: PostReason = null;\n\n        if (isReasonRepost(item.reason)) {\n          const author = item.reason.by;\n          postReason = {\n            type: \"repost\",\n            authorName: author.displayName || author.handle,\n          };\n        }\n\n        if (item.reply && Object.keys(item.reply).length > 0 && isPostView(item.reply.parent)) {\n          const { author } = item.reply.parent;\n          postReason = {\n            type: \"reply\",\n            authorName: author.displayName ? author.displayName : author.handle,\n          };\n        }\n\n        let imageEmbeds: string[] = [];\n\n        if (AppBskyEmbedImages.isView(item.post.embed)) {\n          imageEmbeds = item.post.embed.images.map((item) => item.thumb);\n        }\n\n        let markdownView = \"\";\n\n        if (\n          item.reply &&\n          isPostView(item.reply.root) &&\n          isPostView(item.reply.parent) &&\n          item.reply.root.uri !== item.reply.parent.uri\n        ) {\n          let imageEmbeds: string[] = [];\n          const { root } = item.reply;\n          if (AppBskyEmbedImages.isView(root.embed)) {\n            imageEmbeds = root.embed.images.map((item) => item.thumb);\n          }\n\n          markdownView = markdownView + (await getPostMarkdownView(root, imageEmbeds));\n        }\n        if (isPostView(item.reply?.parent)) {\n          let imageEmbeds: string[] = [];\n          const parent = item.reply.parent;\n          if (AppBskyEmbedImages.isView(parent.embed)) {\n            imageEmbeds = parent.embed.images.map((item) => item.thumb);\n          }\n\n          markdownView = markdownView + (await getPostMarkdownView(parent, imageEmbeds));\n        }\n\n        let quotedMarkdown = \"\";\n        // not sure if we still need the `&& item.post.embed.record` - leave until sure\n        if (AppBskyEmbedRecord.isView(item.post.embed) && item.post.embed.record) {\n          const postAuthor = item.post.author.displayName ? item.post.author.displayName : item.post.author.handle;\n          postReason = {\n            type: \"quote\",\n            authorName: postAuthor,\n          };\n\n          let embeddedPostImages: string[] = [];\n          const embeddedPostRecord = item.post.embed.record as ViewRecord;\n\n          if (embeddedPostRecord.embeds && embeddedPostRecord.embeds?.length > 0) {\n            const embed = embeddedPostRecord.embeds[0];\n            if (AppBskyEmbedImages.isView(embed)) {\n              embeddedPostImages = embed.images.map((item) => item.thumb);\n            }\n          }\n\n          const postValue = (item.post.embed.record as ViewRecord).value as BskyRecord;\n\n          if (postValue && postValue.text && postValue.text.length > 0) {\n            quotedMarkdown = await getQuotedPostMarkdownView(postAuthor, embeddedPostRecord, embeddedPostImages);\n          }\n        }\n\n        let repostMarkdown = \"\";\n        if (item.reason && isReasonRepost(item.reason)) {\n          const repostAuthor = item.reason.by;\n          const displayName = repostAuthor.displayName || \"\";\n          repostMarkdown = getRepostMarkdown(displayName, repostAuthor.handle);\n        }\n\n        return {\n          uri: item.post.uri,\n          cid: item.post.cid,\n          viewer: item.post.author.viewer,\n          text: (item.post.record as $Typed<AppBskyFeedPost.Record>).text,\n          imageEmbeds,\n          reason: postReason,\n          createdAt: (item.post.record as $Typed<AppBskyFeedPost.Record>).createdAt,\n          createdByUser: {\n            did: item.post.author.did,\n            handle: item.post.author.handle,\n            blockedUri:\n              // This is done for legacy reasons. \"blocking\" does not exist on ViewerState but we have assumed it is so we don't break anything - might remove in future\n              item.post.viewer && (item.post.viewer as AppBskyFeedDefs.ViewerState & { blocking?: string }).blocking\n                ? ((item.post.viewer as AppBskyFeedDefs.ViewerState & { blocking?: string }).blocking as string)\n                : \"\",\n            displayName: item.post.author.displayName ? item.post.author.displayName : \"\",\n            avatarUrl: item.post.author.avatar ? item.post.author.avatar : \"\",\n          },\n          likeUri: item.post.viewer && item.post.viewer.like ? item.post.viewer.like : \"\",\n          metrics: {\n            likeCount: item.post.likeCount ? item.post.likeCount : 0,\n            replyCount: item.post.replyCount ? item.post.replyCount : 0,\n            repostCount: item.post.repostCount ? item.post.repostCount : 0,\n          },\n          markdownView:\n            repostMarkdown + markdownView + (await getPostMarkdownView(item.post, imageEmbeds)) + quotedMarkdown,\n        };\n      }),\n  );\n\n  const uniquePosts: Post[] = [];\n  const uniqueUris = new Set();\n\n  posts.forEach((post) => {\n    if (!uniqueUris.has(post.uri)) {\n      uniqueUris.add(post.uri);\n      uniquePosts.push(post);\n    }\n  });\n\n  return uniquePosts;\n};\n", "export const NotificationReasonMapping: Record<string, string> = {\n  like: \"has liked your post.\",\n  repost: \"has reposted your post.\",\n  follow: \"has followed you.\",\n  mention: \"has mentioned you in a post.\",\n  reply: \"has replied to your post.\",\n  quote: \"has quoted your post.\",\n};\n", "import { useEffect, useState } from \"react\";\n\nimport { SessionStartFailed } from \"../utils/constants\";\nimport { showDangerToast } from \"../utils/common\";\nimport { startATSession } from \"../libs/atp\";\n\nconst useStartATSession = (newSessionCreatedCallback: () => void) => {\n  const [sessionStartFailed, setSessionStartFailed] = useState(false);\n  const [sessionStarted, setSessionStarted] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const startSession = async () => {\n    const result = await startATSession();\n    if (result.status === \"new-session-created\") {\n      setSessionStarted(true);\n      newSessionCreatedCallback();\n    }\n\n    if (result.status === \"session-creation-failed\") {\n      const message = result.message || \"An error occurred\";\n      setErrorMessage(message);\n      setSessionStartFailed(true);\n      showDangerToast(SessionStartFailed);\n\n      return;\n    }\n\n    setSessionStarted(true);\n  };\n\n  useEffect(() => {\n    startSession();\n  }, []);\n\n  return [sessionStarted, sessionStartFailed, errorMessage] as const;\n};\n\nexport default useStartATSession;\n"],
  "mappings": "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KACA,YACA,UACA,SACA,YACA,WACA,OACA,SACA,SACA,KACA,SACA,kBACA,iBACA,OACA,QACA,QACA,YACA,YACA,UACA,SACA,MACA,KACA,MACA,aACA,MACA,QACA,KACA,YACA,KACA,OACA,SACA,QACA,OACA,OACA,MACA,OACA,KACA,OACA,OACA,aACA,KACA,UACA,WACA,KACA,UACA,OACA,UACA,QACA,UACA,SACA,OACA,QACA,UACA,KACA,MACA,KACA,MACA,KACA,QACA,KACA,OACA,QACA,UACA,iBACA,OACA,OACA,MACA,YACA,cACA,WACA,WACA,WACA,WACA,aACA,UACA,SACA,KACA,MACA,MACA,OACA,MACA,MACA,KACA,KACA,QACA,SACA,OACA,UACA,SACA,OACA,UACA,MACA,KACA,KACA,KACA,SACA,KACA,QACA,MACA,OACA,OACA,QACA,MACA,MACA,KACA,QACA,cACA,cACA,OACA,YACA,OACA,KACA,MACA,MACA,KACA,aACA,KACA,QACA,aACA,OACA,MACA,OACA,MACA,OACA,UACA,QACA,SACA,SACA,MACA,WACA,MACA,KACA,WACA,cACA,WACA,SACA,UACA,WACA,KACA,KACA,QACA,WACA,WACA,MACA,OACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,OACA,MACA,OACA,cACA,MACA,SACA,OACA,QACA,WACA,UACA,aACA,MACA,UACA,QACA,OACA,SACA,UACA,OACA,OACA,OACA,OACA,SACA,MACA,WACA,WACA,MACA,MACA,OACA,MACA,KACA,KACA,SACA,MACA,OACA,KACA,MACA,MACA,KACA,KACA,SACA,UACA,UACA,QACA,OACA,QACA,UACA,YACA,SACA,SACA,KACA,WACA,SACA,QACA,UACA,OACA,QACA,OACA,WACA,KACA,KACA,SACA,WACA,QACA,SACA,WACA,WACA,QACA,OACA,UACA,KACA,KACA,KACA,QACA,QACA,SACA,UACA,UACA,MACA,UACA,WACA,YACA,UACA,UACA,WACA,SACA,SACA,eACA,aACA,UACA,cACA,UACA,iBACA,OACA,OACA,UACA,UACA,SACA,UACA,UACA,MACA,KACA,SACA,aACA,cACA,UACA,QACA,MACA,SACA,UACA,KACA,aACA,KACA,KACA,KACA,KACA,QACA,OACA,KACA,QACA,MACA,QACA,OACA,OACA,SACA,SACA,MACA,OACA,MACA,KACA,OACA,SACA,QACA,SACA,WACA,OACA,WACA,QACA,WACA,SACA,UACA,OACA,SACA,MACA,MACA,WACA,OACA,UACA,SACA,YACA,WACA,WACA,OACA,MACA,KACA,KACA,KACA,MACA,KACA,OACA,SACA,MACA,UACA,MACA,WACA,QACA,MACA,QACA,SACA,SACA,SACA,OACA,MACA,KACA,QACA,MACA,KACA,MACA,QACA,MACA,YACA,KACA,KACA,QACA,SACA,SACA,WACA,cACA,cACA,QACA,YACA,KACA,WACA,OACA,KACA,MACA,SACA,KACA,WACA,KACA,aACA,MACA,SACA,WACA,SACA,UACA,UACA,aACA,OACA,OACA,YACA,QACA,SACA,MACA,OACA,OACA,UACA,UACA,OACA,QACA,WACA,UACA,UACA,KACA,OACA,WACA,OACA,OACA,QACA,UACA,YACA,OACA,YACA,WACA,OACA,UACA,MACA,UACA,KACA,KACA,SACA,UACA,OACA,UACA,UACA,MACA,KACA,KACA,MACA,OACA,cACA,WACA,OACA,QACA,UACA,QACA,aACA,MACA,KACA,OACA,YACA,MACA,UACA,YACA,WACA,MACA,UACA,MACA,OACA,YACA,SACA,MACA,KACA,MACA,UACA,QACA,SACA,OACA,QACA,MACA,SACA,MACA,KACA,OACA,KACA,MACA,KACA,MACA,OACA,UACA,SACA,KACA,KACA,OACA,KACA,KACA,OACA,QACA,QACA,SACA,KACA,QACA,MACA,SACA,QACA,KACA,QACA,OACA,MACA,MACA,KACA,UACA,OACA,YACA,OACA,MACA,WACA,OACA,SACA,MACA,MACA,MACA,KACA,KACA,KACA,WACA,WACA,SACA,QACA,QACA,UACA,QACA,KACA,KACA,KACA,WACA,QACA,OACA,QACA,UACA,OACA,KACA,KACA,OACA,UACA,UACA,OACA,MACA,OACA,WACA,SACA,aACA,OACA,WACA,OACA,SACA,OACA,SACA,YACA,UACA,MACA,KACA,MACA,KACA,KACA,SACA,WACA,UACA,YACA,YACA,QACA,YACA,QACA,QACA,WACA,OACA,UACA,MACA,UACA,SACA,UACA,QACA,MACA,KACA,OACA,KACA,KACA,SACA,QACA,UACA,MACA,OACA,MACA,MACA,KACA,KACA,OACA,MACA,QACA,KACA,KACA,SACA,OACA,OACA,aACA,KACA,MACA,aACA,WACA,OACA,MACA,MACA,YACA,YACA,SACA,MACA,gBACA,SACA,cACA,KACA,WACA,KACA,KACA,QACA,KACA,UACA,MACA,WACA,KACA,OACA,MACA,SACA,OACA,MACA,KACA,OACA,QACA,UACA,MACA,MACA,KACA,MACA,MACA,KACA,OACA,SACA,MACA,MACA,KACA,WACA,OACA,SACA,UACA,SACA,OACA,KACA,cACA,iBACA,kBACA,MACA,KACA,KACA,KACA,MACA,OACA,MACA,SACA,SACA,UACA,OACA,KACA,KACA,QACA,UACA,SACA,KACA,OACA,MACA,KACA,MACA,OACA,YACA,KACA,KACA,QACA,KACA,KACA,UACA,cACA,QACA,YACA,SACA,OACA,YACA,UACA,UACA,MACA,SACA,UACA,MACA,SACA,KACA,KACA,MACA,QACA,UACA,SACA,QACA,OACA,QACA,OACA,KACA,OACA,OACA,gBACA,YACA,WACA,OACA,QACA,UACA,OACA,UACA,OACA,QACA,OACA,SACA,KACA,MACA,MACA,OACA,QACA,SACA,QACA,MACA,SACA,QACA,QACA,OACA,MACA,eACA,KACA,KACA,KACA,MACA,OACA,KACA,WACA,OACA,SACA,KACA,KACA,KACA,SACA,OACA,SACA,SACA,MACA,aACA,QACA,MACA,SACA,YACA,UACA,WACA,YACA,WACA,SACA,MACA,KACA,WACA,KACA,KACA,MACA,QACA,OACA,YACA,OACA,WACA,MACA,OACA,WACA,KACA,KACA,QACA,YACA,MACA,OACA,OACA,MACA,aACA,KACA,KACA,MACA,MACA,KACA,MACA,KACA,KACA,OACA,SACA,OACA,MACA,MACA,MACA,SACA,QACA,UACA,SACA,WACA,SACA,OACA,cACA,MACA,QACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,MACA,KACA,SACA,QACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,SACA,OACA,SACA,OACA,MACA,KACA,KACA,MACA,MACA,UACA,UACA,UACA,UACA,MACA,OACA,OACA,aACA,QACA,KACA,MACA,KACA,MACA,MACA,KACA,OACA,OACA,QACA,QACA,SACA,SACA,KACA,KACA,QACA,qBACA,SACA,MACA,SACA,QACA,KACA,KACA,MACA,MACA,MACA,KACA,MACA,KACA,MACA,WACA,SACA,UACA,SACA,cACA,UACA,OACA,KACA,QACA,MACA,MACA,MACA,SACA,MACA,OACA,SACA,SACA,MACA,UACA,UACA,QACA,SACA,MACA,MACA,KACA,OACA,YACA,QACA,OACA,WACA,QACA,QACA,YACA,MACA,OACA,KACA,MACA,KACA,SACA,KACA,KACA,WACA,MACA,UACA,QACA,QACA,cACA,SACA,SACA,OACA,SACA,WACA,MACA,MACA,OACA,OACA,UACA,QACA,KACA,KACA,QACA,OACA,cACA,WACA,OACA,KACA,KACA,MACA,OACA,QACA,UACA,OACA,OACA,KACA,YACA,QACA,QACA,QACA,MACA,OACA,cACA,OACA,cACA,QACA,aACA,WACA,aACA,MACA,aACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,OACA,SACA,QACA,SACA,QACA,KACA,OACA,aACA,UACA,SACA,UACA,MACA,WACA,cACA,QACA,QACA,SACA,OACA,WACA,MACA,OACA,UACA,SACA,SACA,aACA,OACA,aACA,SACA,UACA,UACA,OACA,YACA,QACA,MACA,MACA,MACA,KACA,SACA,QACA,QACA,SACA,OACA,KACA,OACA,KACA,QACA,OACA,MACA,KACA,MACA,SACA,KACA,WACA,OACA,SACA,SACA,OACA,QACA,WACA,UACA,UACA,kBACA,SACA,MACA,OACA,MACA,OACA,OACA,KACA,MACA,MACA,KACA,MACA,MACA,aACA,UACA,eACA,SACA,SACA,UACA,UACA,OACA,KACA,KACA,SACA,OACA,SACA,WACA,OACA,SACA,QACA,WACA,QACA,MACA,MACA,OACA,MACA,KACA,KACA,YACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,WACA,SACA,OACA,WACA,KACA,OACA,OACA,UACA,OACA,KACA,KACA,MACA,OACA,MACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,OACA,KACA,SACA,SACA,WACA,WACA,OACA,QACA,YACA,OACA,OACA,MACA,MACA,QACA,QACA,OACA,KACA,MACA,KACA,KACA,QACA,UACA,OACA,YACA,YACA,MACA,WACA,YACA,UACA,QACA,SACA,SACA,QACA,QACA,KACA,QACA,WACA,SACA,UACA,OACA,UACA,SACA,KACA,SACA,QACA,KACA,KACA,SACA,UACA,KACA,MACA,SACA,OACA,SACA,SACA,aACA,QACA,SACA,MACA,OACA,KACA,MACA,KACA,MACA,OACA,OACA,aACA,MACA,UACA,SACA,OACA,KACA,KACA,KACA,MACA,UACA,UACA,OACA,UACA,SACA,UACA,OACA,QACA,QACA,KACA,SACA,MACA,KACA,SACA,KACA,KACA,QACA,KACA,KACA,QACA,QACA,QACA,MACA,QACA,UACA,QACA,QACA,OACA,SACA,OACA,KACA,QACA,UACA,WACA,SACA,gBACA,YACA,qBACA,QACA,MACA,KACA,OACA,MACA,QACA,QACA,KACA,MACA,KACA,KACA,KACA,QACA,MACA,KACA,KACA,SACA,aACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,YACA,OACA,WACA,KACA,KACA,QACA,WACA,WACA,sBACA,uBACA,eACA,MACA,KACA,KACA,SACA,QACA,MACA,SACA,SACA,MACA,MACA,SACA,OACA,SACA,OACA,OACA,aACA,KACA,QACA,aACA,QACA,OACA,SACA,OACA,SACA,KACA,SACA,QACA,UACA,SACA,OACA,UACA,QACA,UACA,UACA,iBACA,SACA,QACA,UACA,MACA,UACA,QACA,OACA,KACA,UACA,OACA,OACA,cACA,MACA,UACA,OACA,UACA,MACA,gBACA,WACA,OACA,QACA,QACA,MACA,KACA,MACA,MACA,OACA,QACA,UACA,SACA,MACA,MACA,MACA,SACA,QACA,UACA,SACA,KACA,YACA,OACA,WACA,MACA,UACA,KACA,MACA,KACA,SACA,OACA,OACA,MACA,KACA,OACA,UACA,KACA,eACA,eACA,eACA,qBACA,2BACA,eACA,6CACA,qBACA,qBACA,qBACA,uCACA,uCACA,qBACA,qBACA,eACA,2BACA,qBACA,qBACA,qBACA,qBACA,iCACA,qBACA,uCACA,6CACA,uCACA,uCACA,6CACA,6CACA,mDACA,6CACA,uCACA,uCACA,iCACA,2BACA,iCACA,2BACA,iCACA,2BACA,iCACA,iCACA,2BACA,2BACA,qBACA,2BACA,uCACA,qBACA,6CACA,qBACA,qBACA,uCACA,yDACA,2BACA,iCACA,6CACA,2BACA,qBACA,qBACA,2BACA,uCACA,iCACA,iCACA,iCACA,2BACA,2BACA,2BACA,2BACA,2BACA,6CACA,uCACA,qEACA,iCACA,2BACA,iCACA,2BACA,qBACA,qBACA,qBACA,eACA,qBACA,2BACA,2BACA,2BACA,eACA,qBACA,qBACA,uCACA,2BACA,eACA,eACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iCACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,eACA,eACA,qBACA,eA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,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,uBAAuB,EAAE,CAAC,CAAC,GAAG,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,uBAAuB,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyyBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyyBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,uBAAuB,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,uBAAuB,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,GAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,C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AAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyyBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyyBAAyB,CAAC,KAAK,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyyBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyyBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC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",
  "names": ["require_util", "__commonJSMin", "exports", "util", "val", "assertIs", "_arg", "assertNever", "_x", "items", "obj", "item", "validKeys", "k", "filtered", "e", "object", "keys", "key", "arr", "checker", "joinValues", "array", "separator", "_", "value", "objectUtil", "first", "second", "getParsedType", "data", "require_ZodError", "__commonJSMin", "exports", "util_1", "quotelessJson", "obj", "ZodError", "_ZodError", "issues", "sub", "subs", "actualProto", "_mapper", "mapper", "issue", "fieldErrors", "processError", "error", "curr", "i", "el", "value", "formErrors", "require_en", "__commonJSMin", "exports", "util_1", "ZodError_1", "errorMap", "issue", "_ctx", "message", "require_errors", "__commonJSMin", "exports", "__importDefault", "mod", "en_1", "overrideErrorMap", "setErrorMap", "map", "getErrorMap", "require_parseUtil", "__commonJSMin", "exports", "__importDefault", "mod", "errors_1", "en_1", "makeIssue", "params", "data", "path", "errorMaps", "issueData", "fullPath", "fullIssue", "errorMessage", "maps", "m", "map", "addIssueToContext", "ctx", "overrideMap", "issue", "x", "ParseStatus", "_ParseStatus", "status", "results", "arrayValue", "s", "pairs", "syncPairs", "pair", "key", "value", "finalObject", "DIRTY", "OK", "isAborted", "isDirty", "isValid", "isAsync", "require_typeAliases", "__commonJSMin", "exports", "require_errorUtil", "__commonJSMin", "exports", "errorUtil", "message", "require_types", "__commonJSMin", "exports", "__classPrivateFieldGet", "receiver", "state", "kind", "f", "__classPrivateFieldSet", "value", "_ZodEnum_cache", "_ZodNativeEnum_cache", "errors_1", "errorUtil_1", "parseUtil_1", "util_1", "ZodError_1", "ParseInputLazyPath", "parent", "path", "key", "handleResult", "ctx", "result", "error", "processCreateParams", "params", "errorMap", "invalid_type_error", "required_error", "description", "iss", "_a", "_b", "message", "ZodType", "def", "input", "data", "maybeAsyncResult", "check", "getIssueProperties", "val", "setError", "refinementData", "refinement", "ZodEffects", "ZodFirstPartyTypeKind", "ZodOptional", "ZodNullable", "ZodArray", "ZodPromise", "option", "ZodUnion", "incoming", "ZodIntersection", "transform", "defaultValueFunc", "ZodDefault", "ZodBranded", "catchValueFunc", "ZodCatch", "This", "target", "ZodPipeline", "ZodReadonly", "cuidRegex", "cuid2Regex", "ulidRegex", "uuidRegex", "nanoidRegex", "durationRegex", "emailRegex", "_emojiRegex", "emojiRegex", "ipv4Regex", "ipv6Regex", "base64Regex", "dateRegexSource", "dateRegex", "timeRegexSource", "args", "regex", "timeRegex", "datetimeRegex", "opts", "isValidIP", "ip", "version", "ZodString", "_ZodString", "status", "tooBig", "tooSmall", "validation", "options", "minLength", "maxLength", "len", "ch", "min", "max", "floatSafeRemainder", "step", "valDecCount", "stepDecCount", "decCount", "valInt", "stepInt", "ZodNumber", "_ZodNumber", "inclusive", "ZodBigInt", "_ZodBigInt", "ZodBoolean", "ZodDate", "_ZodDate", "minDate", "maxDate", "ZodSymbol", "ZodUndefined", "ZodNull", "ZodAny", "ZodUnknown", "ZodNever", "ZodVoid", "_ZodArray", "item", "i", "schema", "deepPartialify", "ZodObject", "newShape", "fieldSchema", "ZodTuple", "_ZodObject", "shape", "keys", "shapeKeys", "extraKeys", "pairs", "keyValidator", "unknownKeys", "catchall", "syncPairs", "pair", "issue", "_c", "_d", "defaultError", "augmentation", "merging", "index", "mask", "newField", "createZodEnum", "handleResults", "results", "unionErrors", "childCtx", "dirty", "issues", "types", "getDiscriminator", "type", "ZodLazy", "ZodLiteral", "ZodEnum", "ZodNativeEnum", "ZodDiscriminatedUnion", "_ZodDiscriminatedUnion", "discriminator", "discriminatorValue", "optionsMap", "discriminatorValues", "mergeValues", "a", "b", "aType", "bType", "bKeys", "sharedKeys", "newObj", "sharedValue", "newArray", "itemA", "itemB", "handleParsed", "parsedLeft", "parsedRight", "merged", "left", "right", "_ZodTuple", "items", "itemIndex", "x", "rest", "schemas", "ZodRecord", "_ZodRecord", "keyType", "valueType", "first", "second", "third", "ZodMap", "finalMap", "ZodSet", "_ZodSet", "finalizeSet", "elements", "parsedSet", "element", "minSize", "maxSize", "size", "ZodFunction", "_ZodFunction", "makeArgsIssue", "makeReturnsIssue", "returns", "fn", "me", "parsedArgs", "e", "parsedReturns", "returnType", "func", "getter", "values", "_ZodEnum", "expectedValues", "enumValues", "newDef", "opt", "nativeEnumValues", "promisified", "effect", "checkCtx", "arg", "processed", "executeRefinement", "acc", "inner", "base", "preprocess", "newCtx", "ZodNaN", "_ZodPipeline", "inResult", "freeze", "custom", "fatal", "p", "_fatal", "p2", "instanceOfType", "cls", "stringType", "numberType", "nanType", "bigIntType", "booleanType", "dateType", "symbolType", "undefinedType", "nullType", "anyType", "unknownType", "neverType", "voidType", "arrayType", "objectType", "strictObjectType", "unionType", "discriminatedUnionType", "intersectionType", "tupleType", "recordType", "mapType", "setType", "functionType", "lazyType", "literalType", "enumType", "nativeEnumType", "promiseType", "effectsType", "optionalType", "nullableType", "preprocessType", "pipelineType", "ostring", "onumber", "oboolean", "require_external", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "__exportStar", "p", "require_lib", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "__setModuleDefault", "v", "__importStar", "mod", "result", "__exportStar", "p", "z", "exports", "ensureValidHandle", "handle", "InvalidHandleError", "labels", "i", "l", "ensureValidHandleRegex", "normalizeHandle", "normalizeAndEnsureValidHandle", "normalized", "isValidHandle", "err", "isValidTld", "domain", "ReservedHandleError", "UnsupportedDomainError", "DisallowedDomainError", "ensureValidDid", "did", "InvalidDidError", "length", "method", "exports", "ensureValidDidRegex", "NSID", "_NSID", "nsid", "authority", "name", "segments", "exports", "ensureValidNsid", "toCheck", "InvalidNsidError", "labels", "l", "ensureValidNsidRegex", "did_1", "handle_1", "nsid_1", "ensureValidAtUri", "uri", "uriParts", "fragmentPart", "parts", "exports", "ensureValidAtUriRegex", "aturiRegex", "rm", "groups", "__exportStar", "exports", "RELATIVE_REGEX", "AtUri", "_AtUri", "uri", "base", "parsed", "parse", "relativep", "parseRelative", "handleOrDid", "collection", "rkey", "str", "v", "parts", "path", "qs", "hash", "match", "TID_LENGTH", "TID_REGEX", "ensureValidTid", "tid", "InvalidTidError", "exports", "isValidTid", "ensureValidRecordKey", "rkey", "InvalidRecordKeyError", "exports", "isValidRecordKey", "err", "ensureValidDatetime", "dtStr", "date", "InvalidDatetimeError", "exports", "isValidDatetime", "err", "normalizeDatetime", "outStr", "tzStr", "isoStr", "normalizeDatetimeAlways", "__exportStar", "exports", "exports", "toLexUri", "requiredPropertiesRefinement", "zod_1", "str", "baseUri", "object", "ctx", "field", "exports", "isValidLexiconDoc", "isObj", "isDiscriminatedObject", "parseLexiconDoc", "zod_1", "syntax_1", "util_1", "val", "v", "doc", "ctx", "defId", "def", "ValidationError", "InvalidLexiconError", "LexiconDefNotFoundError", "require_varint", "__commonJSMin", "exports", "module", "encode_1", "encode", "MSB", "REST", "MSBALL", "INT", "num", "out", "offset", "oldOffset", "decode", "read", "MSB$1", "REST$1", "buf", "res", "shift", "counter", "b", "l", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "value", "varint", "_brrp_varint", "varint$1", "require_varint", "__commonJSMin", "exports", "varint$1", "decode", "data", "offset", "encodeTo", "int", "target", "encodingLength", "require_bytes", "__commonJSMin", "exports", "empty", "toHex", "d", "hex", "byte", "fromHex", "hexes", "b", "equals", "aa", "bb", "ii", "coerce", "o", "isBinary", "fromString", "str", "toString", "require_digest", "__commonJSMin", "exports", "bytes", "varint", "create", "code", "digest", "size", "sizeOffset", "digestOffset", "Digest", "decode", "multihash", "bytes$1", "equals", "a", "b", "require_base_x", "__commonJSMin", "exports", "module", "base", "ALPHABET", "name", "BASE_MAP", "j", "i", "x", "xc", "BASE", "LEADER", "FACTOR", "iFACTOR", "encode", "source", "zeroes", "length", "pbegin", "pend", "size", "b58", "carry", "it1", "it2", "str", "decodeUnsafe", "psz", "b256", "it3", "it4", "vch", "decode", "string", "buffer", "src", "_brrp__multiformats_scope_baseX", "require_base", "__commonJSMin", "exports", "baseX$1", "bytes", "Encoder", "name", "prefix", "baseEncode", "Decoder", "baseDecode", "text", "decoder", "or", "ComposedDecoder", "decoders", "input", "left", "right", "Codec", "from", "encode", "decode", "baseX", "alphabet", "string", "bitsPerChar", "codes", "i", "end", "out", "bits", "buffer", "written", "value", "data", "pad", "mask", "rfc4648", "require_base58", "__commonJSMin", "exports", "base", "base58btc", "base58flickr", "require_base32", "__commonJSMin", "exports", "base", "base32", "base32upper", "base32pad", "base32padupper", "base32hex", "base32hexupper", "base32hexpad", "base32hexpadupper", "base32z", "require_cid", "__commonJSMin", "exports", "varint", "digest", "base58", "base32", "bytes", "CID", "_CID", "version", "code", "multihash", "hidden", "readonly", "DAG_PB_CODE", "SHA_256_CODE", "digest$1", "other", "base", "_baseCache", "toStringV0", "toStringV1", "value", "deprecate", "IS_CID_DEPRECATION", "cidSymbol", "encodeCID", "cid", "remainder", "bytes$1", "specs", "prefixSize", "multihashBytes", "digestBytes", "initialBytes", "offset", "next", "i", "length", "codec", "multihashCode", "digestSize", "size", "multihashSize", "source", "prefix", "parseCIDtoBytes", "decoder", "cache", "codeOffset", "hashOffset", "range", "message", "is", "obj", "def", "exports", "create", "v", "assure", "isObject", "exports", "omit", "noUndefinedVals", "obj", "k", "src", "rejectedKeys", "dst", "srcKeys", "i", "key", "jitter", "maxMs", "wait", "ms", "res", "bailableWait", "bail", "waitPromise", "timeout", "flattenUint8Arrays", "arrs", "length", "acc", "cur", "flattened", "offset", "arr", "streamToBuffer", "stream", "arrays", "chunk", "S32_CHAR", "s32encode", "s", "c", "s32decode", "asyncFilter", "fn", "results", "t", "_", "isErrnoException", "err", "errHasMsg", "msg", "chunkArray", "chunkSize", "chunkI", "range", "num", "nums", "dedupeStrs", "strs", "parseIntWithFallback", "value", "fallback", "parsed", "exports", "keyBy", "arr", "key", "acc", "cur", "mapDefined", "fn", "output", "item", "val", "exports", "allFulfilled", "handleAllSettledErrors", "isRejectedResult", "isFulfilledResult", "util_1", "readFromGenerator", "gen", "isDone", "waitFor", "maxLength", "evts", "bail", "hasBroke", "awaitDone", "bailable", "breakOn", "resolve", "maybeEvt", "evt", "createDeferrable", "promise", "res", "createDeferrables", "count", "list", "i", "allComplete", "deferrables", "d", "AsyncBuffer", "maxSize", "r", "item", "items", "AsyncBufferFullError", "first", "rest", "err", "promises", "results", "errors", "extractReason", "extractValue", "stringifyReason", "result", "reason", "util_1", "TID_LEN", "lastTimestamp", "timestampCount", "clockid", "dedash", "str", "TID", "_TID", "noDashes", "prev", "time", "timestamp", "tid", "a", "b", "other", "exports", "require_compare", "__commonJSMin", "exports", "compare", "a", "b", "i", "require_concat", "__commonJSMin", "exports", "concat", "arrays", "length", "acc", "curr", "output", "offset", "arr", "require_equals", "__commonJSMin", "exports", "equals", "a", "b", "i", "require_identity", "__commonJSMin", "exports", "base", "bytes", "identity", "buf", "str", "require_base2", "__commonJSMin", "exports", "base", "base2", "require_base8", "__commonJSMin", "exports", "base", "base8", "require_base10", "__commonJSMin", "exports", "base", "base10", "require_base16", "__commonJSMin", "exports", "base", "base16", "base16upper", "require_base36", "__commonJSMin", "exports", "base", "base36", "base36upper", "require_base64", "__commonJSMin", "exports", "base", "base64", "base64pad", "base64url", "base64urlpad", "require_base256emoji", "__commonJSMin", "exports", "base", "alphabet", "alphabetBytesToChars", "p", "c", "i", "alphabetCharsToBytes", "encode", "data", "decode", "str", "byts", "char", "byt", "base256emoji", "require_hasher", "__commonJSMin", "exports", "digest", "from", "name", "code", "encode", "Hasher", "input", "result", "digest$1", "require_sha2", "__commonJSMin", "exports", "crypto", "hasher", "bytes", "_interopDefaultLegacy", "e", "crypto__default", "sha256", "input", "sha512", "require_identity", "__commonJSMin", "exports", "bytes", "digest$1", "code", "name", "encode", "digest", "input", "identity", "require_raw", "__commonJSMin", "exports", "bytes", "name", "code", "encode", "node", "decode", "data", "require_json", "__commonJSMin", "exports", "textEncoder", "textDecoder", "name", "code", "encode", "node", "decode", "data", "require_src", "__commonJSMin", "exports", "cid", "varint", "bytes", "hasher", "digest", "require_basics", "__commonJSMin", "exports", "identity", "base2", "base8", "base10", "base16", "base32", "base36", "base58", "base64", "base256emoji", "sha2", "identity$1", "raw", "json", "cid", "hasher", "digest", "varint", "bytes", "bases", "hashes", "codecs", "require_bases", "__commonJSMin", "exports", "module", "basics", "createCodec", "name", "prefix", "encode", "decode", "string", "buf", "str", "ascii", "i", "BASES", "require_from_string", "__commonJSMin", "exports", "bases", "fromString", "string", "encoding", "base", "require_to_string", "__commonJSMin", "exports", "bases", "toString", "array", "encoding", "base", "require_xor", "__commonJSMin", "exports", "xor", "a", "b", "result", "require_src", "__commonJSMin", "exports", "compare", "concat", "equals", "fromString", "toString", "xor", "cid_1", "ui8", "__importStar", "jsonToIpld", "val", "item", "exports", "toReturn", "key", "ipldToJson", "ipldEquals", "a", "b", "i", "exports", "retry", "createRetryable", "backoffMs", "util_1", "fn", "opts", "maxRetries", "retryable", "getWaitMs", "retries", "doneError", "err", "waitMs", "n", "multiplier", "max", "exponentialMs", "ms", "jitter", "value", "delta", "randomRange", "from", "to", "cid_1", "zod_1", "cidSchema", "obj", "exports", "exports", "lessThanAgoMs", "time", "range", "addHoursToDate", "hours", "startingDate", "currentDate", "require_boundaries", "__commonJSMin", "exports", "CLUSTER_BREAK", "require_GraphemerHelper", "__commonJSMin", "exports", "boundaries_1", "NotBreak", "BreakStart", "Break", "BreakLastRegional", "BreakPenultimateRegional", "GraphemerHelper", "str", "pos", "idx", "code", "hi", "low", "start", "mid", "end", "startEmoji", "midEmoji", "endEmoji", "all", "allEmoji", "previous", "next", "nextEmoji", "rIIndex", "c", "previousNonExtendIndex", "require_GraphemerIterator", "__commonJSMin", "exports", "GraphemerIterator", "str", "nextBreak", "brk", "value", "require_Graphemer", "__commonJSMin", "exports", "__importDefault", "mod", "boundaries_1", "GraphemerHelper_1", "GraphemerIterator_1", "Graphemer", "_Graphemer", "string", "index", "prevCP", "prev", "prevEmoji", "mid", "midEmoji", "i", "nextCP", "next", "nextEmoji", "str", "res", "brk", "count", "code", "require_lib", "__commonJSMin", "exports", "__importDefault", "mod", "Graphemer_1", "graphemer_1", "__importDefault", "ui8", "__importStar", "utf8Len", "str", "exports", "graphemeLen", "utf8ToB64Url", "utf8", "b64UrlToUtf8", "b64", "parseLanguage", "langTag", "parsed", "bcp47Regexp", "parts", "validateLanguage", "zod_1", "isValidDidDoc", "doc", "exports", "getDid", "id", "getHandle", "aka", "i", "alias", "getSigningKey", "getVerificationMaterial", "keyId", "key", "findItemById", "getSigningDidKey", "parsed", "getPdsEndpoint", "getFeedGenEndpoint", "getNotifEndpoint", "getServiceEndpoint", "opts", "service", "validateUrl", "type", "items", "item", "itemId", "urlStr", "canParseUrl", "verificationMethod", "exports", "__importStar", "__exportStar", "cid_1", "zod_1", "common_web_1", "exports", "BlobRef", "_BlobRef", "ref", "mimeType", "size", "original", "obj", "json", "exports", "blob", "blob_refs_1", "types_1", "lexicons", "path", "def", "value", "require_dist", "__commonJSMin", "exports", "e", "t", "r", "n", "i", "o", "a", "u", "d", "s", "exports", "datetime", "uri", "atUri", "did", "handle", "atIdentifier", "nsid", "cid", "language", "tid", "recordKey", "iso_datestring_validator_1", "cid_1", "common_web_1", "syntax_1", "types_1", "path", "value", "didResult", "handleResult", "exports", "validate", "cid_1", "common_web_1", "types_1", "formats", "__importStar", "lexicons", "path", "def", "value", "boolean", "integer", "string", "bytes", "cidLink", "unknown", "type", "canSkipUtf8LenChecks", "len", "needsMaxGraphemesCheck", "needsMinGraphemesCheck", "exports", "validate", "array", "object", "validateOneOf", "types_1", "util_1", "blob_1", "primitives_1", "lexicons", "path", "def", "value", "itemsDef", "i", "itemValue", "itemPath", "res", "resultValue", "key", "keyValue", "propDef", "propPath", "validated", "propValue", "mustBeObj", "concreteDef", "refsContainType", "refs", "type", "lexUri", "exports", "params", "types_1", "complex_1", "PrimitiveValidators", "__importStar", "lexicons", "path", "def", "val", "value", "requiredProps", "resultValue", "key", "propDef", "validated", "propValue", "propIsUndefined", "exports", "assertValidRecord", "assertValidXrpcParams", "assertValidXrpcInput", "assertValidXrpcOutput", "assertValidXrpcMessage", "complex_1", "xrpc_1", "lexicons", "def", "value", "res", "assertValidOneOf", "path", "mustBeObj", "types_1", "util_1", "validation_1", "complex_1", "Lexicons", "docs", "doc", "uri", "resolveRefUris", "defUri", "def", "iterDefs", "_def", "types", "lexUri", "value", "lexUriNormalized", "$type", "ref", "exports", "defId", "obj", "baseUri", "k", "item", "cid_1", "common_web_1", "blob_refs_1", "lexToIpld", "val", "item", "exports", "toReturn", "key", "ipldToLex", "lexToJson", "stringifyLex", "jsonToLex", "jsonStringToLex", "__exportStar", "exports", "exports", "is$typed", "maybe$typed", "asPredicate", "isObject", "v", "is$type", "$type", "id", "hash", "validate", "exports", "validate", "lexicon_1", "util_js_1", "v", "id", "hash", "requiredType", "require_types", "__commonJSMin", "exports", "exports", "exports", "sanitizeMutedWordValue", "savedFeedsToUriArrays", "getSavedFeedType", "validateSavedFeed", "validateNux", "zod_1", "common_web_1", "syntax_1", "value", "savedFeeds", "pinned", "saved", "feed", "uri", "savedFeed", "isFeed", "isList", "isDid", "str", "asDid", "nux", "exports", "httpResponseCodeToEnum", "httpResponseCodeToName", "httpResponseCodeToString", "zod_1", "ResponseType", "status", "XRPCResponse", "data", "headers", "XRPCError", "_XRPCError", "statusCode", "error", "message", "options", "cause", "fallbackStatus", "causeErr", "causeResponse", "XRPCInvalidResponseError", "lexiconNsid", "validationError", "responseBody", "exports", "isErrorResponseBody", "getMethodSchemaHTTPMethod", "constructMethodCallUri", "constructMethodCallUrl", "encodeQueryParam", "constructMethodCallHeaders", "combineHeaders", "isBodyInit", "isIterable", "encodeMethodCallBody", "httpResponseBodyParse", "lexicon_1", "types_1", "ReadableStream", "v", "schema", "nsid", "serviceUri", "params", "pathname", "searchParams", "key", "value", "paramSchema", "values", "val", "type", "data", "opts", "headers", "name", "isBlobLike", "headersInit", "defaultHeaders", "definition", "tag", "contentType", "iterableToReadableStream", "json", "iterable", "mimeType", "str", "cause", "exports", "buildFetchHandler", "util_1", "options", "service", "defaultHeaders", "fetch", "defaultHeadersEntries", "url", "init", "base", "fullUrl", "headers", "lexicon_1", "fetch_handler_1", "types_1", "util_1", "XrpcClient", "fetchHandlerOpts", "lex", "key", "value", "methodNsid", "params", "data", "opts", "def", "reqUrl", "reqMethod", "reqHeaders", "reqBody", "init", "response", "resStatus", "resHeaders", "resBodyBytes", "resBody", "resCode", "error", "message", "e", "err", "exports", "lexicon_1", "util_1", "xrpc_client_1", "Client", "_", "serviceUri", "methodNsid", "params", "data", "opts", "ServiceClient", "doc", "docs", "uri", "exports", "baseClient", "input", "init", "headers", "__exportStar", "exports", "client_1", "defaultInst", "exports", "toKnownErr", "isCreate", "validateCreate", "isUpdate", "validateUpdate", "isDelete", "validateDelete", "isCreateResult", "validateCreateResult", "isUpdateResult", "validateUpdateResult", "isDeleteResult", "validateDeleteResult", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "id", "InvalidSwapError", "src", "e", "hashCreate", "v", "hashUpdate", "hashDelete", "hashCreateResult", "hashUpdateResult", "hashDeleteResult", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "InvalidSwapError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "InvalidSwapError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "RecordNotFoundError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "InvalidSwapError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "AccountNotFoundError", "src", "ExpiredTokenError", "InvalidTokenError", "InvalidEmailError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "InvalidHandleError", "src", "InvalidPasswordError", "InvalidInviteCodeError", "HandleNotAvailableError", "UnsupportedDomainError", "UnresolvableDidError", "IncompatibleDidDocError", "e", "exports", "toKnownErr", "isAppPassword", "validateAppPassword", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "id", "AccountTakedownError", "src", "e", "hashAppPassword", "v", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "AccountTakedownError", "src", "AuthFactorTokenRequiredError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "ExpiredTokenError", "src", "InvalidTokenError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "DuplicateCreateError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "BadExpirationError", "src", "e", "exports", "toKnownErr", "isAppPassword", "validateAppPassword", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "id", "AccountTakedownError", "src", "e", "hashAppPassword", "v", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "AccountTakedownError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "ExpiredTokenError", "src", "InvalidTokenError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "ExpiredTokenError", "src", "InvalidTokenError", "TokenRequiredError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "BlobNotFoundError", "src", "RepoNotFoundError", "RepoTakendownError", "RepoSuspendedError", "RepoDeactivatedError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "BlockNotFoundError", "src", "RepoNotFoundError", "RepoTakendownError", "RepoSuspendedError", "RepoDeactivatedError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "HeadNotFoundError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "RepoNotFoundError", "src", "RepoTakendownError", "RepoSuspendedError", "RepoDeactivatedError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "RecordNotFoundError", "src", "RepoNotFoundError", "RepoTakendownError", "RepoSuspendedError", "RepoDeactivatedError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "RepoNotFoundError", "src", "RepoTakendownError", "RepoSuspendedError", "RepoDeactivatedError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "RepoNotFoundError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "RepoNotFoundError", "src", "RepoTakendownError", "RepoSuspendedError", "RepoDeactivatedError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "BlockedActorError", "src", "BlockedByActorError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "BlockedActorError", "src", "BlockedByActorError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "UnknownFeedError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "UnknownFeedError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "UnknownListError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "NotFoundError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "BadQueryStringError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "ActorNotFoundError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "BadQueryStringError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "BadQueryStringError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "BadQueryStringError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "DuplicateTemplateNameError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "DuplicateTemplateNameError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "SubjectHasActionError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "RecordNotFoundError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "RepoNotFoundError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "SetNotFoundError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "SetNotFoundError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "SetNotFoundError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "MemberAlreadyExistsError", "src", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "MemberNotFoundError", "src", "CannotDeleteSelfError", "e", "exports", "toKnownErr", "xrpc_1", "lexicons_1", "util_1", "is$typed", "validate", "MemberNotFoundError", "src", "e", "exports", "isStatusAttr", "validateStatusAttr", "isAccountView", "validateAccountView", "isRepoRef", "validateRepoRef", "isRepoBlobRef", "validateRepoBlobRef", "isThreatSignature", "validateThreatSignature", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashStatusAttr", "v", "hashAccountView", "hashRepoRef", "hashRepoBlobRef", "hashThreatSignature", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isLabel", "validateLabel", "isSelfLabels", "validateSelfLabels", "isSelfLabel", "validateSelfLabel", "isLabelValueDefinition", "validateLabelValueDefinition", "isLabelValueDefinitionStrings", "validateLabelValueDefinitionStrings", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashLabel", "v", "hashSelfLabels", "hashSelfLabel", "hashLabelValueDefinition", "hashLabelValueDefinitionStrings", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isLabels", "validateLabels", "isInfo", "validateInfo", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashLabels", "v", "hashInfo", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "lexicons_1", "util_1", "is$typed", "validate", "id", "exports", "exports", "isCommitMeta", "validateCommitMeta", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashCommitMeta", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "isRecordBlob", "validateRecordBlob", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashRecordBlob", "v", "exports", "toKnownErr", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashRecord", "v", "exports", "isMain", "validateMain", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashMain", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "isAccountCodes", "validateAccountCodes", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashAccountCodes", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isInviteCode", "validateInviteCode", "isInviteCodeUse", "validateInviteCodeUse", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashInviteCode", "v", "hashInviteCodeUse", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "isLinks", "validateLinks", "isContact", "validateContact", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashLinks", "v", "hashContact", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "isRepo", "validateRepo", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashRepo", "v", "exports", "toKnownErr", "isRepo", "validateRepo", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashRepo", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isCommit", "validateCommit", "isSync", "validateSync", "isIdentity", "validateIdentity", "isAccount", "validateAccount", "isHandle", "validateHandle", "isMigrate", "validateMigrate", "isTombstone", "validateTombstone", "isInfo", "validateInfo", "isRepoOp", "validateRepoOp", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashCommit", "v", "hashSync", "hashIdentity", "hashAccount", "hashHandle", "hashMigrate", "hashTombstone", "hashInfo", "hashRepoOp", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isProfileViewBasic", "validateProfileViewBasic", "isProfileView", "validateProfileView", "isProfileViewDetailed", "validateProfileViewDetailed", "isProfileAssociated", "validateProfileAssociated", "isProfileAssociatedChat", "validateProfileAssociatedChat", "isViewerState", "validateViewerState", "isKnownFollowers", "validateKnownFollowers", "isAdultContentPref", "validateAdultContentPref", "isContentLabelPref", "validateContentLabelPref", "isSavedFeed", "validateSavedFeed", "isSavedFeedsPrefV2", "validateSavedFeedsPrefV2", "isSavedFeedsPref", "validateSavedFeedsPref", "isPersonalDetailsPref", "validatePersonalDetailsPref", "isFeedViewPref", "validateFeedViewPref", "isThreadViewPref", "validateThreadViewPref", "isInterestsPref", "validateInterestsPref", "isMutedWord", "validateMutedWord", "isMutedWordsPref", "validateMutedWordsPref", "isHiddenPostsPref", "validateHiddenPostsPref", "isLabelersPref", "validateLabelersPref", "isLabelerPrefItem", "validateLabelerPrefItem", "isBskyAppStatePref", "validateBskyAppStatePref", "isBskyAppProgressGuide", "validateBskyAppProgressGuide", "isNux", "validateNux", "isPostInteractionSettingsPref", "validatePostInteractionSettingsPref", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashProfileViewBasic", "v", "hashProfileView", "hashProfileViewDetailed", "hashProfileAssociated", "hashProfileAssociatedChat", "hashViewerState", "hashKnownFollowers", "hashAdultContentPref", "hashContentLabelPref", "hashSavedFeed", "hashSavedFeedsPrefV2", "hashSavedFeedsPref", "hashPersonalDetailsPref", "hashFeedViewPref", "hashThreadViewPref", "hashInterestsPref", "hashMutedWord", "hashMutedWordsPref", "hashHiddenPostsPref", "hashLabelersPref", "hashLabelerPrefItem", "hashBskyAppStatePref", "hashBskyAppProgressGuide", "hashNux", "hashPostInteractionSettingsPref", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isAspectRatio", "validateAspectRatio", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashAspectRatio", "v", "exports", "isMain", "validateMain", "isExternal", "validateExternal", "isView", "validateView", "isViewExternal", "validateViewExternal", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashMain", "v", "hashExternal", "hashView", "hashViewExternal", "exports", "isMain", "validateMain", "isImage", "validateImage", "isView", "validateView", "isViewImage", "validateViewImage", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashMain", "v", "hashImage", "hashView", "hashViewImage", "exports", "isMain", "validateMain", "isView", "validateView", "isViewRecord", "validateViewRecord", "isViewNotFound", "validateViewNotFound", "isViewBlocked", "validateViewBlocked", "isViewDetached", "validateViewDetached", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashMain", "v", "hashView", "hashViewRecord", "hashViewNotFound", "hashViewBlocked", "hashViewDetached", "exports", "isMain", "validateMain", "isView", "validateView", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashMain", "v", "hashView", "exports", "isMain", "validateMain", "isCaption", "validateCaption", "isView", "validateView", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashMain", "v", "hashCaption", "hashView", "exports", "isPostView", "validatePostView", "isViewerState", "validateViewerState", "isThreadContext", "validateThreadContext", "isFeedViewPost", "validateFeedViewPost", "isReplyRef", "validateReplyRef", "isReasonRepost", "validateReasonRepost", "isReasonPin", "validateReasonPin", "isThreadViewPost", "validateThreadViewPost", "isNotFoundPost", "validateNotFoundPost", "isBlockedPost", "validateBlockedPost", "isBlockedAuthor", "validateBlockedAuthor", "isGeneratorView", "validateGeneratorView", "isGeneratorViewerState", "validateGeneratorViewerState", "isSkeletonFeedPost", "validateSkeletonFeedPost", "isSkeletonReasonRepost", "validateSkeletonReasonRepost", "isSkeletonReasonPin", "validateSkeletonReasonPin", "isThreadgateView", "validateThreadgateView", "isInteraction", "validateInteraction", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashPostView", "v", "hashViewerState", "hashThreadContext", "hashFeedViewPost", "hashReplyRef", "hashReasonRepost", "hashReasonPin", "hashThreadViewPost", "hashNotFoundPost", "hashBlockedPost", "hashBlockedAuthor", "hashGeneratorView", "hashGeneratorViewerState", "hashSkeletonFeedPost", "hashSkeletonReasonRepost", "hashSkeletonReasonPin", "hashThreadgateView", "hashInteraction", "exports", "toKnownErr", "isFeed", "validateFeed", "isLinks", "validateLinks", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashFeed", "v", "hashLinks", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "isLike", "validateLike", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashLike", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "isRecord", "validateRecord", "isReplyRef", "validateReplyRef", "isEntity", "validateEntity", "isTextSlice", "validateTextSlice", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "hashReplyRef", "hashEntity", "hashTextSlice", "exports", "isRecord", "validateRecord", "isDisableRule", "validateDisableRule", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "hashDisableRule", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isRecord", "validateRecord", "isMentionRule", "validateMentionRule", "isFollowerRule", "validateFollowerRule", "isFollowingRule", "validateFollowingRule", "isListRule", "validateListRule", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "hashMentionRule", "hashFollowerRule", "hashFollowingRule", "hashListRule", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "isListViewBasic", "validateListViewBasic", "isListView", "validateListView", "isListItemView", "validateListItemView", "isStarterPackView", "validateStarterPackView", "isStarterPackViewBasic", "validateStarterPackViewBasic", "isListViewerState", "validateListViewerState", "isNotFoundActor", "validateNotFoundActor", "isRelationship", "validateRelationship", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashListViewBasic", "v", "hashListView", "hashListItemView", "hashStarterPackView", "hashStarterPackViewBasic", "hashListViewerState", "hashNotFoundActor", "hashRelationship", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isRecord", "validateRecord", "isFeedItem", "validateFeedItem", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "hashFeedItem", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isLabelerView", "validateLabelerView", "isLabelerViewDetailed", "validateLabelerViewDetailed", "isLabelerViewerState", "validateLabelerViewerState", "isLabelerPolicies", "validateLabelerPolicies", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashLabelerView", "v", "hashLabelerViewDetailed", "hashLabelerViewerState", "hashLabelerPolicies", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "isNotification", "validateNotification", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashNotification", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isMain", "validateMain", "isMention", "validateMention", "isLink", "validateLink", "isTag", "validateTag", "isByteSlice", "validateByteSlice", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashMain", "v", "hashMention", "hashLink", "hashTag", "hashByteSlice", "exports", "isSkeletonSearchPost", "validateSkeletonSearchPost", "isSkeletonSearchActor", "validateSkeletonSearchActor", "isSkeletonSearchStarterPack", "validateSkeletonSearchStarterPack", "isTrendingTopic", "validateTrendingTopic", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashSkeletonSearchPost", "v", "hashSkeletonSearchActor", "hashSkeletonSearchStarterPack", "hashTrendingTopic", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "isSuggestion", "validateSuggestion", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashSuggestion", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isJobStatus", "validateJobStatus", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashJobStatus", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isRecord", "validateRecord", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashRecord", "v", "exports", "isProfileViewBasic", "validateProfileViewBasic", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashProfileViewBasic", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isMessageRef", "validateMessageRef", "isMessageInput", "validateMessageInput", "isMessageView", "validateMessageView", "isDeletedMessageView", "validateDeletedMessageView", "isMessageViewSender", "validateMessageViewSender", "isConvoView", "validateConvoView", "isLogBeginConvo", "validateLogBeginConvo", "isLogAcceptConvo", "validateLogAcceptConvo", "isLogLeaveConvo", "validateLogLeaveConvo", "isLogMuteConvo", "validateLogMuteConvo", "isLogUnmuteConvo", "validateLogUnmuteConvo", "isLogCreateMessage", "validateLogCreateMessage", "isLogDeleteMessage", "validateLogDeleteMessage", "isLogReadMessage", "validateLogReadMessage", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashMessageRef", "v", "hashMessageInput", "hashMessageView", "hashDeletedMessageView", "hashMessageViewSender", "hashConvoView", "hashLogBeginConvo", "hashLogAcceptConvo", "hashLogLeaveConvo", "hashLogMuteConvo", "hashLogUnmuteConvo", "hashLogCreateMessage", "hashLogDeleteMessage", "hashLogReadMessage", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "isBatchItem", "validateBatchItem", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashBatchItem", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "isMetadata", "validateMetadata", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashMetadata", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isTemplateView", "validateTemplateView", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashTemplateView", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isModEventView", "validateModEventView", "isModEventViewDetail", "validateModEventViewDetail", "isSubjectStatusView", "validateSubjectStatusView", "isAccountStats", "validateAccountStats", "isRecordsStats", "validateRecordsStats", "isModEventTakedown", "validateModEventTakedown", "isModEventReverseTakedown", "validateModEventReverseTakedown", "isModEventResolveAppeal", "validateModEventResolveAppeal", "isModEventComment", "validateModEventComment", "isModEventReport", "validateModEventReport", "isModEventLabel", "validateModEventLabel", "isModEventPriorityScore", "validateModEventPriorityScore", "isModEventAcknowledge", "validateModEventAcknowledge", "isModEventEscalate", "validateModEventEscalate", "isModEventMute", "validateModEventMute", "isModEventUnmute", "validateModEventUnmute", "isModEventMuteReporter", "validateModEventMuteReporter", "isModEventUnmuteReporter", "validateModEventUnmuteReporter", "isModEventEmail", "validateModEventEmail", "isModEventDivert", "validateModEventDivert", "isModEventTag", "validateModEventTag", "isAccountEvent", "validateAccountEvent", "isIdentityEvent", "validateIdentityEvent", "isRecordEvent", "validateRecordEvent", "isRepoView", "validateRepoView", "isRepoViewDetail", "validateRepoViewDetail", "isRepoViewNotFound", "validateRepoViewNotFound", "isRecordView", "validateRecordView", "isRecordViewDetail", "validateRecordViewDetail", "isRecordViewNotFound", "validateRecordViewNotFound", "isModeration", "validateModeration", "isModerationDetail", "validateModerationDetail", "isBlobView", "validateBlobView", "isImageDetails", "validateImageDetails", "isVideoDetails", "validateVideoDetails", "isAccountHosting", "validateAccountHosting", "isRecordHosting", "validateRecordHosting", "isReporterStats", "validateReporterStats", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashModEventView", "v", "hashModEventViewDetail", "hashSubjectStatusView", "hashAccountStats", "hashRecordsStats", "hashModEventTakedown", "hashModEventReverseTakedown", "hashModEventResolveAppeal", "hashModEventComment", "hashModEventReport", "hashModEventLabel", "hashModEventPriorityScore", "hashModEventAcknowledge", "hashModEventEscalate", "hashModEventMute", "hashModEventUnmute", "hashModEventMuteReporter", "hashModEventUnmuteReporter", "hashModEventEmail", "hashModEventDivert", "hashModEventTag", "hashAccountEvent", "hashIdentityEvent", "hashRecordEvent", "hashRepoView", "hashRepoViewDetail", "hashRepoViewNotFound", "hashRecordView", "hashRecordViewDetail", "hashRecordViewNotFound", "hashModeration", "hashModerationDetail", "hashBlobView", "hashImageDetails", "hashVideoDetails", "hashAccountHosting", "hashRecordHosting", "hashReporterStats", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "isServiceConfig", "validateServiceConfig", "isViewerConfig", "validateViewerConfig", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashServiceConfig", "v", "hashViewerConfig", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isSet", "validateSet", "isSetView", "validateSetView", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashSet", "v", "hashSetView", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isOption", "validateOption", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashOption", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isSigDetail", "validateSigDetail", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashSigDetail", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "toKnownErr", "isRelatedAccount", "validateRelatedAccount", "lexicons_1", "util_1", "is$typed", "validate", "id", "e", "hashRelatedAccount", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "exports", "isMember", "validateMember", "lexicons_1", "util_1", "is$typed", "validate", "id", "hashMember", "v", "exports", "toKnownErr", "lexicons_1", "util_1", "is$typed", "validate", "e", "xrpc_1", "lexicons_js_1", "ComAtprotoRepoApplyWrites", "__importStar", "ComAtprotoRepoCreateRecord", "ComAtprotoRepoDeleteRecord", "ComAtprotoRepoGetRecord", "ComAtprotoRepoPutRecord", "ComAtprotoServerConfirmEmail", "ComAtprotoServerCreateAccount", "ComAtprotoServerCreateAppPassword", "ComAtprotoServerCreateSession", "ComAtprotoServerDeleteAccount", "ComAtprotoServerGetAccountInviteCodes", "ComAtprotoServerGetServiceAuth", "ComAtprotoServerListAppPasswords", "ComAtprotoServerRefreshSession", "ComAtprotoServerResetPassword", "ComAtprotoServerUpdateEmail", "ComAtprotoSyncGetBlob", "ComAtprotoSyncGetBlocks", "ComAtprotoSyncGetHead", "ComAtprotoSyncGetLatestCommit", "ComAtprotoSyncGetRecord", "ComAtprotoSyncGetRepo", "ComAtprotoSyncGetRepoStatus", "ComAtprotoSyncListBlobs", "AppBskyFeedGetActorLikes", "AppBskyFeedGetAuthorFeed", "AppBskyFeedGetFeed", "AppBskyFeedGetFeedSkeleton", "AppBskyFeedGetListFeed", "AppBskyFeedGetPostThread", "AppBskyFeedSearchPosts", "AppBskyGraphGetRelationships", "AppBskyUnspeccedSearchActorsSkeleton", "AppBskyUnspeccedSearchPostsSkeleton", "AppBskyUnspeccedSearchStarterPacksSkeleton", "ToolsOzoneCommunicationCreateTemplate", "ToolsOzoneCommunicationUpdateTemplate", "ToolsOzoneModerationEmitEvent", "ToolsOzoneModerationGetRecord", "ToolsOzoneModerationGetRepo", "ToolsOzoneSetDeleteSet", "ToolsOzoneSetDeleteValues", "ToolsOzoneSetGetValues", "ToolsOzoneTeamAddMember", "ToolsOzoneTeamDeleteMember", "ToolsOzoneTeamUpdateMember", "exports", "AtpBaseClient", "options", "ComNS", "AppNS", "ChatNS", "ToolsNS", "client", "ComAtprotoNS", "ComAtprotoAdminNS", "ComAtprotoIdentityNS", "ComAtprotoLabelNS", "ComAtprotoLexiconNS", "ComAtprotoModerationNS", "ComAtprotoRepoNS", "ComAtprotoServerNS", "ComAtprotoSyncNS", "ComAtprotoTempNS", "data", "opts", "params", "SchemaRecord", "record", "headers", "collection", "e", "AppBskyNS", "AppBskyActorNS", "AppBskyEmbedNS", "AppBskyFeedNS", "AppBskyGraphNS", "AppBskyLabelerNS", "AppBskyNotificationNS", "AppBskyRichtextNS", "AppBskyUnspeccedNS", "AppBskyVideoNS", "ProfileRecord", "GeneratorRecord", "LikeRecord", "PostRecord", "PostgateRecord", "RepostRecord", "ThreadgateRecord", "BlockRecord", "FollowRecord", "ListRecord", "ListblockRecord", "ListitemRecord", "StarterpackRecord", "ServiceRecord", "ChatBskyNS", "ChatBskyActorNS", "ChatBskyConvoNS", "ChatBskyModerationNS", "DeclarationRecord", "ToolsOzoneNS", "ToolsOzoneCommunicationNS", "ToolsOzoneModerationNS", "ToolsOzoneServerNS", "ToolsOzoneSetNS", "ToolsOzoneSettingNS", "ToolsOzoneSignatureNS", "ToolsOzoneTeamNS", "require_tlds", "__commonJSMin", "exports", "module", "exports", "exports", "detectFacets", "tlds_1", "__importDefault", "util_1", "text", "match", "facets", "re", "isValidDomain", "start", "uri", "domain", "index", "leading", "tag", "str", "tld", "i", "common_web_1", "encoder", "decoder", "UnicodeString", "utf16", "start", "end", "i", "exports", "exports", "sanitizeRichText", "unicode_1", "EXCESS_SPACE_RE", "REPLACEMENT_STR", "richText", "opts", "clean", "targetRegexp", "replacementString", "match", "oldText", "removeStartIndex", "removeEndIndex", "client_1", "detection_1", "sanitization_1", "unicode_1", "RichTextSegment", "text", "facet", "exports", "RichText", "_RichText", "props", "opts", "entitiesToFacets", "facetFilter", "facetSort", "cloneDeep", "target", "facets", "textCursor", "facetCursor", "currFacet", "subtext", "insertIndex", "insertText", "numCharsAdded", "ent", "removeStartIndex", "removeEndIndex", "numCharsRemoved", "agent", "promises", "feature", "res", "_", "did", "a", "b", "entities", "v", "exports", "exports", "ModerationUI", "exports", "labels_1", "types_1", "ui_1", "ModerationBehaviorSeverity", "ModerationDecision", "_ModerationDecision", "decisions", "decisionsFiltered", "v", "decision", "d", "cause", "context", "ui", "sortByPriority", "did", "isMe", "hidden", "mutedWord", "blocking", "blockingByList", "blockedBy", "blockOther", "target", "label", "opts", "labelDef", "def", "isSelf", "labeler", "s", "labelPref", "priority", "severity", "measureModerationBehaviorSeverity", "noOverride", "muted", "mutedByList", "exports", "beh", "a", "b", "exports", "decideAccount", "filterAccountLabels", "decision_1", "subject", "opts", "acc", "label", "labels", "exports", "decideProfile", "filterProfileLabels", "decision_1", "subject", "opts", "acc", "label", "labels", "exports", "decideFeedGenerator", "decision_1", "account_1", "profile_1", "subject", "opts", "acc", "label", "exports", "decideNotification", "decision_1", "account_1", "profile_1", "subject", "opts", "acc", "label", "exports", "hasMutedWord", "client_1", "REGEX", "LANGUAGE_EXCEPTIONS", "mutedWords", "text", "facets", "outlineTags", "languages", "actor", "exception", "tags", "facet", "tag", "t", "mute", "mutedWord", "postText", "words", "word", "wordTrimmedPunctuation", "spacedWord", "wordParts", "wordPart", "exports", "decidePost", "client_1", "decision_1", "mutewords_1", "account_1", "profile_1", "subject", "opts", "decideSubject", "decideEmbed", "acc", "label", "checkHiddenPost", "checkMutedWords", "embed", "decideQuotedPost", "decideBlockedQuotedPost", "hiddenPosts", "mutedWords", "postAuthor", "post", "image", "embeddedPost", "embedAuthor", "external", "exports", "decideUserList", "syntax_1", "decision_1", "account_1", "profile_1", "subject", "opts", "acc", "creator", "isProfile", "label", "creatorDid", "v", "exports", "isQuotedPost", "isQuotedPostWithMedia", "interpretLabelValueDefinition", "interpretLabelValueDefinitions", "client_1", "util_1", "embed", "def", "definedBy", "behaviors", "alertOrInform", "defaultSetting", "flags", "labelerView", "labelValDef", "exports", "moderateProfile", "moderatePost", "moderateNotification", "moderateFeedGenerator", "moderateUserList", "decision_1", "account_1", "feed_generator_1", "notification_1", "post_1", "profile_1", "user_list_1", "ui_1", "decision_2", "mutewords_1", "util_1", "subject", "opts", "FAKE_CID", "exports", "text", "facets", "reply", "embed", "record", "author", "replyCount", "repostCount", "likeCount", "viewer", "labels", "handle", "displayName", "description", "muted", "mutedByList", "blockedBy", "blocking", "blockingByList", "following", "followedBy", "name", "subjectDid", "val", "uri", "src", "AwaitLock", "_AwaitLock_acquired", "_AwaitLock_waitingResolvers", "__classPrivateFieldGet", "timeout", "__classPrivateFieldSet", "resolve", "resolver", "timer", "_", "reject", "exports", "index_1", "util_1", "exports", "await_lock_1", "__importDefault", "common_web_1", "syntax_1", "xrpc_1", "index_1", "lexicons_1", "const_1", "moderation_1", "labels_1", "predicate", "__importStar", "util_1", "FEED_VIEW_PREF_DEFAULTS", "THREAD_VIEW_PREF_DEFAULTS", "Agent", "_Agent", "opts", "options", "sessionManager", "url", "init", "headers", "l", "data", "params", "_Agent_prefsLock", "inst", "key", "value", "serviceType", "did", "labelerDids", "prefs", "dids", "isBskyPrefs", "isModPrefs", "labelers", "labelDefs", "labeler", "record", "postUri", "postUrip", "uri", "cid", "likeUri", "likeUrip", "repostUri", "repostUrip", "subjectDid", "followUri", "followUrip", "updateFn", "upsert", "repo", "collection", "existing", "_", "existingRecord", "updated", "validation", "e", "actor", "blocked", "rkey", "seenAt", "res", "labelPrefs", "pref", "adjustedPref", "adjustLegacyContentLabelPref", "feed", "v", "word", "saved", "pinned", "uniqueMigratedSavedFeeds", "type", "remapLegacyLabels", "prefsArrayToLabelerDids", "savedFeeds", "uniqueSavedFeeds", "savedFeedsToUpdate", "savedFeed", "updatedVersion", "toSave", "f", "ids", "id", "adultContentPref", "labelerDid", "labelPref", "legacyLabelPref", "legacyLabelValue", "labelersPref", "birthDate", "personalDetailsPref", "p", "mutedWord", "sanitizedValue", "mutedWordsPref", "newMutedWord", "migrateLegacyMutedWordsItems", "newMutedWords", "mutedWords", "existingItem", "matchMutedWord", "i", "nudges", "nudge", "guide", "result", "nux", "n", "next", "settings", "cb", "__classPrivateFieldGet", "newPrefs", "action", "hiddenItems", "feedsPref", "maybeMutatedSavedFeeds", "existingV2Pref", "newSavedFeeds", "a", "b", "updatedPrefs", "existingV1Pref", "v2Compat", "exports", "visibility", "labels", "_labels", "legacyToNewMap", "labelName", "newLabelName", "items", "item", "existingWord", "newWord", "existingId", "matchById", "legacyMatchByValue", "common_web_1", "xrpc_1", "agent_1", "client_1", "lexicons_1", "ReadableStream", "AtpAgent", "_AtpAgent", "options", "sessionManager", "CredentialSession", "key", "value", "v", "session", "data", "opts", "exports", "serviceUrl", "fetch", "persistSession", "url", "init", "initialUri", "initialReq", "initialToken", "initialRes", "isErrorResponse", "updatedToken", "updatedUri", "updatedReq", "res", "e", "err", "didDoc", "endpoint", "isErrorObject", "response", "status", "errorNames", "json", "peekJson", "maxSize", "extractType", "extractLength", "headers", "atp_agent_1", "BskyAgent", "_BskyAgent", "agent", "exports", "lexicon_1", "lexicons_1", "syntax_1", "exports", "lexicon_2", "common_web_1", "__exportStar", "lexicons_2", "util_1", "labels_1", "agent_1", "atp_agent_1", "atp_agent_2", "bsky_agent_1", "atp_agent_3", "src_exports", "__export", "ATP_URI_REGEX", "AtUri", "ensureValidAtUri", "ensureValidAtUriRegex", "module", "__toCommonJS", "ensureValidHandle", "handle", "InvalidHandleError", "labels", "i", "l", "ensureValidHandleRegex", "ensureValidDid", "did", "InvalidDidError", "parts", "ensureValidDidRegex", "ensureValidNsid", "nsid", "toCheck", "InvalidNsidError", "ensureValidNsidRegex", "uri", "uriParts", "fragmentPart", "aturiRegex", "rm", "groups", "RELATIVE_REGEX", "base", "parsed", "parse", "relativep", "parseRelative", "handleOrDid", "collection", "rkey", "str", "v", "path", "qs", "hash", "match", "require_lib", "__commonJSMin", "exports", "module", "conversions", "sign", "x", "evenRound", "createNumberConversion", "bitLength", "typeOpts", "lowerBound", "upperBound", "moduloVal", "moduloBound", "V", "opts", "val", "c", "i", "S", "n", "U", "d", "a", "b", "require_utils", "__commonJSMin", "exports", "module", "target", "source", "keys", "i", "impl", "wrapper", "require_mappingTable", "__commonJSMin", "exports", "module", "require_tr46", "__commonJSMin", "exports", "module", "punycode", "mappingTable", "PROCESSING_OPTIONS", "normalize", "str", "s", "findStatus", "val", "start", "end", "mid", "target", "regexAstralSymbols", "countSymbols", "string", "mapChars", "domain_name", "useSTD3", "processing_option", "hasError", "processed", "len", "i", "codePoint", "status", "combiningMarksRegex", "validateLabel", "label", "error", "processing", "result", "labels", "validation", "verifyDnsLength", "l", "total", "require_url_state_machine", "__commonJSMin", "exports", "module", "punycode", "tr46", "specialSchemes", "failure", "countSymbols", "str", "at", "input", "idx", "c", "isASCIIDigit", "isASCIIAlpha", "isASCIIAlphanumeric", "isASCIIHex", "isSingleDot", "buffer", "isDoubleDot", "isWindowsDriveLetterCodePoints", "cp1", "cp2", "isWindowsDriveLetterString", "string", "isNormalizedWindowsDriveLetterString", "containsForbiddenHostCodePoint", "containsForbiddenHostCodePointExcludingPercent", "isSpecialScheme", "scheme", "isSpecial", "url", "defaultPort", "percentEncode", "hex", "utf8PercentEncode", "buf", "utf8PercentDecode", "output", "isC0ControlPercentEncode", "extraPathPercentEncodeSet", "isPathPercentEncode", "extraUserinfoPercentEncodeSet", "isUserinfoPercentEncode", "percentEncodeChar", "encodeSetPredicate", "cStr", "parseIPv4Number", "R", "parseIPv4", "parts", "numbers", "part", "n", "i", "ipv4", "counter", "serializeIPv4", "address", "parseIPv6", "pieceIndex", "compress", "pointer", "value", "length", "numbersSeen", "ipv4Piece", "number", "swaps", "temp", "serializeIPv6", "findLongestZeroSequence", "ignore0", "parseHost", "isSpecialArg", "parseOpaqueHost", "domain", "asciiDomain", "ipv4Host", "decoded", "arr", "maxIdx", "maxLen", "currStart", "currLen", "serializeHost", "host", "trimControlChars", "trimTabAndNewline", "shortenPath", "path", "isNormalizedWindowsDriveLetter", "includesCredentials", "cannotHaveAUsernamePasswordPort", "URLStateMachine", "base", "encodingOverride", "stateOverride", "res", "ret", "len", "codePoint", "encodedCodePoints", "port", "fileOtherwiseCodePoints", "serializeURL", "excludeFragment", "serializeOrigin", "tuple", "result", "options", "usm", "username", "password", "integer", "require_URL_impl", "__commonJSMin", "exports", "usm", "constructorArgs", "url", "base", "parsedBase", "parsedURL", "v", "input", "require_URL", "__commonJSMin", "exports", "module", "conversions", "utils", "Impl", "impl", "URL", "url", "args", "i", "V", "obj", "constructorArgs", "privateData", "require_public_api", "__commonJSMin", "exports", "require_lib", "__commonJSMin", "exports", "module", "_interopDefault", "ex", "Stream", "http", "Url", "whatwgUrl", "https", "zlib", "Readable", "BUFFER", "TYPE", "Blob", "_Blob", "blobParts", "options", "buffers", "size", "a", "length", "i", "element", "buffer", "type", "buf", "ab", "readable", "start", "end", "relativeStart", "relativeEnd", "span", "slicedBuffer", "blob", "FetchError", "message", "systemError", "convert", "INTERNALS", "PassThrough", "Body", "body", "_this", "_ref", "_ref$size", "_ref$timeout", "timeout", "isURLSearchParams", "isBlob", "err", "error", "consumeBody", "ct", "_this2", "_this3", "convertBody", "proto", "name", "desc", "_this4", "accum", "accumBytes", "abort", "resolve", "reject", "resTimeout", "chunk", "headers", "charset", "res", "str", "obj", "clone", "instance", "p1", "p2", "extractContentType", "getTotalBytes", "writeToStream", "dest", "invalidTokenRegex", "invalidHeaderCharRegex", "validateName", "validateValue", "value", "find", "map", "key", "MAP", "Headers", "_Headers", "init", "rawHeaders", "headerNames", "headerName", "method", "pairs", "pair", "callback", "thisArg", "getHeaders", "_pairs$i", "createHeadersIterator", "kind", "k", "INTERNAL", "target", "iterator", "HeadersIteratorPrototype", "_INTERNAL", "index", "values", "len", "exportNodeCompatibleHeaders", "hostHeaderKey", "createHeadersLenient", "val", "INTERNALS$1", "STATUS_CODES", "Response", "_Response", "opts", "status", "contentType", "INTERNALS$2", "URL", "parse_url", "format_url", "parseURL", "urlStr", "streamDestructionSupported", "isRequest", "input", "isAbortSignal", "signal", "Request", "_Request", "parsedURL", "inputBody", "getNodeRequestOptions", "request", "contentLengthValue", "totalBytes", "agent", "AbortError", "URL$1", "PassThrough$1", "isDomainOrSubdomain", "destination", "original", "orig", "isSameProtocol", "fetch", "url", "send", "response", "destroyStream", "abortAndFinalize", "finalize", "req", "reqTimeout", "socket", "fixResponseChunkedTransferBadEnding", "s", "hadError", "hasDataListener", "location", "locationURL", "requestOpts", "response_options", "codings", "zlibOptions", "raw", "errorCallback", "stream", "code", "require_node_ponyfill", "__commonJSMin", "exports", "module", "nodeFetch", "realFetch", "fetch", "url", "options", "require_lite", "__commonJSMin", "exports", "has", "dequal", "foo", "bar", "ctor", "len", "require_useDeepMemo", "__commonJSMin", "exports", "react_1", "lite_1", "useDeepMemo", "value", "ref", "signalRef", "require_useLatest", "__commonJSMin", "exports", "react_1", "useLatest", "value", "ref", "require_showFailureToast", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "fs", "path", "api_1", "showFailureToast", "error", "options", "message", "handleErrorToastAction", "privateExtension", "title", "extensionURL", "packageJSON", "fallback", "stack", "toast", "require_usePromise", "__commonJSMin", "exports", "react_1", "api_1", "useDeepMemo_1", "useLatest_1", "showFailureToast_1", "usePromise", "fn", "args", "options", "lastCallId", "state", "set", "fnRef", "latestAbortable", "latestArgs", "latestOnError", "latestOnData", "latestOnWillExecute", "latestFailureToast", "latestValue", "latestCallback", "paginationArgsRef", "usePaginationRef", "hasMoreRef", "pageSizeRef", "callback", "callId", "prevState", "promiseOrPaginatedPromise", "bindPromiseIfNeeded", "handleError", "error", "toast", "data", "hasMore", "cursor", "previousData", "revalidate", "mutate", "asyncUpdate", "dataBeforeOptimisticUpdate", "update", "err", "onLoadMore", "isLoading", "stateWithLoadingFixed", "pagination", "require_object_hash", "__commonJSMin", "exports", "module", "crypto", "objectHash", "object", "options", "applyDefaults", "hash", "hashes", "encodings", "sourceOptions", "isNativeFunction", "f", "exp", "hashingStream", "PassThrough", "hasher", "typeHasher", "buf", "stream", "writeTo", "context", "write", "str", "value", "type", "pattern", "objString", "objType", "objectNumber", "keys", "key", "self", "arr", "unordered", "entry", "contextAdditions", "entries", "strm", "localContext", "date", "sym", "err", "bool", "string", "fn", "number", "xml", "regex", "url", "map", "set", "file", "b", "require_helpers", "__commonJSMin", "exports", "__importDefault", "mod", "object_hash_1", "replacer", "key", "_value", "value", "reviver", "_key", "hash", "object", "options", "require_useCachedState", "__commonJSMin", "exports", "react_1", "api_1", "useLatest_1", "helpers_1", "rootCache", "cacheMap", "useCachedState", "key", "initialState", "config", "cacheKey", "cache", "keyRef", "initialValueRef", "cachedState", "error", "state", "err", "stateRef", "setStateAndCache", "updater", "newValue", "stringifiedValue", "require_useCachedPromise", "__commonJSMin", "exports", "react_1", "useCachedState_1", "usePromise_1", "useLatest_1", "helpers_1", "emptyCache", "useCachedPromise", "fn", "args", "options", "initialData", "keepPreviousData", "internal_cacheKeySuffix", "usePromiseOptions", "lastUpdateFrom", "cachedData", "mutateCache", "laggyDataRef", "paginationArgsRef", "_mutate", "revalidate", "state", "data", "pagination", "returnedData", "latestData", "mutate", "asyncUpdate", "dataBeforeOptimisticUpdate", "err", "require_fetch_utils", "__commonJSMin", "exports", "isJSON", "contentTypeHeader", "mediaType", "parseContentType", "MEDIA_TYPE_REGEXP", "header", "headerDelimitationindex", "contentType", "match", "type", "subtype", "suffix", "index", "require_useFetch", "__commonJSMin", "exports", "react_1", "useCachedPromise_1", "useLatest_1", "cross_fetch_1", "fetch_utils_1", "helpers_1", "defaultParsing", "response", "contentTypeHeader", "defaultMapping", "result", "useFetch", "url", "options", "parseResponse", "mapResult", "initialData", "execute", "keepPreviousData", "onError", "onData", "onWillExecute", "failureToastOptions", "fetchOptions", "useCachedPromiseOptions", "parseResponseRef", "mapResultRef", "urlRef", "firstPageUrlRef", "firstPageUrl", "abortable", "paginatedFn", "pagination", "res", "parsed", "fn", "promise", "exports", "signals_js_1", "exports", "processOk", "process", "kExitEmitter", "global", "ObjectDefineProperty", "Emitter", "ev", "fn", "list", "i", "code", "signal", "ret", "SignalExitBase", "signalExitWrap", "handler", "cb", "opts", "SignalExitFallback", "SignalExit", "#hupSig", "#emitter", "#process", "#originalProcessEmit", "#originalProcessReallyExit", "#sigListeners", "#loaded", "sig", "listeners", "count", "p", "s", "a", "#processEmit", "#processReallyExit", "listener", "args", "og", "_a", "require_exec_utils", "__commonJSMin", "exports", "__importDefault", "mod", "node_buffer_1", "node_stream_1", "node_util_1", "signal_exit_1", "getSpawnedPromise", "spawned", "timeout", "spawnedPromise", "resolve", "reject", "exitCode", "signal", "error", "timeoutId", "timeoutPromise", "_resolve", "safeSpawnedPromise", "removeExitHandler", "MaxBufferError", "streamPipelinePromisified", "bufferStream", "options", "encoding", "isBuffer", "stream", "length", "chunks", "chunk", "getStream", "inputStream", "rejectPromise", "getBufferedData", "streamPromise", "getSpawnedResult", "stdout", "stderr", "processDone", "stdoutPromise", "stderrPromise", "stripFinalNewline", "input", "LF", "CR", "handleOutput", "value", "getErrorPrefix", "timedOut", "makeError", "command", "parentError", "execaMessage", "shortMessage", "message", "defaultParsing", "require_useExec", "__commonJSMin", "exports", "__importDefault", "mod", "node_child_process_1", "react_1", "useCachedPromise_1", "useLatest_1", "exec_utils_1", "SPACES_REGEXP", "parseCommand", "command", "args", "tokens", "token", "previousToken", "useExec", "optionsOrArgs", "options", "parseOutput", "input", "onData", "onWillExecute", "initialData", "execute", "keepPreviousData", "onError", "failureToastOptions", "execOptions", "useCachedPromiseOptions", "abortable", "parseOutputRef", "fn", "_command", "_args", "_options", "file", "spawned", "spawnedPromise", "error", "exitCode", "signal", "timedOut", "stdoutResult", "stderrResult", "stdout", "stderr", "require_stream_chain", "__commonJSMin", "exports", "module", "Readable", "Writable", "Duplex", "Transform", "none", "finalSymbol", "manySymbol", "final", "value", "many", "values", "isFinal", "o", "isMany", "getFinalValue", "getManyValues", "runAsyncGenerator", "gen", "stream", "data", "Chain", "wrapFunction", "fn", "chunk", "encoding", "callback", "result", "error", "wrapArray", "fns", "i", "isReadableNodeStream", "obj", "isWritableNodeStream", "isDuplexNodeStream", "_Chain", "options", "index", "s", "output", "_1", "_2", "e", "require_Utf8Stream", "__commonJSMin", "exports", "module", "Transform", "StringDecoder", "Utf8Stream", "options", "chunk", "encoding", "callback", "_", "require_Parser", "__commonJSMin", "exports", "module", "Utf8Stream", "patterns", "MAX_PATTERN_SIZE", "noSticky", "key", "src", "values", "expected", "fromHex", "s", "codes", "Parser", "_Parser", "options", "callback", "error", "match", "value", "index", "main", "t", "require_emit", "__commonJSMin", "exports", "module", "emit", "stream", "item", "require_stream_json", "__commonJSMin", "exports", "module", "Parser", "emit", "make", "options", "require_FilterBase", "__commonJSMin", "exports", "module", "Transform", "FilterBase", "_FilterBase", "string", "separator", "stack", "path", "regExp", "array", "options", "filter", "replacement", "chunk", "_", "callback", "passValue", "last", "post", "expected", "skipValue", "require_withParser", "__commonJSMin", "exports", "module", "Chain", "Parser", "withParser", "fn", "options", "require_Pick", "__commonJSMin", "exports", "module", "FilterBase", "withParser", "Pick", "_Pick", "options", "chunk", "require_Assembler", "__commonJSMin", "exports", "module", "EventEmitter", "startObject", "Ctr", "Assembler", "_Assembler", "stream", "options", "chunk", "path", "i", "key", "level", "index", "value", "require_StreamBase", "__commonJSMin", "exports", "module", "Transform", "Assembler", "Counter", "initialDepth", "StreamBase", "options", "chunk", "encoding", "callback", "result", "require_StreamArray", "__commonJSMin", "exports", "module", "StreamBase", "withParser", "StreamArray", "_StreamArray", "options", "chunk", "_", "callback", "discard", "require_useStreamJSON", "__commonJSMin", "exports", "__importDefault", "mod", "api_1", "cross_fetch_1", "node_fs_1", "promises_1", "node_path_1", "promises_2", "react_1", "stream_chain_1", "stream_json_1", "Pick_1", "StreamArray_1", "fetch_utils_1", "useCachedPromise_1", "helpers_1", "cache", "url", "destination", "fetchOptions", "cacheURL", "cacheFile", "response", "source", "abortSignal", "cacheURLIfNecessary", "folder", "fileName", "forceUpdate", "stats", "headResponse", "lastModified", "streamJsonFile", "filePath", "pageSize", "dataPath", "filterFn", "transformFn", "page", "pipeline", "data", "e", "useStreamJSON", "options", "initialData", "execute", "keepPreviousData", "onError", "onData", "onWillExecute", "failureToastOptions", "filter", "transform", "previousUrl", "previousDestination", "useCachedPromiseOptions", "generatorRef", "controllerRef", "hasMoreRef", "forceCacheUpdate", "newData", "done", "require_sql_utils", "__commonJSMin", "exports", "__importDefault", "mod", "node_fs_1", "promises_1", "node_os_1", "node_child_process_1", "node_path_1", "exec_utils_1", "helpers_1", "PermissionError", "message", "isPermissionError", "error", "baseExecuteSQL", "databasePath", "query", "options", "abortSignal", "workaroundCopiedDb", "spawned", "spawnedPromise", "exitCode", "signal", "stdoutResult", "stderrResult", "checkAborted", "tempFolder", "require_useSQL", "__commonJSMin", "exports", "__importDefault", "mod", "jsx_runtime_1", "api_1", "node_fs_1", "node_os_1", "react_1", "usePromise_1", "useLatest_1", "showFailureToast_1", "sql_utils_1", "useSQL", "databasePath", "query", "options", "permissionPriming", "usePromiseOptions", "permissionView", "setPermissionView", "latestOptions", "abortable", "handleError", "_error", "error", "PermissionErrorScreen", "fn", "abortSignal", "macosVenturaAndLater", "preferencesString", "props", "action", "require_useForm", "__commonJSMin", "exports", "react_1", "useLatest_1", "FormValidation", "validationError", "validation", "value", "valueIsValid", "useForm", "props", "_onSubmit", "initialValues", "values", "setValues", "errors", "setErrors", "refs", "latestValidation", "latestOnSubmit", "focus", "id", "handleSubmit", "validationErrors", "error", "result", "setValidationError", "setValue", "itemProps", "target", "event", "instance", "reset", "ref", "require_useAI", "__commonJSMin", "exports", "react_1", "api_1", "usePromise_1", "useAI", "prompt", "options", "creativity", "stream", "model", "usePromiseOptions", "data", "setData", "abortable", "isLoading", "error", "revalidate", "shouldStream", "x", "require_useFrecencySorting", "__commonJSMin", "exports", "react_1", "useLatest_1", "useCachedState_1", "HALF_LIFE_DAYS", "MS_PER_DAY", "DECAY_RATE_CONSTANT", "VISIT_TYPE_POINTS", "getNewFrecency", "item", "now", "lastVisited", "frecency", "visitAgeInDays", "currentVisitValue", "totalVisitValue", "defaultKey", "useFrecencySorting", "data", "options", "keyRef", "sortUnvisitedRef", "storedFrecencies", "setStoredFrecencies", "visitItem", "itemKey", "newFrecency", "resetRanking", "newFrencencies", "a", "b", "frecencyA", "frecencyB", "require_useLocalStorage", "__commonJSMin", "exports", "api_1", "showFailureToast_1", "helpers_1", "usePromise_1", "useLocalStorage", "key", "initialValue", "value", "isLoading", "mutate", "storageKey", "item", "setValue", "error", "removeValue", "require_color", "__commonJSMin", "exports", "hexToRGB", "hex", "r", "g", "b", "rgbToHex", "rString", "gString", "bString", "rgbToHSL", "cmin", "cmax", "delta", "h", "s", "l", "hslToRGB", "c", "x", "m", "hexToHSL", "hslToHex", "hsl", "clamp", "value", "min", "max", "offset", "slightlyDarkerColor", "slightlyLighterColor", "require_avatar", "__commonJSMin", "exports", "color_1", "getWholeCharAndI", "str", "i", "code", "next", "prev", "avatarColorSet", "getAvatarIcon", "name", "options", "words", "initials", "firstWordFirstLetter", "lastWordFirstLetter", "backgroundColor", "initialsCharIndex", "char", "colorIndex", "radius", "require_favicon", "__commonJSMin", "exports", "api_1", "url_1", "getFavicon", "url", "options", "hostname", "e", "require_progress", "__commonJSMin", "exports", "api_1", "polarToCartesian", "centerX", "centerY", "radius", "angleInDegrees", "angleInRadians", "describeArc", "x", "y", "startAngle", "endAngle", "start", "end", "largeArcFlag", "getProgressIcon", "progress", "color", "options", "background", "backgroundOpacity", "stroke", "require_icon", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_providers", "__commonJSMin", "exports", "api_1", "OAuthService_1", "PROVIDER_CLIENT_IDS", "getIcon", "markup", "PROVIDERS_ICONS", "asanaService", "options", "githubService", "googleService", "jiraService", "linearService", "slackService", "response", "zoomService", "require_OAuthService", "__commonJSMin", "exports", "__importDefault", "mod", "cross_fetch_1", "providers_1", "OAuthService", "options", "x", "currentTokenSet", "tokens", "authRequest", "authorizationCode", "params", "response", "responseText", "token", "tokenResponse", "require_withAccessToken", "__commonJSMin", "exports", "jsx_runtime_1", "api_1", "token", "type", "authorize", "getIdToken", "onAuthorize", "withAccessToken", "options", "fn", "props", "idToken", "Component", "WrappedComponent", "wrapPromise", "getAccessToken", "promise", "status", "response", "suspender", "res", "err", "require_oauth", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_createDeeplink", "__commonJSMin", "exports", "__importDefault", "mod", "api_1", "node_fs_1", "node_path_1", "DeeplinkType", "getProtocol", "getOwnerOrAuthorName", "packageJSON", "createScriptCommandDeeplink", "options", "url", "params", "arg", "createExtensionDeeplink", "ownerOrAuthorName", "extensionName", "createDeeplink", "require_executeSQL", "__commonJSMin", "exports", "sql_utils_1", "executeSQL", "databasePath", "query", "require_run_applescript", "__commonJSMin", "exports", "__importDefault", "mod", "node_child_process_1", "exec_utils_1", "runAppleScript", "script", "optionsOrArgs", "options", "humanReadableOutput", "language", "timeout", "execOptions", "outputArguments", "spawned", "spawnedPromise", "error", "exitCode", "signal", "timedOut", "stdoutResult", "stderrResult", "stdout", "stderr", "require_dist", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "menu_bar_notifications_exports", "__export", "UnreadNotifications", "__toCommonJS", "import_api", "ATPSessionStorageKey", "ATPCredentialsHashKey", "NotificationTextCacheKey", "MenuBarNotificationCacheKey", "BlueskyUrl", "BlueskyProfileUrlBase", "MenuBarIconUrl", "UpdatingMessage", "NotificationInMenuBarHUD", "SessionStartFailed", "NewNotification", "NewNotifications", "NoNewNotifications", "OpenProfile", "OpenAccountLikes", "Follow", "Unfollow", "Mute", "Unmute", "Block", "Unblock", "ViewAsList", "ViewAsGrid", "SwitchToHomeAction", "LikePost", "UnlikePost", "Repost", "ReplyPost", "QuotePost", "FirstSignInSuccessToast", "AboutMarkdown", "BlueskyProfileUrlBase", "ErrorMessageBody", "import_api", "import_api", "ActionMap", "Follow", "Unfollow", "Mute", "Unmute", "Unblock", "Block", "ViewAsList", "ViewAsGrid", "LikePost", "UnlikePost", "Repost", "ReplyPost", "QuotePost", "SwitchToHomeAction", "OpenProfile", "OpenAccountLikes", "import_crypto", "import_api", "import_api", "getItemFromLocalStore", "key", "item", "error", "clearLocalStore", "ExtensionConfig", "AppPasswordRegex", "import_uri", "import_api", "import_api", "clearCache", "fetchNode", "fetch", "import_api", "getPreferences", "import_cross_fetch", "FormData", "agent", "getPreferences", "sessionEvent", "session", "ATPSessionStorageKey", "clearCache", "getSignedInAccountHandle", "getExistingSession", "getItemFromLocalStore", "getNotifications", "cursor", "limit", "requestObject", "response", "agent", "resolveATUri", "notification", "atUri", "BlueskyProfileUrlBase", "accountHandle", "getSignedInAccountHandle", "createNewSession", "accountId", "password", "service", "getPreferences", "AppPasswordRegex", "identifier", "agent", "hashStore", "createHashKey", "ATPCredentialsHashKey", "showSuccessToast", "FirstSignInSuccessToast", "e", "getUnreadNotificationCount", "agent", "getExistingCredentialsHash", "credentialsHash", "getItemFromLocalStore", "ATPCredentialsHashKey", "credentialsUpdatedByAccount", "accountId", "password", "service", "getPreferences", "credentialsHashKey", "createHashKey", "existingCredentialsHash", "startNewSession", "clearLocalStore", "clearCache", "createNewSession", "startATSession", "existingSession", "getExistingSession", "agent", "showSuccessToast", "message", "showDangerToast", "createHashKey", "value", "crypto", "getAccountName", "account", "getAccountIcon", "import_react", "import_api", "import_jsx_runtime", "CustomAction", "actionKey", "onClick", "wrapInSection", "menuBarItem", "shortcut", "getTitle", "icon", "color", "ActionMap", "menubarItem", "actionComponent", "CustomAction_default", "import_api", "NotificationReasonMapping", "import_defs", "parseNotifications", "bskyNotifications", "uniquePostIds", "item", "targetPostUri", "text", "NotificationReasonMapping", "import_utils", "import_react", "useStartATSession", "newSessionCreatedCallback", "sessionStartFailed", "setSessionStartFailed", "sessionStarted", "setSessionStarted", "errorMessage", "setErrorMessage", "startSession", "result", "startATSession", "message", "showDangerToast", "SessionStartFailed", "useStartATSession_default", "import_jsx_runtime", "UnreadNotifications", "notificationText", "setNotificationText", "NotificationTextCacheKey", "unreadNotifications", "setUnreadNotifications", "MenuBarNotificationCacheKey", "actionProps", "setActionProps", "sessionStarted", "sessionStartFailed", "useStartATSession_default", "NotificationInMenuBarHUD", "SessionStartFailed", "fetchNotifications", "data", "getNotifications", "ExtensionConfig", "notifications", "parseNotifications", "UpdatingMessage", "notificationCount", "getUnreadNotificationCount", "NewNotifications", "NewNotification", "NoNewNotifications", "onNotificationSelected", "notification", "notificationUrl", "resolveATUri", "MenuBarIconUrl", "getAccountIcon", "getAccountName", "CustomAction_default"]
}
